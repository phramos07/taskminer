; ModuleID = '/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Rodinia/bfs/src/bfs.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.timezone = type { i32, i32 }
%struct.timeval = type { i64, i64 }
%struct.Node = type { i32, i32 }

@.str = private unnamed_addr constant [35 x i8] c"Error return from gettimeofday: %d\00", align 1
@stderr = external global %struct._IO_FILE*, align 8
@.str.1 = private unnamed_addr constant [38 x i8] c"Usage: %s <num_threads> <input_file>\0A\00", align 1
@.str.2 = private unnamed_addr constant [74 x i8] c"Non-Matching CPU-GPU Outputs Beyond Error Threshold of %4.2f Percent: %d\0A\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"Reading File\0A\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@fp = common global %struct._IO_FILE* null, align 8
@.str.5 = private unnamed_addr constant [26 x i8] c"Error Reading graph file\0A\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.7 = private unnamed_addr constant [6 x i8] c"%d %d\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"Start traversing the tree\0A\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@.str.9 = private unnamed_addr constant [22 x i8] c"GPU Runtime: %0.6lfs\0A\00", align 1
@.str.10 = private unnamed_addr constant [22 x i8] c"CPU Runtime: %0.6lfs\0A\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"result.txt\00", align 1
@.str.12 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"%d) cost:%d\0A\00", align 1
@.str.14 = private unnamed_addr constant [29 x i8] c"Result stored in result.txt\0A\00", align 1

; Function Attrs: nounwind uwtable
define double @rtclock() #0 {
entry:
  %Tzp = alloca %struct.timezone, align 4
  %Tp = alloca %struct.timeval, align 8
  call void @llvm.dbg.declare(metadata %struct.timezone* %Tzp, metadata !105, metadata !111), !dbg !112
  call void @llvm.dbg.declare(metadata %struct.timeval* %Tp, metadata !113, metadata !111), !dbg !121
  %call = call i32 @gettimeofday(%struct.timeval* %Tp, %struct.timezone* %Tzp) #6, !dbg !122
  call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !123, metadata !111), !dbg !124
  %cmp = icmp ne i32 %call, 0, !dbg !125
  br i1 %cmp, label %if.then, label %if.end, !dbg !127

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i32 0, i32 0), i32 %call), !dbg !128
  br label %if.end, !dbg !128

if.end:                                           ; preds = %if.then, %entry
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %Tp, i32 0, i32 0, !dbg !129
  %tmp = load i64, i64* %tv_sec, align 8, !dbg !129
  %conv = sitofp i64 %tmp to double, !dbg !130
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %Tp, i32 0, i32 1, !dbg !131
  %tmp1 = load i64, i64* %tv_usec, align 8, !dbg !131
  %conv2 = sitofp i64 %tmp1 to double, !dbg !132
  %mul = fmul double %conv2, 1.000000e-06, !dbg !133
  %add = fadd double %conv, %mul, !dbg !134
  ret double %add, !dbg !135
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timeval*, %struct.timezone*) #2

declare i32 @printf(i8*, ...) #3

; Function Attrs: nounwind uwtable
define float @absVal(float %a) #0 {
entry:
  call void @llvm.dbg.value(metadata float %a, i64 0, metadata !136, metadata !111), !dbg !137
  %cmp = fcmp olt float %a, 0.000000e+00, !dbg !138
  br i1 %cmp, label %if.then, label %if.else, !dbg !140

if.then:                                          ; preds = %entry
  %mul = fmul float %a, -1.000000e+00, !dbg !141
  br label %return, !dbg !143

if.else:                                          ; preds = %entry
  br label %return, !dbg !144

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi float [ %mul, %if.then ], [ %a, %if.else ]
  ret float %retval.0, !dbg !146
}

; Function Attrs: nounwind uwtable
define float @percentDiff(double %val1, double %val2) #0 {
entry:
  call void @llvm.dbg.value(metadata double %val1, i64 0, metadata !147, metadata !111), !dbg !148
  call void @llvm.dbg.value(metadata double %val2, i64 0, metadata !149, metadata !111), !dbg !150
  %conv = fptrunc double %val1 to float, !dbg !151
  %call = call float @absVal(float %conv), !dbg !153
  %conv1 = fpext float %call to double, !dbg !153
  %cmp = fcmp olt double %conv1, 1.000000e-02, !dbg !154
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !155

land.lhs.true:                                    ; preds = %entry
  %conv3 = fptrunc double %val2 to float, !dbg !156
  %call4 = call float @absVal(float %conv3), !dbg !158
  %conv5 = fpext float %call4 to double, !dbg !158
  %cmp6 = fcmp olt double %conv5, 1.000000e-02, !dbg !159
  br i1 %cmp6, label %if.then, label %if.else, !dbg !160

if.then:                                          ; preds = %land.lhs.true
  br label %return, !dbg !161

if.else:                                          ; preds = %land.lhs.true, %entry
  %sub = fsub double %val1, %val2, !dbg !163
  %conv8 = fptrunc double %sub to float, !dbg !165
  %call9 = call float @absVal(float %conv8), !dbg !166
  %add = fadd double %val1, 0x3E45798EE0000000, !dbg !167
  %conv10 = fptrunc double %add to float, !dbg !168
  %call11 = call float @absVal(float %conv10), !dbg !169
  %div = fdiv float %call9, %call11, !dbg !170
  %call12 = call float @absVal(float %div), !dbg !171
  %mul = fmul float 1.000000e+02, %call12, !dbg !172
  br label %return, !dbg !173

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi float [ 0.000000e+00, %if.then ], [ %mul, %if.else ]
  ret float %retval.0, !dbg !174
}

; Function Attrs: nounwind uwtable
define void @Usage(i32 %argc, i8** %argv) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %argc, i64 0, metadata !175, metadata !111), !dbg !176
  call void @llvm.dbg.value(metadata i8** %argv, i64 0, metadata !177, metadata !111), !dbg !178
  %tmp = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !179
  %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 0, !dbg !180
  %tmp1 = load i8*, i8** %arrayidx, align 8, !dbg !180
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i32 0, i32 0), i8* %tmp1), !dbg !181
  ret void, !dbg !182
}

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %argc, i64 0, metadata !183, metadata !111), !dbg !184
  call void @llvm.dbg.value(metadata i8** %argv, i64 0, metadata !185, metadata !111), !dbg !186
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !187, metadata !111), !dbg !188
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !189, metadata !111), !dbg !190
  call void @BFSGraph(i32 %argc, i8** %argv, i32 0, i32 0), !dbg !191
  ret i32 0, !dbg !192
}

; Function Attrs: nounwind uwtable
define void @BFSGraph(i32 %argc, i8** %argv, i32 %no_of_nodes, i32 %edge_list_size) #0 {
entry:
  %no_of_nodes.addr = alloca i32, align 4
  %edge_list_size.addr = alloca i32, align 4
  %source = alloca i32, align 4
  %start = alloca i32, align 4
  %edgeno = alloca i32, align 4
  %id = alloca i32, align 4
  %cost = alloca i32, align 4
  call void @llvm.dbg.value(metadata i32 %argc, i64 0, metadata !193, metadata !111), !dbg !194
  call void @llvm.dbg.value(metadata i8** %argv, i64 0, metadata !195, metadata !111), !dbg !196
  store i32 %no_of_nodes, i32* %no_of_nodes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %no_of_nodes.addr, metadata !197, metadata !111), !dbg !198
  store i32 %edge_list_size, i32* %edge_list_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %edge_list_size.addr, metadata !199, metadata !111), !dbg !200
  %cmp = icmp ne i32 %argc, 3, !dbg !201
  br i1 %cmp, label %if.then, label %if.end, !dbg !203

if.then:                                          ; preds = %entry
  call void @Usage(i32 %argc, i8** %argv), !dbg !204
  call void @exit(i32 0) #7, !dbg !206
  unreachable, !dbg !206

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 1, !dbg !207
  %tmp = load i8*, i8** %arrayidx, align 8, !dbg !207
  %call = call i32 @atoi(i8* %tmp) #8, !dbg !208
  call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !209, metadata !111), !dbg !210
  %arrayidx1 = getelementptr inbounds i8*, i8** %argv, i64 2, !dbg !211
  %tmp1 = load i8*, i8** %arrayidx1, align 8, !dbg !211
  call void @llvm.dbg.value(metadata i8* %tmp1, i64 0, metadata !212, metadata !111), !dbg !213
  %call2 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0)), !dbg !214
  %call3 = call %struct._IO_FILE* @fopen(i8* %tmp1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i32 0, i32 0)), !dbg !215
  store %struct._IO_FILE* %call3, %struct._IO_FILE** @fp, align 8, !dbg !216
  %tmp2 = load %struct._IO_FILE*, %struct._IO_FILE** @fp, align 8, !dbg !217
  %tobool = icmp ne %struct._IO_FILE* %tmp2, null, !dbg !217
  br i1 %tobool, label %if.end.6, label %if.then.4, !dbg !219

if.then.4:                                        ; preds = %if.end
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i32 0, i32 0)), !dbg !220
  br label %return, !dbg !222

if.end.6:                                         ; preds = %if.end
  %tmp18 = load i32, i32* %no_of_nodes.addr, align 4, !dbg !223
  %tmp19 = load %struct._IO_FILE*, %struct._IO_FILE** @fp, align 8, !dbg !226
  %tmp20 = load i32, i32* %start, align 4, !dbg !228
  %tmp21 = load i32, i32* %edgeno, align 4, !dbg !229
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !230, metadata !111), !dbg !232
  call void @llvm.dbg.declare(metadata i32* %source, metadata !233, metadata !111), !dbg !234
  store i32 0, i32* %source, align 4, !dbg !234
  %tmp3 = load %struct._IO_FILE*, %struct._IO_FILE** @fp, align 8, !dbg !235
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %tmp3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0), i32* %no_of_nodes.addr), !dbg !236
  %tmp4 = load i32, i32* %no_of_nodes.addr, align 4, !dbg !237
  %conv = sext i32 %tmp4 to i64, !dbg !237
  %mul = mul i64 8, %conv, !dbg !238
  %call8 = call noalias i8* @malloc(i64 %mul) #6, !dbg !239
  %tmp5 = bitcast i8* %call8 to %struct.Node*, !dbg !240
  call void @llvm.dbg.value(metadata %struct.Node* %tmp5, i64 0, metadata !241, metadata !111), !dbg !242
  %tmp6 = load i32, i32* %no_of_nodes.addr, align 4, !dbg !243
  %conv9 = sext i32 %tmp6 to i64, !dbg !243
  %mul10 = mul i64 4, %conv9, !dbg !244
  %call11 = call noalias i8* @malloc(i64 %mul10) #6, !dbg !245
  %call1195 = ptrtoint i8* %call11 to i64
  %tmp7 = bitcast i8* %call11 to i32*, !dbg !246
  call void @llvm.dbg.value(metadata i32* %tmp7, i64 0, metadata !247, metadata !111), !dbg !248
  %tmp8 = load i32, i32* %no_of_nodes.addr, align 4, !dbg !249
  %conv12 = sext i32 %tmp8 to i64, !dbg !249
  %mul13 = mul i64 4, %conv12, !dbg !250
  %call14 = call noalias i8* @malloc(i64 %mul13) #6, !dbg !251
  %call1479 = ptrtoint i8* %call14 to i64
  %tmp9 = bitcast i8* %call14 to i32*, !dbg !252
  call void @llvm.dbg.value(metadata i32* %tmp9, i64 0, metadata !253, metadata !111), !dbg !254
  %tmp10 = load i32, i32* %no_of_nodes.addr, align 4, !dbg !255
  %conv15 = sext i32 %tmp10 to i64, !dbg !255
  %mul16 = mul i64 4, %conv15, !dbg !256
  %call17 = call noalias i8* @malloc(i64 %mul16) #6, !dbg !257
  %call1797 = ptrtoint i8* %call17 to i64
  %tmp11 = bitcast i8* %call17 to i32*, !dbg !258
  call void @llvm.dbg.value(metadata i32* %tmp11, i64 0, metadata !259, metadata !111), !dbg !260
  %tmp12 = load i32, i32* %no_of_nodes.addr, align 4, !dbg !261
  %conv18 = sext i32 %tmp12 to i64, !dbg !261
  %mul19 = mul i64 4, %conv18, !dbg !262
  %call20 = call noalias i8* @malloc(i64 %mul19) #6, !dbg !263
  %call2081 = ptrtoint i8* %call20 to i64
  %tmp13 = bitcast i8* %call20 to i32*, !dbg !264
  call void @llvm.dbg.value(metadata i32* %tmp13, i64 0, metadata !265, metadata !111), !dbg !266
  %tmp14 = load i32, i32* %no_of_nodes.addr, align 4, !dbg !267
  %conv21 = sext i32 %tmp14 to i64, !dbg !267
  %mul22 = mul i64 4, %conv21, !dbg !268
  %call23 = call noalias i8* @malloc(i64 %mul22) #6, !dbg !269
  %call2399 = ptrtoint i8* %call23 to i64
  %tmp15 = bitcast i8* %call23 to i32*, !dbg !270
  call void @llvm.dbg.value(metadata i32* %tmp15, i64 0, metadata !271, metadata !111), !dbg !272
  %tmp16 = load i32, i32* %no_of_nodes.addr, align 4, !dbg !273
  %conv24 = sext i32 %tmp16 to i64, !dbg !273
  %mul25 = mul i64 4, %conv24, !dbg !274
  %call26 = call noalias i8* @malloc(i64 %mul25) #6, !dbg !275
  %call2680 = ptrtoint i8* %call26 to i64
  %tmp17 = bitcast i8* %call26 to i32*, !dbg !276
  call void @llvm.dbg.value(metadata i32* %tmp17, i64 0, metadata !277, metadata !111), !dbg !278
  call void @llvm.dbg.declare(metadata i32* %start, metadata !279, metadata !111), !dbg !280
  call void @llvm.dbg.declare(metadata i32* %edgeno, metadata !281, metadata !111), !dbg !282
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !230, metadata !111), !dbg !232
  br label %for.cond, !dbg !283

for.cond:                                         ; preds = %for.inc, %if.end.6
  %i.0 = phi i32 [ 0, %if.end.6 ], [ %inc, %for.inc ]
  %cmp27 = icmp ult i32 %i.0, %tmp18, !dbg !284
  br i1 %cmp27, label %for.body, label %for.end, !dbg !285

for.body:                                         ; preds = %for.cond
  %call29 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %tmp19, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.7, i32 0, i32 0), i32* %start, i32* %edgeno), !dbg !286
  %idxprom = zext i32 %i.0 to i64, !dbg !287
  %arrayidx30 = getelementptr inbounds %struct.Node, %struct.Node* %tmp5, i64 %idxprom, !dbg !287
  %starting = getelementptr inbounds %struct.Node, %struct.Node* %arrayidx30, i32 0, i32 0, !dbg !288
  store i32 %tmp20, i32* %starting, align 4, !dbg !289
  %idxprom31 = zext i32 %i.0 to i64, !dbg !290
  %arrayidx32 = getelementptr inbounds %struct.Node, %struct.Node* %tmp5, i64 %idxprom31, !dbg !290
  %no_of_edges = getelementptr inbounds %struct.Node, %struct.Node* %arrayidx32, i32 0, i32 1, !dbg !291
  store i32 %tmp21, i32* %no_of_edges, align 4, !dbg !292
  %idxprom33 = zext i32 %i.0 to i64, !dbg !293
  %arrayidx34 = getelementptr inbounds i32, i32* %tmp7, i64 %idxprom33, !dbg !293
  store i32 0, i32* %arrayidx34, align 4, !dbg !294
  %idxprom35 = zext i32 %i.0 to i64, !dbg !295
  %arrayidx36 = getelementptr inbounds i32, i32* %tmp9, i64 %idxprom35, !dbg !295
  store i32 0, i32* %arrayidx36, align 4, !dbg !296
  %idxprom37 = zext i32 %i.0 to i64, !dbg !297
  %arrayidx38 = getelementptr inbounds i32, i32* %tmp11, i64 %idxprom37, !dbg !297
  store i32 0, i32* %arrayidx38, align 4, !dbg !298
  %idxprom39 = zext i32 %i.0 to i64, !dbg !299
  %arrayidx40 = getelementptr inbounds i32, i32* %tmp13, i64 %idxprom39, !dbg !299
  store i32 0, i32* %arrayidx40, align 4, !dbg !300
  %idxprom41 = zext i32 %i.0 to i64, !dbg !301
  %arrayidx42 = getelementptr inbounds i32, i32* %tmp15, i64 %idxprom41, !dbg !301
  store i32 0, i32* %arrayidx42, align 4, !dbg !302
  %idxprom43 = zext i32 %i.0 to i64, !dbg !303
  %arrayidx44 = getelementptr inbounds i32, i32* %tmp17, i64 %idxprom43, !dbg !303
  store i32 0, i32* %arrayidx44, align 4, !dbg !304
  br label %for.inc, !dbg !305

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1, !dbg !306
  br label %for.cond, !dbg !307

for.end:                                          ; preds = %for.cond
  %tmp30 = load i32, i32* %edge_list_size.addr, align 4, !dbg !308
  %tmp31 = load %struct._IO_FILE*, %struct._IO_FILE** @fp, align 8, !dbg !311
  %tmp32 = load %struct._IO_FILE*, %struct._IO_FILE** @fp, align 8, !dbg !313
  %tmp33 = load i32, i32* %id, align 4, !dbg !314
  call void @llvm.dbg.value(metadata i32 %inc68, i64 0, metadata !315, metadata !111), !dbg !316
  %tmp22 = load %struct._IO_FILE*, %struct._IO_FILE** @fp, align 8, !dbg !317
  %call45 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %tmp22, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0), i32* %source), !dbg !318
  %tmp23 = load i32, i32* %source, align 4, !dbg !319
  %idxprom46 = sext i32 %tmp23 to i64, !dbg !320
  %arrayidx47 = getelementptr inbounds i32, i32* %tmp7, i64 %idxprom46, !dbg !320
  store i32 1, i32* %arrayidx47, align 4, !dbg !321
  %tmp24 = load i32, i32* %source, align 4, !dbg !322
  %idxprom48 = sext i32 %tmp24 to i64, !dbg !323
  %arrayidx49 = getelementptr inbounds i32, i32* %tmp9, i64 %idxprom48, !dbg !323
  store i32 1, i32* %arrayidx49, align 4, !dbg !324
  %tmp25 = load i32, i32* %source, align 4, !dbg !325
  %idxprom50 = sext i32 %tmp25 to i64, !dbg !326
  %arrayidx51 = getelementptr inbounds i32, i32* %tmp15, i64 %idxprom50, !dbg !326
  store i32 1, i32* %arrayidx51, align 4, !dbg !327
  %tmp26 = load i32, i32* %source, align 4, !dbg !328
  %idxprom52 = sext i32 %tmp26 to i64, !dbg !329
  %arrayidx53 = getelementptr inbounds i32, i32* %tmp17, i64 %idxprom52, !dbg !329
  store i32 1, i32* %arrayidx53, align 4, !dbg !330
  %tmp27 = load %struct._IO_FILE*, %struct._IO_FILE** @fp, align 8, !dbg !331
  %call54 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %tmp27, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0), i32* %edge_list_size.addr), !dbg !332
  call void @llvm.dbg.declare(metadata i32* %id, metadata !333, metadata !111), !dbg !334
  call void @llvm.dbg.declare(metadata i32* %cost, metadata !335, metadata !111), !dbg !336
  %tmp28 = load i32, i32* %edge_list_size.addr, align 4, !dbg !337
  %conv55 = sext i32 %tmp28 to i64, !dbg !337
  %mul56 = mul i64 4, %conv55, !dbg !338
  %call57 = call noalias i8* @malloc(i64 %mul56) #6, !dbg !339
  %tmp29 = bitcast i8* %call57 to i32*, !dbg !340
  call void @llvm.dbg.value(metadata i32* %tmp29, i64 0, metadata !341, metadata !111), !dbg !342
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !315, metadata !111), !dbg !316
  br label %for.cond.59, !dbg !343

for.cond.59:                                      ; preds = %for.inc.67, %for.end
  %i58.0 = phi i32 [ 0, %for.end ], [ %inc68, %for.inc.67 ]
  %cmp60 = icmp slt i32 %i58.0, %tmp30, !dbg !344
  br i1 %cmp60, label %for.body.62, label %for.end.69, !dbg !345

for.body.62:                                      ; preds = %for.cond.59
  %call63 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %tmp31, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0), i32* %id), !dbg !346
  %call64 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %tmp32, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i32 0, i32 0), i32* %cost), !dbg !347
  %idxprom65 = sext i32 %i58.0 to i64, !dbg !348
  %arrayidx66 = getelementptr inbounds i32, i32* %tmp29, i64 %idxprom65, !dbg !348
  store i32 %tmp33, i32* %arrayidx66, align 4, !dbg !349
  br label %for.inc.67, !dbg !350

for.inc.67:                                       ; preds = %for.body.62
  %inc68 = add nsw i32 %i58.0, 1, !dbg !351
  br label %for.cond.59, !dbg !352

for.end.69:                                       ; preds = %for.cond.59
  %tmp34 = load %struct._IO_FILE*, %struct._IO_FILE** @fp, align 8, !dbg !353
  %tobool70 = icmp ne %struct._IO_FILE* %tmp34, null, !dbg !353
  br i1 %tobool70, label %if.then.71, label %if.end.73, !dbg !355

if.then.71:                                       ; preds = %for.end.69
  %tmp35 = load %struct._IO_FILE*, %struct._IO_FILE** @fp, align 8, !dbg !356
  %call72 = call i32 @fclose(%struct._IO_FILE* %tmp35), !dbg !357
  br label %if.end.73, !dbg !357

if.end.73:                                        ; preds = %if.then.71, %for.end.69
  %tmp40 = load i32, i32* %no_of_nodes.addr, align 4, !dbg !358
  call void @llvm.dbg.value(metadata i32 %inc90, i64 0, metadata !361, metadata !111), !dbg !362
  %tmp36 = load i32, i32* %no_of_nodes.addr, align 4, !dbg !363
  %conv74 = sext i32 %tmp36 to i64, !dbg !363
  %mul75 = mul i64 4, %conv74, !dbg !364
  %call76 = call noalias i8* @malloc(i64 %mul75) #6, !dbg !365
  %call7674 = ptrtoint i8* %call76 to i64
  %tmp37 = bitcast i8* %call76 to i32*, !dbg !366
  call void @llvm.dbg.value(metadata i32* %tmp37, i64 0, metadata !367, metadata !111), !dbg !368
  %tmp38 = load i32, i32* %no_of_nodes.addr, align 4, !dbg !369
  %conv77 = sext i32 %tmp38 to i64, !dbg !369
  %mul78 = mul i64 4, %conv77, !dbg !370
  %call79 = call noalias i8* @malloc(i64 %mul78) #6, !dbg !371
  %call7975 = ptrtoint i8* %call79 to i64
  %tmp39 = bitcast i8* %call79 to i32*, !dbg !372
  call void @llvm.dbg.value(metadata i32* %tmp39, i64 0, metadata !373, metadata !111), !dbg !374
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !361, metadata !111), !dbg !362
  br label %for.cond.81, !dbg !375

for.cond.81:                                      ; preds = %for.inc.89, %if.end.73
  %i80.0 = phi i32 [ 0, %if.end.73 ], [ %inc90, %for.inc.89 ]
  %0 = icmp sgt i32 %tmp40, 0, !dbg !376
  %smax77 = select i1 %0, i32 %tmp40, i32 0, !dbg !376
  %1 = zext i32 %smax77 to i64, !dbg !376
  %2 = mul i64 4, %1, !dbg !376
  %3 = add i64 %call7674, %2, !dbg !376
  %4 = add i64 %call7975, %2, !dbg !376
  %5 = icmp sgt i32 %tmp40, 0, !dbg !376
  %smax76 = select i1 %5, i32 %tmp40, i32 0, !dbg !376
  %6 = zext i32 %smax76 to i64, !dbg !376
  %7 = mul i64 4, %6, !dbg !376
  %8 = add i64 %call7674, %7, !dbg !376
  %9 = add i64 %call7975, %7, !dbg !376
  %10 = icmp sgt i32 %tmp40, 0, !dbg !376
  %smax = select i1 %10, i32 %tmp40, i32 0, !dbg !376
  %11 = zext i32 %smax to i64, !dbg !376
  %12 = mul i64 4, %11, !dbg !376
  %13 = add i64 %call7674, %12, !dbg !376
  %14 = add i64 %call7975, %12, !dbg !376
  %cmp82 = icmp slt i32 %i80.0, %tmp40, !dbg !376
  br i1 %cmp82, label %for.body.84, label %for.end.91, !dbg !377

for.body.84:                                      ; preds = %for.cond.81
  %idxprom85 = sext i32 %i80.0 to i64, !dbg !378
  %arrayidx86 = getelementptr inbounds i32, i32* %tmp37, i64 %idxprom85, !dbg !378
  store i32 -1, i32* %arrayidx86, align 4, !dbg !380
  %idxprom87 = sext i32 %i80.0 to i64, !dbg !381
  %arrayidx88 = getelementptr inbounds i32, i32* %tmp39, i64 %idxprom87, !dbg !381
  store i32 -1, i32* %arrayidx88, align 4, !dbg !382
  br label %for.inc.89, !dbg !383

for.inc.89:                                       ; preds = %for.body.84
  %inc90 = add nsw i32 %i80.0, 1, !dbg !384
  br label %for.cond.81, !dbg !385

for.end.91:                                       ; preds = %for.cond.81
  %tmp43 = load i32, i32* %no_of_nodes.addr, align 4, !dbg !386
  call void @llvm.dbg.value(metadata i32 %tmp45, i64 0, metadata !391, metadata !111), !dbg !396
  call void @llvm.dbg.value(metadata i32 %inc143, i64 0, metadata !397, metadata !111), !dbg !398
  call void @llvm.dbg.value(metadata i32 %tmp48, i64 0, metadata !399, metadata !111), !dbg !402
  call void @llvm.dbg.value(metadata i32 %inc139, i64 0, metadata !391, metadata !111), !dbg !396
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !403, metadata !111), !dbg !404
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !397, metadata !111), !dbg !398
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !405, metadata !111), !dbg !407
  %tmp51 = load i32, i32* %no_of_nodes.addr, align 4, !dbg !408
  call void @llvm.dbg.value(metadata i32 %inc165, i64 0, metadata !410, metadata !111), !dbg !411
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !403, metadata !111), !dbg !404
  call void @llvm.dbg.value(metadata i32 %inc163, i64 0, metadata !405, metadata !111), !dbg !407
  %tmp41 = load i32, i32* %source, align 4, !dbg !412
  %idxprom92 = sext i32 %tmp41 to i64, !dbg !413
  %arrayidx93 = getelementptr inbounds i32, i32* %tmp37, i64 %idxprom92, !dbg !413
  store i32 0, i32* %arrayidx93, align 4, !dbg !414
  %tmp42 = load i32, i32* %source, align 4, !dbg !415
  %idxprom94 = sext i32 %tmp42 to i64, !dbg !416
  %arrayidx95 = getelementptr inbounds i32, i32* %tmp39, i64 %idxprom94, !dbg !416
  store i32 0, i32* %arrayidx95, align 4, !dbg !417
  %call96 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i32 0, i32 0)), !dbg !418
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !410, metadata !111), !dbg !411
  %call97 = call double @rtclock(), !dbg !419
  call void @llvm.dbg.value(metadata double %call97, i64 0, metadata !420, metadata !111), !dbg !421
  br label %do.body, !dbg !422

do.body:                                          ; preds = %do.cond, %for.end.91
  %k.0 = phi i32 [ 0, %for.end.91 ], [ %inc165, %do.cond ]
  br label %for.cond.98, !dbg !423

for.cond.98:                                      ; preds = %for.inc.142, %do.body
  %tid.0 = phi i32 [ 0, %do.body ], [ %inc143, %for.inc.142 ]
  %cmp99 = icmp slt i32 %tid.0, %tmp43, !dbg !424
  br i1 %cmp99, label %for.body.101, label %for.end.144, !dbg !425

for.body.101:                                     ; preds = %for.cond.98
  %idxprom102 = sext i32 %tid.0 to i64, !dbg !426
  %arrayidx103 = getelementptr inbounds i32, i32* %tmp9, i64 %idxprom102, !dbg !426
  %tmp44 = load i32, i32* %arrayidx103, align 4, !dbg !426
  %cmp104 = icmp eq i32 %tmp44, 1, !dbg !427
  br i1 %cmp104, label %if.then.106, label %if.end.141, !dbg !428

if.then.106:                                      ; preds = %for.body.101
  %idxprom107 = sext i32 %tid.0 to i64, !dbg !429
  %arrayidx108 = getelementptr inbounds i32, i32* %tmp9, i64 %idxprom107, !dbg !429
  store i32 0, i32* %arrayidx108, align 4, !dbg !430
  %idxprom110 = sext i32 %tid.0 to i64, !dbg !431
  %arrayidx111 = getelementptr inbounds %struct.Node, %struct.Node* %tmp5, i64 %idxprom110, !dbg !431
  %starting112 = getelementptr inbounds %struct.Node, %struct.Node* %arrayidx111, i32 0, i32 0, !dbg !432
  %tmp45 = load i32, i32* %starting112, align 4, !dbg !432
  br label %for.cond.113, !dbg !433

for.cond.113:                                     ; preds = %for.inc.138, %if.then.106
  %i109.0 = phi i32 [ %tmp45, %if.then.106 ], [ %inc139, %for.inc.138 ]
  %idxprom114 = sext i32 %tid.0 to i64, !dbg !434
  %arrayidx115 = getelementptr inbounds %struct.Node, %struct.Node* %tmp5, i64 %idxprom114, !dbg !434
  %no_of_edges116 = getelementptr inbounds %struct.Node, %struct.Node* %arrayidx115, i32 0, i32 1, !dbg !435
  %tmp46 = load i32, i32* %no_of_edges116, align 4, !dbg !435
  %idxprom117 = sext i32 %tid.0 to i64, !dbg !436
  %arrayidx118 = getelementptr inbounds %struct.Node, %struct.Node* %tmp5, i64 %idxprom117, !dbg !436
  %starting119 = getelementptr inbounds %struct.Node, %struct.Node* %arrayidx118, i32 0, i32 0, !dbg !437
  %tmp47 = load i32, i32* %starting119, align 4, !dbg !437
  %add = add nsw i32 %tmp46, %tmp47, !dbg !438
  %cmp120 = icmp slt i32 %i109.0, %add, !dbg !439
  br i1 %cmp120, label %for.body.122, label %for.end.140, !dbg !440

for.body.122:                                     ; preds = %for.cond.113
  %idxprom124 = sext i32 %i109.0 to i64, !dbg !441
  %arrayidx125 = getelementptr inbounds i32, i32* %tmp29, i64 %idxprom124, !dbg !441
  %tmp48 = load i32, i32* %arrayidx125, align 4, !dbg !441
  %idxprom126 = sext i32 %tmp48 to i64, !dbg !442
  %arrayidx127 = getelementptr inbounds i32, i32* %tmp17, i64 %idxprom126, !dbg !442
  %tmp49 = load i32, i32* %arrayidx127, align 4, !dbg !442
  %tobool128 = icmp ne i32 %tmp49, 0, !dbg !442
  br i1 %tobool128, label %if.end.137, label %if.then.129, !dbg !444

if.then.129:                                      ; preds = %for.body.122
  %idxprom130 = sext i32 %tid.0 to i64, !dbg !445
  %arrayidx131 = getelementptr inbounds i32, i32* %tmp39, i64 %idxprom130, !dbg !445
  %tmp50 = load i32, i32* %arrayidx131, align 4, !dbg !445
  %add132 = add nsw i32 %tmp50, 1, !dbg !447
  %idxprom133 = sext i32 %tmp48 to i64, !dbg !448
  %arrayidx134 = getelementptr inbounds i32, i32* %tmp39, i64 %idxprom133, !dbg !448
  store i32 %add132, i32* %arrayidx134, align 4, !dbg !449
  %idxprom135 = sext i32 %tmp48 to i64, !dbg !450
  %arrayidx136 = getelementptr inbounds i32, i32* %tmp13, i64 %idxprom135, !dbg !450
  store i32 1, i32* %arrayidx136, align 4, !dbg !451
  br label %if.end.137, !dbg !452

if.end.137:                                       ; preds = %if.then.129, %for.body.122
  br label %for.inc.138, !dbg !453

for.inc.138:                                      ; preds = %if.end.137
  %inc139 = add nsw i32 %i109.0, 1, !dbg !454
  br label %for.cond.113, !dbg !455

for.end.140:                                      ; preds = %for.cond.113
  br label %if.end.141, !dbg !456

if.end.141:                                       ; preds = %for.end.140, %for.body.101
  br label %for.inc.142, !dbg !457

for.inc.142:                                      ; preds = %if.end.141
  %inc143 = add nsw i32 %tid.0, 1, !dbg !458
  br label %for.cond.98, !dbg !459

for.end.144:                                      ; preds = %for.cond.98
  br label %for.cond.146, !dbg !460

for.cond.146:                                     ; preds = %for.inc.162, %for.end.144
  %stop.0 = phi i32 [ 0, %for.end.144 ], [ %stop.1, %for.inc.162 ]
  %tid145.0 = phi i32 [ 0, %for.end.144 ], [ %inc163, %for.inc.162 ]
  %15 = icmp sgt i32 %tmp51, 0, !dbg !461
  %smax91 = select i1 %15, i32 %tmp51, i32 0, !dbg !461
  %16 = zext i32 %smax91 to i64, !dbg !461
  %17 = mul i64 4, %16, !dbg !461
  %18 = add i64 %call1479, %17, !dbg !461
  %19 = add i64 %call2680, %17, !dbg !461
  %20 = icmp ult i8* %call20, %call20, !dbg !461
  %umin92 = select i1 %20, i8* %call20, i8* %call20, !dbg !461
  %21 = add i64 %call2081, %17, !dbg !461
  %22 = icmp ugt i64 %21, %21, !dbg !461
  %umax93 = select i1 %22, i64 %21, i64 %21, !dbg !461
  %23 = icmp sgt i32 %tmp51, 0, !dbg !461
  %smax88 = select i1 %23, i32 %tmp51, i32 0, !dbg !461
  %24 = zext i32 %smax88 to i64, !dbg !461
  %25 = mul i64 4, %24, !dbg !461
  %26 = add i64 %call1479, %25, !dbg !461
  %27 = add i64 %call2680, %25, !dbg !461
  %28 = icmp ult i8* %call20, %call20, !dbg !461
  %umin89 = select i1 %28, i8* %call20, i8* %call20, !dbg !461
  %29 = add i64 %call2081, %25, !dbg !461
  %30 = icmp ugt i64 %29, %29, !dbg !461
  %umax90 = select i1 %30, i64 %29, i64 %29, !dbg !461
  %31 = icmp sgt i32 %tmp51, 0, !dbg !461
  %smax78 = select i1 %31, i32 %tmp51, i32 0, !dbg !461
  %32 = zext i32 %smax78 to i64, !dbg !461
  %33 = mul i64 4, %32, !dbg !461
  %34 = add i64 %call1479, %33, !dbg !461
  %35 = add i64 %call2680, %33, !dbg !461
  %36 = icmp ult i8* %call20, %call20, !dbg !461
  %umin = select i1 %36, i8* %call20, i8* %call20, !dbg !461
  %37 = add i64 %call2081, %33, !dbg !461
  %38 = icmp ugt i64 %37, %37, !dbg !461
  %umax = select i1 %38, i64 %37, i64 %37, !dbg !461
  %cmp147 = icmp slt i32 %tid145.0, %tmp51, !dbg !461
  br i1 %cmp147, label %for.body.149, label %for.end.164, !dbg !462

for.body.149:                                     ; preds = %for.cond.146
  %39 = icmp sgt i32 %tmp51, 0, !dbg !463
  %smax85 = select i1 %39, i32 %tmp51, i32 0, !dbg !463
  %40 = zext i32 %smax85 to i64, !dbg !463
  %41 = mul i64 4, %40, !dbg !463
  %42 = add i64 %call1479, %41, !dbg !463
  %43 = add i64 %call2680, %41, !dbg !463
  %44 = icmp ult i8* %call20, %call20, !dbg !463
  %umin86 = select i1 %44, i8* %call20, i8* %call20, !dbg !463
  %45 = add i64 %call2081, %41, !dbg !463
  %46 = icmp ugt i64 %45, %45, !dbg !463
  %umax87 = select i1 %46, i64 %45, i64 %45, !dbg !463
  %47 = icmp sgt i32 %tmp51, 0, !dbg !463
  %smax82 = select i1 %47, i32 %tmp51, i32 0, !dbg !463
  %48 = zext i32 %smax82 to i64, !dbg !463
  %49 = mul i64 4, %48, !dbg !463
  %50 = add i64 %call1479, %49, !dbg !463
  %51 = add i64 %call2680, %49, !dbg !463
  %52 = icmp ult i8* %call20, %call20, !dbg !463
  %umin83 = select i1 %52, i8* %call20, i8* %call20, !dbg !463
  %53 = add i64 %call2081, %49, !dbg !463
  %54 = icmp ugt i64 %53, %53, !dbg !463
  %umax84 = select i1 %54, i64 %53, i64 %53, !dbg !463
  %idxprom150 = sext i32 %tid145.0 to i64, !dbg !463
  %arrayidx151 = getelementptr inbounds i32, i32* %tmp13, i64 %idxprom150, !dbg !463
  %tmp52 = load i32, i32* %arrayidx151, align 4, !dbg !463
  %cmp152 = icmp eq i32 %tmp52, 1, !dbg !466
  br i1 %cmp152, label %if.then.154, label %if.end.161, !dbg !467

if.then.154:                                      ; preds = %for.body.149
  %idxprom155 = sext i32 %tid145.0 to i64, !dbg !468
  %arrayidx156 = getelementptr inbounds i32, i32* %tmp9, i64 %idxprom155, !dbg !468
  store i32 1, i32* %arrayidx156, align 4, !dbg !470
  %idxprom157 = sext i32 %tid145.0 to i64, !dbg !471
  %arrayidx158 = getelementptr inbounds i32, i32* %tmp17, i64 %idxprom157, !dbg !471
  store i32 1, i32* %arrayidx158, align 4, !dbg !472
  %idxprom159 = sext i32 %tid145.0 to i64, !dbg !473
  %arrayidx160 = getelementptr inbounds i32, i32* %tmp13, i64 %idxprom159, !dbg !473
  store i32 0, i32* %arrayidx160, align 4, !dbg !474
  br label %if.end.161, !dbg !475

if.end.161:                                       ; preds = %if.then.154, %for.body.149
  %stop.1 = phi i32 [ 1, %if.then.154 ], [ %stop.0, %for.body.149 ]
  br label %for.inc.162, !dbg !476

for.inc.162:                                      ; preds = %if.end.161
  %inc163 = add nsw i32 %tid145.0, 1, !dbg !477
  br label %for.cond.146, !dbg !478

for.end.164:                                      ; preds = %for.cond.146
  %stop.0.lcssa = phi i32 [ %stop.0, %for.cond.146 ]
  %inc165 = add nsw i32 %k.0, 1, !dbg !479
  br label %do.cond, !dbg !480

do.cond:                                          ; preds = %for.end.164
  %tobool166 = icmp ne i32 %stop.0.lcssa, 0, !dbg !480
  br i1 %tobool166, label %do.body, label %do.end, !dbg !480

do.end:                                           ; preds = %do.cond
  %inc165.lcssa = phi i32 [ %inc165, %do.cond ]
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !403, metadata !111), !dbg !404
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !397, metadata !111), !dbg !398
  %tmp54 = load i32, i32* %no_of_nodes.addr, align 4, !dbg !481
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !485, metadata !111), !dbg !487
  %tmp62 = load i32, i32* %no_of_nodes.addr, align 4, !dbg !488
  call void @llvm.dbg.value(metadata i32 %inc239, i64 0, metadata !410, metadata !111), !dbg !411
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !403, metadata !111), !dbg !404
  call void @llvm.dbg.value(metadata i32 %inc237, i64 0, metadata !485, metadata !111), !dbg !487
  call void @llvm.dbg.value(metadata i32 %tmp56, i64 0, metadata !490, metadata !111), !dbg !495
  call void @llvm.dbg.value(metadata i32 %inc217, i64 0, metadata !397, metadata !111), !dbg !398
  call void @llvm.dbg.value(metadata i32 %tmp59, i64 0, metadata !496, metadata !111), !dbg !499
  call void @llvm.dbg.value(metadata i32 %inc213, i64 0, metadata !490, metadata !111), !dbg !495
  %call167 = call double @rtclock(), !dbg !500
  call void @llvm.dbg.value(metadata double %call167, i64 0, metadata !501, metadata !111), !dbg !502
  %tmp53 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !503
  %sub = fsub double %call167, %call97, !dbg !504
  %call168 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp53, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i32 0, i32 0), double %sub), !dbg !505
  %call169 = call double @rtclock(), !dbg !506
  call void @llvm.dbg.value(metadata double %call169, i64 0, metadata !420, metadata !111), !dbg !421
  br label %do.body.170, !dbg !507

do.body.170:                                      ; preds = %do.cond.240, %do.end
  %k.1 = phi i32 [ %inc165.lcssa, %do.end ], [ %inc239, %do.cond.240 ]
  br label %for.cond.171, !dbg !508

for.cond.171:                                     ; preds = %for.inc.216, %do.body.170
  %tid.1 = phi i32 [ 0, %do.body.170 ], [ %inc217, %for.inc.216 ]
  %cmp172 = icmp slt i32 %tid.1, %tmp54, !dbg !509
  br i1 %cmp172, label %for.body.174, label %for.end.218, !dbg !510

for.body.174:                                     ; preds = %for.cond.171
  %idxprom175 = sext i32 %tid.1 to i64, !dbg !511
  %arrayidx176 = getelementptr inbounds i32, i32* %tmp7, i64 %idxprom175, !dbg !511
  %tmp55 = load i32, i32* %arrayidx176, align 4, !dbg !511
  %cmp177 = icmp eq i32 %tmp55, 1, !dbg !512
  br i1 %cmp177, label %if.then.179, label %if.end.215, !dbg !513

if.then.179:                                      ; preds = %for.body.174
  %idxprom180 = sext i32 %tid.1 to i64, !dbg !514
  %arrayidx181 = getelementptr inbounds i32, i32* %tmp7, i64 %idxprom180, !dbg !514
  store i32 0, i32* %arrayidx181, align 4, !dbg !515
  %idxprom183 = sext i32 %tid.1 to i64, !dbg !516
  %arrayidx184 = getelementptr inbounds %struct.Node, %struct.Node* %tmp5, i64 %idxprom183, !dbg !516
  %starting185 = getelementptr inbounds %struct.Node, %struct.Node* %arrayidx184, i32 0, i32 0, !dbg !517
  %tmp56 = load i32, i32* %starting185, align 4, !dbg !517
  br label %for.cond.186, !dbg !518

for.cond.186:                                     ; preds = %for.inc.212, %if.then.179
  %i182.0 = phi i32 [ %tmp56, %if.then.179 ], [ %inc213, %for.inc.212 ]
  %idxprom187 = sext i32 %tid.1 to i64, !dbg !519
  %arrayidx188 = getelementptr inbounds %struct.Node, %struct.Node* %tmp5, i64 %idxprom187, !dbg !519
  %no_of_edges189 = getelementptr inbounds %struct.Node, %struct.Node* %arrayidx188, i32 0, i32 1, !dbg !520
  %tmp57 = load i32, i32* %no_of_edges189, align 4, !dbg !520
  %idxprom190 = sext i32 %tid.1 to i64, !dbg !521
  %arrayidx191 = getelementptr inbounds %struct.Node, %struct.Node* %tmp5, i64 %idxprom190, !dbg !521
  %starting192 = getelementptr inbounds %struct.Node, %struct.Node* %arrayidx191, i32 0, i32 0, !dbg !522
  %tmp58 = load i32, i32* %starting192, align 4, !dbg !522
  %add193 = add nsw i32 %tmp57, %tmp58, !dbg !523
  %cmp194 = icmp slt i32 %i182.0, %add193, !dbg !524
  br i1 %cmp194, label %for.body.196, label %for.end.214, !dbg !525

for.body.196:                                     ; preds = %for.cond.186
  %idxprom198 = sext i32 %i182.0 to i64, !dbg !526
  %arrayidx199 = getelementptr inbounds i32, i32* %tmp29, i64 %idxprom198, !dbg !526
  %tmp59 = load i32, i32* %arrayidx199, align 4, !dbg !526
  %idxprom200 = sext i32 %tmp59 to i64, !dbg !527
  %arrayidx201 = getelementptr inbounds i32, i32* %tmp15, i64 %idxprom200, !dbg !527
  %tmp60 = load i32, i32* %arrayidx201, align 4, !dbg !527
  %tobool202 = icmp ne i32 %tmp60, 0, !dbg !527
  br i1 %tobool202, label %if.end.211, label %if.then.203, !dbg !529

if.then.203:                                      ; preds = %for.body.196
  %idxprom204 = sext i32 %tid.1 to i64, !dbg !530
  %arrayidx205 = getelementptr inbounds i32, i32* %tmp37, i64 %idxprom204, !dbg !530
  %tmp61 = load i32, i32* %arrayidx205, align 4, !dbg !530
  %add206 = add nsw i32 %tmp61, 1, !dbg !532
  %idxprom207 = sext i32 %tmp59 to i64, !dbg !533
  %arrayidx208 = getelementptr inbounds i32, i32* %tmp37, i64 %idxprom207, !dbg !533
  store i32 %add206, i32* %arrayidx208, align 4, !dbg !534
  %idxprom209 = sext i32 %tmp59 to i64, !dbg !535
  %arrayidx210 = getelementptr inbounds i32, i32* %tmp11, i64 %idxprom209, !dbg !535
  store i32 1, i32* %arrayidx210, align 4, !dbg !536
  br label %if.end.211, !dbg !537

if.end.211:                                       ; preds = %if.then.203, %for.body.196
  br label %for.inc.212, !dbg !538

for.inc.212:                                      ; preds = %if.end.211
  %inc213 = add nsw i32 %i182.0, 1, !dbg !539
  br label %for.cond.186, !dbg !540

for.end.214:                                      ; preds = %for.cond.186
  br label %if.end.215, !dbg !541

if.end.215:                                       ; preds = %for.end.214, %for.body.174
  br label %for.inc.216, !dbg !542

for.inc.216:                                      ; preds = %if.end.215
  %inc217 = add nsw i32 %tid.1, 1, !dbg !543
  br label %for.cond.171, !dbg !544

for.end.218:                                      ; preds = %for.cond.171
  br label %for.cond.220, !dbg !545

for.cond.220:                                     ; preds = %for.inc.236, %for.end.218
  %stop.2 = phi i32 [ 0, %for.end.218 ], [ %stop.3, %for.inc.236 ]
  %tid219.0 = phi i32 [ 0, %for.end.218 ], [ %inc237, %for.inc.236 ]
  %55 = icmp sgt i32 %tmp62, 0, !dbg !546
  %smax109 = select i1 %55, i32 %tmp62, i32 0, !dbg !546
  %56 = zext i32 %smax109 to i64, !dbg !546
  %57 = mul i64 4, %56, !dbg !546
  %58 = add i64 %call1195, %57, !dbg !546
  %59 = icmp ult i8* %call17, %call17, !dbg !546
  %umin110 = select i1 %59, i8* %call17, i8* %call17, !dbg !546
  %60 = add i64 %call1797, %57, !dbg !546
  %61 = icmp ugt i64 %60, %60, !dbg !546
  %umax111 = select i1 %61, i64 %60, i64 %60, !dbg !546
  %62 = mul i64 4, %56, !dbg !546
  %63 = add i64 %call2399, %62, !dbg !546
  %64 = icmp sgt i32 %tmp62, 0, !dbg !546
  %smax106 = select i1 %64, i32 %tmp62, i32 0, !dbg !546
  %65 = zext i32 %smax106 to i64, !dbg !546
  %66 = mul i64 4, %65, !dbg !546
  %67 = add i64 %call1195, %66, !dbg !546
  %68 = icmp ult i8* %call17, %call17, !dbg !546
  %umin107 = select i1 %68, i8* %call17, i8* %call17, !dbg !546
  %69 = add i64 %call1797, %66, !dbg !546
  %70 = icmp ugt i64 %69, %69, !dbg !546
  %umax108 = select i1 %70, i64 %69, i64 %69, !dbg !546
  %71 = mul i64 4, %65, !dbg !546
  %72 = add i64 %call2399, %71, !dbg !546
  %73 = icmp sgt i32 %tmp62, 0, !dbg !546
  %smax94 = select i1 %73, i32 %tmp62, i32 0, !dbg !546
  %74 = zext i32 %smax94 to i64, !dbg !546
  %75 = mul i64 4, %74, !dbg !546
  %76 = add i64 %call1195, %75, !dbg !546
  %77 = icmp ult i8* %call17, %call17, !dbg !546
  %umin96 = select i1 %77, i8* %call17, i8* %call17, !dbg !546
  %78 = add i64 %call1797, %75, !dbg !546
  %79 = icmp ugt i64 %78, %78, !dbg !546
  %umax98 = select i1 %79, i64 %78, i64 %78, !dbg !546
  %80 = mul i64 4, %74, !dbg !546
  %81 = add i64 %call2399, %80, !dbg !546
  %cmp221 = icmp slt i32 %tid219.0, %tmp62, !dbg !546
  br i1 %cmp221, label %for.body.223, label %for.end.238, !dbg !547

for.body.223:                                     ; preds = %for.cond.220
  %82 = icmp sgt i32 %tmp62, 0, !dbg !548
  %smax103 = select i1 %82, i32 %tmp62, i32 0, !dbg !548
  %83 = zext i32 %smax103 to i64, !dbg !548
  %84 = mul i64 4, %83, !dbg !548
  %85 = add i64 %call1195, %84, !dbg !548
  %86 = icmp ult i8* %call17, %call17, !dbg !548
  %umin104 = select i1 %86, i8* %call17, i8* %call17, !dbg !548
  %87 = add i64 %call1797, %84, !dbg !548
  %88 = icmp ugt i64 %87, %87, !dbg !548
  %umax105 = select i1 %88, i64 %87, i64 %87, !dbg !548
  %89 = mul i64 4, %83, !dbg !548
  %90 = add i64 %call2399, %89, !dbg !548
  %91 = icmp sgt i32 %tmp62, 0, !dbg !548
  %smax100 = select i1 %91, i32 %tmp62, i32 0, !dbg !548
  %92 = zext i32 %smax100 to i64, !dbg !548
  %93 = mul i64 4, %92, !dbg !548
  %94 = add i64 %call1195, %93, !dbg !548
  %95 = icmp ult i8* %call17, %call17, !dbg !548
  %umin101 = select i1 %95, i8* %call17, i8* %call17, !dbg !548
  %96 = add i64 %call1797, %93, !dbg !548
  %97 = icmp ugt i64 %96, %96, !dbg !548
  %umax102 = select i1 %97, i64 %96, i64 %96, !dbg !548
  %98 = mul i64 4, %92, !dbg !548
  %99 = add i64 %call2399, %98, !dbg !548
  %idxprom224 = sext i32 %tid219.0 to i64, !dbg !548
  %arrayidx225 = getelementptr inbounds i32, i32* %tmp11, i64 %idxprom224, !dbg !548
  %tmp63 = load i32, i32* %arrayidx225, align 4, !dbg !548
  %cmp226 = icmp eq i32 %tmp63, 1, !dbg !551
  br i1 %cmp226, label %if.then.228, label %if.end.235, !dbg !552

if.then.228:                                      ; preds = %for.body.223
  %idxprom229 = sext i32 %tid219.0 to i64, !dbg !553
  %arrayidx230 = getelementptr inbounds i32, i32* %tmp7, i64 %idxprom229, !dbg !553
  store i32 1, i32* %arrayidx230, align 4, !dbg !555
  %idxprom231 = sext i32 %tid219.0 to i64, !dbg !556
  %arrayidx232 = getelementptr inbounds i32, i32* %tmp15, i64 %idxprom231, !dbg !556
  store i32 1, i32* %arrayidx232, align 4, !dbg !557
  %idxprom233 = sext i32 %tid219.0 to i64, !dbg !558
  %arrayidx234 = getelementptr inbounds i32, i32* %tmp11, i64 %idxprom233, !dbg !558
  store i32 0, i32* %arrayidx234, align 4, !dbg !559
  br label %if.end.235, !dbg !560

if.end.235:                                       ; preds = %if.then.228, %for.body.223
  %stop.3 = phi i32 [ 1, %if.then.228 ], [ %stop.2, %for.body.223 ]
  br label %for.inc.236, !dbg !561

for.inc.236:                                      ; preds = %if.end.235
  %inc237 = add nsw i32 %tid219.0, 1, !dbg !562
  br label %for.cond.220, !dbg !563

for.end.238:                                      ; preds = %for.cond.220
  %stop.2.lcssa = phi i32 [ %stop.2, %for.cond.220 ]
  %inc239 = add nsw i32 %k.1, 1, !dbg !564
  br label %do.cond.240, !dbg !565

do.cond.240:                                      ; preds = %for.end.238
  %tobool241 = icmp ne i32 %stop.2.lcssa, 0, !dbg !565
  br i1 %tobool241, label %do.body.170, label %do.end.242, !dbg !565

do.end.242:                                       ; preds = %do.cond.240
  %tmp66 = load i32, i32* %no_of_nodes.addr, align 4, !dbg !566
  call void @llvm.dbg.value(metadata i32 %inc256, i64 0, metadata !569, metadata !111), !dbg !570
  %call243 = call double @rtclock(), !dbg !571
  call void @llvm.dbg.value(metadata double %call243, i64 0, metadata !501, metadata !111), !dbg !502
  %tmp64 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !572
  %sub244 = fsub double %call243, %call169, !dbg !573
  %call245 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp64, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i32 0, i32 0), double %sub244), !dbg !574
  %tmp65 = load i32, i32* %no_of_nodes.addr, align 4, !dbg !575
  call void @compareResults(i32* %tmp37, i32* %tmp39, i32 %tmp65), !dbg !576
  %call246 = call %struct._IO_FILE* @fopen(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.12, i32 0, i32 0)), !dbg !577
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call246, i64 0, metadata !578, metadata !111), !dbg !579
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !569, metadata !111), !dbg !570
  br label %for.cond.248, !dbg !580

for.cond.248:                                     ; preds = %for.inc.255, %do.end.242
  %i247.0 = phi i32 [ 0, %do.end.242 ], [ %inc256, %for.inc.255 ]
  %cmp249 = icmp slt i32 %i247.0, %tmp66, !dbg !581
  br i1 %cmp249, label %for.body.251, label %for.end.257, !dbg !582

for.body.251:                                     ; preds = %for.cond.248
  %idxprom252 = sext i32 %i247.0 to i64, !dbg !583
  %arrayidx253 = getelementptr inbounds i32, i32* %tmp37, i64 %idxprom252, !dbg !583
  %tmp67 = load i32, i32* %arrayidx253, align 4, !dbg !583
  %call254 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %call246, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i32 0, i32 0), i32 %i247.0, i32 %tmp67), !dbg !584
  br label %for.inc.255, !dbg !584

for.inc.255:                                      ; preds = %for.body.251
  %inc256 = add nsw i32 %i247.0, 1, !dbg !585
  br label %for.cond.248, !dbg !586

for.end.257:                                      ; preds = %for.cond.248
  %call258 = call i32 @fclose(%struct._IO_FILE* %call246), !dbg !587
  %call259 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.14, i32 0, i32 0)), !dbg !588
  %tmp68 = bitcast %struct.Node* %tmp5 to i8*, !dbg !589
  call void @free(i8* %tmp68) #6, !dbg !590
  %tmp69 = bitcast i32* %tmp29 to i8*, !dbg !591
  call void @free(i8* %tmp69) #6, !dbg !592
  %tmp70 = bitcast i32* %tmp7 to i8*, !dbg !593
  call void @free(i8* %tmp70) #6, !dbg !594
  %tmp71 = bitcast i32* %tmp11 to i8*, !dbg !595
  call void @free(i8* %tmp71) #6, !dbg !596
  %tmp72 = bitcast i32* %tmp15 to i8*, !dbg !597
  call void @free(i8* %tmp72) #6, !dbg !598
  %tmp73 = bitcast i32* %tmp37 to i8*, !dbg !599
  call void @free(i8* %tmp73) #6, !dbg !600
  br label %return, !dbg !601

return:                                           ; preds = %for.end.257, %if.then.4
  ret void, !dbg !602
}

; Function Attrs: nounwind uwtable
define void @compareResults(i32* %h_cost, i32* %h_cost_gpu, i32 %no_of_nodes) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !604, metadata !111), !dbg !605
  call void @llvm.dbg.value(metadata i32 %inc7, i64 0, metadata !606, metadata !111), !dbg !607
  call void @llvm.dbg.value(metadata i32* %h_cost, i64 0, metadata !608, metadata !111), !dbg !609
  call void @llvm.dbg.value(metadata i32* %h_cost_gpu, i64 0, metadata !610, metadata !111), !dbg !611
  call void @llvm.dbg.value(metadata i32 %no_of_nodes, i64 0, metadata !612, metadata !111), !dbg !613
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !604, metadata !111), !dbg !605
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !606, metadata !111), !dbg !607
  %h_cost_gpu3 = ptrtoint i32* %h_cost_gpu to i64
  %h_cost2 = ptrtoint i32* %h_cost to i64
  %0 = ptrtoint i32* undef to i64
  %1 = ptrtoint i32* undef to i64
  %2 = ptrtoint i32* undef to i64
  %3 = ptrtoint i32* undef to i64
  %4 = ptrtoint i32* undef to i64
  %5 = ptrtoint i32* undef to i64
  %6 = ptrtoint i32* undef to i64
  %7 = ptrtoint i32* undef to i64
  br label %for.cond, !dbg !614

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc7, %for.inc ]
  %fail.0 = phi i32 [ 0, %entry ], [ %fail.1, %for.inc ]
  %8 = icmp sgt i32 %no_of_nodes, 0, !dbg !616
  %smax7 = select i1 %8, i32 %no_of_nodes, i32 0, !dbg !616
  %9 = zext i32 %smax7 to i64, !dbg !616
  %10 = mul i64 4, %9, !dbg !616
  %11 = add i64 %h_cost2, %10, !dbg !616
  %12 = add i64 %h_cost_gpu3, %10, !dbg !616
  %13 = icmp sgt i32 %no_of_nodes, 0, !dbg !616
  %smax6 = select i1 %13, i32 %no_of_nodes, i32 0, !dbg !616
  %14 = zext i32 %smax6 to i64, !dbg !616
  %15 = mul i64 4, %14, !dbg !616
  %16 = add i64 %h_cost2, %15, !dbg !616
  %17 = add i64 %h_cost_gpu3, %15, !dbg !616
  %18 = icmp sgt i32 %no_of_nodes, 0, !dbg !616
  %smax = select i1 %18, i32 %no_of_nodes, i32 0, !dbg !616
  %19 = zext i32 %smax to i64, !dbg !616
  %20 = mul i64 4, %19, !dbg !616
  %21 = add i64 %h_cost2, %20, !dbg !616
  %22 = add i64 %h_cost_gpu3, %20, !dbg !616
  %cmp = icmp slt i32 %i.0, %no_of_nodes, !dbg !616
  br i1 %cmp, label %for.body, label %for.end, !dbg !618

for.body:                                         ; preds = %for.cond
  %23 = icmp sgt i32 %no_of_nodes, 0, !dbg !619
  %smax5 = select i1 %23, i32 %no_of_nodes, i32 0, !dbg !619
  %24 = zext i32 %smax5 to i64, !dbg !619
  %25 = mul i64 4, %24, !dbg !619
  %26 = add i64 %h_cost2, %25, !dbg !619
  %27 = add i64 %h_cost_gpu3, %25, !dbg !619
  %28 = icmp sgt i32 %no_of_nodes, 0, !dbg !619
  %smax4 = select i1 %28, i32 %no_of_nodes, i32 0, !dbg !619
  %29 = zext i32 %smax4 to i64, !dbg !619
  %30 = mul i64 4, %29, !dbg !619
  %31 = add i64 %h_cost2, %30, !dbg !619
  %32 = add i64 %h_cost_gpu3, %30, !dbg !619
  %idxprom = sext i32 %i.0 to i64, !dbg !619
  %arrayidx = getelementptr inbounds i32, i32* %h_cost, i64 %idxprom, !dbg !619
  %tmp = load i32, i32* %arrayidx, align 4, !dbg !619
  %conv = sitofp i32 %tmp to double, !dbg !619
  %idxprom1 = sext i32 %i.0 to i64, !dbg !622
  %arrayidx2 = getelementptr inbounds i32, i32* %h_cost_gpu, i64 %idxprom1, !dbg !622
  %tmp1 = load i32, i32* %arrayidx2, align 4, !dbg !622
  %conv3 = sitofp i32 %tmp1 to double, !dbg !622
  %call = call float @percentDiff(double %conv, double %conv3), !dbg !623
  %conv4 = fpext float %call to double, !dbg !623
  %cmp5 = fcmp ogt double %conv4, 5.000000e-02, !dbg !624
  br i1 %cmp5, label %if.then, label %if.end, !dbg !625

if.then:                                          ; preds = %for.body
  %inc = add nsw i32 %fail.0, 1, !dbg !626
  br label %if.end, !dbg !628

if.end:                                           ; preds = %if.then, %for.body
  %fail.1 = phi i32 [ %inc, %if.then ], [ %fail.0, %for.body ]
  br label %for.inc, !dbg !629

for.inc:                                          ; preds = %if.end
  %inc7 = add nsw i32 %i.0, 1, !dbg !630
  br label %for.cond, !dbg !631

for.end:                                          ; preds = %for.cond
  %fail.0.lcssa = phi i32 [ %fail.0, %for.cond ]
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.2, i32 0, i32 0), double 5.000000e-02, i32 %fail.0.lcssa), !dbg !632
  ret void, !dbg !633
}

; Function Attrs: noreturn nounwind
declare void @exit(i32) #4

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #5

declare %struct._IO_FILE* @fopen(i8*, i8*) #3

declare i32 @__isoc99_fscanf(%struct._IO_FILE*, i8*, ...) #3

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #2

declare i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare void @free(i8*) #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }
attributes #8 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!102, !103}
!llvm.ident = !{!104}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !12, globals: !40)
!1 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Rodinia/bfs/src/bfs.c", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!2 = !{}
!3 = !{!4, !11}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64, align: 64)
!5 = !DIDerivedType(tag: DW_TAG_typedef, name: "Node", file: !1, line: 18, baseType: !6)
!6 = !DICompositeType(tag: DW_TAG_structure_type, name: "Node", file: !1, line: 14, size: 64, align: 32, elements: !7)
!7 = !{!8, !10}
!8 = !DIDerivedType(tag: DW_TAG_member, name: "starting", scope: !6, file: !1, line: 16, baseType: !9, size: 32, align: 32)
!9 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!10 = !DIDerivedType(tag: DW_TAG_member, name: "no_of_edges", scope: !6, file: !1, line: 17, baseType: !9, size: 32, align: 32, offset: 32)
!11 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64, align: 64)
!12 = !{!13, !18, !22, !25, !31, !34, !37}
!13 = !DISubprogram(name: "rtclock", scope: !14, file: !14, line: 7, type: !15, isLocal: false, isDefinition: true, scopeLine: 8, isOptimized: false, function: double ()* @rtclock, variables: !2)
!14 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Rodinia/bfs/src/../../common/rodiniaUtilFunctions.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!15 = !DISubroutineType(types: !16)
!16 = !{!17}
!17 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!18 = !DISubprogram(name: "absVal", scope: !14, file: !14, line: 18, type: !19, isLocal: false, isDefinition: true, scopeLine: 19, flags: DIFlagPrototyped, isOptimized: false, function: float (float)* @absVal, variables: !2)
!19 = !DISubroutineType(types: !20)
!20 = !{!21, !21}
!21 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!22 = !DISubprogram(name: "percentDiff", scope: !14, file: !14, line: 32, type: !23, isLocal: false, isDefinition: true, scopeLine: 33, flags: DIFlagPrototyped, isOptimized: false, function: float (double, double)* @percentDiff, variables: !2)
!23 = !DISubroutineType(types: !24)
!24 = !{!21, !17, !17}
!25 = !DISubprogram(name: "Usage", scope: !1, file: !1, line: 29, type: !26, isLocal: false, isDefinition: true, scopeLine: 29, flags: DIFlagPrototyped, isOptimized: false, function: void (i32, i8**)* @Usage, variables: !2)
!26 = !DISubroutineType(types: !27)
!27 = !{null, !9, !28}
!28 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !29, size: 64, align: 64)
!29 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64, align: 64)
!30 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!31 = !DISubprogram(name: "main", scope: !1, file: !1, line: 37, type: !32, isLocal: false, isDefinition: true, scopeLine: 38, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i8**)* @main, variables: !2)
!32 = !DISubroutineType(types: !33)
!33 = !{!9, !9, !28}
!34 = !DISubprogram(name: "compareResults", scope: !1, file: !1, line: 45, type: !35, isLocal: false, isDefinition: true, scopeLine: 45, flags: DIFlagPrototyped, isOptimized: false, function: void (i32*, i32*, i32)* @compareResults, variables: !2)
!35 = !DISubroutineType(types: !36)
!36 = !{null, !11, !11, !9}
!37 = !DISubprogram(name: "BFSGraph", scope: !1, file: !1, line: 63, type: !38, isLocal: false, isDefinition: true, scopeLine: 64, flags: DIFlagPrototyped, isOptimized: false, function: void (i32, i8**, i32, i32)* @BFSGraph, variables: !2)
!38 = !DISubroutineType(types: !39)
!39 = !{null, !9, !28, !9, !9}
!40 = !{!41}
!41 = !DIGlobalVariable(name: "fp", scope: !0, file: !1, line: 11, type: !42, isLocal: false, isDefinition: true, variable: %struct._IO_FILE** @fp)
!42 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64, align: 64)
!43 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !44, line: 49, baseType: !45)
!44 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!45 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !46, line: 273, size: 1728, align: 64, elements: !47)
!46 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!47 = !{!48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !68, !69, !70, !71, !75, !77, !79, !83, !86, !88, !90, !91, !92, !93, !97, !98}
!48 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !45, file: !46, line: 274, baseType: !9, size: 32, align: 32)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !45, file: !46, line: 279, baseType: !29, size: 64, align: 64, offset: 64)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !45, file: !46, line: 280, baseType: !29, size: 64, align: 64, offset: 128)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !45, file: !46, line: 281, baseType: !29, size: 64, align: 64, offset: 192)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !45, file: !46, line: 282, baseType: !29, size: 64, align: 64, offset: 256)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !45, file: !46, line: 283, baseType: !29, size: 64, align: 64, offset: 320)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !45, file: !46, line: 284, baseType: !29, size: 64, align: 64, offset: 384)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !45, file: !46, line: 285, baseType: !29, size: 64, align: 64, offset: 448)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !45, file: !46, line: 286, baseType: !29, size: 64, align: 64, offset: 512)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !45, file: !46, line: 288, baseType: !29, size: 64, align: 64, offset: 576)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !45, file: !46, line: 289, baseType: !29, size: 64, align: 64, offset: 640)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !45, file: !46, line: 290, baseType: !29, size: 64, align: 64, offset: 704)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !45, file: !46, line: 292, baseType: !61, size: 64, align: 64, offset: 768)
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64, align: 64)
!62 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !46, line: 188, size: 192, align: 64, elements: !63)
!63 = !{!64, !65, !67}
!64 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !62, file: !46, line: 189, baseType: !61, size: 64, align: 64)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !62, file: !46, line: 190, baseType: !66, size: 64, align: 64, offset: 64)
!66 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !45, size: 64, align: 64)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !62, file: !46, line: 194, baseType: !9, size: 32, align: 32, offset: 128)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !45, file: !46, line: 294, baseType: !66, size: 64, align: 64, offset: 832)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !45, file: !46, line: 296, baseType: !9, size: 32, align: 32, offset: 896)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !45, file: !46, line: 300, baseType: !9, size: 32, align: 32, offset: 928)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !45, file: !46, line: 302, baseType: !72, size: 64, align: 64, offset: 960)
!72 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !73, line: 141, baseType: !74)
!73 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!74 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !45, file: !46, line: 306, baseType: !76, size: 16, align: 16, offset: 1024)
!76 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !45, file: !46, line: 307, baseType: !78, size: 8, align: 8, offset: 1040)
!78 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !45, file: !46, line: 308, baseType: !80, size: 8, align: 8, offset: 1048)
!80 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 8, align: 8, elements: !81)
!81 = !{!82}
!82 = !DISubrange(count: 1)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !45, file: !46, line: 312, baseType: !84, size: 64, align: 64, offset: 1088)
!84 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !85, size: 64, align: 64)
!85 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !46, line: 182, baseType: null)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !45, file: !46, line: 321, baseType: !87, size: 64, align: 64, offset: 1152)
!87 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !73, line: 142, baseType: !74)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !45, file: !46, line: 330, baseType: !89, size: 64, align: 64, offset: 1216)
!89 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !45, file: !46, line: 331, baseType: !89, size: 64, align: 64, offset: 1280)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !45, file: !46, line: 332, baseType: !89, size: 64, align: 64, offset: 1344)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !45, file: !46, line: 333, baseType: !89, size: 64, align: 64, offset: 1408)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !45, file: !46, line: 334, baseType: !94, size: 64, align: 64, offset: 1472)
!94 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !95, line: 62, baseType: !96)
!95 = !DIFile(filename: "/home/gleison/lge/llvm-3.7-src/build-debug/bin/../lib/clang/3.7.0/include/stddef.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!96 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !45, file: !46, line: 336, baseType: !9, size: 32, align: 32, offset: 1536)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !45, file: !46, line: 338, baseType: !99, size: 160, align: 8, offset: 1568)
!99 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 160, align: 8, elements: !100)
!100 = !{!101}
!101 = !DISubrange(count: 20)
!102 = !{i32 2, !"Dwarf Version", i32 4}
!103 = !{i32 2, !"Debug Info Version", i32 3}
!104 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!105 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Tzp", scope: !13, file: !14, line: 9, type: !106)
!106 = !DICompositeType(tag: DW_TAG_structure_type, name: "timezone", file: !107, line: 57, size: 64, align: 32, elements: !108)
!107 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/time.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!108 = !{!109, !110}
!109 = !DIDerivedType(tag: DW_TAG_member, name: "tz_minuteswest", scope: !106, file: !107, line: 59, baseType: !9, size: 32, align: 32)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "tz_dsttime", scope: !106, file: !107, line: 60, baseType: !9, size: 32, align: 32, offset: 32)
!111 = !DIExpression()
!112 = !DILocation(line: 9, column: 21, scope: !13)
!113 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Tp", scope: !13, file: !14, line: 10, type: !114)
!114 = !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !115, line: 31, size: 128, align: 64, elements: !116)
!115 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!116 = !{!117, !119}
!117 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !114, file: !115, line: 33, baseType: !118, size: 64, align: 64)
!118 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !73, line: 149, baseType: !74)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !114, file: !115, line: 34, baseType: !120, size: 64, align: 64, offset: 64)
!120 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !73, line: 151, baseType: !74)
!121 = !DILocation(line: 10, column: 20, scope: !13)
!122 = !DILocation(line: 12, column: 12, scope: !13)
!123 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stat", scope: !13, file: !14, line: 11, type: !9)
!124 = !DILocation(line: 11, column: 9, scope: !13)
!125 = !DILocation(line: 13, column: 14, scope: !126)
!126 = distinct !DILexicalBlock(scope: !13, file: !14, line: 13, column: 9)
!127 = !DILocation(line: 13, column: 9, scope: !13)
!128 = !DILocation(line: 13, column: 20, scope: !126)
!129 = !DILocation(line: 14, column: 15, scope: !13)
!130 = !DILocation(line: 14, column: 12, scope: !13)
!131 = !DILocation(line: 14, column: 27, scope: !13)
!132 = !DILocation(line: 14, column: 24, scope: !13)
!133 = !DILocation(line: 14, column: 34, scope: !13)
!134 = !DILocation(line: 14, column: 22, scope: !13)
!135 = !DILocation(line: 14, column: 5, scope: !13)
!136 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !18, file: !14, line: 18, type: !21)
!137 = !DILocation(line: 18, column: 20, scope: !18)
!138 = !DILocation(line: 20, column: 7, scope: !139)
!139 = distinct !DILexicalBlock(scope: !18, file: !14, line: 20, column: 5)
!140 = !DILocation(line: 20, column: 5, scope: !18)
!141 = !DILocation(line: 22, column: 13, scope: !142)
!142 = distinct !DILexicalBlock(scope: !139, file: !14, line: 21, column: 2)
!143 = !DILocation(line: 22, column: 3, scope: !142)
!144 = !DILocation(line: 26, column: 3, scope: !145)
!145 = distinct !DILexicalBlock(scope: !139, file: !14, line: 25, column: 2)
!146 = !DILocation(line: 28, column: 1, scope: !18)
!147 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val1", arg: 1, scope: !22, file: !14, line: 32, type: !17)
!148 = !DILocation(line: 32, column: 26, scope: !22)
!149 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val2", arg: 2, scope: !22, file: !14, line: 32, type: !17)
!150 = !DILocation(line: 32, column: 39, scope: !22)
!151 = !DILocation(line: 34, column: 14, scope: !152)
!152 = distinct !DILexicalBlock(scope: !22, file: !14, line: 34, column: 6)
!153 = !DILocation(line: 34, column: 7, scope: !152)
!154 = !DILocation(line: 34, column: 20, scope: !152)
!155 = !DILocation(line: 34, column: 28, scope: !152)
!156 = !DILocation(line: 34, column: 39, scope: !157)
!157 = !DILexicalBlockFile(scope: !152, file: !14, discriminator: 1)
!158 = !DILocation(line: 34, column: 32, scope: !152)
!159 = !DILocation(line: 34, column: 45, scope: !152)
!160 = !DILocation(line: 34, column: 6, scope: !22)
!161 = !DILocation(line: 36, column: 3, scope: !162)
!162 = distinct !DILexicalBlock(scope: !152, file: !14, line: 35, column: 2)
!163 = !DILocation(line: 41, column: 43, scope: !164)
!164 = distinct !DILexicalBlock(scope: !152, file: !14, line: 40, column: 2)
!165 = !DILocation(line: 41, column: 38, scope: !164)
!166 = !DILocation(line: 41, column: 31, scope: !164)
!167 = !DILocation(line: 41, column: 65, scope: !164)
!168 = !DILocation(line: 41, column: 60, scope: !164)
!169 = !DILocation(line: 41, column: 53, scope: !164)
!170 = !DILocation(line: 41, column: 51, scope: !164)
!171 = !DILocation(line: 41, column: 24, scope: !164)
!172 = !DILocation(line: 41, column: 21, scope: !164)
!173 = !DILocation(line: 41, column: 7, scope: !164)
!174 = !DILocation(line: 43, column: 1, scope: !22)
!175 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !25, file: !1, line: 29, type: !9)
!176 = !DILocation(line: 29, column: 16, scope: !25)
!177 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !25, file: !1, line: 29, type: !28)
!178 = !DILocation(line: 29, column: 28, scope: !25)
!179 = !DILocation(line: 31, column: 9, scope: !25)
!180 = !DILocation(line: 31, column: 58, scope: !25)
!181 = !DILocation(line: 31, column: 1, scope: !25)
!182 = !DILocation(line: 33, column: 1, scope: !25)
!183 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !31, file: !1, line: 37, type: !9)
!184 = !DILocation(line: 37, column: 15, scope: !31)
!185 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !31, file: !1, line: 37, type: !28)
!186 = !DILocation(line: 37, column: 28, scope: !31)
!187 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "no_of_nodes", scope: !31, file: !1, line: 39, type: !9)
!188 = !DILocation(line: 39, column: 6, scope: !31)
!189 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "edge_list_size", scope: !31, file: !1, line: 40, type: !9)
!190 = !DILocation(line: 40, column: 6, scope: !31)
!191 = !DILocation(line: 41, column: 2, scope: !31)
!192 = !DILocation(line: 42, column: 1, scope: !31)
!193 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !37, file: !1, line: 63, type: !9)
!194 = !DILocation(line: 63, column: 20, scope: !37)
!195 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !37, file: !1, line: 63, type: !28)
!196 = !DILocation(line: 63, column: 33, scope: !37)
!197 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "no_of_nodes", arg: 3, scope: !37, file: !1, line: 63, type: !9)
!198 = !DILocation(line: 63, column: 43, scope: !37)
!199 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "edge_list_size", arg: 4, scope: !37, file: !1, line: 63, type: !9)
!200 = !DILocation(line: 63, column: 60, scope: !37)
!201 = !DILocation(line: 68, column: 9, scope: !202)
!202 = distinct !DILexicalBlock(scope: !37, file: !1, line: 68, column: 5)
!203 = !DILocation(line: 68, column: 5, scope: !37)
!204 = !DILocation(line: 69, column: 2, scope: !205)
!205 = distinct !DILexicalBlock(scope: !202, file: !1, line: 68, column: 13)
!206 = !DILocation(line: 70, column: 2, scope: !205)
!207 = !DILocation(line: 73, column: 25, scope: !37)
!208 = !DILocation(line: 73, column: 20, scope: !37)
!209 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "num_omp_threads", scope: !37, file: !1, line: 66, type: !9)
!210 = !DILocation(line: 66, column: 7, scope: !37)
!211 = !DILocation(line: 74, column: 12, scope: !37)
!212 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "input_f", scope: !37, file: !1, line: 65, type: !29)
!213 = !DILocation(line: 65, column: 9, scope: !37)
!214 = !DILocation(line: 76, column: 2, scope: !37)
!215 = !DILocation(line: 78, column: 7, scope: !37)
!216 = !DILocation(line: 78, column: 5, scope: !37)
!217 = !DILocation(line: 79, column: 6, scope: !218)
!218 = distinct !DILexicalBlock(scope: !37, file: !1, line: 79, column: 5)
!219 = !DILocation(line: 79, column: 5, scope: !37)
!220 = !DILocation(line: 81, column: 3, scope: !221)
!221 = distinct !DILexicalBlock(scope: !218, file: !1, line: 80, column: 2)
!222 = !DILocation(line: 82, column: 3, scope: !221)
!223 = !DILocation(line: 100, column: 31, scope: !224)
!224 = distinct !DILexicalBlock(scope: !225, file: !1, line: 100, column: 2)
!225 = distinct !DILexicalBlock(scope: !37, file: !1, line: 100, column: 2)
!226 = !DILocation(line: 102, column: 10, scope: !227)
!227 = distinct !DILexicalBlock(scope: !224, file: !1, line: 101, column: 2)
!228 = !DILocation(line: 103, column: 31, scope: !227)
!229 = !DILocation(line: 104, column: 34, scope: !227)
!230 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !225, file: !1, line: 100, type: !231)
!231 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!232 = !DILocation(line: 100, column: 20, scope: !225)
!233 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "source", scope: !37, file: !1, line: 85, type: !9)
!234 = !DILocation(line: 85, column: 6, scope: !37)
!235 = !DILocation(line: 87, column: 9, scope: !37)
!236 = !DILocation(line: 87, column: 2, scope: !37)
!237 = !DILocation(line: 90, column: 52, scope: !37)
!238 = !DILocation(line: 90, column: 51, scope: !37)
!239 = !DILocation(line: 90, column: 32, scope: !37)
!240 = !DILocation(line: 90, column: 24, scope: !37)
!241 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h_graph_nodes", scope: !37, file: !1, line: 90, type: !4)
!242 = !DILocation(line: 90, column: 8, scope: !37)
!243 = !DILocation(line: 91, column: 51, scope: !37)
!244 = !DILocation(line: 91, column: 50, scope: !37)
!245 = !DILocation(line: 91, column: 31, scope: !37)
!246 = !DILocation(line: 91, column: 23, scope: !37)
!247 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h_graph_mask", scope: !37, file: !1, line: 91, type: !11)
!248 = !DILocation(line: 91, column: 8, scope: !37)
!249 = !DILocation(line: 92, column: 55, scope: !37)
!250 = !DILocation(line: 92, column: 54, scope: !37)
!251 = !DILocation(line: 92, column: 35, scope: !37)
!252 = !DILocation(line: 92, column: 27, scope: !37)
!253 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h_graph_mask_gpu", scope: !37, file: !1, line: 92, type: !11)
!254 = !DILocation(line: 92, column: 8, scope: !37)
!255 = !DILocation(line: 93, column: 60, scope: !37)
!256 = !DILocation(line: 93, column: 59, scope: !37)
!257 = !DILocation(line: 93, column: 40, scope: !37)
!258 = !DILocation(line: 93, column: 32, scope: !37)
!259 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h_updating_graph_mask", scope: !37, file: !1, line: 93, type: !11)
!260 = !DILocation(line: 93, column: 8, scope: !37)
!261 = !DILocation(line: 94, column: 64, scope: !37)
!262 = !DILocation(line: 94, column: 63, scope: !37)
!263 = !DILocation(line: 94, column: 44, scope: !37)
!264 = !DILocation(line: 94, column: 36, scope: !37)
!265 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h_updating_graph_mask_gpu", scope: !37, file: !1, line: 94, type: !11)
!266 = !DILocation(line: 94, column: 8, scope: !37)
!267 = !DILocation(line: 95, column: 54, scope: !37)
!268 = !DILocation(line: 95, column: 53, scope: !37)
!269 = !DILocation(line: 95, column: 34, scope: !37)
!270 = !DILocation(line: 95, column: 26, scope: !37)
!271 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h_graph_visited", scope: !37, file: !1, line: 95, type: !11)
!272 = !DILocation(line: 95, column: 8, scope: !37)
!273 = !DILocation(line: 96, column: 58, scope: !37)
!274 = !DILocation(line: 96, column: 57, scope: !37)
!275 = !DILocation(line: 96, column: 38, scope: !37)
!276 = !DILocation(line: 96, column: 30, scope: !37)
!277 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h_graph_visited_gpu", scope: !37, file: !1, line: 96, type: !11)
!278 = !DILocation(line: 96, column: 8, scope: !37)
!279 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "start", scope: !37, file: !1, line: 98, type: !9)
!280 = !DILocation(line: 98, column: 6, scope: !37)
!281 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "edgeno", scope: !37, file: !1, line: 98, type: !9)
!282 = !DILocation(line: 98, column: 13, scope: !37)
!283 = !DILocation(line: 100, column: 7, scope: !225)
!284 = !DILocation(line: 100, column: 29, scope: !224)
!285 = !DILocation(line: 100, column: 2, scope: !225)
!286 = !DILocation(line: 102, column: 3, scope: !227)
!287 = !DILocation(line: 103, column: 3, scope: !227)
!288 = !DILocation(line: 103, column: 20, scope: !227)
!289 = !DILocation(line: 103, column: 29, scope: !227)
!290 = !DILocation(line: 104, column: 3, scope: !227)
!291 = !DILocation(line: 104, column: 20, scope: !227)
!292 = !DILocation(line: 104, column: 32, scope: !227)
!293 = !DILocation(line: 105, column: 3, scope: !227)
!294 = !DILocation(line: 105, column: 18, scope: !227)
!295 = !DILocation(line: 106, column: 3, scope: !227)
!296 = !DILocation(line: 106, column: 22, scope: !227)
!297 = !DILocation(line: 107, column: 3, scope: !227)
!298 = !DILocation(line: 107, column: 27, scope: !227)
!299 = !DILocation(line: 108, column: 3, scope: !227)
!300 = !DILocation(line: 108, column: 31, scope: !227)
!301 = !DILocation(line: 109, column: 3, scope: !227)
!302 = !DILocation(line: 109, column: 21, scope: !227)
!303 = !DILocation(line: 110, column: 3, scope: !227)
!304 = !DILocation(line: 110, column: 25, scope: !227)
!305 = !DILocation(line: 111, column: 2, scope: !227)
!306 = !DILocation(line: 100, column: 45, scope: !224)
!307 = !DILocation(line: 100, column: 2, scope: !224)
!308 = !DILocation(line: 127, column: 19, scope: !309)
!309 = distinct !DILexicalBlock(scope: !310, file: !1, line: 127, column: 2)
!310 = distinct !DILexicalBlock(scope: !37, file: !1, line: 127, column: 2)
!311 = !DILocation(line: 129, column: 10, scope: !312)
!312 = distinct !DILexicalBlock(scope: !309, file: !1, line: 128, column: 2)
!313 = !DILocation(line: 130, column: 10, scope: !312)
!314 = !DILocation(line: 131, column: 22, scope: !312)
!315 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !310, file: !1, line: 127, type: !9)
!316 = !DILocation(line: 127, column: 10, scope: !310)
!317 = !DILocation(line: 114, column: 9, scope: !37)
!318 = !DILocation(line: 114, column: 2, scope: !37)
!319 = !DILocation(line: 118, column: 15, scope: !37)
!320 = !DILocation(line: 118, column: 2, scope: !37)
!321 = !DILocation(line: 118, column: 22, scope: !37)
!322 = !DILocation(line: 119, column: 19, scope: !37)
!323 = !DILocation(line: 119, column: 2, scope: !37)
!324 = !DILocation(line: 119, column: 26, scope: !37)
!325 = !DILocation(line: 120, column: 18, scope: !37)
!326 = !DILocation(line: 120, column: 2, scope: !37)
!327 = !DILocation(line: 120, column: 25, scope: !37)
!328 = !DILocation(line: 121, column: 22, scope: !37)
!329 = !DILocation(line: 121, column: 2, scope: !37)
!330 = !DILocation(line: 121, column: 29, scope: !37)
!331 = !DILocation(line: 123, column: 9, scope: !37)
!332 = !DILocation(line: 123, column: 2, scope: !37)
!333 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "id", scope: !37, file: !1, line: 125, type: !9)
!334 = !DILocation(line: 125, column: 6, scope: !37)
!335 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "cost", scope: !37, file: !1, line: 125, type: !9)
!336 = !DILocation(line: 125, column: 9, scope: !37)
!337 = !DILocation(line: 126, column: 49, scope: !37)
!338 = !DILocation(line: 126, column: 48, scope: !37)
!339 = !DILocation(line: 126, column: 30, scope: !37)
!340 = !DILocation(line: 126, column: 23, scope: !37)
!341 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h_graph_edges", scope: !37, file: !1, line: 126, type: !11)
!342 = !DILocation(line: 126, column: 7, scope: !37)
!343 = !DILocation(line: 127, column: 6, scope: !310)
!344 = !DILocation(line: 127, column: 17, scope: !309)
!345 = !DILocation(line: 127, column: 2, scope: !310)
!346 = !DILocation(line: 129, column: 3, scope: !312)
!347 = !DILocation(line: 130, column: 3, scope: !312)
!348 = !DILocation(line: 131, column: 3, scope: !312)
!349 = !DILocation(line: 131, column: 20, scope: !312)
!350 = !DILocation(line: 132, column: 2, scope: !312)
!351 = !DILocation(line: 127, column: 37, scope: !309)
!352 = !DILocation(line: 127, column: 2, scope: !309)
!353 = !DILocation(line: 134, column: 5, scope: !354)
!354 = distinct !DILexicalBlock(scope: !37, file: !1, line: 134, column: 5)
!355 = !DILocation(line: 134, column: 5, scope: !37)
!356 = !DILocation(line: 135, column: 9, scope: !354)
!357 = !DILocation(line: 135, column: 2, scope: !354)
!358 = !DILocation(line: 140, column: 17, scope: !359)
!359 = distinct !DILexicalBlock(scope: !360, file: !1, line: 140, column: 3)
!360 = distinct !DILexicalBlock(scope: !37, file: !1, line: 140, column: 3)
!361 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !360, file: !1, line: 140, type: !9)
!362 = !DILocation(line: 140, column: 11, scope: !360)
!363 = !DILocation(line: 138, column: 43, scope: !37)
!364 = !DILocation(line: 138, column: 42, scope: !37)
!365 = !DILocation(line: 138, column: 23, scope: !37)
!366 = !DILocation(line: 138, column: 16, scope: !37)
!367 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h_cost", scope: !37, file: !1, line: 138, type: !11)
!368 = !DILocation(line: 138, column: 7, scope: !37)
!369 = !DILocation(line: 139, column: 47, scope: !37)
!370 = !DILocation(line: 139, column: 46, scope: !37)
!371 = !DILocation(line: 139, column: 27, scope: !37)
!372 = !DILocation(line: 139, column: 20, scope: !37)
!373 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h_cost_gpu", scope: !37, file: !1, line: 139, type: !11)
!374 = !DILocation(line: 139, column: 7, scope: !37)
!375 = !DILocation(line: 140, column: 7, scope: !360)
!376 = !DILocation(line: 140, column: 16, scope: !359)
!377 = !DILocation(line: 140, column: 3, scope: !360)
!378 = !DILocation(line: 141, column: 5, scope: !379)
!379 = distinct !DILexicalBlock(scope: !359, file: !1, line: 140, column: 33)
!380 = !DILocation(line: 141, column: 15, scope: !379)
!381 = !DILocation(line: 142, column: 3, scope: !379)
!382 = !DILocation(line: 142, column: 16, scope: !379)
!383 = !DILocation(line: 143, column: 2, scope: !379)
!384 = !DILocation(line: 140, column: 30, scope: !359)
!385 = !DILocation(line: 140, column: 3, scope: !359)
!386 = !DILocation(line: 167, column: 23, scope: !387)
!387 = distinct !DILexicalBlock(scope: !388, file: !1, line: 167, column: 4)
!388 = distinct !DILexicalBlock(scope: !389, file: !1, line: 167, column: 4)
!389 = distinct !DILexicalBlock(scope: !390, file: !1, line: 165, column: 3)
!390 = distinct !DILexicalBlock(scope: !37, file: !1, line: 157, column: 2)
!391 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !392, file: !1, line: 171, type: !9)
!392 = distinct !DILexicalBlock(scope: !393, file: !1, line: 171, column: 5)
!393 = distinct !DILexicalBlock(scope: !394, file: !1, line: 169, column: 39)
!394 = distinct !DILexicalBlock(scope: !395, file: !1, line: 169, column: 9)
!395 = distinct !DILexicalBlock(scope: !387, file: !1, line: 168, column: 4)
!396 = !DILocation(line: 171, column: 13, scope: !392)
!397 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tid", scope: !37, file: !1, line: 149, type: !9)
!398 = !DILocation(line: 149, column: 11, scope: !37)
!399 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "id", scope: !400, file: !1, line: 173, type: !9)
!400 = distinct !DILexicalBlock(scope: !401, file: !1, line: 172, column: 6)
!401 = distinct !DILexicalBlock(scope: !392, file: !1, line: 171, column: 5)
!402 = !DILocation(line: 173, column: 10, scope: !400)
!403 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stop", scope: !37, file: !1, line: 151, type: !9)
!404 = !DILocation(line: 151, column: 7, scope: !37)
!405 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tid", scope: !406, file: !1, line: 184, type: !9)
!406 = distinct !DILexicalBlock(scope: !390, file: !1, line: 184, column: 5)
!407 = !DILocation(line: 184, column: 13, scope: !406)
!408 = !DILocation(line: 184, column: 25, scope: !409)
!409 = distinct !DILexicalBlock(scope: !406, file: !1, line: 184, column: 5)
!410 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !37, file: !1, line: 149, type: !9)
!411 = !DILocation(line: 149, column: 6, scope: !37)
!412 = !DILocation(line: 144, column: 9, scope: !37)
!413 = !DILocation(line: 144, column: 2, scope: !37)
!414 = !DILocation(line: 144, column: 16, scope: !37)
!415 = !DILocation(line: 145, column: 13, scope: !37)
!416 = !DILocation(line: 145, column: 2, scope: !37)
!417 = !DILocation(line: 145, column: 20, scope: !37)
!418 = !DILocation(line: 147, column: 2, scope: !37)
!419 = !DILocation(line: 154, column: 12, scope: !37)
!420 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_start", scope: !37, file: !1, line: 152, type: !17)
!421 = !DILocation(line: 152, column: 9, scope: !37)
!422 = !DILocation(line: 156, column: 2, scope: !37)
!423 = !DILocation(line: 167, column: 8, scope: !388)
!424 = !DILocation(line: 167, column: 21, scope: !387)
!425 = !DILocation(line: 167, column: 4, scope: !388)
!426 = !DILocation(line: 169, column: 9, scope: !394)
!427 = !DILocation(line: 169, column: 31, scope: !394)
!428 = !DILocation(line: 169, column: 9, scope: !395)
!429 = !DILocation(line: 170, column: 5, scope: !393)
!430 = !DILocation(line: 170, column: 26, scope: !393)
!431 = !DILocation(line: 171, column: 15, scope: !392)
!432 = !DILocation(line: 171, column: 34, scope: !392)
!433 = !DILocation(line: 171, column: 9, scope: !392)
!434 = !DILocation(line: 171, column: 47, scope: !401)
!435 = !DILocation(line: 171, column: 66, scope: !401)
!436 = !DILocation(line: 171, column: 80, scope: !401)
!437 = !DILocation(line: 171, column: 99, scope: !401)
!438 = !DILocation(line: 171, column: 78, scope: !401)
!439 = !DILocation(line: 171, column: 45, scope: !401)
!440 = !DILocation(line: 171, column: 5, scope: !392)
!441 = !DILocation(line: 173, column: 15, scope: !400)
!442 = !DILocation(line: 174, column: 10, scope: !443)
!443 = distinct !DILexicalBlock(scope: !400, file: !1, line: 174, column: 9)
!444 = !DILocation(line: 174, column: 9, scope: !400)
!445 = !DILocation(line: 176, column: 22, scope: !446)
!446 = distinct !DILexicalBlock(scope: !443, file: !1, line: 175, column: 7)
!447 = !DILocation(line: 176, column: 37, scope: !446)
!448 = !DILocation(line: 176, column: 7, scope: !446)
!449 = !DILocation(line: 176, column: 21, scope: !446)
!450 = !DILocation(line: 177, column: 7, scope: !446)
!451 = !DILocation(line: 177, column: 36, scope: !446)
!452 = !DILocation(line: 178, column: 7, scope: !446)
!453 = !DILocation(line: 179, column: 6, scope: !400)
!454 = !DILocation(line: 171, column: 111, scope: !401)
!455 = !DILocation(line: 171, column: 5, scope: !401)
!456 = !DILocation(line: 180, column: 5, scope: !393)
!457 = !DILocation(line: 181, column: 4, scope: !395)
!458 = !DILocation(line: 167, column: 39, scope: !387)
!459 = !DILocation(line: 167, column: 4, scope: !387)
!460 = !DILocation(line: 184, column: 9, scope: !406)
!461 = !DILocation(line: 184, column: 23, scope: !409)
!462 = !DILocation(line: 184, column: 5, scope: !406)
!463 = !DILocation(line: 186, column: 8, scope: !464)
!464 = distinct !DILexicalBlock(scope: !465, file: !1, line: 186, column: 8)
!465 = distinct !DILexicalBlock(scope: !409, file: !1, line: 185, column: 3)
!466 = !DILocation(line: 186, column: 39, scope: !464)
!467 = !DILocation(line: 186, column: 8, scope: !465)
!468 = !DILocation(line: 187, column: 4, scope: !469)
!469 = distinct !DILexicalBlock(scope: !464, file: !1, line: 186, column: 47)
!470 = !DILocation(line: 187, column: 25, scope: !469)
!471 = !DILocation(line: 188, column: 4, scope: !469)
!472 = !DILocation(line: 188, column: 28, scope: !469)
!473 = !DILocation(line: 190, column: 4, scope: !469)
!474 = !DILocation(line: 190, column: 34, scope: !469)
!475 = !DILocation(line: 191, column: 4, scope: !469)
!476 = !DILocation(line: 192, column: 3, scope: !465)
!477 = !DILocation(line: 184, column: 42, scope: !409)
!478 = !DILocation(line: 184, column: 5, scope: !409)
!479 = !DILocation(line: 193, column: 4, scope: !390)
!480 = !DILocation(line: 194, column: 2, scope: !390)
!481 = !DILocation(line: 207, column: 22, scope: !482)
!482 = distinct !DILexicalBlock(scope: !483, file: !1, line: 207, column: 3)
!483 = distinct !DILexicalBlock(scope: !484, file: !1, line: 207, column: 3)
!484 = distinct !DILexicalBlock(scope: !37, file: !1, line: 203, column: 2)
!485 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tid", scope: !486, file: !1, line: 223, type: !9)
!486 = distinct !DILexicalBlock(scope: !484, file: !1, line: 223, column: 5)
!487 = !DILocation(line: 223, column: 13, scope: !486)
!488 = !DILocation(line: 223, column: 25, scope: !489)
!489 = distinct !DILexicalBlock(scope: !486, file: !1, line: 223, column: 5)
!490 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !491, file: !1, line: 211, type: !9)
!491 = distinct !DILexicalBlock(scope: !492, file: !1, line: 211, column: 4)
!492 = distinct !DILexicalBlock(scope: !493, file: !1, line: 209, column: 34)
!493 = distinct !DILexicalBlock(scope: !494, file: !1, line: 209, column: 8)
!494 = distinct !DILexicalBlock(scope: !482, file: !1, line: 208, column: 3)
!495 = !DILocation(line: 211, column: 12, scope: !491)
!496 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "id", scope: !497, file: !1, line: 213, type: !9)
!497 = distinct !DILexicalBlock(scope: !498, file: !1, line: 212, column: 5)
!498 = distinct !DILexicalBlock(scope: !491, file: !1, line: 211, column: 4)
!499 = !DILocation(line: 213, column: 9, scope: !497)
!500 = !DILocation(line: 196, column: 10, scope: !37)
!501 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_end", scope: !37, file: !1, line: 152, type: !17)
!502 = !DILocation(line: 152, column: 18, scope: !37)
!503 = !DILocation(line: 197, column: 12, scope: !37)
!504 = !DILocation(line: 197, column: 52, scope: !37)
!505 = !DILocation(line: 197, column: 4, scope: !37)
!506 = !DILocation(line: 200, column: 12, scope: !37)
!507 = !DILocation(line: 202, column: 2, scope: !37)
!508 = !DILocation(line: 207, column: 7, scope: !483)
!509 = !DILocation(line: 207, column: 20, scope: !482)
!510 = !DILocation(line: 207, column: 3, scope: !483)
!511 = !DILocation(line: 209, column: 8, scope: !493)
!512 = !DILocation(line: 209, column: 26, scope: !493)
!513 = !DILocation(line: 209, column: 8, scope: !494)
!514 = !DILocation(line: 210, column: 4, scope: !492)
!515 = !DILocation(line: 210, column: 21, scope: !492)
!516 = !DILocation(line: 211, column: 14, scope: !491)
!517 = !DILocation(line: 211, column: 33, scope: !491)
!518 = !DILocation(line: 211, column: 8, scope: !491)
!519 = !DILocation(line: 211, column: 46, scope: !498)
!520 = !DILocation(line: 211, column: 65, scope: !498)
!521 = !DILocation(line: 211, column: 79, scope: !498)
!522 = !DILocation(line: 211, column: 98, scope: !498)
!523 = !DILocation(line: 211, column: 77, scope: !498)
!524 = !DILocation(line: 211, column: 44, scope: !498)
!525 = !DILocation(line: 211, column: 4, scope: !491)
!526 = !DILocation(line: 213, column: 14, scope: !497)
!527 = !DILocation(line: 214, column: 9, scope: !528)
!528 = distinct !DILexicalBlock(scope: !497, file: !1, line: 214, column: 8)
!529 = !DILocation(line: 214, column: 8, scope: !497)
!530 = !DILocation(line: 216, column: 17, scope: !531)
!531 = distinct !DILexicalBlock(scope: !528, file: !1, line: 215, column: 6)
!532 = !DILocation(line: 216, column: 28, scope: !531)
!533 = !DILocation(line: 216, column: 6, scope: !531)
!534 = !DILocation(line: 216, column: 16, scope: !531)
!535 = !DILocation(line: 217, column: 6, scope: !531)
!536 = !DILocation(line: 217, column: 31, scope: !531)
!537 = !DILocation(line: 218, column: 6, scope: !531)
!538 = !DILocation(line: 219, column: 5, scope: !497)
!539 = !DILocation(line: 211, column: 110, scope: !498)
!540 = !DILocation(line: 211, column: 4, scope: !498)
!541 = !DILocation(line: 220, column: 4, scope: !492)
!542 = !DILocation(line: 221, column: 3, scope: !494)
!543 = !DILocation(line: 207, column: 38, scope: !482)
!544 = !DILocation(line: 207, column: 3, scope: !482)
!545 = !DILocation(line: 223, column: 9, scope: !486)
!546 = !DILocation(line: 223, column: 23, scope: !489)
!547 = !DILocation(line: 223, column: 5, scope: !486)
!548 = !DILocation(line: 225, column: 8, scope: !549)
!549 = distinct !DILexicalBlock(scope: !550, file: !1, line: 225, column: 8)
!550 = distinct !DILexicalBlock(scope: !489, file: !1, line: 224, column: 3)
!551 = !DILocation(line: 225, column: 35, scope: !549)
!552 = !DILocation(line: 225, column: 8, scope: !550)
!553 = !DILocation(line: 226, column: 4, scope: !554)
!554 = distinct !DILexicalBlock(scope: !549, file: !1, line: 225, column: 43)
!555 = !DILocation(line: 226, column: 21, scope: !554)
!556 = !DILocation(line: 227, column: 4, scope: !554)
!557 = !DILocation(line: 227, column: 24, scope: !554)
!558 = !DILocation(line: 229, column: 4, scope: !554)
!559 = !DILocation(line: 229, column: 30, scope: !554)
!560 = !DILocation(line: 230, column: 4, scope: !554)
!561 = !DILocation(line: 231, column: 3, scope: !550)
!562 = !DILocation(line: 223, column: 42, scope: !489)
!563 = !DILocation(line: 223, column: 5, scope: !489)
!564 = !DILocation(line: 232, column: 4, scope: !484)
!565 = !DILocation(line: 233, column: 2, scope: !484)
!566 = !DILocation(line: 242, column: 16, scope: !567)
!567 = distinct !DILexicalBlock(scope: !568, file: !1, line: 242, column: 2)
!568 = distinct !DILexicalBlock(scope: !37, file: !1, line: 242, column: 2)
!569 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !568, file: !1, line: 242, type: !9)
!570 = !DILocation(line: 242, column: 10, scope: !568)
!571 = !DILocation(line: 235, column: 10, scope: !37)
!572 = !DILocation(line: 236, column: 12, scope: !37)
!573 = !DILocation(line: 236, column: 52, scope: !37)
!574 = !DILocation(line: 236, column: 4, scope: !37)
!575 = !DILocation(line: 238, column: 37, scope: !37)
!576 = !DILocation(line: 238, column: 2, scope: !37)
!577 = !DILocation(line: 241, column: 14, scope: !37)
!578 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fpo", scope: !37, file: !1, line: 241, type: !42)
!579 = !DILocation(line: 241, column: 8, scope: !37)
!580 = !DILocation(line: 242, column: 6, scope: !568)
!581 = !DILocation(line: 242, column: 15, scope: !567)
!582 = !DILocation(line: 242, column: 2, scope: !568)
!583 = !DILocation(line: 243, column: 33, scope: !567)
!584 = !DILocation(line: 243, column: 3, scope: !567)
!585 = !DILocation(line: 242, column: 29, scope: !567)
!586 = !DILocation(line: 242, column: 2, scope: !567)
!587 = !DILocation(line: 244, column: 2, scope: !37)
!588 = !DILocation(line: 245, column: 2, scope: !37)
!589 = !DILocation(line: 249, column: 8, scope: !37)
!590 = !DILocation(line: 249, column: 2, scope: !37)
!591 = !DILocation(line: 250, column: 8, scope: !37)
!592 = !DILocation(line: 250, column: 2, scope: !37)
!593 = !DILocation(line: 251, column: 8, scope: !37)
!594 = !DILocation(line: 251, column: 2, scope: !37)
!595 = !DILocation(line: 252, column: 8, scope: !37)
!596 = !DILocation(line: 252, column: 2, scope: !37)
!597 = !DILocation(line: 253, column: 8, scope: !37)
!598 = !DILocation(line: 253, column: 2, scope: !37)
!599 = !DILocation(line: 254, column: 8, scope: !37)
!600 = !DILocation(line: 254, column: 2, scope: !37)
!601 = !DILocation(line: 255, column: 1, scope: !37)
!602 = !DILocation(line: 255, column: 1, scope: !603)
!603 = !DILexicalBlockFile(scope: !37, file: !1, discriminator: 1)
!604 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fail", scope: !34, file: !1, line: 46, type: !9)
!605 = !DILocation(line: 46, column: 9, scope: !34)
!606 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !34, file: !1, line: 46, type: !9)
!607 = !DILocation(line: 46, column: 7, scope: !34)
!608 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "h_cost", arg: 1, scope: !34, file: !1, line: 45, type: !11)
!609 = !DILocation(line: 45, column: 26, scope: !34)
!610 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "h_cost_gpu", arg: 2, scope: !34, file: !1, line: 45, type: !11)
!611 = !DILocation(line: 45, column: 39, scope: !34)
!612 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "no_of_nodes", arg: 3, scope: !34, file: !1, line: 45, type: !9)
!613 = !DILocation(line: 45, column: 55, scope: !34)
!614 = !DILocation(line: 50, column: 8, scope: !615)
!615 = distinct !DILexicalBlock(scope: !34, file: !1, line: 50, column: 3)
!616 = !DILocation(line: 50, column: 14, scope: !617)
!617 = distinct !DILexicalBlock(scope: !615, file: !1, line: 50, column: 3)
!618 = !DILocation(line: 50, column: 3, scope: !615)
!619 = !DILocation(line: 51, column: 23, scope: !620)
!620 = distinct !DILexicalBlock(scope: !621, file: !1, line: 51, column: 11)
!621 = distinct !DILexicalBlock(scope: !617, file: !1, line: 50, column: 33)
!622 = !DILocation(line: 51, column: 34, scope: !620)
!623 = !DILocation(line: 51, column: 11, scope: !620)
!624 = !DILocation(line: 51, column: 49, scope: !620)
!625 = !DILocation(line: 51, column: 11, scope: !621)
!626 = !DILocation(line: 52, column: 6, scope: !627)
!627 = distinct !DILexicalBlock(scope: !620, file: !1, line: 51, column: 68)
!628 = !DILocation(line: 53, column: 7, scope: !627)
!629 = !DILocation(line: 54, column: 3, scope: !621)
!630 = !DILocation(line: 50, column: 29, scope: !617)
!631 = !DILocation(line: 50, column: 3, scope: !617)
!632 = !DILocation(line: 57, column: 3, scope: !34)
!633 = !DILocation(line: 58, column: 1, scope: !34)
