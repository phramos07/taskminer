; ModuleID = '/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Rodinia/backprop/src/backprop.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.timezone = type { i32, i32 }
%struct.timeval = type { i64, i64 }
%struct.BPNN = type { i32, i32, i32, float*, float*, float*, float*, float*, float*, float**, float**, float**, float** }

@.str = private unnamed_addr constant [35 x i8] c"Error return from gettimeofday: %d\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"ALLOC_1D_DBL: Couldn't allocate array of floats\0A\00", align 1
@.str.2 = private unnamed_addr constant [51 x i8] c"ALLOC_2D_DBL: Couldn't allocate array of dbl ptrs\0A\00", align 1
@.str.3 = private unnamed_addr constant [34 x i8] c"Random number generator seed: %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [47 x i8] c"BPNN_CREATE: Couldn't allocate neural network\0A\00", align 1
@.str.5 = private unnamed_addr constant [74 x i8] c"Non-Matching CPU-GPU Outputs Beyond Error Threshold of %4.2f Percent: %d\0A\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@.str.6 = private unnamed_addr constant [22 x i8] c"GPU Runtime: %0.6lfs\0A\00", align 1
@.str.7 = private unnamed_addr constant [22 x i8] c"CPU Runtime: %0.6lfs\0A\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"w+\00", align 1
@.str.10 = private unnamed_addr constant [33 x i8] c"Saving %dx%dx%d network to '%s'\0A\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"Reading '%s'\0A\00", align 1
@.str.12 = private unnamed_addr constant [34 x i8] c"'%s' contains a %dx%dx%d network\0A\00", align 1
@.str.13 = private unnamed_addr constant [25 x i8] c"Reading input weights...\00", align 1
@.str.14 = private unnamed_addr constant [31 x i8] c"Done\0AReading hidden weights...\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"Done\0A\00", align 1

; Function Attrs: nounwind uwtable
define double @rtclock() #0 {
entry:
  %Tzp = alloca %struct.timezone, align 4
  %Tp = alloca %struct.timeval, align 8
  call void @llvm.dbg.declare(metadata %struct.timezone* %Tzp, metadata !104, metadata !110), !dbg !111
  call void @llvm.dbg.declare(metadata %struct.timeval* %Tp, metadata !112, metadata !110), !dbg !122
  %call = call i32 @gettimeofday(%struct.timeval* %Tp, %struct.timezone* %Tzp) #4, !dbg !123
  call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !124, metadata !110), !dbg !125
  %cmp = icmp ne i32 %call, 0, !dbg !126
  br i1 %cmp, label %if.then, label %if.end, !dbg !128

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i32 0, i32 0), i32 %call), !dbg !129
  br label %if.end, !dbg !129

if.end:                                           ; preds = %if.then, %entry
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %Tp, i32 0, i32 0, !dbg !130
  %tmp = load i64, i64* %tv_sec, align 8, !dbg !130
  %conv = sitofp i64 %tmp to double, !dbg !131
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %Tp, i32 0, i32 1, !dbg !132
  %tmp1 = load i64, i64* %tv_usec, align 8, !dbg !132
  %conv2 = sitofp i64 %tmp1 to double, !dbg !133
  %mul = fmul double %conv2, 1.000000e-06, !dbg !134
  %add = fadd double %conv, %mul, !dbg !135
  ret double %add, !dbg !136
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timeval*, %struct.timezone*) #2

declare i32 @printf(i8*, ...) #3

; Function Attrs: nounwind uwtable
define float @absVal(float %a) #0 {
entry:
  call void @llvm.dbg.value(metadata float %a, i64 0, metadata !137, metadata !110), !dbg !138
  %cmp = fcmp olt float %a, 0.000000e+00, !dbg !139
  br i1 %cmp, label %if.then, label %if.else, !dbg !141

if.then:                                          ; preds = %entry
  %mul = fmul float %a, -1.000000e+00, !dbg !142
  br label %return, !dbg !144

if.else:                                          ; preds = %entry
  br label %return, !dbg !145

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi float [ %mul, %if.then ], [ %a, %if.else ]
  ret float %retval.0, !dbg !147
}

; Function Attrs: nounwind uwtable
define float @percentDiff(double %val1, double %val2) #0 {
entry:
  call void @llvm.dbg.value(metadata double %val1, i64 0, metadata !148, metadata !110), !dbg !149
  call void @llvm.dbg.value(metadata double %val2, i64 0, metadata !150, metadata !110), !dbg !151
  %conv = fptrunc double %val1 to float, !dbg !152
  %call = call float @absVal(float %conv), !dbg !154
  %conv1 = fpext float %call to double, !dbg !154
  %cmp = fcmp olt double %conv1, 1.000000e-02, !dbg !155
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !156

land.lhs.true:                                    ; preds = %entry
  %conv3 = fptrunc double %val2 to float, !dbg !157
  %call4 = call float @absVal(float %conv3), !dbg !159
  %conv5 = fpext float %call4 to double, !dbg !159
  %cmp6 = fcmp olt double %conv5, 1.000000e-02, !dbg !160
  br i1 %cmp6, label %if.then, label %if.else, !dbg !161

if.then:                                          ; preds = %land.lhs.true
  br label %return, !dbg !162

if.else:                                          ; preds = %land.lhs.true, %entry
  %sub = fsub double %val1, %val2, !dbg !164
  %conv8 = fptrunc double %sub to float, !dbg !166
  %call9 = call float @absVal(float %conv8), !dbg !167
  %add = fadd double %val1, 0x3E45798EE0000000, !dbg !168
  %conv10 = fptrunc double %add to float, !dbg !169
  %call11 = call float @absVal(float %conv10), !dbg !170
  %div = fdiv float %call9, %call11, !dbg !171
  %call12 = call float @absVal(float %div), !dbg !172
  %mul = fmul float 1.000000e+02, %call12, !dbg !173
  br label %return, !dbg !174

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi float [ 0.000000e+00, %if.then ], [ %mul, %if.else ]
  ret float %retval.0, !dbg !175
}

; Function Attrs: nounwind uwtable
define float @drnd() #0 {
entry:
  %call = call i32 @rand() #4, !dbg !176
  %conv = sitofp i32 %call to float, !dbg !177
  %div = fdiv float %conv, 0x41E0000000000000, !dbg !178
  ret float %div, !dbg !179
}

; Function Attrs: nounwind
declare i32 @rand() #2

; Function Attrs: nounwind uwtable
define float @dpn1() #0 {
entry:
  %call = call float @drnd(), !dbg !180
  %conv = fpext float %call to double, !dbg !180
  %mul = fmul double %conv, 2.000000e+00, !dbg !181
  %sub = fsub double %mul, 1.000000e+00, !dbg !182
  %conv1 = fptrunc double %sub to float, !dbg !183
  ret float %conv1, !dbg !184
}

; Function Attrs: nounwind uwtable
define float @squash(double %arg) #0 {
entry:
  %x = fptrunc double %arg to float
  call void @llvm.dbg.value(metadata float %x, i64 0, metadata !185, metadata !110), !dbg !186
  call void @llvm.dbg.declare(metadata !2, metadata !187, metadata !110), !dbg !188
  %sub = fsub float -0.000000e+00, %x, !dbg !189
  %conv = fpext float %sub to double, !dbg !189
  %call = call double @exp(double %conv) #4, !dbg !190
  %add = fadd double 1.000000e+00, %call, !dbg !191
  %div = fdiv double 1.000000e+00, %add, !dbg !192
  %conv1 = fptrunc double %div to float, !dbg !193
  ret float %conv1, !dbg !194
}

; Function Attrs: nounwind
declare double @exp(double) #2

; Function Attrs: nounwind uwtable
define float* @alloc_1d_dbl(i32 %n) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !195, metadata !110), !dbg !196
  %conv = sext i32 %n to i64, !dbg !197
  %mul = mul i64 %conv, 4, !dbg !198
  %conv1 = trunc i64 %mul to i32, !dbg !199
  %conv2 = zext i32 %conv1 to i64, !dbg !199
  %call = call noalias i8* @malloc(i64 %conv2) #4, !dbg !200
  %tmp = bitcast i8* %call to float*, !dbg !201
  call void @llvm.dbg.value(metadata float* %tmp, i64 0, metadata !202, metadata !110), !dbg !203
  %cmp = icmp eq float* %tmp, null, !dbg !204
  br i1 %cmp, label %if.then, label %if.end, !dbg !206

if.then:                                          ; preds = %entry
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i32 0, i32 0)), !dbg !207
  br label %return, !dbg !209

if.end:                                           ; preds = %entry
  br label %return, !dbg !210

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi float* [ null, %if.then ], [ %tmp, %if.end ]
  ret float* %retval.0, !dbg !211
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #2

; Function Attrs: nounwind uwtable
define float** @alloc_2d_dbl(i32 %m, i32 %n) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %m, i64 0, metadata !212, metadata !110), !dbg !213
  call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !214, metadata !110), !dbg !215
  %conv = sext i32 %m to i64, !dbg !216
  %mul = mul i64 %conv, 8, !dbg !217
  %conv1 = trunc i64 %mul to i32, !dbg !218
  %conv2 = zext i32 %conv1 to i64, !dbg !218
  %call = call noalias i8* @malloc(i64 %conv2) #4, !dbg !219
  %call1 = ptrtoint i8* %call to i64
  %tmp = bitcast i8* %call to float**, !dbg !220
  call void @llvm.dbg.value(metadata float** %tmp, i64 0, metadata !221, metadata !110), !dbg !222
  %cmp = icmp eq float** %tmp, null, !dbg !223
  br i1 %cmp, label %if.then, label %if.end, !dbg !225

if.then:                                          ; preds = %entry
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i32 0, i32 0)), !dbg !226
  br label %return, !dbg !228

if.end:                                           ; preds = %entry
  %call7 = call float* @alloc_1d_dbl(i32 %n), !dbg !229
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !233, metadata !110), !dbg !234
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !233, metadata !110), !dbg !234
  br label %for.cond, !dbg !235

for.cond:                                         ; preds = %for.inc, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.inc ]
  %0 = icmp sgt i32 %m, 0, !dbg !236
  %smax3 = select i1 %0, i32 %m, i32 0, !dbg !236
  %1 = zext i32 %smax3 to i64, !dbg !236
  %2 = mul i64 8, %1, !dbg !236
  %3 = add i64 %call1, %2, !dbg !236
  %4 = icmp sgt i32 %m, 0, !dbg !236
  %smax2 = select i1 %4, i32 %m, i32 0, !dbg !236
  %5 = zext i32 %smax2 to i64, !dbg !236
  %6 = mul i64 8, %5, !dbg !236
  %7 = add i64 %call1, %6, !dbg !236
  %8 = icmp sgt i32 %m, 0, !dbg !236
  %smax = select i1 %8, i32 %m, i32 0, !dbg !236
  %9 = zext i32 %smax to i64, !dbg !236
  %10 = mul i64 8, %9, !dbg !236
  %11 = add i64 %call1, %10, !dbg !236
  %cmp5 = icmp slt i32 %i.0, %m, !dbg !236
  br i1 %cmp5, label %for.body, label %for.end, !dbg !237

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !238
  %arrayidx = getelementptr inbounds float*, float** %tmp, i64 %idxprom, !dbg !238
  store float* %call7, float** %arrayidx, align 8, !dbg !239
  br label %for.inc, !dbg !240

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !241
  br label %for.cond, !dbg !242

for.end:                                          ; preds = %for.cond
  br label %return, !dbg !243

return:                                           ; preds = %for.end, %if.then
  %retval.0 = phi float** [ null, %if.then ], [ %tmp, %for.end ]
  ret float** %retval.0, !dbg !244
}

; Function Attrs: nounwind uwtable
define i32 @bpnn_randomize_weights(float** %w, i32 %m, i32 %n) #0 {
entry:
  %call = call i32 @rand() #4, !dbg !245
  %call6 = call float @dpn1(), !dbg !252
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !253, metadata !110), !dbg !254
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !253, metadata !110), !dbg !254
  call void @llvm.dbg.value(metadata i32 %inc12, i64 0, metadata !255, metadata !110), !dbg !256
  call void @llvm.dbg.value(metadata float** %w, i64 0, metadata !257, metadata !110), !dbg !258
  call void @llvm.dbg.value(metadata i32 %m, i64 0, metadata !259, metadata !110), !dbg !260
  call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !261, metadata !110), !dbg !262
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !255, metadata !110), !dbg !256
  br label %for.cond, !dbg !263

for.cond:                                         ; preds = %for.inc.11, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc12, %for.inc.11 ]
  %cmp = icmp sle i32 %i.0, %m, !dbg !264
  br i1 %cmp, label %for.body, label %for.end.13, !dbg !265

for.body:                                         ; preds = %for.cond
  br label %for.cond.1, !dbg !266

for.cond.1:                                       ; preds = %for.inc, %for.body
  %j.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ]
  %cmp2 = icmp sle i32 %j.0, %n, !dbg !267
  br i1 %cmp2, label %for.body.3, label %for.end, !dbg !268

for.body.3:                                       ; preds = %for.cond.1
  %conv = sitofp i32 %call to float, !dbg !269
  %div = fdiv float %conv, 0x41E0000000000000, !dbg !270
  %idxprom = sext i32 %j.0 to i64, !dbg !271
  %idxprom4 = sext i32 %i.0 to i64, !dbg !271
  %arrayidx = getelementptr inbounds float*, float** %w, i64 %idxprom4, !dbg !271
  %tmp = load float*, float** %arrayidx, align 8, !dbg !271
  %arrayidx5 = getelementptr inbounds float, float* %tmp, i64 %idxprom, !dbg !271
  store float %div, float* %arrayidx5, align 4, !dbg !272
  %idxprom7 = sext i32 %j.0 to i64, !dbg !273
  %idxprom8 = sext i32 %i.0 to i64, !dbg !273
  %arrayidx9 = getelementptr inbounds float*, float** %w, i64 %idxprom8, !dbg !273
  %tmp1 = load float*, float** %arrayidx9, align 8, !dbg !273
  %arrayidx10 = getelementptr inbounds float, float* %tmp1, i64 %idxprom7, !dbg !273
  store float %call6, float* %arrayidx10, align 4, !dbg !274
  br label %for.inc, !dbg !275

for.inc:                                          ; preds = %for.body.3
  %inc = add nsw i32 %j.0, 1, !dbg !276
  br label %for.cond.1, !dbg !277

for.end:                                          ; preds = %for.cond.1
  br label %for.inc.11, !dbg !278

for.inc.11:                                       ; preds = %for.end
  %inc12 = add nsw i32 %i.0, 1, !dbg !279
  br label %for.cond, !dbg !280

for.end.13:                                       ; preds = %for.cond
  ret i32 undef, !dbg !281
}

; Function Attrs: nounwind uwtable
define i32 @bpnn_randomize_row(float* %w, i32 %m) #0 {
entry:
  %w1 = ptrtoint float* %w to i64
  %call = call i32 @rand() #4, !dbg !282
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !286, metadata !110), !dbg !287
  call void @llvm.dbg.value(metadata float* %w, i64 0, metadata !288, metadata !110), !dbg !289
  call void @llvm.dbg.value(metadata i32 %m, i64 0, metadata !290, metadata !110), !dbg !291
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !286, metadata !110), !dbg !287
  br label %for.cond, !dbg !292

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %0 = icmp ult float* %w, %w, !dbg !293
  %umin5 = select i1 %0, float* %w, float* %w, !dbg !293
  %1 = icmp sgt i32 %m, -1, !dbg !293
  %smax6 = select i1 %1, i32 %m, i32 -1, !dbg !293
  %2 = add i32 %smax6, 1, !dbg !293
  %3 = sext i32 %2 to i64, !dbg !293
  %4 = mul i64 4, %3, !dbg !293
  %5 = add i64 %w1, %4, !dbg !293
  %6 = icmp ugt i64 %5, %5, !dbg !293
  %umax7 = select i1 %6, i64 %5, i64 %5, !dbg !293
  %7 = icmp ult float* %w, %w, !dbg !293
  %umin2 = select i1 %7, float* %w, float* %w, !dbg !293
  %8 = icmp sgt i32 %m, -1, !dbg !293
  %smax3 = select i1 %8, i32 %m, i32 -1, !dbg !293
  %9 = add i32 %smax3, 1, !dbg !293
  %10 = sext i32 %9 to i64, !dbg !293
  %11 = mul i64 4, %10, !dbg !293
  %12 = add i64 %w1, %11, !dbg !293
  %13 = icmp ugt i64 %12, %12, !dbg !293
  %umax4 = select i1 %13, i64 %12, i64 %12, !dbg !293
  %14 = icmp ult float* %w, %w, !dbg !293
  %umin = select i1 %14, float* %w, float* %w, !dbg !293
  %15 = icmp sgt i32 %m, -1, !dbg !293
  %smax = select i1 %15, i32 %m, i32 -1, !dbg !293
  %16 = add i32 %smax, 1, !dbg !293
  %17 = sext i32 %16 to i64, !dbg !293
  %18 = mul i64 4, %17, !dbg !293
  %19 = add i64 %w1, %18, !dbg !293
  %20 = icmp ugt i64 %19, %19, !dbg !293
  %umax = select i1 %20, i64 %19, i64 %19, !dbg !293
  %cmp = icmp sle i32 %i.0, %m, !dbg !293
  br i1 %cmp, label %for.body, label %for.end, !dbg !294

for.body:                                         ; preds = %for.cond
  %conv = sitofp i32 %call to float, !dbg !295
  %div = fdiv float %conv, 0x41E0000000000000, !dbg !296
  %idxprom = sext i32 %i.0 to i64, !dbg !297
  %arrayidx = getelementptr inbounds float, float* %w, i64 %idxprom, !dbg !297
  store float %div, float* %arrayidx, align 4, !dbg !298
  %idxprom1 = sext i32 %i.0 to i64, !dbg !299
  %arrayidx2 = getelementptr inbounds float, float* %w, i64 %idxprom1, !dbg !299
  store float 0x3FB99999A0000000, float* %arrayidx2, align 4, !dbg !300
  br label %for.inc, !dbg !301

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !302
  br label %for.cond, !dbg !303

for.end:                                          ; preds = %for.cond
  ret i32 undef, !dbg !304
}

; Function Attrs: nounwind uwtable
define i32 @bpnn_zero_weights(float** %w, i32 %m, i32 %n) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !305, metadata !110), !dbg !306
  call void @llvm.dbg.value(metadata i32 %inc7, i64 0, metadata !307, metadata !110), !dbg !308
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !305, metadata !110), !dbg !306
  call void @llvm.dbg.value(metadata float** %w, i64 0, metadata !309, metadata !110), !dbg !310
  call void @llvm.dbg.value(metadata i32 %m, i64 0, metadata !311, metadata !110), !dbg !312
  call void @llvm.dbg.value(metadata i32 %n, i64 0, metadata !313, metadata !110), !dbg !314
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !307, metadata !110), !dbg !308
  br label %for.cond, !dbg !315

for.cond:                                         ; preds = %for.inc.6, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc7, %for.inc.6 ]
  %cmp = icmp sle i32 %i.0, %m, !dbg !317
  br i1 %cmp, label %for.body, label %for.end.8, !dbg !319

for.body:                                         ; preds = %for.cond
  br label %for.cond.1, !dbg !320

for.cond.1:                                       ; preds = %for.inc, %for.body
  %j.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ]
  %cmp2 = icmp sle i32 %j.0, %n, !dbg !323
  br i1 %cmp2, label %for.body.3, label %for.end, !dbg !325

for.body.3:                                       ; preds = %for.cond.1
  %idxprom = sext i32 %j.0 to i64, !dbg !326
  %idxprom4 = sext i32 %i.0 to i64, !dbg !326
  %arrayidx = getelementptr inbounds float*, float** %w, i64 %idxprom4, !dbg !326
  %tmp = load float*, float** %arrayidx, align 8, !dbg !326
  %arrayidx5 = getelementptr inbounds float, float* %tmp, i64 %idxprom, !dbg !326
  store float 0.000000e+00, float* %arrayidx5, align 4, !dbg !328
  br label %for.inc, !dbg !329

for.inc:                                          ; preds = %for.body.3
  %inc = add nsw i32 %j.0, 1, !dbg !330
  br label %for.cond.1, !dbg !331

for.end:                                          ; preds = %for.cond.1
  br label %for.inc.6, !dbg !332

for.inc.6:                                        ; preds = %for.end
  %inc7 = add nsw i32 %i.0, 1, !dbg !333
  br label %for.cond, !dbg !334

for.end.8:                                        ; preds = %for.cond
  ret i32 undef, !dbg !335
}

; Function Attrs: nounwind uwtable
define void @bpnn_initialize(i32 %seed) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %seed, i64 0, metadata !336, metadata !110), !dbg !337
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.3, i32 0, i32 0), i32 %seed), !dbg !338
  call void @srand(i32 %seed) #4, !dbg !339
  ret void, !dbg !340
}

; Function Attrs: nounwind
declare void @srand(i32) #2

; Function Attrs: nounwind uwtable
define %struct.BPNN* @bpnn_internal_create(i32 %n_in, i32 %n_hidden, i32 %n_out) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %n_in, i64 0, metadata !341, metadata !110), !dbg !342
  call void @llvm.dbg.value(metadata i32 %n_hidden, i64 0, metadata !343, metadata !110), !dbg !344
  call void @llvm.dbg.value(metadata i32 %n_out, i64 0, metadata !345, metadata !110), !dbg !346
  %call = call noalias i8* @malloc(i64 96) #4, !dbg !347
  %tmp = bitcast i8* %call to %struct.BPNN*, !dbg !348
  call void @llvm.dbg.value(metadata %struct.BPNN* %tmp, i64 0, metadata !349, metadata !110), !dbg !350
  %cmp = icmp eq %struct.BPNN* %tmp, null, !dbg !351
  br i1 %cmp, label %if.then, label %if.end, !dbg !353

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.4, i32 0, i32 0)), !dbg !354
  br label %return, !dbg !356

if.end:                                           ; preds = %entry
  %input_n = getelementptr inbounds %struct.BPNN, %struct.BPNN* %tmp, i32 0, i32 0, !dbg !357
  store i32 %n_in, i32* %input_n, align 4, !dbg !358
  %hidden_n = getelementptr inbounds %struct.BPNN, %struct.BPNN* %tmp, i32 0, i32 1, !dbg !359
  store i32 %n_hidden, i32* %hidden_n, align 4, !dbg !360
  %output_n = getelementptr inbounds %struct.BPNN, %struct.BPNN* %tmp, i32 0, i32 2, !dbg !361
  store i32 %n_out, i32* %output_n, align 4, !dbg !362
  %add = add nsw i32 %n_in, 1, !dbg !363
  %call2 = call float* @alloc_1d_dbl(i32 %add), !dbg !364
  %input_units = getelementptr inbounds %struct.BPNN, %struct.BPNN* %tmp, i32 0, i32 3, !dbg !365
  store float* %call2, float** %input_units, align 8, !dbg !366
  %add3 = add nsw i32 %n_hidden, 1, !dbg !367
  %call4 = call float* @alloc_1d_dbl(i32 %add3), !dbg !368
  %hidden_units = getelementptr inbounds %struct.BPNN, %struct.BPNN* %tmp, i32 0, i32 4, !dbg !369
  store float* %call4, float** %hidden_units, align 8, !dbg !370
  %add5 = add nsw i32 %n_out, 1, !dbg !371
  %call6 = call float* @alloc_1d_dbl(i32 %add5), !dbg !372
  %output_units = getelementptr inbounds %struct.BPNN, %struct.BPNN* %tmp, i32 0, i32 5, !dbg !373
  store float* %call6, float** %output_units, align 8, !dbg !374
  %add7 = add nsw i32 %n_hidden, 1, !dbg !375
  %call8 = call float* @alloc_1d_dbl(i32 %add7), !dbg !376
  %hidden_delta = getelementptr inbounds %struct.BPNN, %struct.BPNN* %tmp, i32 0, i32 6, !dbg !377
  store float* %call8, float** %hidden_delta, align 8, !dbg !378
  %add9 = add nsw i32 %n_out, 1, !dbg !379
  %call10 = call float* @alloc_1d_dbl(i32 %add9), !dbg !380
  %output_delta = getelementptr inbounds %struct.BPNN, %struct.BPNN* %tmp, i32 0, i32 7, !dbg !381
  store float* %call10, float** %output_delta, align 8, !dbg !382
  %add11 = add nsw i32 %n_out, 1, !dbg !383
  %call12 = call float* @alloc_1d_dbl(i32 %add11), !dbg !384
  %target = getelementptr inbounds %struct.BPNN, %struct.BPNN* %tmp, i32 0, i32 8, !dbg !385
  store float* %call12, float** %target, align 8, !dbg !386
  %add13 = add nsw i32 %n_in, 1, !dbg !387
  %add14 = add nsw i32 %n_hidden, 1, !dbg !388
  %call15 = call float** @alloc_2d_dbl(i32 %add13, i32 %add14), !dbg !389
  %input_weights = getelementptr inbounds %struct.BPNN, %struct.BPNN* %tmp, i32 0, i32 9, !dbg !390
  store float** %call15, float*** %input_weights, align 8, !dbg !391
  %add16 = add nsw i32 %n_hidden, 1, !dbg !392
  %add17 = add nsw i32 %n_out, 1, !dbg !393
  %call18 = call float** @alloc_2d_dbl(i32 %add16, i32 %add17), !dbg !394
  %hidden_weights = getelementptr inbounds %struct.BPNN, %struct.BPNN* %tmp, i32 0, i32 10, !dbg !395
  store float** %call18, float*** %hidden_weights, align 8, !dbg !396
  %add19 = add nsw i32 %n_in, 1, !dbg !397
  %add20 = add nsw i32 %n_hidden, 1, !dbg !398
  %call21 = call float** @alloc_2d_dbl(i32 %add19, i32 %add20), !dbg !399
  %input_prev_weights = getelementptr inbounds %struct.BPNN, %struct.BPNN* %tmp, i32 0, i32 11, !dbg !400
  store float** %call21, float*** %input_prev_weights, align 8, !dbg !401
  %add22 = add nsw i32 %n_hidden, 1, !dbg !402
  %add23 = add nsw i32 %n_out, 1, !dbg !403
  %call24 = call float** @alloc_2d_dbl(i32 %add22, i32 %add23), !dbg !404
  %hidden_prev_weights = getelementptr inbounds %struct.BPNN, %struct.BPNN* %tmp, i32 0, i32 12, !dbg !405
  store float** %call24, float*** %hidden_prev_weights, align 8, !dbg !406
  br label %return, !dbg !407

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi %struct.BPNN* [ null, %if.then ], [ %tmp, %if.end ]
  ret %struct.BPNN* %retval.0, !dbg !408
}

; Function Attrs: nounwind uwtable
define void @bpnn_free(%struct.BPNN* %net) #0 {
entry:
  %input_weights = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 9, !dbg !409
  %input_prev_weights = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 11, !dbg !413
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !414, metadata !110), !dbg !415
  call void @llvm.dbg.value(metadata %struct.BPNN* %net, i64 0, metadata !416, metadata !110), !dbg !417
  %input_n = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 0, !dbg !418
  %tmp = load i32, i32* %input_n, align 4, !dbg !418
  call void @llvm.dbg.value(metadata i32 %tmp, i64 0, metadata !419, metadata !110), !dbg !420
  %hidden_n = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 1, !dbg !421
  %tmp1 = load i32, i32* %hidden_n, align 4, !dbg !421
  call void @llvm.dbg.value(metadata i32 %tmp1, i64 0, metadata !422, metadata !110), !dbg !423
  %input_units = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 3, !dbg !424
  %tmp2 = load float*, float** %input_units, align 8, !dbg !424
  %tmp3 = bitcast float* %tmp2 to i8*, !dbg !425
  call void @free(i8* %tmp3) #4, !dbg !426
  %hidden_units = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 4, !dbg !427
  %tmp4 = load float*, float** %hidden_units, align 8, !dbg !427
  %tmp5 = bitcast float* %tmp4 to i8*, !dbg !428
  call void @free(i8* %tmp5) #4, !dbg !429
  %output_units = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 5, !dbg !430
  %tmp6 = load float*, float** %output_units, align 8, !dbg !430
  %tmp7 = bitcast float* %tmp6 to i8*, !dbg !431
  call void @free(i8* %tmp7) #4, !dbg !432
  %hidden_delta = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 6, !dbg !433
  %tmp8 = load float*, float** %hidden_delta, align 8, !dbg !433
  %tmp9 = bitcast float* %tmp8 to i8*, !dbg !434
  call void @free(i8* %tmp9) #4, !dbg !435
  %output_delta = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 7, !dbg !436
  %tmp10 = load float*, float** %output_delta, align 8, !dbg !436
  %tmp11 = bitcast float* %tmp10 to i8*, !dbg !437
  call void @free(i8* %tmp11) #4, !dbg !438
  %target = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 8, !dbg !439
  %tmp12 = load float*, float** %target, align 8, !dbg !439
  %tmp13 = bitcast float* %tmp12 to i8*, !dbg !440
  call void @free(i8* %tmp13) #4, !dbg !441
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !414, metadata !110), !dbg !415
  br label %for.cond, !dbg !442

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp sle i32 %i.0, %tmp, !dbg !443
  br i1 %cmp, label %for.body, label %for.end, !dbg !444

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !445
  %tmp14 = load float**, float*** %input_weights, align 8, !dbg !409
  %arrayidx = getelementptr inbounds float*, float** %tmp14, i64 %idxprom, !dbg !445
  %tmp15 = load float*, float** %arrayidx, align 8, !dbg !445
  %tmp16 = bitcast float* %tmp15 to i8*, !dbg !446
  call void @free(i8* %tmp16) #4, !dbg !447
  %idxprom1 = sext i32 %i.0 to i64, !dbg !448
  %tmp17 = load float**, float*** %input_prev_weights, align 8, !dbg !413
  %arrayidx2 = getelementptr inbounds float*, float** %tmp17, i64 %idxprom1, !dbg !448
  %tmp18 = load float*, float** %arrayidx2, align 8, !dbg !448
  %tmp19 = bitcast float* %tmp18 to i8*, !dbg !449
  call void @free(i8* %tmp19) #4, !dbg !450
  br label %for.inc, !dbg !451

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !452
  br label %for.cond, !dbg !453

for.end:                                          ; preds = %for.cond
  %hidden_weights = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 10, !dbg !454
  %hidden_prev_weights = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 12, !dbg !458
  call void @llvm.dbg.value(metadata i32 %inc13, i64 0, metadata !414, metadata !110), !dbg !415
  %input_weights3 = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 9, !dbg !459
  %tmp20 = load float**, float*** %input_weights3, align 8, !dbg !459
  %tmp21 = bitcast float** %tmp20 to i8*, !dbg !460
  call void @free(i8* %tmp21) #4, !dbg !461
  %input_prev_weights4 = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 11, !dbg !462
  %tmp22 = load float**, float*** %input_prev_weights4, align 8, !dbg !462
  %tmp23 = bitcast float** %tmp22 to i8*, !dbg !463
  call void @free(i8* %tmp23) #4, !dbg !464
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !414, metadata !110), !dbg !415
  br label %for.cond.5, !dbg !465

for.cond.5:                                       ; preds = %for.inc.12, %for.end
  %i.1 = phi i32 [ 0, %for.end ], [ %inc13, %for.inc.12 ]
  %cmp6 = icmp sle i32 %i.1, %tmp1, !dbg !466
  br i1 %cmp6, label %for.body.7, label %for.end.14, !dbg !467

for.body.7:                                       ; preds = %for.cond.5
  %idxprom8 = sext i32 %i.1 to i64, !dbg !468
  %tmp24 = load float**, float*** %hidden_weights, align 8, !dbg !454
  %arrayidx9 = getelementptr inbounds float*, float** %tmp24, i64 %idxprom8, !dbg !468
  %tmp25 = load float*, float** %arrayidx9, align 8, !dbg !468
  %tmp26 = bitcast float* %tmp25 to i8*, !dbg !469
  call void @free(i8* %tmp26) #4, !dbg !470
  %idxprom10 = sext i32 %i.1 to i64, !dbg !471
  %tmp27 = load float**, float*** %hidden_prev_weights, align 8, !dbg !458
  %arrayidx11 = getelementptr inbounds float*, float** %tmp27, i64 %idxprom10, !dbg !471
  %tmp28 = load float*, float** %arrayidx11, align 8, !dbg !471
  %tmp29 = bitcast float* %tmp28 to i8*, !dbg !472
  call void @free(i8* %tmp29) #4, !dbg !473
  br label %for.inc.12, !dbg !474

for.inc.12:                                       ; preds = %for.body.7
  %inc13 = add nsw i32 %i.1, 1, !dbg !475
  br label %for.cond.5, !dbg !476

for.end.14:                                       ; preds = %for.cond.5
  %hidden_weights15 = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 10, !dbg !477
  %tmp30 = load float**, float*** %hidden_weights15, align 8, !dbg !477
  %tmp31 = bitcast float** %tmp30 to i8*, !dbg !478
  call void @free(i8* %tmp31) #4, !dbg !479
  %hidden_prev_weights16 = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 12, !dbg !480
  %tmp32 = load float**, float*** %hidden_prev_weights16, align 8, !dbg !480
  %tmp33 = bitcast float** %tmp32 to i8*, !dbg !481
  call void @free(i8* %tmp33) #4, !dbg !482
  %tmp34 = bitcast %struct.BPNN* %net to i8*, !dbg !483
  call void @free(i8* %tmp34) #4, !dbg !484
  ret void, !dbg !485
}

; Function Attrs: nounwind
declare void @free(i8*) #2

; Function Attrs: nounwind uwtable
define %struct.BPNN* @bpnn_create(i32 %n_in, i32 %n_hidden, i32 %n_out) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %n_in, i64 0, metadata !486, metadata !110), !dbg !487
  call void @llvm.dbg.value(metadata i32 %n_hidden, i64 0, metadata !488, metadata !110), !dbg !489
  call void @llvm.dbg.value(metadata i32 %n_out, i64 0, metadata !490, metadata !110), !dbg !491
  %call = call %struct.BPNN* @bpnn_internal_create(i32 %n_in, i32 %n_hidden, i32 %n_out), !dbg !492
  call void @llvm.dbg.value(metadata %struct.BPNN* %call, i64 0, metadata !493, metadata !110), !dbg !494
  %input_weights = getelementptr inbounds %struct.BPNN, %struct.BPNN* %call, i32 0, i32 9, !dbg !495
  %tmp = load float**, float*** %input_weights, align 8, !dbg !495
  %call1 = call i32 @bpnn_randomize_weights(float** %tmp, i32 %n_in, i32 %n_hidden), !dbg !496
  %hidden_weights = getelementptr inbounds %struct.BPNN, %struct.BPNN* %call, i32 0, i32 10, !dbg !497
  %tmp1 = load float**, float*** %hidden_weights, align 8, !dbg !497
  %call2 = call i32 @bpnn_randomize_weights(float** %tmp1, i32 %n_hidden, i32 %n_out), !dbg !498
  %input_prev_weights = getelementptr inbounds %struct.BPNN, %struct.BPNN* %call, i32 0, i32 11, !dbg !499
  %tmp2 = load float**, float*** %input_prev_weights, align 8, !dbg !499
  %call3 = call i32 @bpnn_zero_weights(float** %tmp2, i32 %n_in, i32 %n_hidden), !dbg !500
  %hidden_prev_weights = getelementptr inbounds %struct.BPNN, %struct.BPNN* %call, i32 0, i32 12, !dbg !501
  %tmp3 = load float**, float*** %hidden_prev_weights, align 8, !dbg !501
  %call4 = call i32 @bpnn_zero_weights(float** %tmp3, i32 %n_hidden, i32 %n_out), !dbg !502
  %target = getelementptr inbounds %struct.BPNN, %struct.BPNN* %call, i32 0, i32 8, !dbg !503
  %tmp4 = load float*, float** %target, align 8, !dbg !503
  %call5 = call i32 @bpnn_randomize_row(float* %tmp4, i32 %n_out), !dbg !504
  ret %struct.BPNN* %call, !dbg !505
}

; Function Attrs: nounwind uwtable
define void @compareResults(float* %l2, float* %l2_gpu, i32 %n2) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !506, metadata !110), !dbg !507
  call void @llvm.dbg.value(metadata i32 %inc7, i64 0, metadata !508, metadata !110), !dbg !509
  call void @llvm.dbg.value(metadata float* %l2, i64 0, metadata !510, metadata !110), !dbg !511
  call void @llvm.dbg.value(metadata float* %l2_gpu, i64 0, metadata !512, metadata !110), !dbg !513
  call void @llvm.dbg.value(metadata i32 %n2, i64 0, metadata !514, metadata !110), !dbg !515
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !506, metadata !110), !dbg !507
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !508, metadata !110), !dbg !509
  %scevgep = getelementptr float, float* %l2, i64 1, !dbg !516
  %scevgep2 = getelementptr float, float* %l2, i64 1, !dbg !516
  %scevgep23 = ptrtoint float* %scevgep2 to i64
  %scevgep4 = getelementptr float, float* %l2_gpu, i64 1, !dbg !516
  %scevgep5 = getelementptr float, float* %l2_gpu, i64 1, !dbg !516
  %scevgep56 = ptrtoint float* %scevgep5 to i64
  %scevgep7 = getelementptr float, float* %l2, i64 1, !dbg !516
  %scevgep8 = getelementptr float, float* %l2, i64 1, !dbg !516
  %scevgep810 = ptrtoint float* %scevgep8 to i64
  %scevgep11 = getelementptr float, float* %l2_gpu, i64 1, !dbg !516
  %scevgep12 = getelementptr float, float* %l2_gpu, i64 1, !dbg !516
  %scevgep1213 = ptrtoint float* %scevgep12 to i64
  %scevgep14 = getelementptr float, float* %l2, i64 1, !dbg !516
  %scevgep15 = getelementptr float, float* %l2, i64 1, !dbg !516
  %scevgep1517 = ptrtoint float* %scevgep15 to i64
  %scevgep18 = getelementptr float, float* %l2_gpu, i64 1, !dbg !516
  %scevgep19 = getelementptr float, float* %l2_gpu, i64 1, !dbg !516
  %scevgep1920 = ptrtoint float* %scevgep19 to i64
  %scevgep21 = getelementptr float, float* %l2, i64 1, !dbg !516
  %scevgep22 = getelementptr float, float* %l2, i64 1, !dbg !516
  %scevgep2224 = ptrtoint float* %scevgep22 to i64
  %scevgep25 = getelementptr float, float* %l2_gpu, i64 1, !dbg !516
  %scevgep26 = getelementptr float, float* %l2_gpu, i64 1, !dbg !516
  %scevgep2627 = ptrtoint float* %scevgep26 to i64
  %scevgep28 = getelementptr float, float* %l2, i64 1, !dbg !516
  %scevgep29 = getelementptr float, float* %l2, i64 1, !dbg !516
  %scevgep2931 = ptrtoint float* %scevgep29 to i64
  %scevgep32 = getelementptr float, float* %l2_gpu, i64 1, !dbg !516
  %scevgep33 = getelementptr float, float* %l2_gpu, i64 1, !dbg !516
  %scevgep3334 = ptrtoint float* %scevgep33 to i64
  br label %for.cond, !dbg !516

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 1, %entry ], [ %inc7, %for.inc ]
  %fail.0 = phi i32 [ 0, %entry ], [ %fail.1, %for.inc ]
  %0 = icmp sgt i32 %n2, 0, !dbg !518
  %smax30 = select i1 %0, i32 %n2, i32 0, !dbg !518
  %1 = zext i32 %smax30 to i64, !dbg !518
  %2 = mul i64 4, %1, !dbg !518
  %3 = add i64 %scevgep2931, %2, !dbg !518
  %4 = add i64 %scevgep3334, %2, !dbg !518
  %5 = icmp sgt i32 %n2, 0, !dbg !518
  %smax23 = select i1 %5, i32 %n2, i32 0, !dbg !518
  %6 = zext i32 %smax23 to i64, !dbg !518
  %7 = mul i64 4, %6, !dbg !518
  %8 = add i64 %scevgep2224, %7, !dbg !518
  %9 = add i64 %scevgep2627, %7, !dbg !518
  %10 = icmp sgt i32 %n2, 0, !dbg !518
  %smax = select i1 %10, i32 %n2, i32 0, !dbg !518
  %11 = zext i32 %smax to i64, !dbg !518
  %12 = mul i64 4, %11, !dbg !518
  %13 = add i64 %scevgep23, %12, !dbg !518
  %14 = add i64 %scevgep56, %12, !dbg !518
  %cmp = icmp sle i32 %i.0, %n2, !dbg !518
  br i1 %cmp, label %for.body, label %for.end, !dbg !520

for.body:                                         ; preds = %for.cond
  %15 = icmp sgt i32 %n2, 0, !dbg !521
  %smax16 = select i1 %15, i32 %n2, i32 0, !dbg !521
  %16 = zext i32 %smax16 to i64, !dbg !521
  %17 = mul i64 4, %16, !dbg !521
  %18 = add i64 %scevgep1517, %17, !dbg !521
  %19 = add i64 %scevgep1920, %17, !dbg !521
  %20 = icmp sgt i32 %n2, 0, !dbg !521
  %smax9 = select i1 %20, i32 %n2, i32 0, !dbg !521
  %21 = zext i32 %smax9 to i64, !dbg !521
  %22 = mul i64 4, %21, !dbg !521
  %23 = add i64 %scevgep810, %22, !dbg !521
  %24 = add i64 %scevgep1213, %22, !dbg !521
  %idxprom = sext i32 %i.0 to i64, !dbg !521
  %arrayidx = getelementptr inbounds float, float* %l2, i64 %idxprom, !dbg !521
  %tmp = load float, float* %arrayidx, align 4, !dbg !521
  %conv = fpext float %tmp to double, !dbg !521
  %idxprom1 = sext i32 %i.0 to i64, !dbg !524
  %arrayidx2 = getelementptr inbounds float, float* %l2_gpu, i64 %idxprom1, !dbg !524
  %tmp1 = load float, float* %arrayidx2, align 4, !dbg !524
  %conv3 = fpext float %tmp1 to double, !dbg !524
  %call = call float @percentDiff(double %conv, double %conv3), !dbg !525
  %conv4 = fpext float %call to double, !dbg !525
  %cmp5 = fcmp ogt double %conv4, 0.000000e+00, !dbg !526
  br i1 %cmp5, label %if.then, label %if.end, !dbg !527

if.then:                                          ; preds = %for.body
  %inc = add nsw i32 %fail.0, 1, !dbg !528
  br label %if.end, !dbg !530

if.end:                                           ; preds = %if.then, %for.body
  %fail.1 = phi i32 [ %inc, %if.then ], [ %fail.0, %for.body ]
  br label %for.inc, !dbg !531

for.inc:                                          ; preds = %if.end
  %inc7 = add nsw i32 %i.0, 1, !dbg !532
  br label %for.cond, !dbg !533

for.end:                                          ; preds = %for.cond
  %fail.0.lcssa = phi i32 [ %fail.0, %for.cond ]
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.5, i32 0, i32 0), double 0.000000e+00, i32 %fail.0.lcssa), !dbg !534
  ret void, !dbg !535
}

; Function Attrs: nounwind uwtable
define void @bpnn_layerforward(float* %l1, float* %l2, float** %conn, i32 %n1, i32 %n2) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !536, metadata !110), !dbg !537
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !536, metadata !110), !dbg !537
  call void @llvm.dbg.value(metadata i32 %inc15, i64 0, metadata !538, metadata !110), !dbg !539
  call void @llvm.dbg.value(metadata float* %l1, i64 0, metadata !540, metadata !110), !dbg !541
  call void @llvm.dbg.value(metadata float* %l2, i64 0, metadata !542, metadata !110), !dbg !543
  call void @llvm.dbg.value(metadata float** %conn, i64 0, metadata !544, metadata !110), !dbg !545
  call void @llvm.dbg.value(metadata i32 %n1, i64 0, metadata !546, metadata !110), !dbg !547
  call void @llvm.dbg.value(metadata i32 %n2, i64 0, metadata !548, metadata !110), !dbg !549
  %l113 = ptrtoint float* %l1 to i64
  %add = add nsw i32 %n1, 1, !dbg !550
  %add1 = add nsw i32 %n2, 1, !dbg !551
  %mul = mul nsw i32 %add, %add1, !dbg !552
  %conv = sext i32 %mul to i64, !dbg !553
  %mul2 = mul i64 4, %conv, !dbg !554
  %call = call noalias i8* @malloc(i64 %mul2) #4, !dbg !555
  %tmp = bitcast i8* %call to float*, !dbg !556
  call void @llvm.dbg.value(metadata float* %tmp, i64 0, metadata !557, metadata !110), !dbg !558
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !538, metadata !110), !dbg !539
  br label %for.cond, !dbg !559

for.cond:                                         ; preds = %for.inc.14, %entry
  %j.0 = phi i32 [ 1, %entry ], [ %inc15, %for.inc.14 ]
  %cmp = icmp sle i32 %j.0, %n2, !dbg !561
  br i1 %cmp, label %for.body, label %for.end.16, !dbg !563

for.body:                                         ; preds = %for.cond
  br label %for.cond.4, !dbg !564

for.cond.4:                                       ; preds = %for.inc, %for.body
  %k.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ]
  %cmp5 = icmp sle i32 %k.0, %n1, !dbg !567
  br i1 %cmp5, label %for.body.7, label %for.end, !dbg !569

for.body.7:                                       ; preds = %for.cond.4
  %idxprom = sext i32 %j.0 to i64, !dbg !570
  %idxprom8 = sext i32 %k.0 to i64, !dbg !570
  %arrayidx = getelementptr inbounds float*, float** %conn, i64 %idxprom8, !dbg !570
  %tmp1 = load float*, float** %arrayidx, align 8, !dbg !570
  %arrayidx9 = getelementptr inbounds float, float* %tmp1, i64 %idxprom, !dbg !570
  %tmp2 = load float, float* %arrayidx9, align 4, !dbg !570
  %mul10 = mul nsw i32 %k.0, %n2, !dbg !572
  %add11 = add nsw i32 %mul10, %j.0, !dbg !573
  %idxprom12 = sext i32 %add11 to i64, !dbg !574
  %arrayidx13 = getelementptr inbounds float, float* %tmp, i64 %idxprom12, !dbg !574
  store float %tmp2, float* %arrayidx13, align 4, !dbg !575
  br label %for.inc, !dbg !576

for.inc:                                          ; preds = %for.body.7
  %inc = add nsw i32 %k.0, 1, !dbg !577
  br label %for.cond.4, !dbg !578

for.end:                                          ; preds = %for.cond.4
  br label %for.inc.14, !dbg !579

for.inc.14:                                       ; preds = %for.end
  %inc15 = add nsw i32 %j.0, 1, !dbg !580
  br label %for.cond, !dbg !581

for.end.16:                                       ; preds = %for.cond
  call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !582, metadata !110), !dbg !583
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !536, metadata !110), !dbg !537
  call void @llvm.dbg.value(metadata i32 %inc56, i64 0, metadata !538, metadata !110), !dbg !539
  call void @llvm.dbg.value(metadata float %add38, i64 0, metadata !582, metadata !110), !dbg !583
  call void @llvm.dbg.value(metadata float %mul45, i64 0, metadata !582, metadata !110), !dbg !583
  call void @llvm.dbg.value(metadata i32 %inc47, i64 0, metadata !536, metadata !110), !dbg !537
  %add17 = add nsw i32 %n2, 1, !dbg !584
  %conv18 = sext i32 %add17 to i64, !dbg !585
  %mul19 = mul i64 4, %conv18, !dbg !586
  %call20 = call noalias i8* @malloc(i64 %mul19) #4, !dbg !587
  %tmp3 = bitcast i8* %call20 to float*, !dbg !588
  call void @llvm.dbg.value(metadata float* %tmp3, i64 0, metadata !589, metadata !110), !dbg !590
  %arrayidx21 = getelementptr inbounds float, float* %l1, i64 0, !dbg !591
  store float 1.000000e+00, float* %arrayidx21, align 4, !dbg !592
  %call22 = call double @rtclock(), !dbg !593
  call void @llvm.dbg.value(metadata double %call22, i64 0, metadata !594, metadata !110), !dbg !595
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !538, metadata !110), !dbg !539
  %scevgep = getelementptr i8, i8* %call, i64 4, !dbg !596
  %scevgep18 = getelementptr i8, i8* %call20, i64 4, !dbg !596
  %scevgep19 = getelementptr i8, i8* %call20, i64 4, !dbg !596
  %scevgep1920 = ptrtoint i8* %scevgep19 to i64
  %scevgep24 = getelementptr i8, i8* %call, i64 4, !dbg !596
  %scevgep29 = getelementptr i8, i8* %call20, i64 4, !dbg !596
  %scevgep30 = getelementptr i8, i8* %call20, i64 4, !dbg !596
  %scevgep3031 = ptrtoint i8* %scevgep30 to i64
  %scevgep35 = getelementptr i8, i8* %call, i64 4, !dbg !596
  %scevgep43 = getelementptr i8, i8* %call, i64 4, !dbg !596
  %scevgep48 = getelementptr i8, i8* %call20, i64 4, !dbg !596
  %scevgep49 = getelementptr i8, i8* %call20, i64 4, !dbg !596
  %scevgep4950 = ptrtoint i8* %scevgep49 to i64
  %scevgep54 = getelementptr i8, i8* %call, i64 4, !dbg !596
  %scevgep59 = getelementptr i8, i8* %call20, i64 4, !dbg !596
  %scevgep60 = getelementptr i8, i8* %call20, i64 4, !dbg !596
  %scevgep6061 = ptrtoint i8* %scevgep60 to i64
  %scevgep65 = getelementptr i8, i8* %call, i64 4, !dbg !596
  %scevgep73 = getelementptr i8, i8* %call, i64 4, !dbg !596
  br label %for.cond.23, !dbg !596

for.cond.23:                                      ; preds = %for.inc.55, %for.end.16
  %j.1 = phi i32 [ 1, %for.end.16 ], [ %inc56, %for.inc.55 ]
  %0 = icmp ult float* %l1, %l1, !dbg !599
  %umin51 = select i1 %0, float* %l1, float* %l1, !dbg !599
  %1 = icmp sgt i32 %n1, -1, !dbg !599
  %smax52 = select i1 %1, i32 %n1, i32 -1, !dbg !599
  %2 = add i32 %smax52, 1, !dbg !599
  %3 = sext i32 %2 to i64, !dbg !599
  %4 = mul i64 4, %3, !dbg !599
  %5 = add i64 %l113, %4, !dbg !599
  %6 = icmp ugt i64 %5, %5, !dbg !599
  %umax53 = select i1 %6, i64 %5, i64 %5, !dbg !599
  %7 = icmp ult i8* %scevgep54, %scevgep54, !dbg !599
  %umin55 = select i1 %7, i8* %scevgep54, i8* %scevgep54, !dbg !599
  %8 = icmp sgt i32 %n2, 0, !dbg !599
  %smax56 = select i1 %8, i32 %n2, i32 0, !dbg !599
  %9 = mul i32 1, %smax56, !dbg !599
  %10 = add i32 1, %9, !dbg !599
  %11 = mul i32 %n2, %2, !dbg !599
  %12 = add i32 %10, %11, !dbg !599
  %13 = sext i32 %12 to i64, !dbg !599
  %14 = mul i64 4, %13, !dbg !599
  %scevgep57 = getelementptr i8, i8* %call, i64 %14, !dbg !599
  %15 = icmp ugt i8* %scevgep57, %scevgep57, !dbg !599
  %umax58 = select i1 %15, i8* %scevgep57, i8* %scevgep57, !dbg !599
  %16 = zext i32 %smax56 to i64, !dbg !599
  %17 = mul i64 4, %16, !dbg !599
  %18 = add i64 %scevgep6061, %17, !dbg !599
  %19 = icmp ult float* %l1, %l1, !dbg !599
  %umin40 = select i1 %19, float* %l1, float* %l1, !dbg !599
  %20 = icmp sgt i32 %n1, -1, !dbg !599
  %smax41 = select i1 %20, i32 %n1, i32 -1, !dbg !599
  %21 = add i32 %smax41, 1, !dbg !599
  %22 = sext i32 %21 to i64, !dbg !599
  %23 = mul i64 4, %22, !dbg !599
  %24 = add i64 %l113, %23, !dbg !599
  %25 = icmp ugt i64 %24, %24, !dbg !599
  %umax42 = select i1 %25, i64 %24, i64 %24, !dbg !599
  %26 = icmp ult i8* %scevgep43, %scevgep43, !dbg !599
  %umin44 = select i1 %26, i8* %scevgep43, i8* %scevgep43, !dbg !599
  %27 = icmp sgt i32 %n2, 0, !dbg !599
  %smax45 = select i1 %27, i32 %n2, i32 0, !dbg !599
  %28 = mul i32 1, %smax45, !dbg !599
  %29 = add i32 1, %28, !dbg !599
  %30 = mul i32 %n2, %21, !dbg !599
  %31 = add i32 %29, %30, !dbg !599
  %32 = sext i32 %31 to i64, !dbg !599
  %33 = mul i64 4, %32, !dbg !599
  %scevgep46 = getelementptr i8, i8* %call, i64 %33, !dbg !599
  %34 = icmp ugt i8* %scevgep46, %scevgep46, !dbg !599
  %umax47 = select i1 %34, i8* %scevgep46, i8* %scevgep46, !dbg !599
  %35 = zext i32 %smax45 to i64, !dbg !599
  %36 = mul i64 4, %35, !dbg !599
  %37 = add i64 %scevgep4950, %36, !dbg !599
  %38 = icmp ult float* %l1, %l1, !dbg !599
  %umin21 = select i1 %38, float* %l1, float* %l1, !dbg !599
  %39 = icmp sgt i32 %n1, -1, !dbg !599
  %smax22 = select i1 %39, i32 %n1, i32 -1, !dbg !599
  %40 = add i32 %smax22, 1, !dbg !599
  %41 = sext i32 %40 to i64, !dbg !599
  %42 = mul i64 4, %41, !dbg !599
  %43 = add i64 %l113, %42, !dbg !599
  %44 = icmp ugt i64 %43, %43, !dbg !599
  %umax23 = select i1 %44, i64 %43, i64 %43, !dbg !599
  %45 = icmp ult i8* %scevgep24, %scevgep24, !dbg !599
  %umin25 = select i1 %45, i8* %scevgep24, i8* %scevgep24, !dbg !599
  %46 = icmp sgt i32 %n2, 0, !dbg !599
  %smax26 = select i1 %46, i32 %n2, i32 0, !dbg !599
  %47 = mul i32 1, %smax26, !dbg !599
  %48 = add i32 1, %47, !dbg !599
  %49 = mul i32 %n2, %40, !dbg !599
  %50 = add i32 %48, %49, !dbg !599
  %51 = sext i32 %50 to i64, !dbg !599
  %52 = mul i64 4, %51, !dbg !599
  %scevgep27 = getelementptr i8, i8* %call, i64 %52, !dbg !599
  %53 = icmp ugt i8* %scevgep27, %scevgep27, !dbg !599
  %umax28 = select i1 %53, i8* %scevgep27, i8* %scevgep27, !dbg !599
  %54 = zext i32 %smax26 to i64, !dbg !599
  %55 = mul i64 4, %54, !dbg !599
  %56 = add i64 %scevgep3031, %55, !dbg !599
  %57 = icmp ult float* %l1, %l1, !dbg !599
  %umin = select i1 %57, float* %l1, float* %l1, !dbg !599
  %58 = icmp sgt i32 %n1, -1, !dbg !599
  %smax = select i1 %58, i32 %n1, i32 -1, !dbg !599
  %59 = add i32 %smax, 1, !dbg !599
  %60 = sext i32 %59 to i64, !dbg !599
  %61 = mul i64 4, %60, !dbg !599
  %62 = add i64 %l113, %61, !dbg !599
  %63 = icmp ugt i64 %62, %62, !dbg !599
  %umax = select i1 %63, i64 %62, i64 %62, !dbg !599
  %64 = icmp ult i8* %scevgep, %scevgep, !dbg !599
  %umin14 = select i1 %64, i8* %scevgep, i8* %scevgep, !dbg !599
  %65 = icmp sgt i32 %n2, 0, !dbg !599
  %smax15 = select i1 %65, i32 %n2, i32 0, !dbg !599
  %66 = mul i32 1, %smax15, !dbg !599
  %67 = add i32 1, %66, !dbg !599
  %68 = mul i32 %n2, %59, !dbg !599
  %69 = add i32 %67, %68, !dbg !599
  %70 = sext i32 %69 to i64, !dbg !599
  %71 = mul i64 4, %70, !dbg !599
  %scevgep16 = getelementptr i8, i8* %call, i64 %71, !dbg !599
  %72 = icmp ugt i8* %scevgep16, %scevgep16, !dbg !599
  %umax17 = select i1 %72, i8* %scevgep16, i8* %scevgep16, !dbg !599
  %73 = zext i32 %smax15 to i64, !dbg !599
  %74 = mul i64 4, %73, !dbg !599
  %75 = add i64 %scevgep1920, %74, !dbg !599
  %cmp24 = icmp sle i32 %j.1, %n2, !dbg !599
  br i1 %cmp24, label %for.body.26, label %for.end.57, !dbg !601

for.body.26:                                      ; preds = %for.cond.23
  br label %for.cond.27, !dbg !602

for.cond.27:                                      ; preds = %for.inc.46, %for.body.26
  %sum.0 = phi float [ 0.000000e+00, %for.body.26 ], [ %mul45, %for.inc.46 ]
  %k.1 = phi i32 [ 0, %for.body.26 ], [ %inc47, %for.inc.46 ]
  %76 = icmp ult float* %l1, %l1, !dbg !605
  %umin70 = select i1 %76, float* %l1, float* %l1, !dbg !605
  %77 = icmp sgt i32 %n1, -1, !dbg !605
  %smax71 = select i1 %77, i32 %n1, i32 -1, !dbg !605
  %78 = add i32 %smax71, 1, !dbg !605
  %79 = sext i32 %78 to i64, !dbg !605
  %80 = mul i64 4, %79, !dbg !605
  %81 = add i64 %l113, %80, !dbg !605
  %82 = icmp ugt i64 %81, %81, !dbg !605
  %umax72 = select i1 %82, i64 %81, i64 %81, !dbg !605
  %83 = icmp ult i8* %scevgep73, %scevgep73, !dbg !605
  %umin74 = select i1 %83, i8* %scevgep73, i8* %scevgep73, !dbg !605
  %84 = icmp sgt i32 %n2, 0, !dbg !605
  %smax75 = select i1 %84, i32 %n2, i32 0, !dbg !605
  %85 = mul i32 1, %smax75, !dbg !605
  %86 = add i32 1, %85, !dbg !605
  %87 = mul i32 %n2, %78, !dbg !605
  %88 = add i32 %86, %87, !dbg !605
  %89 = sext i32 %88 to i64, !dbg !605
  %90 = mul i64 4, %89, !dbg !605
  %scevgep76 = getelementptr i8, i8* %call, i64 %90, !dbg !605
  %91 = icmp ugt i8* %scevgep76, %scevgep76, !dbg !605
  %umax77 = select i1 %91, i8* %scevgep76, i8* %scevgep76, !dbg !605
  %92 = icmp ult float* %l1, %l1, !dbg !605
  %umin62 = select i1 %92, float* %l1, float* %l1, !dbg !605
  %93 = icmp sgt i32 %n1, -1, !dbg !605
  %smax63 = select i1 %93, i32 %n1, i32 -1, !dbg !605
  %94 = add i32 %smax63, 1, !dbg !605
  %95 = sext i32 %94 to i64, !dbg !605
  %96 = mul i64 4, %95, !dbg !605
  %97 = add i64 %l113, %96, !dbg !605
  %98 = icmp ugt i64 %97, %97, !dbg !605
  %umax64 = select i1 %98, i64 %97, i64 %97, !dbg !605
  %99 = icmp ult i8* %scevgep65, %scevgep65, !dbg !605
  %umin66 = select i1 %99, i8* %scevgep65, i8* %scevgep65, !dbg !605
  %100 = icmp sgt i32 %n2, 0, !dbg !605
  %smax67 = select i1 %100, i32 %n2, i32 0, !dbg !605
  %101 = mul i32 1, %smax67, !dbg !605
  %102 = add i32 1, %101, !dbg !605
  %103 = mul i32 %n2, %94, !dbg !605
  %104 = add i32 %102, %103, !dbg !605
  %105 = sext i32 %104 to i64, !dbg !605
  %106 = mul i64 4, %105, !dbg !605
  %scevgep68 = getelementptr i8, i8* %call, i64 %106, !dbg !605
  %107 = icmp ugt i8* %scevgep68, %scevgep68, !dbg !605
  %umax69 = select i1 %107, i8* %scevgep68, i8* %scevgep68, !dbg !605
  %108 = icmp ult float* %l1, %l1, !dbg !605
  %umin32 = select i1 %108, float* %l1, float* %l1, !dbg !605
  %109 = icmp sgt i32 %n1, -1, !dbg !605
  %smax33 = select i1 %109, i32 %n1, i32 -1, !dbg !605
  %110 = add i32 %smax33, 1, !dbg !605
  %111 = sext i32 %110 to i64, !dbg !605
  %112 = mul i64 4, %111, !dbg !605
  %113 = add i64 %l113, %112, !dbg !605
  %114 = icmp ugt i64 %113, %113, !dbg !605
  %umax34 = select i1 %114, i64 %113, i64 %113, !dbg !605
  %115 = icmp ult i8* %scevgep35, %scevgep35, !dbg !605
  %umin36 = select i1 %115, i8* %scevgep35, i8* %scevgep35, !dbg !605
  %116 = icmp sgt i32 %n2, 0, !dbg !605
  %smax37 = select i1 %116, i32 %n2, i32 0, !dbg !605
  %117 = mul i32 1, %smax37, !dbg !605
  %118 = add i32 1, %117, !dbg !605
  %119 = mul i32 %n2, %110, !dbg !605
  %120 = add i32 %118, %119, !dbg !605
  %121 = sext i32 %120 to i64, !dbg !605
  %122 = mul i64 4, %121, !dbg !605
  %scevgep38 = getelementptr i8, i8* %call, i64 %122, !dbg !605
  %123 = icmp ugt i8* %scevgep38, %scevgep38, !dbg !605
  %umax39 = select i1 %123, i8* %scevgep38, i8* %scevgep38, !dbg !605
  %cmp28 = icmp sle i32 %k.1, %n1, !dbg !605
  br i1 %cmp28, label %for.body.30, label %for.end.48, !dbg !607

for.body.30:                                      ; preds = %for.cond.27
  %mul31 = mul nsw i32 %k.1, %n2, !dbg !608
  %add32 = add nsw i32 %mul31, %j.1, !dbg !610
  %idxprom33 = sext i32 %add32 to i64, !dbg !611
  %arrayidx34 = getelementptr inbounds float, float* %tmp, i64 %idxprom33, !dbg !611
  %tmp4 = load float, float* %arrayidx34, align 4, !dbg !611
  %idxprom35 = sext i32 %k.1 to i64, !dbg !612
  %arrayidx36 = getelementptr inbounds float, float* %l1, i64 %idxprom35, !dbg !612
  %tmp5 = load float, float* %arrayidx36, align 4, !dbg !612
  %mul37 = fmul float %tmp4, %tmp5, !dbg !613
  %add38 = fadd float %sum.0, %mul37, !dbg !614
  %mul39 = mul nsw i32 %k.1, %n2, !dbg !615
  %add40 = add nsw i32 %mul39, %j.1, !dbg !616
  %idxprom41 = sext i32 %add40 to i64, !dbg !617
  %arrayidx42 = getelementptr inbounds float, float* %tmp, i64 %idxprom41, !dbg !617
  %tmp6 = load float, float* %arrayidx42, align 4, !dbg !617
  %idxprom43 = sext i32 %k.1 to i64, !dbg !618
  %arrayidx44 = getelementptr inbounds float, float* %l1, i64 %idxprom43, !dbg !618
  %tmp7 = load float, float* %arrayidx44, align 4, !dbg !618
  %mul45 = fmul float %tmp6, %tmp7, !dbg !619
  br label %for.inc.46, !dbg !620

for.inc.46:                                       ; preds = %for.body.30
  %inc47 = add nsw i32 %k.1, 1, !dbg !621
  br label %for.cond.27, !dbg !622

for.end.48:                                       ; preds = %for.cond.27
  %sum.0.lcssa = phi float [ %sum.0, %for.cond.27 ]
  %sub = fsub float -0.000000e+00, %sum.0.lcssa, !dbg !623
  %conv49 = fpext float %sub to double, !dbg !623
  %call50 = call double @exp(double %conv49) #4, !dbg !624
  %add51 = fadd double 1.000000e+00, %call50, !dbg !625
  %div = fdiv double 1.000000e+00, %add51, !dbg !626
  %conv52 = fptrunc double %div to float, !dbg !627
  %idxprom53 = sext i32 %j.1 to i64, !dbg !628
  %arrayidx54 = getelementptr inbounds float, float* %tmp3, i64 %idxprom53, !dbg !628
  store float %conv52, float* %arrayidx54, align 4, !dbg !629
  br label %for.inc.55, !dbg !630

for.inc.55:                                       ; preds = %for.end.48
  %inc56 = add nsw i32 %j.1, 1, !dbg !631
  br label %for.cond.23, !dbg !632

for.end.57:                                       ; preds = %for.cond.23
  call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !582, metadata !110), !dbg !583
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !536, metadata !110), !dbg !537
  call void @llvm.dbg.value(metadata i32 %inc86, i64 0, metadata !538, metadata !110), !dbg !539
  call void @llvm.dbg.value(metadata float %add77, i64 0, metadata !582, metadata !110), !dbg !583
  call void @llvm.dbg.value(metadata i32 %inc79, i64 0, metadata !536, metadata !110), !dbg !537
  %call58 = call double @rtclock(), !dbg !633
  call void @llvm.dbg.value(metadata double %call58, i64 0, metadata !634, metadata !110), !dbg !635
  %tmp8 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !636
  %sub59 = fsub double %call58, %call22, !dbg !637
  %call60 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp8, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i32 0, i32 0), double %sub59), !dbg !638
  %call61 = call double @rtclock(), !dbg !639
  call void @llvm.dbg.value(metadata double %call61, i64 0, metadata !594, metadata !110), !dbg !595
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !538, metadata !110), !dbg !539
  br label %for.cond.62, !dbg !640

for.cond.62:                                      ; preds = %for.inc.85, %for.end.57
  %j.2 = phi i32 [ 1, %for.end.57 ], [ %inc86, %for.inc.85 ]
  %cmp63 = icmp sle i32 %j.2, %n2, !dbg !642
  br i1 %cmp63, label %for.body.65, label %for.end.87, !dbg !644

for.body.65:                                      ; preds = %for.cond.62
  br label %for.cond.66, !dbg !645

for.cond.66:                                      ; preds = %for.inc.78, %for.body.65
  %sum.1 = phi float [ 0.000000e+00, %for.body.65 ], [ %add77, %for.inc.78 ]
  %k.2 = phi i32 [ 0, %for.body.65 ], [ %inc79, %for.inc.78 ]
  %cmp67 = icmp sle i32 %k.2, %n1, !dbg !648
  br i1 %cmp67, label %for.body.69, label %for.end.80, !dbg !650

for.body.69:                                      ; preds = %for.cond.66
  %idxprom70 = sext i32 %j.2 to i64, !dbg !651
  %idxprom71 = sext i32 %k.2 to i64, !dbg !651
  %arrayidx72 = getelementptr inbounds float*, float** %conn, i64 %idxprom71, !dbg !651
  %tmp9 = load float*, float** %arrayidx72, align 8, !dbg !651
  %arrayidx73 = getelementptr inbounds float, float* %tmp9, i64 %idxprom70, !dbg !651
  %tmp10 = load float, float* %arrayidx73, align 4, !dbg !651
  %idxprom74 = sext i32 %k.2 to i64, !dbg !653
  %arrayidx75 = getelementptr inbounds float, float* %l1, i64 %idxprom74, !dbg !653
  %tmp11 = load float, float* %arrayidx75, align 4, !dbg !653
  %mul76 = fmul float %tmp10, %tmp11, !dbg !654
  %add77 = fadd float %sum.1, %mul76, !dbg !655
  br label %for.inc.78, !dbg !656

for.inc.78:                                       ; preds = %for.body.69
  %inc79 = add nsw i32 %k.2, 1, !dbg !657
  br label %for.cond.66, !dbg !658

for.end.80:                                       ; preds = %for.cond.66
  %sum.1.lcssa = phi float [ %sum.1, %for.cond.66 ]
  %conv81 = fpext float %sum.1.lcssa to double, !dbg !659
  %call82 = call float @squash(double %conv81), !dbg !660
  %idxprom83 = sext i32 %j.2 to i64, !dbg !661
  %arrayidx84 = getelementptr inbounds float, float* %l2, i64 %idxprom83, !dbg !661
  store float %call82, float* %arrayidx84, align 4, !dbg !662
  br label %for.inc.85, !dbg !663

for.inc.85:                                       ; preds = %for.end.80
  %inc86 = add nsw i32 %j.2, 1, !dbg !664
  br label %for.cond.62, !dbg !665

for.end.87:                                       ; preds = %for.cond.62
  %call88 = call double @rtclock(), !dbg !666
  call void @llvm.dbg.value(metadata double %call88, i64 0, metadata !634, metadata !110), !dbg !635
  %tmp12 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !667
  %sub89 = fsub double %call88, %call61, !dbg !668
  %call90 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i32 0, i32 0), double %sub89), !dbg !669
  call void @compareResults(float* %l2, float* %tmp3, i32 %n2), !dbg !670
  %call91 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0)), !dbg !671
  ret void, !dbg !672
}

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define void @bpnn_output_error(float* %delta, float* %target, float* %output, i32 %nj, float* %err) #0 {
entry:
  call void @llvm.dbg.value(metadata float %add, i64 0, metadata !673, metadata !110), !dbg !674
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !675, metadata !110), !dbg !676
  call void @llvm.dbg.value(metadata float* %delta, i64 0, metadata !677, metadata !110), !dbg !678
  call void @llvm.dbg.value(metadata float* %target, i64 0, metadata !679, metadata !110), !dbg !680
  call void @llvm.dbg.value(metadata float* %output, i64 0, metadata !681, metadata !110), !dbg !682
  call void @llvm.dbg.value(metadata i32 %nj, i64 0, metadata !683, metadata !110), !dbg !684
  call void @llvm.dbg.value(metadata float* %err, i64 0, metadata !685, metadata !110), !dbg !686
  call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !673, metadata !110), !dbg !674
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !675, metadata !110), !dbg !676
  %scevgep = getelementptr float, float* %delta, i64 1, !dbg !687
  %scevgep9 = getelementptr float, float* %delta, i64 1, !dbg !687
  %scevgep910 = ptrtoint float* %scevgep9 to i64
  %scevgep14 = getelementptr float, float* %target, i64 1, !dbg !687
  %scevgep15 = getelementptr float, float* %target, i64 1, !dbg !687
  %scevgep1516 = ptrtoint float* %scevgep15 to i64
  %scevgep17 = getelementptr float, float* %output, i64 1, !dbg !687
  %scevgep19 = getelementptr float, float* %output, i64 1, !dbg !687
  %scevgep1920 = ptrtoint float* %scevgep19 to i64
  %scevgep22 = getelementptr float, float* %delta, i64 1, !dbg !687
  %scevgep27 = getelementptr float, float* %delta, i64 1, !dbg !687
  %scevgep2729 = ptrtoint float* %scevgep27 to i64
  %scevgep34 = getelementptr float, float* %target, i64 1, !dbg !687
  %scevgep35 = getelementptr float, float* %target, i64 1, !dbg !687
  %scevgep3536 = ptrtoint float* %scevgep35 to i64
  %scevgep37 = getelementptr float, float* %output, i64 1, !dbg !687
  %scevgep39 = getelementptr float, float* %output, i64 1, !dbg !687
  %scevgep3940 = ptrtoint float* %scevgep39 to i64
  %scevgep42 = getelementptr float, float* %delta, i64 1, !dbg !687
  %scevgep47 = getelementptr float, float* %delta, i64 1, !dbg !687
  %scevgep4749 = ptrtoint float* %scevgep47 to i64
  %scevgep54 = getelementptr float, float* %target, i64 1, !dbg !687
  %scevgep55 = getelementptr float, float* %target, i64 1, !dbg !687
  %scevgep5556 = ptrtoint float* %scevgep55 to i64
  %scevgep57 = getelementptr float, float* %output, i64 1, !dbg !687
  %scevgep59 = getelementptr float, float* %output, i64 1, !dbg !687
  %scevgep5960 = ptrtoint float* %scevgep59 to i64
  %scevgep62 = getelementptr float, float* %delta, i64 1, !dbg !687
  %scevgep67 = getelementptr float, float* %delta, i64 1, !dbg !687
  %scevgep6769 = ptrtoint float* %scevgep67 to i64
  %scevgep74 = getelementptr float, float* %target, i64 1, !dbg !687
  %scevgep75 = getelementptr float, float* %target, i64 1, !dbg !687
  %scevgep7576 = ptrtoint float* %scevgep75 to i64
  %scevgep77 = getelementptr float, float* %output, i64 1, !dbg !687
  %scevgep79 = getelementptr float, float* %output, i64 1, !dbg !687
  %scevgep7980 = ptrtoint float* %scevgep79 to i64
  %scevgep82 = getelementptr float, float* %delta, i64 1, !dbg !687
  %scevgep87 = getelementptr float, float* %delta, i64 1, !dbg !687
  %scevgep8789 = ptrtoint float* %scevgep87 to i64
  %scevgep94 = getelementptr float, float* %target, i64 1, !dbg !687
  %scevgep95 = getelementptr float, float* %target, i64 1, !dbg !687
  %scevgep9596 = ptrtoint float* %scevgep95 to i64
  %scevgep97 = getelementptr float, float* %output, i64 1, !dbg !687
  %scevgep99 = getelementptr float, float* %output, i64 1, !dbg !687
  %scevgep99100 = ptrtoint float* %scevgep99 to i64
  %scevgep102 = getelementptr float, float* %delta, i64 1, !dbg !687
  %scevgep107 = getelementptr float, float* %delta, i64 1, !dbg !687
  %scevgep107109 = ptrtoint float* %scevgep107 to i64
  %scevgep114 = getelementptr float, float* %target, i64 1, !dbg !687
  %scevgep115 = getelementptr float, float* %target, i64 1, !dbg !687
  %scevgep115116 = ptrtoint float* %scevgep115 to i64
  %scevgep117 = getelementptr float, float* %output, i64 1, !dbg !687
  %scevgep119 = getelementptr float, float* %output, i64 1, !dbg !687
  %scevgep119120 = ptrtoint float* %scevgep119 to i64
  br label %for.cond, !dbg !687

for.cond:                                         ; preds = %for.inc, %entry
  %j.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ]
  %errsum.0 = phi float [ 0.000000e+00, %entry ], [ %add, %for.inc ]
  %0 = icmp ult float* %scevgep102, %scevgep102, !dbg !689
  %umin103 = select i1 %0, float* %scevgep102, float* %scevgep102, !dbg !689
  %1 = icmp ult float* %scevgep102, %umin103, !dbg !689
  %umin104 = select i1 %1, float* %scevgep102, float* %umin103, !dbg !689
  %2 = icmp ult float* %scevgep102, %umin104, !dbg !689
  %umin105 = select i1 %2, float* %scevgep102, float* %umin104, !dbg !689
  %3 = icmp ult float* %scevgep102, %umin105, !dbg !689
  %umin106 = select i1 %3, float* %scevgep102, float* %umin105, !dbg !689
  %4 = icmp sgt i32 %nj, 0, !dbg !689
  %smax108 = select i1 %4, i32 %nj, i32 0, !dbg !689
  %5 = zext i32 %smax108 to i64, !dbg !689
  %6 = mul i64 4, %5, !dbg !689
  %7 = add i64 %scevgep107109, %6, !dbg !689
  %8 = icmp ugt i64 %7, %7, !dbg !689
  %umax110 = select i1 %8, i64 %7, i64 %7, !dbg !689
  %9 = icmp ugt i64 %7, %umax110, !dbg !689
  %umax111 = select i1 %9, i64 %7, i64 %umax110, !dbg !689
  %10 = icmp ugt i64 %7, %umax111, !dbg !689
  %umax112 = select i1 %10, i64 %7, i64 %umax111, !dbg !689
  %11 = icmp ugt i64 %7, %umax112, !dbg !689
  %umax113 = select i1 %11, i64 %7, i64 %umax112, !dbg !689
  %12 = mul i64 4, %5, !dbg !689
  %13 = add i64 %scevgep115116, %12, !dbg !689
  %14 = icmp ult float* %scevgep117, %scevgep117, !dbg !689
  %umin118 = select i1 %14, float* %scevgep117, float* %scevgep117, !dbg !689
  %15 = add i64 %scevgep119120, %12, !dbg !689
  %16 = icmp ugt i64 %15, %15, !dbg !689
  %umax121 = select i1 %16, i64 %15, i64 %15, !dbg !689
  %17 = icmp ult float* %scevgep82, %scevgep82, !dbg !689
  %umin83 = select i1 %17, float* %scevgep82, float* %scevgep82, !dbg !689
  %18 = icmp ult float* %scevgep82, %umin83, !dbg !689
  %umin84 = select i1 %18, float* %scevgep82, float* %umin83, !dbg !689
  %19 = icmp ult float* %scevgep82, %umin84, !dbg !689
  %umin85 = select i1 %19, float* %scevgep82, float* %umin84, !dbg !689
  %20 = icmp ult float* %scevgep82, %umin85, !dbg !689
  %umin86 = select i1 %20, float* %scevgep82, float* %umin85, !dbg !689
  %21 = icmp sgt i32 %nj, 0, !dbg !689
  %smax88 = select i1 %21, i32 %nj, i32 0, !dbg !689
  %22 = zext i32 %smax88 to i64, !dbg !689
  %23 = mul i64 4, %22, !dbg !689
  %24 = add i64 %scevgep8789, %23, !dbg !689
  %25 = icmp ugt i64 %24, %24, !dbg !689
  %umax90 = select i1 %25, i64 %24, i64 %24, !dbg !689
  %26 = icmp ugt i64 %24, %umax90, !dbg !689
  %umax91 = select i1 %26, i64 %24, i64 %umax90, !dbg !689
  %27 = icmp ugt i64 %24, %umax91, !dbg !689
  %umax92 = select i1 %27, i64 %24, i64 %umax91, !dbg !689
  %28 = icmp ugt i64 %24, %umax92, !dbg !689
  %umax93 = select i1 %28, i64 %24, i64 %umax92, !dbg !689
  %29 = mul i64 4, %22, !dbg !689
  %30 = add i64 %scevgep9596, %29, !dbg !689
  %31 = icmp ult float* %scevgep97, %scevgep97, !dbg !689
  %umin98 = select i1 %31, float* %scevgep97, float* %scevgep97, !dbg !689
  %32 = add i64 %scevgep99100, %29, !dbg !689
  %33 = icmp ugt i64 %32, %32, !dbg !689
  %umax101 = select i1 %33, i64 %32, i64 %32, !dbg !689
  %34 = icmp ult float* %scevgep, %scevgep, !dbg !689
  %umin = select i1 %34, float* %scevgep, float* %scevgep, !dbg !689
  %35 = icmp ult float* %scevgep, %umin, !dbg !689
  %umin6 = select i1 %35, float* %scevgep, float* %umin, !dbg !689
  %36 = icmp ult float* %scevgep, %umin6, !dbg !689
  %umin7 = select i1 %36, float* %scevgep, float* %umin6, !dbg !689
  %37 = icmp ult float* %scevgep, %umin7, !dbg !689
  %umin8 = select i1 %37, float* %scevgep, float* %umin7, !dbg !689
  %38 = icmp sgt i32 %nj, 0, !dbg !689
  %smax = select i1 %38, i32 %nj, i32 0, !dbg !689
  %39 = zext i32 %smax to i64, !dbg !689
  %40 = mul i64 4, %39, !dbg !689
  %41 = add i64 %scevgep910, %40, !dbg !689
  %42 = icmp ugt i64 %41, %41, !dbg !689
  %umax = select i1 %42, i64 %41, i64 %41, !dbg !689
  %43 = icmp ugt i64 %41, %umax, !dbg !689
  %umax11 = select i1 %43, i64 %41, i64 %umax, !dbg !689
  %44 = icmp ugt i64 %41, %umax11, !dbg !689
  %umax12 = select i1 %44, i64 %41, i64 %umax11, !dbg !689
  %45 = icmp ugt i64 %41, %umax12, !dbg !689
  %umax13 = select i1 %45, i64 %41, i64 %umax12, !dbg !689
  %46 = mul i64 4, %39, !dbg !689
  %47 = add i64 %scevgep1516, %46, !dbg !689
  %48 = icmp ult float* %scevgep17, %scevgep17, !dbg !689
  %umin18 = select i1 %48, float* %scevgep17, float* %scevgep17, !dbg !689
  %49 = add i64 %scevgep1920, %46, !dbg !689
  %50 = icmp ugt i64 %49, %49, !dbg !689
  %umax21 = select i1 %50, i64 %49, i64 %49, !dbg !689
  %cmp = icmp sle i32 %j.0, %nj, !dbg !689
  br i1 %cmp, label %for.body, label %for.end, !dbg !691

for.body:                                         ; preds = %for.cond
  %51 = icmp ult float* %scevgep62, %scevgep62, !dbg !692
  %umin63 = select i1 %51, float* %scevgep62, float* %scevgep62, !dbg !692
  %52 = icmp ult float* %scevgep62, %umin63, !dbg !692
  %umin64 = select i1 %52, float* %scevgep62, float* %umin63, !dbg !692
  %53 = icmp ult float* %scevgep62, %umin64, !dbg !692
  %umin65 = select i1 %53, float* %scevgep62, float* %umin64, !dbg !692
  %54 = icmp ult float* %scevgep62, %umin65, !dbg !692
  %umin66 = select i1 %54, float* %scevgep62, float* %umin65, !dbg !692
  %55 = icmp sgt i32 %nj, 0, !dbg !692
  %smax68 = select i1 %55, i32 %nj, i32 0, !dbg !692
  %56 = zext i32 %smax68 to i64, !dbg !692
  %57 = mul i64 4, %56, !dbg !692
  %58 = add i64 %scevgep6769, %57, !dbg !692
  %59 = icmp ugt i64 %58, %58, !dbg !692
  %umax70 = select i1 %59, i64 %58, i64 %58, !dbg !692
  %60 = icmp ugt i64 %58, %umax70, !dbg !692
  %umax71 = select i1 %60, i64 %58, i64 %umax70, !dbg !692
  %61 = icmp ugt i64 %58, %umax71, !dbg !692
  %umax72 = select i1 %61, i64 %58, i64 %umax71, !dbg !692
  %62 = icmp ugt i64 %58, %umax72, !dbg !692
  %umax73 = select i1 %62, i64 %58, i64 %umax72, !dbg !692
  %63 = mul i64 4, %56, !dbg !692
  %64 = add i64 %scevgep7576, %63, !dbg !692
  %65 = icmp ult float* %scevgep77, %scevgep77, !dbg !692
  %umin78 = select i1 %65, float* %scevgep77, float* %scevgep77, !dbg !692
  %66 = add i64 %scevgep7980, %63, !dbg !692
  %67 = icmp ugt i64 %66, %66, !dbg !692
  %umax81 = select i1 %67, i64 %66, i64 %66, !dbg !692
  %68 = icmp ult float* %scevgep42, %scevgep42, !dbg !692
  %umin43 = select i1 %68, float* %scevgep42, float* %scevgep42, !dbg !692
  %69 = icmp ult float* %scevgep42, %umin43, !dbg !692
  %umin44 = select i1 %69, float* %scevgep42, float* %umin43, !dbg !692
  %70 = icmp ult float* %scevgep42, %umin44, !dbg !692
  %umin45 = select i1 %70, float* %scevgep42, float* %umin44, !dbg !692
  %71 = icmp ult float* %scevgep42, %umin45, !dbg !692
  %umin46 = select i1 %71, float* %scevgep42, float* %umin45, !dbg !692
  %72 = icmp sgt i32 %nj, 0, !dbg !692
  %smax48 = select i1 %72, i32 %nj, i32 0, !dbg !692
  %73 = zext i32 %smax48 to i64, !dbg !692
  %74 = mul i64 4, %73, !dbg !692
  %75 = add i64 %scevgep4749, %74, !dbg !692
  %76 = icmp ugt i64 %75, %75, !dbg !692
  %umax50 = select i1 %76, i64 %75, i64 %75, !dbg !692
  %77 = icmp ugt i64 %75, %umax50, !dbg !692
  %umax51 = select i1 %77, i64 %75, i64 %umax50, !dbg !692
  %78 = icmp ugt i64 %75, %umax51, !dbg !692
  %umax52 = select i1 %78, i64 %75, i64 %umax51, !dbg !692
  %79 = icmp ugt i64 %75, %umax52, !dbg !692
  %umax53 = select i1 %79, i64 %75, i64 %umax52, !dbg !692
  %80 = mul i64 4, %73, !dbg !692
  %81 = add i64 %scevgep5556, %80, !dbg !692
  %82 = icmp ult float* %scevgep57, %scevgep57, !dbg !692
  %umin58 = select i1 %82, float* %scevgep57, float* %scevgep57, !dbg !692
  %83 = add i64 %scevgep5960, %80, !dbg !692
  %84 = icmp ugt i64 %83, %83, !dbg !692
  %umax61 = select i1 %84, i64 %83, i64 %83, !dbg !692
  %85 = icmp ult float* %scevgep22, %scevgep22, !dbg !692
  %umin23 = select i1 %85, float* %scevgep22, float* %scevgep22, !dbg !692
  %86 = icmp ult float* %scevgep22, %umin23, !dbg !692
  %umin24 = select i1 %86, float* %scevgep22, float* %umin23, !dbg !692
  %87 = icmp ult float* %scevgep22, %umin24, !dbg !692
  %umin25 = select i1 %87, float* %scevgep22, float* %umin24, !dbg !692
  %88 = icmp ult float* %scevgep22, %umin25, !dbg !692
  %umin26 = select i1 %88, float* %scevgep22, float* %umin25, !dbg !692
  %89 = icmp sgt i32 %nj, 0, !dbg !692
  %smax28 = select i1 %89, i32 %nj, i32 0, !dbg !692
  %90 = zext i32 %smax28 to i64, !dbg !692
  %91 = mul i64 4, %90, !dbg !692
  %92 = add i64 %scevgep2729, %91, !dbg !692
  %93 = icmp ugt i64 %92, %92, !dbg !692
  %umax30 = select i1 %93, i64 %92, i64 %92, !dbg !692
  %94 = icmp ugt i64 %92, %umax30, !dbg !692
  %umax31 = select i1 %94, i64 %92, i64 %umax30, !dbg !692
  %95 = icmp ugt i64 %92, %umax31, !dbg !692
  %umax32 = select i1 %95, i64 %92, i64 %umax31, !dbg !692
  %96 = icmp ugt i64 %92, %umax32, !dbg !692
  %umax33 = select i1 %96, i64 %92, i64 %umax32, !dbg !692
  %97 = mul i64 4, %90, !dbg !692
  %98 = add i64 %scevgep3536, %97, !dbg !692
  %99 = icmp ult float* %scevgep37, %scevgep37, !dbg !692
  %umin38 = select i1 %99, float* %scevgep37, float* %scevgep37, !dbg !692
  %100 = add i64 %scevgep3940, %97, !dbg !692
  %101 = icmp ugt i64 %100, %100, !dbg !692
  %umax41 = select i1 %101, i64 %100, i64 %100, !dbg !692
  %idxprom = sext i32 %j.0 to i64, !dbg !692
  %arrayidx = getelementptr inbounds float, float* %delta, i64 %idxprom, !dbg !692
  store float 1.000000e+00, float* %arrayidx, align 4, !dbg !694
  %idxprom1 = sext i32 %j.0 to i64, !dbg !695
  %arrayidx2 = getelementptr inbounds float, float* %output, i64 %idxprom1, !dbg !695
  %tmp = load float, float* %arrayidx2, align 4, !dbg !695
  %conv = fpext float %tmp to double, !dbg !695
  %sub = fsub double 1.000000e+00, %conv, !dbg !696
  %idxprom3 = sext i32 %j.0 to i64, !dbg !697
  %arrayidx4 = getelementptr inbounds float, float* %target, i64 %idxprom3, !dbg !697
  %tmp1 = load float, float* %arrayidx4, align 4, !dbg !697
  %idxprom5 = sext i32 %j.0 to i64, !dbg !698
  %arrayidx6 = getelementptr inbounds float, float* %output, i64 %idxprom5, !dbg !698
  %tmp2 = load float, float* %arrayidx6, align 4, !dbg !698
  %sub7 = fsub float %tmp1, %tmp2, !dbg !699
  %conv8 = fpext float %sub7 to double, !dbg !700
  %mul = fmul double %sub, %conv8, !dbg !701
  %conv9 = fptrunc double %mul to float, !dbg !702
  %idxprom10 = sext i32 %j.0 to i64, !dbg !703
  %arrayidx11 = getelementptr inbounds float, float* %delta, i64 %idxprom10, !dbg !703
  store float %conv9, float* %arrayidx11, align 4, !dbg !704
  %idxprom12 = sext i32 %j.0 to i64, !dbg !705
  %arrayidx13 = getelementptr inbounds float, float* %delta, i64 %idxprom12, !dbg !705
  %tmp3 = load float, float* %arrayidx13, align 4, !dbg !705
  %conv14 = fpext float %tmp3 to double, !dbg !705
  %cmp15 = fcmp ogt double %conv14, 0.000000e+00, !dbg !705
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !705

cond.true:                                        ; preds = %for.body
  %idxprom17 = sext i32 %j.0 to i64, !dbg !706
  %arrayidx18 = getelementptr inbounds float, float* %delta, i64 %idxprom17, !dbg !706
  %tmp4 = load float, float* %arrayidx18, align 4, !dbg !706
  br label %cond.end, !dbg !706

cond.false:                                       ; preds = %for.body
  %idxprom19 = sext i32 %j.0 to i64, !dbg !708
  %arrayidx20 = getelementptr inbounds float, float* %delta, i64 %idxprom19, !dbg !708
  %tmp5 = load float, float* %arrayidx20, align 4, !dbg !708
  %mul21 = fmul float -1.000000e+00, %tmp5, !dbg !708
  br label %cond.end, !dbg !708

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %tmp4, %cond.true ], [ %mul21, %cond.false ], !dbg !705
  %add = fadd float %errsum.0, %cond, !dbg !710
  br label %for.inc, !dbg !713

for.inc:                                          ; preds = %cond.end
  %inc = add nsw i32 %j.0, 1, !dbg !714
  br label %for.cond, !dbg !715

for.end:                                          ; preds = %for.cond
  %errsum.0.lcssa = phi float [ %errsum.0, %for.cond ]
  store float %errsum.0.lcssa, float* %err, align 4, !dbg !716
  ret void, !dbg !717
}

; Function Attrs: nounwind uwtable
define void @bpnn_hidden_error(float* %delta_h, i32 %nh, float* %delta_o, i32 %no, float** %who, float* %hidden, float* %err) #0 {
entry:
  call void @llvm.dbg.value(metadata float %tmp, i64 0, metadata !718, metadata !110), !dbg !719
  call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !720, metadata !110), !dbg !721
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !722, metadata !110), !dbg !723
  call void @llvm.dbg.value(metadata float %add27, i64 0, metadata !724, metadata !110), !dbg !725
  call void @llvm.dbg.value(metadata i32 %inc29, i64 0, metadata !726, metadata !110), !dbg !727
  call void @llvm.dbg.value(metadata float %add, i64 0, metadata !720, metadata !110), !dbg !721
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !722, metadata !110), !dbg !723
  call void @llvm.dbg.value(metadata float* %delta_h, i64 0, metadata !728, metadata !110), !dbg !729
  call void @llvm.dbg.value(metadata i32 %nh, i64 0, metadata !730, metadata !110), !dbg !731
  call void @llvm.dbg.value(metadata float* %delta_o, i64 0, metadata !732, metadata !110), !dbg !733
  call void @llvm.dbg.value(metadata i32 %no, i64 0, metadata !734, metadata !110), !dbg !735
  call void @llvm.dbg.value(metadata float** %who, i64 0, metadata !736, metadata !110), !dbg !737
  call void @llvm.dbg.value(metadata float* %hidden, i64 0, metadata !738, metadata !110), !dbg !739
  call void @llvm.dbg.value(metadata float* %err, i64 0, metadata !740, metadata !110), !dbg !741
  call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !724, metadata !110), !dbg !725
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !726, metadata !110), !dbg !727
  br label %for.cond, !dbg !742

for.cond:                                         ; preds = %for.inc.28, %entry
  %j.0 = phi i32 [ 1, %entry ], [ %inc29, %for.inc.28 ]
  %errsum.0 = phi float [ 0.000000e+00, %entry ], [ %add27, %for.inc.28 ]
  %cmp = icmp sle i32 %j.0, %nh, !dbg !744
  br i1 %cmp, label %for.body, label %for.end.30, !dbg !746

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %j.0 to i64, !dbg !747
  %arrayidx = getelementptr inbounds float, float* %hidden, i64 %idxprom, !dbg !747
  %tmp = load float, float* %arrayidx, align 4, !dbg !747
  br label %for.cond.1, !dbg !749

for.cond.1:                                       ; preds = %for.inc, %for.body
  %k.0 = phi i32 [ 1, %for.body ], [ %inc, %for.inc ]
  %sum.0 = phi float [ 0.000000e+00, %for.body ], [ %add, %for.inc ]
  %cmp2 = icmp sle i32 %k.0, %no, !dbg !751
  br i1 %cmp2, label %for.body.3, label %for.end, !dbg !753

for.body.3:                                       ; preds = %for.cond.1
  %idxprom4 = sext i32 %k.0 to i64, !dbg !754
  %arrayidx5 = getelementptr inbounds float, float* %delta_o, i64 %idxprom4, !dbg !754
  %tmp1 = load float, float* %arrayidx5, align 4, !dbg !754
  %idxprom6 = sext i32 %k.0 to i64, !dbg !756
  %idxprom7 = sext i32 %j.0 to i64, !dbg !756
  %arrayidx8 = getelementptr inbounds float*, float** %who, i64 %idxprom7, !dbg !756
  %tmp2 = load float*, float** %arrayidx8, align 8, !dbg !756
  %arrayidx9 = getelementptr inbounds float, float* %tmp2, i64 %idxprom6, !dbg !756
  %tmp3 = load float, float* %arrayidx9, align 4, !dbg !756
  %mul = fmul float %tmp1, %tmp3, !dbg !757
  %add = fadd float %sum.0, %mul, !dbg !758
  br label %for.inc, !dbg !759

for.inc:                                          ; preds = %for.body.3
  %inc = add nsw i32 %k.0, 1, !dbg !760
  br label %for.cond.1, !dbg !761

for.end:                                          ; preds = %for.cond.1
  %sum.0.lcssa = phi float [ %sum.0, %for.cond.1 ]
  %conv = fpext float %tmp to double, !dbg !762
  %conv10 = fpext float %tmp to double, !dbg !763
  %sub = fsub double 1.000000e+00, %conv10, !dbg !764
  %mul11 = fmul double %conv, %sub, !dbg !765
  %conv12 = fpext float %sum.0.lcssa to double, !dbg !766
  %mul13 = fmul double %mul11, %conv12, !dbg !767
  %conv14 = fptrunc double %mul13 to float, !dbg !762
  %idxprom15 = sext i32 %j.0 to i64, !dbg !768
  %arrayidx16 = getelementptr inbounds float, float* %delta_h, i64 %idxprom15, !dbg !768
  store float %conv14, float* %arrayidx16, align 4, !dbg !769
  %idxprom17 = sext i32 %j.0 to i64, !dbg !770
  %arrayidx18 = getelementptr inbounds float, float* %delta_h, i64 %idxprom17, !dbg !770
  %tmp4 = load float, float* %arrayidx18, align 4, !dbg !770
  %conv19 = fpext float %tmp4 to double, !dbg !770
  %cmp20 = fcmp ogt double %conv19, 0.000000e+00, !dbg !770
  br i1 %cmp20, label %cond.true, label %cond.false, !dbg !770

cond.true:                                        ; preds = %for.end
  %idxprom22 = sext i32 %j.0 to i64, !dbg !771
  %arrayidx23 = getelementptr inbounds float, float* %delta_h, i64 %idxprom22, !dbg !771
  %tmp5 = load float, float* %arrayidx23, align 4, !dbg !771
  br label %cond.end, !dbg !771

cond.false:                                       ; preds = %for.end
  %idxprom24 = sext i32 %j.0 to i64, !dbg !773
  %arrayidx25 = getelementptr inbounds float, float* %delta_h, i64 %idxprom24, !dbg !773
  %tmp6 = load float, float* %arrayidx25, align 4, !dbg !773
  %mul26 = fmul float -1.000000e+00, %tmp6, !dbg !773
  br label %cond.end, !dbg !773

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %tmp5, %cond.true ], [ %mul26, %cond.false ], !dbg !770
  %add27 = fadd float %errsum.0, %cond, !dbg !775
  br label %for.inc.28, !dbg !778

for.inc.28:                                       ; preds = %cond.end
  %inc29 = add nsw i32 %j.0, 1, !dbg !779
  br label %for.cond, !dbg !780

for.end.30:                                       ; preds = %for.cond
  %errsum.0.lcssa = phi float [ %errsum.0, %for.cond ]
  store float %errsum.0.lcssa, float* %err, align 4, !dbg !781
  ret void, !dbg !782
}

; Function Attrs: nounwind uwtable
define void @test(float* %delta_h, i32 %nh) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !783, metadata !110), !dbg !784
  call void @llvm.dbg.value(metadata float* %delta_h, i64 0, metadata !785, metadata !110), !dbg !786
  call void @llvm.dbg.value(metadata i32 %nh, i64 0, metadata !787, metadata !110), !dbg !788
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !783, metadata !110), !dbg !784
  %delta_h1 = ptrtoint float* %delta_h to i64
  br label %for.cond, !dbg !789

for.cond:                                         ; preds = %for.inc, %entry
  %j.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %0 = icmp sgt i32 %nh, 0, !dbg !791
  %smax3 = select i1 %0, i32 %nh, i32 0, !dbg !791
  %1 = zext i32 %smax3 to i64, !dbg !791
  %2 = mul i64 4, %1, !dbg !791
  %3 = add i64 %delta_h1, %2, !dbg !791
  %4 = icmp sgt i32 %nh, 0, !dbg !791
  %smax2 = select i1 %4, i32 %nh, i32 0, !dbg !791
  %5 = zext i32 %smax2 to i64, !dbg !791
  %6 = mul i64 4, %5, !dbg !791
  %7 = add i64 %delta_h1, %6, !dbg !791
  %8 = icmp sgt i32 %nh, 0, !dbg !791
  %smax = select i1 %8, i32 %nh, i32 0, !dbg !791
  %9 = zext i32 %smax to i64, !dbg !791
  %10 = mul i64 4, %9, !dbg !791
  %11 = add i64 %delta_h1, %10, !dbg !791
  %cmp = icmp slt i32 %j.0, %nh, !dbg !791
  br i1 %cmp, label %for.body, label %for.end, !dbg !793

for.body:                                         ; preds = %for.cond
  %conv = sitofp i32 %j.0 to float, !dbg !794
  %add = fadd float %conv, 1.000000e+00, !dbg !795
  %idxprom = sext i32 %j.0 to i64, !dbg !796
  %arrayidx = getelementptr inbounds float, float* %delta_h, i64 %idxprom, !dbg !796
  store float %add, float* %arrayidx, align 4, !dbg !797
  br label %for.inc, !dbg !796

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %j.0, 1, !dbg !798
  br label %for.cond, !dbg !799

for.end:                                          ; preds = %for.cond
  ret void, !dbg !800
}

; Function Attrs: nounwind uwtable
define void @compareResults2(float* %w_gpu, float** %w_cpu, float* %oldw_gpu, float** %oldw_cpu, i32 %ndelta, i32 %nly) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !801, metadata !110), !dbg !802
  call void @llvm.dbg.value(metadata i32 %inc31, i64 0, metadata !803, metadata !110), !dbg !804
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !805, metadata !110), !dbg !806
  call void @llvm.dbg.value(metadata i32 %inc27, i64 0, metadata !805, metadata !110), !dbg !806
  call void @llvm.dbg.value(metadata i32 %inc29, i64 0, metadata !801, metadata !110), !dbg !802
  call void @llvm.dbg.value(metadata float* %w_gpu, i64 0, metadata !807, metadata !110), !dbg !808
  call void @llvm.dbg.value(metadata float** %w_cpu, i64 0, metadata !809, metadata !110), !dbg !810
  call void @llvm.dbg.value(metadata float* %oldw_gpu, i64 0, metadata !811, metadata !110), !dbg !812
  call void @llvm.dbg.value(metadata float** %oldw_cpu, i64 0, metadata !813, metadata !110), !dbg !814
  call void @llvm.dbg.value(metadata i32 %ndelta, i64 0, metadata !815, metadata !110), !dbg !816
  call void @llvm.dbg.value(metadata i32 %nly, i64 0, metadata !817, metadata !110), !dbg !818
  call void @llvm.dbg.declare(metadata !2, metadata !819, metadata !110), !dbg !820
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !805, metadata !110), !dbg !806
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !803, metadata !110), !dbg !804
  br label %for.cond, !dbg !821

for.cond:                                         ; preds = %for.inc.30, %entry
  %fail.0 = phi i32 [ 0, %entry ], [ %fail.1.lcssa, %for.inc.30 ]
  %j.0 = phi i32 [ 1, %entry ], [ %inc31, %for.inc.30 ]
  %cmp = icmp sle i32 %j.0, %ndelta, !dbg !823
  br i1 %cmp, label %for.body, label %for.end.32, !dbg !825

for.body:                                         ; preds = %for.cond
  br label %for.cond.1, !dbg !826

for.cond.1:                                       ; preds = %for.inc, %for.body
  %fail.1 = phi i32 [ %fail.0, %for.body ], [ %fail.3, %for.inc ]
  %k.0 = phi i32 [ 0, %for.body ], [ %inc29, %for.inc ]
  %cmp2 = icmp sle i32 %k.0, %nly, !dbg !829
  br i1 %cmp2, label %for.body.3, label %for.end, !dbg !831

for.body.3:                                       ; preds = %for.cond.1
  %mul = mul nsw i32 %k.0, %ndelta, !dbg !832
  %add = add nsw i32 %mul, %j.0, !dbg !835
  %idxprom = sext i32 %add to i64, !dbg !836
  %arrayidx = getelementptr inbounds float, float* %w_gpu, i64 %idxprom, !dbg !836
  %tmp = load float, float* %arrayidx, align 4, !dbg !836
  %conv = fpext float %tmp to double, !dbg !836
  %idxprom4 = sext i32 %j.0 to i64, !dbg !837
  %idxprom5 = sext i32 %k.0 to i64, !dbg !837
  %arrayidx6 = getelementptr inbounds float*, float** %w_cpu, i64 %idxprom5, !dbg !837
  %tmp1 = load float*, float** %arrayidx6, align 8, !dbg !837
  %arrayidx7 = getelementptr inbounds float, float* %tmp1, i64 %idxprom4, !dbg !837
  %tmp2 = load float, float* %arrayidx7, align 4, !dbg !837
  %conv8 = fpext float %tmp2 to double, !dbg !837
  %call = call float @percentDiff(double %conv, double %conv8), !dbg !838
  %conv9 = fpext float %call to double, !dbg !838
  %cmp10 = fcmp ogt double %conv9, 0.000000e+00, !dbg !839
  br i1 %cmp10, label %if.then, label %if.end, !dbg !840

if.then:                                          ; preds = %for.body.3
  %inc = add nsw i32 %fail.1, 1, !dbg !841
  br label %if.end, !dbg !843

if.end:                                           ; preds = %if.then, %for.body.3
  %fail.2 = phi i32 [ %inc, %if.then ], [ %fail.1, %for.body.3 ]
  %mul12 = mul nsw i32 %k.0, %ndelta, !dbg !844
  %add13 = add nsw i32 %mul12, %j.0, !dbg !846
  %idxprom14 = sext i32 %add13 to i64, !dbg !847
  %arrayidx15 = getelementptr inbounds float, float* %oldw_gpu, i64 %idxprom14, !dbg !847
  %tmp3 = load float, float* %arrayidx15, align 4, !dbg !847
  %conv16 = fpext float %tmp3 to double, !dbg !847
  %idxprom17 = sext i32 %j.0 to i64, !dbg !848
  %idxprom18 = sext i32 %k.0 to i64, !dbg !848
  %arrayidx19 = getelementptr inbounds float*, float** %oldw_cpu, i64 %idxprom18, !dbg !848
  %tmp4 = load float*, float** %arrayidx19, align 8, !dbg !848
  %arrayidx20 = getelementptr inbounds float, float* %tmp4, i64 %idxprom17, !dbg !848
  %tmp5 = load float, float* %arrayidx20, align 4, !dbg !848
  %conv21 = fpext float %tmp5 to double, !dbg !848
  %call22 = call float @percentDiff(double %conv16, double %conv21), !dbg !849
  %conv23 = fpext float %call22 to double, !dbg !849
  %cmp24 = fcmp ogt double %conv23, 0.000000e+00, !dbg !850
  br i1 %cmp24, label %if.then.26, label %if.end.28, !dbg !851

if.then.26:                                       ; preds = %if.end
  %inc27 = add nsw i32 %fail.2, 1, !dbg !852
  br label %if.end.28, !dbg !854

if.end.28:                                        ; preds = %if.then.26, %if.end
  %fail.3 = phi i32 [ %inc27, %if.then.26 ], [ %fail.2, %if.end ]
  br label %for.inc, !dbg !855

for.inc:                                          ; preds = %if.end.28
  %inc29 = add nsw i32 %k.0, 1, !dbg !856
  br label %for.cond.1, !dbg !857

for.end:                                          ; preds = %for.cond.1
  %fail.1.lcssa = phi i32 [ %fail.1, %for.cond.1 ]
  br label %for.inc.30, !dbg !858

for.inc.30:                                       ; preds = %for.end
  %inc31 = add nsw i32 %j.0, 1, !dbg !859
  br label %for.cond, !dbg !860

for.end.32:                                       ; preds = %for.cond
  %fail.0.lcssa = phi i32 [ %fail.0, %for.cond ]
  %call33 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.5, i32 0, i32 0), double 0.000000e+00, i32 %fail.0.lcssa), !dbg !861
  ret void, !dbg !862
}

; Function Attrs: nounwind uwtable
define void @bpnn_adjust_weights(float* %delta, i32 %ndelta, float* %ly, i32 %nly, float** %w, float** %oldw) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !863, metadata !110), !dbg !864
  call void @llvm.dbg.value(metadata i32 %inc30, i64 0, metadata !865, metadata !110), !dbg !866
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !863, metadata !110), !dbg !864
  call void @llvm.dbg.value(metadata float* %delta, i64 0, metadata !867, metadata !110), !dbg !868
  call void @llvm.dbg.value(metadata i32 %ndelta, i64 0, metadata !869, metadata !110), !dbg !870
  call void @llvm.dbg.value(metadata float* %ly, i64 0, metadata !871, metadata !110), !dbg !872
  call void @llvm.dbg.value(metadata i32 %nly, i64 0, metadata !873, metadata !110), !dbg !874
  call void @llvm.dbg.value(metadata float** %w, i64 0, metadata !875, metadata !110), !dbg !876
  call void @llvm.dbg.value(metadata float** %oldw, i64 0, metadata !877, metadata !110), !dbg !878
  %ly24 = ptrtoint float* %ly to i64
  %arrayidx = getelementptr inbounds float, float* %ly, i64 0, !dbg !879
  store float 1.000000e+00, float* %arrayidx, align 4, !dbg !880
  %add = add nsw i32 %ndelta, 1, !dbg !881
  %add1 = add nsw i32 %nly, 1, !dbg !882
  %mul = mul nsw i32 %add, %add1, !dbg !883
  %conv = sext i32 %mul to i64, !dbg !884
  %mul2 = mul i64 4, %conv, !dbg !885
  %call = call noalias i8* @malloc(i64 %mul2) #4, !dbg !886
  %tmp = bitcast i8* %call to float*, !dbg !887
  call void @llvm.dbg.value(metadata float* %tmp, i64 0, metadata !888, metadata !110), !dbg !889
  %add3 = add nsw i32 %ndelta, 1, !dbg !890
  %add4 = add nsw i32 %nly, 1, !dbg !891
  %mul5 = mul nsw i32 %add3, %add4, !dbg !892
  %conv6 = sext i32 %mul5 to i64, !dbg !893
  %mul7 = mul i64 4, %conv6, !dbg !894
  %call8 = call noalias i8* @malloc(i64 %mul7) #4, !dbg !895
  %tmp1 = bitcast i8* %call8 to float*, !dbg !896
  call void @llvm.dbg.value(metadata float* %tmp1, i64 0, metadata !897, metadata !110), !dbg !898
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !865, metadata !110), !dbg !866
  br label %for.cond, !dbg !899

for.cond:                                         ; preds = %for.inc.29, %entry
  %j.0 = phi i32 [ 1, %entry ], [ %inc30, %for.inc.29 ]
  %cmp = icmp sle i32 %j.0, %ndelta, !dbg !901
  br i1 %cmp, label %for.body, label %for.end.31, !dbg !903

for.body:                                         ; preds = %for.cond
  br label %for.cond.10, !dbg !904

for.cond.10:                                      ; preds = %for.inc, %for.body
  %k.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ]
  %cmp11 = icmp sle i32 %k.0, %nly, !dbg !907
  br i1 %cmp11, label %for.body.13, label %for.end, !dbg !909

for.body.13:                                      ; preds = %for.cond.10
  %idxprom = sext i32 %j.0 to i64, !dbg !910
  %idxprom14 = sext i32 %k.0 to i64, !dbg !910
  %arrayidx15 = getelementptr inbounds float*, float** %w, i64 %idxprom14, !dbg !910
  %tmp2 = load float*, float** %arrayidx15, align 8, !dbg !910
  %arrayidx16 = getelementptr inbounds float, float* %tmp2, i64 %idxprom, !dbg !910
  %tmp3 = load float, float* %arrayidx16, align 4, !dbg !910
  %mul17 = mul nsw i32 %k.0, %ndelta, !dbg !912
  %add18 = add nsw i32 %mul17, %j.0, !dbg !913
  %idxprom19 = sext i32 %add18 to i64, !dbg !914
  %arrayidx20 = getelementptr inbounds float, float* %tmp, i64 %idxprom19, !dbg !914
  store float %tmp3, float* %arrayidx20, align 4, !dbg !915
  %idxprom21 = sext i32 %j.0 to i64, !dbg !916
  %idxprom22 = sext i32 %k.0 to i64, !dbg !916
  %arrayidx23 = getelementptr inbounds float*, float** %oldw, i64 %idxprom22, !dbg !916
  %tmp4 = load float*, float** %arrayidx23, align 8, !dbg !916
  %arrayidx24 = getelementptr inbounds float, float* %tmp4, i64 %idxprom21, !dbg !916
  %tmp5 = load float, float* %arrayidx24, align 4, !dbg !916
  %mul25 = mul nsw i32 %k.0, %ndelta, !dbg !917
  %add26 = add nsw i32 %mul25, %j.0, !dbg !918
  %idxprom27 = sext i32 %add26 to i64, !dbg !919
  %arrayidx28 = getelementptr inbounds float, float* %tmp1, i64 %idxprom27, !dbg !919
  store float %tmp5, float* %arrayidx28, align 4, !dbg !920
  br label %for.inc, !dbg !921

for.inc:                                          ; preds = %for.body.13
  %inc = add nsw i32 %k.0, 1, !dbg !922
  br label %for.cond.10, !dbg !923

for.end:                                          ; preds = %for.cond.10
  br label %for.inc.29, !dbg !924

for.inc.29:                                       ; preds = %for.end
  %inc30 = add nsw i32 %j.0, 1, !dbg !925
  br label %for.cond, !dbg !926

for.end.31:                                       ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !863, metadata !110), !dbg !864
  call void @llvm.dbg.value(metadata i32 %inc73, i64 0, metadata !865, metadata !110), !dbg !866
  call void @llvm.dbg.value(metadata float %conv59, i64 0, metadata !927, metadata !110), !dbg !928
  call void @llvm.dbg.value(metadata i32 %inc70, i64 0, metadata !863, metadata !110), !dbg !864
  %add32 = add nsw i32 %ndelta, 1, !dbg !929
  %add33 = add nsw i32 %nly, 1, !dbg !930
  %mul34 = mul nsw i32 %add32, %add33, !dbg !931
  call void @llvm.dbg.value(metadata i32 %mul34, i64 0, metadata !932, metadata !110), !dbg !933
  %call35 = call double @rtclock(), !dbg !934
  call void @llvm.dbg.value(metadata double %call35, i64 0, metadata !935, metadata !110), !dbg !936
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !865, metadata !110), !dbg !866
  %scevgep = getelementptr i8, i8* %call, i64 4, !dbg !937
  %scevgep21 = getelementptr float, float* %delta, i64 1, !dbg !937
  %scevgep22 = getelementptr float, float* %delta, i64 1, !dbg !937
  %scevgep2223 = ptrtoint float* %scevgep22 to i64
  %scevgep25 = getelementptr i8, i8* %call8, i64 4, !dbg !937
  %scevgep29 = getelementptr i8, i8* %call, i64 4, !dbg !937
  %scevgep35 = getelementptr float, float* %delta, i64 1, !dbg !937
  %scevgep36 = getelementptr float, float* %delta, i64 1, !dbg !937
  %scevgep3637 = ptrtoint float* %scevgep36 to i64
  %scevgep38 = getelementptr i8, i8* %call8, i64 4, !dbg !937
  %scevgep42 = getelementptr i8, i8* %call, i64 4, !dbg !937
  %scevgep48 = getelementptr float, float* %delta, i64 1, !dbg !937
  %scevgep49 = getelementptr float, float* %delta, i64 1, !dbg !937
  %scevgep4950 = ptrtoint float* %scevgep49 to i64
  %scevgep51 = getelementptr i8, i8* %call8, i64 4, !dbg !937
  %scevgep55 = getelementptr i8, i8* %call, i64 4, !dbg !937
  %scevgep61 = getelementptr float, float* %delta, i64 1, !dbg !937
  %scevgep62 = getelementptr float, float* %delta, i64 1, !dbg !937
  %scevgep6263 = ptrtoint float* %scevgep62 to i64
  %scevgep64 = getelementptr i8, i8* %call8, i64 4, !dbg !937
  %scevgep68 = getelementptr i8, i8* %call, i64 4, !dbg !937
  %scevgep74 = getelementptr float, float* %delta, i64 1, !dbg !937
  %scevgep75 = getelementptr float, float* %delta, i64 1, !dbg !937
  %scevgep7576 = ptrtoint float* %scevgep75 to i64
  %scevgep77 = getelementptr i8, i8* %call8, i64 4, !dbg !937
  %scevgep81 = getelementptr i8, i8* %call, i64 4, !dbg !937
  %scevgep87 = getelementptr float, float* %delta, i64 1, !dbg !937
  %scevgep88 = getelementptr float, float* %delta, i64 1, !dbg !937
  %scevgep8889 = ptrtoint float* %scevgep88 to i64
  %scevgep90 = getelementptr i8, i8* %call8, i64 4, !dbg !937
  %scevgep94 = getelementptr i8, i8* %call, i64 4, !dbg !937
  %scevgep100 = getelementptr float, float* %delta, i64 1, !dbg !937
  %scevgep101 = getelementptr float, float* %delta, i64 1, !dbg !937
  %scevgep101102 = ptrtoint float* %scevgep101 to i64
  %scevgep103 = getelementptr i8, i8* %call8, i64 4, !dbg !937
  br label %for.cond.36, !dbg !937

for.cond.36:                                      ; preds = %for.inc.72, %for.end.31
  %j.1 = phi i32 [ 1, %for.end.31 ], [ %inc73, %for.inc.72 ]
  %0 = icmp ult i8* %scevgep68, %scevgep68, !dbg !940
  %umin69 = select i1 %0, i8* %scevgep68, i8* %scevgep68, !dbg !940
  %1 = icmp sgt i32 %ndelta, 0, !dbg !940
  %smax70 = select i1 %1, i32 %ndelta, i32 0, !dbg !940
  %2 = mul i32 1, %smax70, !dbg !940
  %3 = add i32 1, %2, !dbg !940
  %4 = icmp sgt i32 %nly, -1, !dbg !940
  %smax71 = select i1 %4, i32 %nly, i32 -1, !dbg !940
  %5 = add i32 %smax71, 1, !dbg !940
  %6 = mul i32 %ndelta, %5, !dbg !940
  %7 = add i32 %3, %6, !dbg !940
  %8 = sext i32 %7 to i64, !dbg !940
  %9 = mul i64 4, %8, !dbg !940
  %scevgep72 = getelementptr i8, i8* %call, i64 %9, !dbg !940
  %10 = icmp ugt i8* %scevgep72, %scevgep72, !dbg !940
  %umax73 = select i1 %10, i8* %scevgep72, i8* %scevgep72, !dbg !940
  %11 = zext i32 %smax70 to i64, !dbg !940
  %12 = mul i64 4, %11, !dbg !940
  %13 = add i64 %scevgep7576, %12, !dbg !940
  %14 = sext i32 %5 to i64, !dbg !940
  %15 = mul i64 4, %14, !dbg !940
  %16 = add i64 %ly24, %15, !dbg !940
  %17 = icmp ult i8* %scevgep77, %scevgep77, !dbg !940
  %umin78 = select i1 %17, i8* %scevgep77, i8* %scevgep77, !dbg !940
  %scevgep79 = getelementptr i8, i8* %call8, i64 %9, !dbg !940
  %18 = icmp ugt i8* %scevgep79, %scevgep79, !dbg !940
  %umax80 = select i1 %18, i8* %scevgep79, i8* %scevgep79, !dbg !940
  %19 = icmp ult i8* %scevgep55, %scevgep55, !dbg !940
  %umin56 = select i1 %19, i8* %scevgep55, i8* %scevgep55, !dbg !940
  %20 = icmp sgt i32 %ndelta, 0, !dbg !940
  %smax57 = select i1 %20, i32 %ndelta, i32 0, !dbg !940
  %21 = mul i32 1, %smax57, !dbg !940
  %22 = add i32 1, %21, !dbg !940
  %23 = icmp sgt i32 %nly, -1, !dbg !940
  %smax58 = select i1 %23, i32 %nly, i32 -1, !dbg !940
  %24 = add i32 %smax58, 1, !dbg !940
  %25 = mul i32 %ndelta, %24, !dbg !940
  %26 = add i32 %22, %25, !dbg !940
  %27 = sext i32 %26 to i64, !dbg !940
  %28 = mul i64 4, %27, !dbg !940
  %scevgep59 = getelementptr i8, i8* %call, i64 %28, !dbg !940
  %29 = icmp ugt i8* %scevgep59, %scevgep59, !dbg !940
  %umax60 = select i1 %29, i8* %scevgep59, i8* %scevgep59, !dbg !940
  %30 = zext i32 %smax57 to i64, !dbg !940
  %31 = mul i64 4, %30, !dbg !940
  %32 = add i64 %scevgep6263, %31, !dbg !940
  %33 = sext i32 %24 to i64, !dbg !940
  %34 = mul i64 4, %33, !dbg !940
  %35 = add i64 %ly24, %34, !dbg !940
  %36 = icmp ult i8* %scevgep64, %scevgep64, !dbg !940
  %umin65 = select i1 %36, i8* %scevgep64, i8* %scevgep64, !dbg !940
  %scevgep66 = getelementptr i8, i8* %call8, i64 %28, !dbg !940
  %37 = icmp ugt i8* %scevgep66, %scevgep66, !dbg !940
  %umax67 = select i1 %37, i8* %scevgep66, i8* %scevgep66, !dbg !940
  %38 = icmp ult i8* %scevgep29, %scevgep29, !dbg !940
  %umin30 = select i1 %38, i8* %scevgep29, i8* %scevgep29, !dbg !940
  %39 = icmp sgt i32 %ndelta, 0, !dbg !940
  %smax31 = select i1 %39, i32 %ndelta, i32 0, !dbg !940
  %40 = mul i32 1, %smax31, !dbg !940
  %41 = add i32 1, %40, !dbg !940
  %42 = icmp sgt i32 %nly, -1, !dbg !940
  %smax32 = select i1 %42, i32 %nly, i32 -1, !dbg !940
  %43 = add i32 %smax32, 1, !dbg !940
  %44 = mul i32 %ndelta, %43, !dbg !940
  %45 = add i32 %41, %44, !dbg !940
  %46 = sext i32 %45 to i64, !dbg !940
  %47 = mul i64 4, %46, !dbg !940
  %scevgep33 = getelementptr i8, i8* %call, i64 %47, !dbg !940
  %48 = icmp ugt i8* %scevgep33, %scevgep33, !dbg !940
  %umax34 = select i1 %48, i8* %scevgep33, i8* %scevgep33, !dbg !940
  %49 = zext i32 %smax31 to i64, !dbg !940
  %50 = mul i64 4, %49, !dbg !940
  %51 = add i64 %scevgep3637, %50, !dbg !940
  %52 = sext i32 %43 to i64, !dbg !940
  %53 = mul i64 4, %52, !dbg !940
  %54 = add i64 %ly24, %53, !dbg !940
  %55 = icmp ult i8* %scevgep38, %scevgep38, !dbg !940
  %umin39 = select i1 %55, i8* %scevgep38, i8* %scevgep38, !dbg !940
  %scevgep40 = getelementptr i8, i8* %call8, i64 %47, !dbg !940
  %56 = icmp ugt i8* %scevgep40, %scevgep40, !dbg !940
  %umax41 = select i1 %56, i8* %scevgep40, i8* %scevgep40, !dbg !940
  %57 = icmp ult i8* %scevgep, %scevgep, !dbg !940
  %umin = select i1 %57, i8* %scevgep, i8* %scevgep, !dbg !940
  %58 = icmp sgt i32 %ndelta, 0, !dbg !940
  %smax = select i1 %58, i32 %ndelta, i32 0, !dbg !940
  %59 = mul i32 1, %smax, !dbg !940
  %60 = add i32 1, %59, !dbg !940
  %61 = icmp sgt i32 %nly, -1, !dbg !940
  %smax19 = select i1 %61, i32 %nly, i32 -1, !dbg !940
  %62 = add i32 %smax19, 1, !dbg !940
  %63 = mul i32 %ndelta, %62, !dbg !940
  %64 = add i32 %60, %63, !dbg !940
  %65 = sext i32 %64 to i64, !dbg !940
  %66 = mul i64 4, %65, !dbg !940
  %scevgep20 = getelementptr i8, i8* %call, i64 %66, !dbg !940
  %67 = icmp ugt i8* %scevgep20, %scevgep20, !dbg !940
  %umax = select i1 %67, i8* %scevgep20, i8* %scevgep20, !dbg !940
  %68 = zext i32 %smax to i64, !dbg !940
  %69 = mul i64 4, %68, !dbg !940
  %70 = add i64 %scevgep2223, %69, !dbg !940
  %71 = sext i32 %62 to i64, !dbg !940
  %72 = mul i64 4, %71, !dbg !940
  %73 = add i64 %ly24, %72, !dbg !940
  %74 = icmp ult i8* %scevgep25, %scevgep25, !dbg !940
  %umin26 = select i1 %74, i8* %scevgep25, i8* %scevgep25, !dbg !940
  %scevgep27 = getelementptr i8, i8* %call8, i64 %66, !dbg !940
  %75 = icmp ugt i8* %scevgep27, %scevgep27, !dbg !940
  %umax28 = select i1 %75, i8* %scevgep27, i8* %scevgep27, !dbg !940
  %cmp37 = icmp sle i32 %j.1, %ndelta, !dbg !940
  br i1 %cmp37, label %for.body.39, label %for.end.74, !dbg !942

for.body.39:                                      ; preds = %for.cond.36
  br label %for.cond.40, !dbg !943

for.cond.40:                                      ; preds = %for.inc.69, %for.body.39
  %k.1 = phi i32 [ 0, %for.body.39 ], [ %inc70, %for.inc.69 ]
  %76 = icmp ult i8* %scevgep94, %scevgep94, !dbg !946
  %umin95 = select i1 %76, i8* %scevgep94, i8* %scevgep94, !dbg !946
  %77 = icmp sgt i32 %ndelta, 0, !dbg !946
  %smax96 = select i1 %77, i32 %ndelta, i32 0, !dbg !946
  %78 = mul i32 1, %smax96, !dbg !946
  %79 = add i32 1, %78, !dbg !946
  %80 = icmp sgt i32 %nly, -1, !dbg !946
  %smax97 = select i1 %80, i32 %nly, i32 -1, !dbg !946
  %81 = add i32 %smax97, 1, !dbg !946
  %82 = mul i32 %ndelta, %81, !dbg !946
  %83 = add i32 %79, %82, !dbg !946
  %84 = sext i32 %83 to i64, !dbg !946
  %85 = mul i64 4, %84, !dbg !946
  %scevgep98 = getelementptr i8, i8* %call, i64 %85, !dbg !946
  %86 = icmp ugt i8* %scevgep98, %scevgep98, !dbg !946
  %umax99 = select i1 %86, i8* %scevgep98, i8* %scevgep98, !dbg !946
  %87 = zext i32 %smax96 to i64, !dbg !946
  %88 = mul i64 4, %87, !dbg !946
  %89 = add i64 %scevgep101102, %88, !dbg !946
  %90 = sext i32 %81 to i64, !dbg !946
  %91 = mul i64 4, %90, !dbg !946
  %92 = add i64 %ly24, %91, !dbg !946
  %93 = icmp ult i8* %scevgep103, %scevgep103, !dbg !946
  %umin104 = select i1 %93, i8* %scevgep103, i8* %scevgep103, !dbg !946
  %scevgep105 = getelementptr i8, i8* %call8, i64 %85, !dbg !946
  %94 = icmp ugt i8* %scevgep105, %scevgep105, !dbg !946
  %umax106 = select i1 %94, i8* %scevgep105, i8* %scevgep105, !dbg !946
  %95 = icmp ult i8* %scevgep81, %scevgep81, !dbg !946
  %umin82 = select i1 %95, i8* %scevgep81, i8* %scevgep81, !dbg !946
  %96 = icmp sgt i32 %ndelta, 0, !dbg !946
  %smax83 = select i1 %96, i32 %ndelta, i32 0, !dbg !946
  %97 = mul i32 1, %smax83, !dbg !946
  %98 = add i32 1, %97, !dbg !946
  %99 = icmp sgt i32 %nly, -1, !dbg !946
  %smax84 = select i1 %99, i32 %nly, i32 -1, !dbg !946
  %100 = add i32 %smax84, 1, !dbg !946
  %101 = mul i32 %ndelta, %100, !dbg !946
  %102 = add i32 %98, %101, !dbg !946
  %103 = sext i32 %102 to i64, !dbg !946
  %104 = mul i64 4, %103, !dbg !946
  %scevgep85 = getelementptr i8, i8* %call, i64 %104, !dbg !946
  %105 = icmp ugt i8* %scevgep85, %scevgep85, !dbg !946
  %umax86 = select i1 %105, i8* %scevgep85, i8* %scevgep85, !dbg !946
  %106 = zext i32 %smax83 to i64, !dbg !946
  %107 = mul i64 4, %106, !dbg !946
  %108 = add i64 %scevgep8889, %107, !dbg !946
  %109 = sext i32 %100 to i64, !dbg !946
  %110 = mul i64 4, %109, !dbg !946
  %111 = add i64 %ly24, %110, !dbg !946
  %112 = icmp ult i8* %scevgep90, %scevgep90, !dbg !946
  %umin91 = select i1 %112, i8* %scevgep90, i8* %scevgep90, !dbg !946
  %scevgep92 = getelementptr i8, i8* %call8, i64 %104, !dbg !946
  %113 = icmp ugt i8* %scevgep92, %scevgep92, !dbg !946
  %umax93 = select i1 %113, i8* %scevgep92, i8* %scevgep92, !dbg !946
  %114 = icmp ult i8* %scevgep42, %scevgep42, !dbg !946
  %umin43 = select i1 %114, i8* %scevgep42, i8* %scevgep42, !dbg !946
  %115 = icmp sgt i32 %ndelta, 0, !dbg !946
  %smax44 = select i1 %115, i32 %ndelta, i32 0, !dbg !946
  %116 = mul i32 1, %smax44, !dbg !946
  %117 = add i32 1, %116, !dbg !946
  %118 = icmp sgt i32 %nly, -1, !dbg !946
  %smax45 = select i1 %118, i32 %nly, i32 -1, !dbg !946
  %119 = add i32 %smax45, 1, !dbg !946
  %120 = mul i32 %ndelta, %119, !dbg !946
  %121 = add i32 %117, %120, !dbg !946
  %122 = sext i32 %121 to i64, !dbg !946
  %123 = mul i64 4, %122, !dbg !946
  %scevgep46 = getelementptr i8, i8* %call, i64 %123, !dbg !946
  %124 = icmp ugt i8* %scevgep46, %scevgep46, !dbg !946
  %umax47 = select i1 %124, i8* %scevgep46, i8* %scevgep46, !dbg !946
  %125 = zext i32 %smax44 to i64, !dbg !946
  %126 = mul i64 4, %125, !dbg !946
  %127 = add i64 %scevgep4950, %126, !dbg !946
  %128 = sext i32 %119 to i64, !dbg !946
  %129 = mul i64 4, %128, !dbg !946
  %130 = add i64 %ly24, %129, !dbg !946
  %131 = icmp ult i8* %scevgep51, %scevgep51, !dbg !946
  %umin52 = select i1 %131, i8* %scevgep51, i8* %scevgep51, !dbg !946
  %scevgep53 = getelementptr i8, i8* %call8, i64 %123, !dbg !946
  %132 = icmp ugt i8* %scevgep53, %scevgep53, !dbg !946
  %umax54 = select i1 %132, i8* %scevgep53, i8* %scevgep53, !dbg !946
  %cmp41 = icmp sle i32 %k.1, %nly, !dbg !946
  br i1 %cmp41, label %for.body.43, label %for.end.71, !dbg !948

for.body.43:                                      ; preds = %for.cond.40
  %idxprom44 = sext i32 %j.1 to i64, !dbg !949
  %arrayidx45 = getelementptr inbounds float, float* %delta, i64 %idxprom44, !dbg !949
  %tmp6 = load float, float* %arrayidx45, align 4, !dbg !949
  %conv46 = fpext float %tmp6 to double, !dbg !949
  %mul47 = fmul double 3.000000e-01, %conv46, !dbg !951
  %idxprom48 = sext i32 %k.1 to i64, !dbg !952
  %arrayidx49 = getelementptr inbounds float, float* %ly, i64 %idxprom48, !dbg !952
  %tmp7 = load float, float* %arrayidx49, align 4, !dbg !952
  %conv50 = fpext float %tmp7 to double, !dbg !952
  %mul51 = fmul double %mul47, %conv50, !dbg !953
  %mul52 = mul nsw i32 %k.1, %ndelta, !dbg !954
  %add53 = add nsw i32 %mul52, %j.1, !dbg !955
  %idxprom54 = sext i32 %add53 to i64, !dbg !956
  %arrayidx55 = getelementptr inbounds float, float* %tmp1, i64 %idxprom54, !dbg !956
  %tmp8 = load float, float* %arrayidx55, align 4, !dbg !956
  %conv56 = fpext float %tmp8 to double, !dbg !956
  %mul57 = fmul double 3.000000e-01, %conv56, !dbg !957
  %add58 = fadd double %mul51, %mul57, !dbg !958
  %conv59 = fptrunc double %add58 to float, !dbg !959
  %mul60 = mul nsw i32 %k.1, %ndelta, !dbg !960
  %add61 = add nsw i32 %mul60, %j.1, !dbg !961
  %idxprom62 = sext i32 %add61 to i64, !dbg !962
  %arrayidx63 = getelementptr inbounds float, float* %tmp, i64 %idxprom62, !dbg !962
  %tmp9 = load float, float* %arrayidx63, align 4, !dbg !963
  %add64 = fadd float %tmp9, %conv59, !dbg !963
  store float %add64, float* %arrayidx63, align 4, !dbg !963
  %mul65 = mul nsw i32 %k.1, %ndelta, !dbg !964
  %add66 = add nsw i32 %mul65, %j.1, !dbg !965
  %idxprom67 = sext i32 %add66 to i64, !dbg !966
  %arrayidx68 = getelementptr inbounds float, float* %tmp1, i64 %idxprom67, !dbg !966
  store float %conv59, float* %arrayidx68, align 4, !dbg !967
  br label %for.inc.69, !dbg !968

for.inc.69:                                       ; preds = %for.body.43
  %inc70 = add nsw i32 %k.1, 1, !dbg !969
  br label %for.cond.40, !dbg !970

for.end.71:                                       ; preds = %for.cond.40
  br label %for.inc.72, !dbg !971

for.inc.72:                                       ; preds = %for.end.71
  %inc73 = add nsw i32 %j.1, 1, !dbg !972
  br label %for.cond.36, !dbg !973

for.end.74:                                       ; preds = %for.cond.36
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !863, metadata !110), !dbg !864
  call void @llvm.dbg.value(metadata i32 %inc115, i64 0, metadata !865, metadata !110), !dbg !866
  call void @llvm.dbg.value(metadata float %conv101, i64 0, metadata !927, metadata !110), !dbg !928
  call void @llvm.dbg.value(metadata i32 %inc112, i64 0, metadata !863, metadata !110), !dbg !864
  %call75 = call double @rtclock(), !dbg !974
  call void @llvm.dbg.value(metadata double %call75, i64 0, metadata !975, metadata !110), !dbg !976
  %tmp10 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !977
  %sub = fsub double %call75, %call35, !dbg !978
  %call76 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp10, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i32 0, i32 0), double %sub), !dbg !979
  %call77 = call double @rtclock(), !dbg !980
  call void @llvm.dbg.value(metadata double %call77, i64 0, metadata !935, metadata !110), !dbg !936
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !865, metadata !110), !dbg !866
  br label %for.cond.78, !dbg !981

for.cond.78:                                      ; preds = %for.inc.114, %for.end.74
  %j.2 = phi i32 [ 1, %for.end.74 ], [ %inc115, %for.inc.114 ]
  %cmp79 = icmp sle i32 %j.2, %ndelta, !dbg !983
  br i1 %cmp79, label %for.body.81, label %for.end.116, !dbg !985

for.body.81:                                      ; preds = %for.cond.78
  br label %for.cond.82, !dbg !986

for.cond.82:                                      ; preds = %for.inc.111, %for.body.81
  %k.2 = phi i32 [ 0, %for.body.81 ], [ %inc112, %for.inc.111 ]
  %cmp83 = icmp sle i32 %k.2, %nly, !dbg !989
  br i1 %cmp83, label %for.body.85, label %for.end.113, !dbg !991

for.body.85:                                      ; preds = %for.cond.82
  %idxprom86 = sext i32 %j.2 to i64, !dbg !992
  %arrayidx87 = getelementptr inbounds float, float* %delta, i64 %idxprom86, !dbg !992
  %tmp11 = load float, float* %arrayidx87, align 4, !dbg !992
  %conv88 = fpext float %tmp11 to double, !dbg !992
  %mul89 = fmul double 3.000000e-01, %conv88, !dbg !994
  %idxprom90 = sext i32 %k.2 to i64, !dbg !995
  %arrayidx91 = getelementptr inbounds float, float* %ly, i64 %idxprom90, !dbg !995
  %tmp12 = load float, float* %arrayidx91, align 4, !dbg !995
  %conv92 = fpext float %tmp12 to double, !dbg !995
  %mul93 = fmul double %mul89, %conv92, !dbg !996
  %idxprom94 = sext i32 %j.2 to i64, !dbg !997
  %idxprom95 = sext i32 %k.2 to i64, !dbg !997
  %arrayidx96 = getelementptr inbounds float*, float** %oldw, i64 %idxprom95, !dbg !997
  %tmp13 = load float*, float** %arrayidx96, align 8, !dbg !997
  %arrayidx97 = getelementptr inbounds float, float* %tmp13, i64 %idxprom94, !dbg !997
  %tmp14 = load float, float* %arrayidx97, align 4, !dbg !997
  %conv98 = fpext float %tmp14 to double, !dbg !997
  %mul99 = fmul double 3.000000e-01, %conv98, !dbg !998
  %add100 = fadd double %mul93, %mul99, !dbg !999
  %conv101 = fptrunc double %add100 to float, !dbg !1000
  %idxprom102 = sext i32 %j.2 to i64, !dbg !1001
  %idxprom103 = sext i32 %k.2 to i64, !dbg !1001
  %arrayidx104 = getelementptr inbounds float*, float** %w, i64 %idxprom103, !dbg !1001
  %tmp15 = load float*, float** %arrayidx104, align 8, !dbg !1001
  %arrayidx105 = getelementptr inbounds float, float* %tmp15, i64 %idxprom102, !dbg !1001
  %tmp16 = load float, float* %arrayidx105, align 4, !dbg !1002
  %add106 = fadd float %tmp16, %conv101, !dbg !1002
  store float %add106, float* %arrayidx105, align 4, !dbg !1002
  %idxprom107 = sext i32 %j.2 to i64, !dbg !1003
  %idxprom108 = sext i32 %k.2 to i64, !dbg !1003
  %arrayidx109 = getelementptr inbounds float*, float** %oldw, i64 %idxprom108, !dbg !1003
  %tmp17 = load float*, float** %arrayidx109, align 8, !dbg !1003
  %arrayidx110 = getelementptr inbounds float, float* %tmp17, i64 %idxprom107, !dbg !1003
  store float %conv101, float* %arrayidx110, align 4, !dbg !1004
  br label %for.inc.111, !dbg !1005

for.inc.111:                                      ; preds = %for.body.85
  %inc112 = add nsw i32 %k.2, 1, !dbg !1006
  br label %for.cond.82, !dbg !1007

for.end.113:                                      ; preds = %for.cond.82
  br label %for.inc.114, !dbg !1008

for.inc.114:                                      ; preds = %for.end.113
  %inc115 = add nsw i32 %j.2, 1, !dbg !1009
  br label %for.cond.78, !dbg !1010

for.end.116:                                      ; preds = %for.cond.78
  %call117 = call double @rtclock(), !dbg !1011
  call void @llvm.dbg.value(metadata double %call117, i64 0, metadata !975, metadata !110), !dbg !976
  %tmp18 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !1012
  %sub118 = fsub double %call117, %call77, !dbg !1013
  %call119 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp18, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.7, i32 0, i32 0), double %sub118), !dbg !1014
  call void @compareResults2(float* %tmp, float** %w, float* %tmp1, float** %oldw, i32 %ndelta, i32 %nly), !dbg !1015
  %call120 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i32 0, i32 0)), !dbg !1016
  ret void, !dbg !1017
}

; Function Attrs: nounwind uwtable
define void @bpnn_feedforward(%struct.BPNN* %net) #0 {
entry:
  call void @llvm.dbg.value(metadata %struct.BPNN* %net, i64 0, metadata !1018, metadata !110), !dbg !1019
  %input_n = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 0, !dbg !1020
  %tmp = load i32, i32* %input_n, align 4, !dbg !1020
  call void @llvm.dbg.value(metadata i32 %tmp, i64 0, metadata !1021, metadata !110), !dbg !1022
  %hidden_n = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 1, !dbg !1023
  %tmp1 = load i32, i32* %hidden_n, align 4, !dbg !1023
  call void @llvm.dbg.value(metadata i32 %tmp1, i64 0, metadata !1024, metadata !110), !dbg !1025
  %output_n = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 2, !dbg !1026
  %tmp2 = load i32, i32* %output_n, align 4, !dbg !1026
  call void @llvm.dbg.value(metadata i32 %tmp2, i64 0, metadata !1027, metadata !110), !dbg !1028
  %input_units = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 3, !dbg !1029
  %tmp3 = load float*, float** %input_units, align 8, !dbg !1029
  %hidden_units = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 4, !dbg !1030
  %tmp4 = load float*, float** %hidden_units, align 8, !dbg !1030
  %input_weights = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 9, !dbg !1031
  %tmp5 = load float**, float*** %input_weights, align 8, !dbg !1031
  call void @bpnn_layerforward(float* %tmp3, float* %tmp4, float** %tmp5, i32 %tmp, i32 %tmp1), !dbg !1032
  %hidden_units1 = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 4, !dbg !1033
  %tmp6 = load float*, float** %hidden_units1, align 8, !dbg !1033
  %output_units = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 5, !dbg !1034
  %tmp7 = load float*, float** %output_units, align 8, !dbg !1034
  %hidden_weights = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 10, !dbg !1035
  %tmp8 = load float**, float*** %hidden_weights, align 8, !dbg !1035
  call void @bpnn_layerforward(float* %tmp6, float* %tmp7, float** %tmp8, i32 %tmp1, i32 %tmp2), !dbg !1036
  ret void, !dbg !1037
}

; Function Attrs: nounwind uwtable
define void @bpnn_train(%struct.BPNN* %net, float* %eo, float* %eh) #0 {
entry:
  %out_err = alloca float, align 4
  %hid_err = alloca float, align 4
  call void @llvm.dbg.value(metadata %struct.BPNN* %net, i64 0, metadata !1038, metadata !110), !dbg !1039
  call void @llvm.dbg.value(metadata float* %eo, i64 0, metadata !1040, metadata !110), !dbg !1041
  call void @llvm.dbg.value(metadata float* %eh, i64 0, metadata !1042, metadata !110), !dbg !1043
  call void @llvm.dbg.declare(metadata float* %out_err, metadata !1044, metadata !110), !dbg !1045
  call void @llvm.dbg.declare(metadata float* %hid_err, metadata !1046, metadata !110), !dbg !1047
  %input_n = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 0, !dbg !1048
  %tmp = load i32, i32* %input_n, align 4, !dbg !1048
  call void @llvm.dbg.value(metadata i32 %tmp, i64 0, metadata !1049, metadata !110), !dbg !1050
  %hidden_n = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 1, !dbg !1051
  %tmp1 = load i32, i32* %hidden_n, align 4, !dbg !1051
  call void @llvm.dbg.value(metadata i32 %tmp1, i64 0, metadata !1052, metadata !110), !dbg !1053
  %output_n = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 2, !dbg !1054
  %tmp2 = load i32, i32* %output_n, align 4, !dbg !1054
  call void @llvm.dbg.value(metadata i32 %tmp2, i64 0, metadata !1055, metadata !110), !dbg !1056
  %input_units = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 3, !dbg !1057
  %tmp3 = load float*, float** %input_units, align 8, !dbg !1057
  %hidden_units = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 4, !dbg !1058
  %tmp4 = load float*, float** %hidden_units, align 8, !dbg !1058
  %input_weights = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 9, !dbg !1059
  %tmp5 = load float**, float*** %input_weights, align 8, !dbg !1059
  call void @bpnn_layerforward(float* %tmp3, float* %tmp4, float** %tmp5, i32 %tmp, i32 %tmp1), !dbg !1060
  %hidden_units1 = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 4, !dbg !1061
  %tmp6 = load float*, float** %hidden_units1, align 8, !dbg !1061
  %output_units = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 5, !dbg !1062
  %tmp7 = load float*, float** %output_units, align 8, !dbg !1062
  %hidden_weights = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 10, !dbg !1063
  %tmp8 = load float**, float*** %hidden_weights, align 8, !dbg !1063
  call void @bpnn_layerforward(float* %tmp6, float* %tmp7, float** %tmp8, i32 %tmp1, i32 %tmp2), !dbg !1064
  %output_delta = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 7, !dbg !1065
  %tmp9 = load float*, float** %output_delta, align 8, !dbg !1065
  %target = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 8, !dbg !1066
  %tmp10 = load float*, float** %target, align 8, !dbg !1066
  %output_units2 = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 5, !dbg !1067
  %tmp11 = load float*, float** %output_units2, align 8, !dbg !1067
  call void @bpnn_output_error(float* %tmp9, float* %tmp10, float* %tmp11, i32 %tmp2, float* %out_err), !dbg !1068
  %hidden_delta = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 6, !dbg !1069
  %tmp12 = load float*, float** %hidden_delta, align 8, !dbg !1069
  %output_delta3 = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 7, !dbg !1070
  %tmp13 = load float*, float** %output_delta3, align 8, !dbg !1070
  %hidden_weights4 = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 10, !dbg !1071
  %tmp14 = load float**, float*** %hidden_weights4, align 8, !dbg !1071
  %hidden_units5 = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 4, !dbg !1072
  %tmp15 = load float*, float** %hidden_units5, align 8, !dbg !1072
  call void @bpnn_hidden_error(float* %tmp12, i32 %tmp1, float* %tmp13, i32 %tmp2, float** %tmp14, float* %tmp15, float* %hid_err), !dbg !1073
  %tmp16 = load float, float* %out_err, align 4, !dbg !1074
  store float %tmp16, float* %eo, align 4, !dbg !1075
  %tmp17 = load float, float* %hid_err, align 4, !dbg !1076
  store float %tmp17, float* %eh, align 4, !dbg !1077
  %output_delta6 = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 7, !dbg !1078
  %tmp18 = load float*, float** %output_delta6, align 8, !dbg !1078
  %hidden_units7 = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 4, !dbg !1079
  %tmp19 = load float*, float** %hidden_units7, align 8, !dbg !1079
  %hidden_weights8 = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 10, !dbg !1080
  %tmp20 = load float**, float*** %hidden_weights8, align 8, !dbg !1080
  %hidden_prev_weights = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 12, !dbg !1081
  %tmp21 = load float**, float*** %hidden_prev_weights, align 8, !dbg !1081
  call void @bpnn_adjust_weights(float* %tmp18, i32 %tmp2, float* %tmp19, i32 %tmp1, float** %tmp20, float** %tmp21), !dbg !1082
  %hidden_delta9 = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 6, !dbg !1083
  %tmp22 = load float*, float** %hidden_delta9, align 8, !dbg !1083
  %input_units10 = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 3, !dbg !1084
  %tmp23 = load float*, float** %input_units10, align 8, !dbg !1084
  %input_weights11 = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 9, !dbg !1085
  %tmp24 = load float**, float*** %input_weights11, align 8, !dbg !1085
  %input_prev_weights = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 11, !dbg !1086
  %tmp25 = load float**, float*** %input_prev_weights, align 8, !dbg !1086
  call void @bpnn_adjust_weights(float* %tmp22, i32 %tmp1, float* %tmp23, i32 %tmp, float** %tmp24, float** %tmp25), !dbg !1087
  ret void, !dbg !1088
}

; Function Attrs: nounwind uwtable
define void @bpnn_save(%struct.BPNN* %net, i8* %filename) #0 {
entry:
  %n1 = alloca i32, align 4
  %tmp12 = load i32, i32* %n1, align 4, !dbg !1089
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1092, metadata !110), !dbg !1093
  %n2 = alloca i32, align 4
  %tmp13 = load i32, i32* %n2, align 4, !dbg !1094
  call void @llvm.dbg.value(metadata i32 %inc31, i64 0, metadata !1098, metadata !110), !dbg !1099
  call void @llvm.dbg.value(metadata i8* %arrayidx18, i64 0, metadata !1100, metadata !110), !dbg !1103
  call void @llvm.dbg.value(metadata i8* %tmp16, i64 0, metadata !1104, metadata !110), !dbg !1103
  call void @llvm.dbg.value(metadata i32 4, i64 0, metadata !1105, metadata !110), !dbg !1103
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1106, metadata !110), !dbg !1103
  call void @llvm.dbg.value(metadata i32 %conv26, i64 0, metadata !1107, metadata !110), !dbg !1108
  call void @llvm.dbg.value(metadata i32 %inc28, i64 0, metadata !1092, metadata !110), !dbg !1093
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, i64 0, metadata !1104, metadata !110), !dbg !1103
  call void @llvm.dbg.value(metadata i8* %incdec.ptr23, i64 0, metadata !1100, metadata !110), !dbg !1103
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !1106, metadata !110), !dbg !1103
  %n3 = alloca i32, align 4
  %dvalue = alloca float, align 4
  %dvalue31 = ptrtoint float* %dvalue to i64
  call void @llvm.dbg.value(metadata %struct.BPNN* %net, i64 0, metadata !1109, metadata !110), !dbg !1110
  call void @llvm.dbg.value(metadata i8* %filename, i64 0, metadata !1111, metadata !110), !dbg !1112
  call void @llvm.dbg.declare(metadata i32* %n1, metadata !1113, metadata !110), !dbg !1114
  call void @llvm.dbg.declare(metadata i32* %n2, metadata !1115, metadata !110), !dbg !1116
  call void @llvm.dbg.declare(metadata i32* %n3, metadata !1117, metadata !110), !dbg !1118
  call void @llvm.dbg.declare(metadata float* %dvalue, metadata !1119, metadata !110), !dbg !1120
  %call = call %struct._IO_FILE* @fopen(i8* %filename, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i32 0, i32 0)), !dbg !1121
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call, i64 0, metadata !1122, metadata !110), !dbg !1180
  %input_n = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 0, !dbg !1181
  %tmp = load i32, i32* %input_n, align 4, !dbg !1181
  store i32 %tmp, i32* %n1, align 4, !dbg !1182
  %hidden_n = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 1, !dbg !1183
  %tmp1 = load i32, i32* %hidden_n, align 4, !dbg !1183
  store i32 %tmp1, i32* %n2, align 4, !dbg !1184
  %output_n = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 2, !dbg !1185
  %tmp2 = load i32, i32* %output_n, align 4, !dbg !1185
  store i32 %tmp2, i32* %n3, align 4, !dbg !1186
  %tmp3 = load i32, i32* %n1, align 4, !dbg !1187
  %tmp4 = load i32, i32* %n2, align 4, !dbg !1188
  %tmp5 = load i32, i32* %n3, align 4, !dbg !1189
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i32 0, i32 0), i32 %tmp3, i32 %tmp4, i32 %tmp5, i8* %filename), !dbg !1190
  %tmp6 = bitcast i32* %n1 to i8*, !dbg !1191
  %call2 = call i64 @fwrite(i8* %tmp6, i64 1, i64 1, %struct._IO_FILE* %call), !dbg !1192
  %tmp7 = bitcast i32* %n2 to i8*, !dbg !1193
  %call3 = call i64 @fwrite(i8* %tmp7, i64 1, i64 1, %struct._IO_FILE* %call), !dbg !1194
  %tmp8 = bitcast i32* %n3 to i8*, !dbg !1195
  %call4 = call i64 @fwrite(i8* %tmp8, i64 1, i64 1, %struct._IO_FILE* %call), !dbg !1196
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1107, metadata !110), !dbg !1108
  %input_weights = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 9, !dbg !1197
  %tmp9 = load float**, float*** %input_weights, align 8, !dbg !1197
  call void @llvm.dbg.value(metadata float** %tmp9, i64 0, metadata !1198, metadata !110), !dbg !1199
  %tmp10 = load i32, i32* %n1, align 4, !dbg !1200
  %add = add nsw i32 %tmp10, 1, !dbg !1201
  %tmp11 = load i32, i32* %n2, align 4, !dbg !1202
  %add5 = add nsw i32 %tmp11, 1, !dbg !1203
  %mul = mul nsw i32 %add, %add5, !dbg !1204
  %conv = sext i32 %mul to i64, !dbg !1205
  %mul6 = mul i64 %conv, 4, !dbg !1206
  %conv7 = trunc i64 %mul6 to i32, !dbg !1207
  %conv8 = zext i32 %conv7 to i64, !dbg !1207
  %call9 = call noalias i8* @malloc(i64 %conv8) #4, !dbg !1208
  call void @llvm.dbg.value(metadata i8* %call9, i64 0, metadata !1209, metadata !110), !dbg !1210
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1098, metadata !110), !dbg !1099
  %0 = add i64 %dvalue31, 4, !dbg !1211
  %1 = add i64 %dvalue31, 4, !dbg !1211
  %2 = add i64 %dvalue31, 4, !dbg !1211
  br label %for.cond, !dbg !1216

for.cond:                                         ; preds = %for.inc.30, %entry
  %memcnt.0 = phi i32 [ 0, %entry ], [ %memcnt.1.lcssa, %for.inc.30 ]
  %i.0 = phi i32 [ 0, %entry ], [ %inc31, %for.inc.30 ]
  %cmp = icmp sle i32 %i.0, %tmp12, !dbg !1217
  br i1 %cmp, label %for.body, label %for.end.32, !dbg !1218

for.body:                                         ; preds = %for.cond
  br label %for.cond.11, !dbg !1219

for.cond.11:                                      ; preds = %for.inc.27, %for.body
  %memcnt.1 = phi i32 [ %memcnt.0, %for.body ], [ %conv26, %for.inc.27 ]
  %j.0 = phi i32 [ 0, %for.body ], [ %inc28, %for.inc.27 ]
  %cmp12 = icmp sle i32 %j.0, %tmp13, !dbg !1220
  br i1 %cmp12, label %for.body.14, label %for.end.29, !dbg !1221

for.body.14:                                      ; preds = %for.cond.11
  %idxprom = sext i32 %j.0 to i64, !dbg !1222
  %idxprom15 = sext i32 %i.0 to i64, !dbg !1222
  %arrayidx = getelementptr inbounds float*, float** %tmp9, i64 %idxprom15, !dbg !1222
  %tmp14 = load float*, float** %arrayidx, align 8, !dbg !1222
  %arrayidx16 = getelementptr inbounds float, float* %tmp14, i64 %idxprom, !dbg !1222
  %tmp15 = load float, float* %arrayidx16, align 4, !dbg !1222
  store float %tmp15, float* %dvalue, align 4, !dbg !1223
  %idxprom17 = sext i32 %memcnt.1 to i64, !dbg !1103
  %arrayidx18 = getelementptr inbounds i8, i8* %call9, i64 %idxprom17, !dbg !1103
  %tmp16 = bitcast float* %dvalue to i8*, !dbg !1103
  br label %for.cond.19, !dbg !1224

for.cond.19:                                      ; preds = %for.inc, %for.body.14
  %_i.0 = phi i32 [ 0, %for.body.14 ], [ %inc, %for.inc ]
  %_from.0 = phi i8* [ %tmp16, %for.body.14 ], [ %incdec.ptr, %for.inc ]
  %_to.0 = phi i8* [ %arrayidx18, %for.body.14 ], [ %incdec.ptr23, %for.inc ]
  %3 = sext i32 %memcnt.0 to i64, !dbg !1211
  %scevgep38 = getelementptr i8, i8* %call9, i64 %3, !dbg !1211
  %4 = icmp sgt i32 %tmp13, -1, !dbg !1211
  %smax39 = select i1 %4, i32 %tmp13, i32 -1, !dbg !1211
  %5 = add i32 %smax39, 1, !dbg !1211
  %6 = mul i32 4, %5, !dbg !1211
  %7 = add i32 %memcnt.0, %6, !dbg !1211
  %8 = sext i32 %7 to i64, !dbg !1211
  %scevgep40 = getelementptr i8, i8* %call9, i64 %8, !dbg !1211
  %scevgep4041 = ptrtoint i8* %scevgep40 to i64
  %9 = add i64 %scevgep4041, 4, !dbg !1211
  %10 = sext i32 %memcnt.0 to i64, !dbg !1211
  %scevgep34 = getelementptr i8, i8* %call9, i64 %10, !dbg !1211
  %11 = icmp sgt i32 %tmp13, -1, !dbg !1211
  %smax35 = select i1 %11, i32 %tmp13, i32 -1, !dbg !1211
  %12 = add i32 %smax35, 1, !dbg !1211
  %13 = mul i32 4, %12, !dbg !1211
  %14 = add i32 %memcnt.0, %13, !dbg !1211
  %15 = sext i32 %14 to i64, !dbg !1211
  %scevgep36 = getelementptr i8, i8* %call9, i64 %15, !dbg !1211
  %scevgep3637 = ptrtoint i8* %scevgep36 to i64
  %16 = add i64 %scevgep3637, 4, !dbg !1211
  %17 = sext i32 %memcnt.0 to i64, !dbg !1211
  %scevgep = getelementptr i8, i8* %call9, i64 %17, !dbg !1211
  %18 = icmp sgt i32 %tmp13, -1, !dbg !1211
  %smax = select i1 %18, i32 %tmp13, i32 -1, !dbg !1211
  %19 = add i32 %smax, 1, !dbg !1211
  %20 = mul i32 4, %19, !dbg !1211
  %21 = add i32 %memcnt.0, %20, !dbg !1211
  %22 = sext i32 %21 to i64, !dbg !1211
  %scevgep32 = getelementptr i8, i8* %call9, i64 %22, !dbg !1211
  %scevgep3233 = ptrtoint i8* %scevgep32 to i64
  %23 = add i64 %scevgep3233, 4, !dbg !1211
  %cmp20 = icmp slt i32 %_i.0, 4, !dbg !1211
  br i1 %cmp20, label %for.body.22, label %for.end, !dbg !1224

for.body.22:                                      ; preds = %for.cond.19
  %incdec.ptr = getelementptr inbounds i8, i8* %_from.0, i32 1, !dbg !1225
  %tmp17 = load i8, i8* %_from.0, align 1, !dbg !1225
  %incdec.ptr23 = getelementptr inbounds i8, i8* %_to.0, i32 1, !dbg !1225
  store i8 %tmp17, i8* %_to.0, align 1, !dbg !1225
  br label %for.inc, !dbg !1225

for.inc:                                          ; preds = %for.body.22
  %inc = add nsw i32 %_i.0, 1, !dbg !1227
  br label %for.cond.19, !dbg !1227

for.end:                                          ; preds = %for.cond.19
  %conv24 = sext i32 %memcnt.1 to i64, !dbg !1229
  %add25 = add i64 %conv24, 4, !dbg !1229
  %conv26 = trunc i64 %add25 to i32, !dbg !1229
  br label %for.inc.27, !dbg !1230

for.inc.27:                                       ; preds = %for.end
  %inc28 = add nsw i32 %j.0, 1, !dbg !1231
  br label %for.cond.11, !dbg !1232

for.end.29:                                       ; preds = %for.cond.11
  %memcnt.1.lcssa = phi i32 [ %memcnt.1, %for.cond.11 ]
  br label %for.inc.30, !dbg !1233

for.inc.30:                                       ; preds = %for.end.29
  %inc31 = add nsw i32 %i.0, 1, !dbg !1234
  br label %for.cond, !dbg !1235

for.end.32:                                       ; preds = %for.cond
  %tmp23 = load i32, i32* %n2, align 4, !dbg !1236
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1092, metadata !110), !dbg !1093
  %tmp24 = load i32, i32* %n3, align 4, !dbg !1239
  call void @llvm.dbg.value(metadata i32 %inc83, i64 0, metadata !1098, metadata !110), !dbg !1099
  call void @llvm.dbg.value(metadata i8* %arrayidx66, i64 0, metadata !1243, metadata !110), !dbg !1246
  call void @llvm.dbg.value(metadata i8* %tmp27, i64 0, metadata !1247, metadata !110), !dbg !1246
  call void @llvm.dbg.value(metadata i32 4, i64 0, metadata !1248, metadata !110), !dbg !1246
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1249, metadata !110), !dbg !1246
  call void @llvm.dbg.value(metadata i32 %conv78, i64 0, metadata !1107, metadata !110), !dbg !1108
  call void @llvm.dbg.value(metadata i32 %inc80, i64 0, metadata !1092, metadata !110), !dbg !1093
  call void @llvm.dbg.value(metadata i8* %incdec.ptr71, i64 0, metadata !1247, metadata !110), !dbg !1246
  call void @llvm.dbg.value(metadata i8* %incdec.ptr72, i64 0, metadata !1243, metadata !110), !dbg !1246
  call void @llvm.dbg.value(metadata i32 %inc74, i64 0, metadata !1249, metadata !110), !dbg !1246
  %tmp18 = load i32, i32* %n1, align 4, !dbg !1250
  %add33 = add nsw i32 %tmp18, 1, !dbg !1251
  %tmp19 = load i32, i32* %n2, align 4, !dbg !1252
  %add34 = add nsw i32 %tmp19, 1, !dbg !1253
  %mul35 = mul nsw i32 %add33, %add34, !dbg !1254
  %conv36 = sext i32 %mul35 to i64, !dbg !1255
  %mul37 = mul i64 %conv36, 4, !dbg !1256
  %conv38 = trunc i64 %mul37 to i32, !dbg !1257
  %conv39 = zext i32 %conv38 to i64, !dbg !1257
  %call40 = call i64 @fwrite(i8* %call9, i64 4, i64 %conv39, %struct._IO_FILE* %call), !dbg !1258
  call void @free(i8* %call9) #4, !dbg !1259
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1107, metadata !110), !dbg !1108
  %hidden_weights = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 10, !dbg !1260
  %tmp20 = load float**, float*** %hidden_weights, align 8, !dbg !1260
  call void @llvm.dbg.value(metadata float** %tmp20, i64 0, metadata !1198, metadata !110), !dbg !1199
  %tmp21 = load i32, i32* %n2, align 4, !dbg !1261
  %add41 = add nsw i32 %tmp21, 1, !dbg !1262
  %tmp22 = load i32, i32* %n3, align 4, !dbg !1263
  %add42 = add nsw i32 %tmp22, 1, !dbg !1264
  %mul43 = mul nsw i32 %add41, %add42, !dbg !1265
  %conv44 = sext i32 %mul43 to i64, !dbg !1266
  %mul45 = mul i64 %conv44, 4, !dbg !1267
  %conv46 = trunc i64 %mul45 to i32, !dbg !1268
  %conv47 = zext i32 %conv46 to i64, !dbg !1268
  %call48 = call noalias i8* @malloc(i64 %conv47) #4, !dbg !1269
  call void @llvm.dbg.value(metadata i8* %call48, i64 0, metadata !1209, metadata !110), !dbg !1210
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1098, metadata !110), !dbg !1099
  %24 = add i64 %dvalue31, 4, !dbg !1270
  %25 = add i64 %dvalue31, 4, !dbg !1270
  %26 = add i64 %dvalue31, 4, !dbg !1270
  br label %for.cond.49, !dbg !1275

for.cond.49:                                      ; preds = %for.inc.82, %for.end.32
  %memcnt.2 = phi i32 [ 0, %for.end.32 ], [ %memcnt.3.lcssa, %for.inc.82 ]
  %i.1 = phi i32 [ 0, %for.end.32 ], [ %inc83, %for.inc.82 ]
  %cmp50 = icmp sle i32 %i.1, %tmp23, !dbg !1276
  br i1 %cmp50, label %for.body.52, label %for.end.84, !dbg !1277

for.body.52:                                      ; preds = %for.cond.49
  br label %for.cond.53, !dbg !1278

for.cond.53:                                      ; preds = %for.inc.79, %for.body.52
  %memcnt.3 = phi i32 [ %memcnt.2, %for.body.52 ], [ %conv78, %for.inc.79 ]
  %j.1 = phi i32 [ 0, %for.body.52 ], [ %inc80, %for.inc.79 ]
  %cmp54 = icmp sle i32 %j.1, %tmp24, !dbg !1279
  br i1 %cmp54, label %for.body.56, label %for.end.81, !dbg !1280

for.body.56:                                      ; preds = %for.cond.53
  %idxprom57 = sext i32 %j.1 to i64, !dbg !1281
  %idxprom58 = sext i32 %i.1 to i64, !dbg !1281
  %arrayidx59 = getelementptr inbounds float*, float** %tmp20, i64 %idxprom58, !dbg !1281
  %tmp25 = load float*, float** %arrayidx59, align 8, !dbg !1281
  %arrayidx60 = getelementptr inbounds float, float* %tmp25, i64 %idxprom57, !dbg !1281
  %tmp26 = load float, float* %arrayidx60, align 4, !dbg !1281
  store float %tmp26, float* %dvalue, align 4, !dbg !1282
  %idxprom65 = sext i32 %memcnt.3 to i64, !dbg !1246
  %arrayidx66 = getelementptr inbounds i8, i8* %call48, i64 %idxprom65, !dbg !1246
  %tmp27 = bitcast float* %dvalue to i8*, !dbg !1246
  br label %for.cond.67, !dbg !1283

for.cond.67:                                      ; preds = %for.inc.73, %for.body.56
  %_to61.0 = phi i8* [ %arrayidx66, %for.body.56 ], [ %incdec.ptr72, %for.inc.73 ]
  %_from62.0 = phi i8* [ %tmp27, %for.body.56 ], [ %incdec.ptr71, %for.inc.73 ]
  %_i63.0 = phi i32 [ 0, %for.body.56 ], [ %inc74, %for.inc.73 ]
  %27 = sext i32 %memcnt.2 to i64, !dbg !1270
  %scevgep50 = getelementptr i8, i8* %call48, i64 %27, !dbg !1270
  %28 = icmp sgt i32 %tmp24, -1, !dbg !1270
  %smax51 = select i1 %28, i32 %tmp24, i32 -1, !dbg !1270
  %29 = add i32 %smax51, 1, !dbg !1270
  %30 = mul i32 4, %29, !dbg !1270
  %31 = add i32 %memcnt.2, %30, !dbg !1270
  %32 = sext i32 %31 to i64, !dbg !1270
  %scevgep52 = getelementptr i8, i8* %call48, i64 %32, !dbg !1270
  %scevgep5253 = ptrtoint i8* %scevgep52 to i64
  %33 = add i64 %scevgep5253, 4, !dbg !1270
  %34 = sext i32 %memcnt.2 to i64, !dbg !1270
  %scevgep46 = getelementptr i8, i8* %call48, i64 %34, !dbg !1270
  %35 = icmp sgt i32 %tmp24, -1, !dbg !1270
  %smax47 = select i1 %35, i32 %tmp24, i32 -1, !dbg !1270
  %36 = add i32 %smax47, 1, !dbg !1270
  %37 = mul i32 4, %36, !dbg !1270
  %38 = add i32 %memcnt.2, %37, !dbg !1270
  %39 = sext i32 %38 to i64, !dbg !1270
  %scevgep48 = getelementptr i8, i8* %call48, i64 %39, !dbg !1270
  %scevgep4849 = ptrtoint i8* %scevgep48 to i64
  %40 = add i64 %scevgep4849, 4, !dbg !1270
  %41 = sext i32 %memcnt.2 to i64, !dbg !1270
  %scevgep42 = getelementptr i8, i8* %call48, i64 %41, !dbg !1270
  %42 = icmp sgt i32 %tmp24, -1, !dbg !1270
  %smax43 = select i1 %42, i32 %tmp24, i32 -1, !dbg !1270
  %43 = add i32 %smax43, 1, !dbg !1270
  %44 = mul i32 4, %43, !dbg !1270
  %45 = add i32 %memcnt.2, %44, !dbg !1270
  %46 = sext i32 %45 to i64, !dbg !1270
  %scevgep44 = getelementptr i8, i8* %call48, i64 %46, !dbg !1270
  %scevgep4445 = ptrtoint i8* %scevgep44 to i64
  %47 = add i64 %scevgep4445, 4, !dbg !1270
  %cmp68 = icmp slt i32 %_i63.0, 4, !dbg !1270
  br i1 %cmp68, label %for.body.70, label %for.end.75, !dbg !1283

for.body.70:                                      ; preds = %for.cond.67
  %incdec.ptr71 = getelementptr inbounds i8, i8* %_from62.0, i32 1, !dbg !1284
  %tmp28 = load i8, i8* %_from62.0, align 1, !dbg !1284
  %incdec.ptr72 = getelementptr inbounds i8, i8* %_to61.0, i32 1, !dbg !1284
  store i8 %tmp28, i8* %_to61.0, align 1, !dbg !1284
  br label %for.inc.73, !dbg !1284

for.inc.73:                                       ; preds = %for.body.70
  %inc74 = add nsw i32 %_i63.0, 1, !dbg !1286
  br label %for.cond.67, !dbg !1286

for.end.75:                                       ; preds = %for.cond.67
  %conv76 = sext i32 %memcnt.3 to i64, !dbg !1288
  %add77 = add i64 %conv76, 4, !dbg !1288
  %conv78 = trunc i64 %add77 to i32, !dbg !1288
  br label %for.inc.79, !dbg !1289

for.inc.79:                                       ; preds = %for.end.75
  %inc80 = add nsw i32 %j.1, 1, !dbg !1290
  br label %for.cond.53, !dbg !1291

for.end.81:                                       ; preds = %for.cond.53
  %memcnt.3.lcssa = phi i32 [ %memcnt.3, %for.cond.53 ]
  br label %for.inc.82, !dbg !1292

for.inc.82:                                       ; preds = %for.end.81
  %inc83 = add nsw i32 %i.1, 1, !dbg !1293
  br label %for.cond.49, !dbg !1294

for.end.84:                                       ; preds = %for.cond.49
  %tmp29 = load i32, i32* %n2, align 4, !dbg !1295
  %add85 = add nsw i32 %tmp29, 1, !dbg !1296
  %tmp30 = load i32, i32* %n3, align 4, !dbg !1297
  %add86 = add nsw i32 %tmp30, 1, !dbg !1298
  %mul87 = mul nsw i32 %add85, %add86, !dbg !1299
  %conv88 = sext i32 %mul87 to i64, !dbg !1300
  %mul89 = mul i64 %conv88, 4, !dbg !1301
  %conv90 = trunc i64 %mul89 to i32, !dbg !1302
  %conv91 = zext i32 %conv90 to i64, !dbg !1302
  %call92 = call i64 @fwrite(i8* %call48, i64 4, i64 %conv91, %struct._IO_FILE* %call), !dbg !1303
  call void @free(i8* %call48) #4, !dbg !1304
  %call93 = call i32 @fclose(%struct._IO_FILE* %call), !dbg !1305
  ret void, !dbg !1306
}

declare %struct._IO_FILE* @fopen(i8*, i8*) #3

declare i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #3

declare i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind uwtable
define %struct.BPNN* @bpnn_read(i8* %filename) #0 {
entry:
  %n1 = alloca i32, align 4
  %n2 = alloca i32, align 4
  %n3 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %filename, i64 0, metadata !1307, metadata !110), !dbg !1308
  call void @llvm.dbg.declare(metadata i32* %n1, metadata !1309, metadata !110), !dbg !1310
  call void @llvm.dbg.declare(metadata i32* %n2, metadata !1311, metadata !110), !dbg !1312
  call void @llvm.dbg.declare(metadata i32* %n3, metadata !1313, metadata !110), !dbg !1314
  %call = call i32 (i8*, i32, i32, ...) bitcast (i32 (...)* @open to i32 (i8*, i32, i32, ...)*)(i8* %filename, i32 0, i32 420), !dbg !1315
  call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !1317, metadata !110), !dbg !1318
  %cmp = icmp eq i32 %call, -1, !dbg !1319
  br i1 %cmp, label %if.then, label %if.end, !dbg !1320

if.then:                                          ; preds = %entry
  br label %return, !dbg !1321

if.end:                                           ; preds = %entry
  %tmp13 = load i32, i32* %n1, align 4, !dbg !1323
  %tmp14 = load i32, i32* %n2, align 4, !dbg !1326
  call void @llvm.dbg.value(metadata i8* %incdec.ptr, i64 0, metadata !1330, metadata !110), !dbg !1333
  call void @llvm.dbg.value(metadata i8* %incdec.ptr33, i64 0, metadata !1334, metadata !110), !dbg !1333
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !1335, metadata !110), !dbg !1333
  %tmp3 = load i32, i32* %n1, align 4, !dbg !1336
  %tmp4 = load i32, i32* %n2, align 4, !dbg !1337
  %tmp5 = load i32, i32* %n3, align 4, !dbg !1338
  %call5 = call %struct.BPNN* @bpnn_internal_create(i32 %tmp3, i32 %tmp4, i32 %tmp5), !dbg !1339
  %input_weights = getelementptr inbounds %struct.BPNN, %struct.BPNN* %call5, i32 0, i32 9, !dbg !1333
  call void @llvm.dbg.value(metadata i8* %tmp17, i64 0, metadata !1334, metadata !110), !dbg !1333
  call void @llvm.dbg.value(metadata i8* %arrayidx28, i64 0, metadata !1330, metadata !110), !dbg !1333
  call void @llvm.dbg.value(metadata i32 4, i64 0, metadata !1340, metadata !110), !dbg !1333
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1335, metadata !110), !dbg !1333
  call void @llvm.dbg.value(metadata i32 %conv36, i64 0, metadata !1341, metadata !110), !dbg !1342
  call void @llvm.dbg.value(metadata i32 %inc38, i64 0, metadata !1343, metadata !110), !dbg !1344
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1343, metadata !110), !dbg !1344
  call void @llvm.dbg.value(metadata i32 %inc41, i64 0, metadata !1345, metadata !110), !dbg !1346
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i32 0, i32 0), i8* %filename), !dbg !1347
  %tmp = bitcast i32* %n1 to i8*, !dbg !1348
  %call2 = call i32 (i32, i8*, i64, ...) bitcast (i32 (...)* @read to i32 (i32, i8*, i64, ...)*)(i32 %call, i8* %tmp, i64 4), !dbg !1349
  %tmp1 = bitcast i32* %n2 to i8*, !dbg !1350
  %call3 = call i32 (i32, i8*, i64, ...) bitcast (i32 (...)* @read to i32 (i32, i8*, i64, ...)*)(i32 %call, i8* %tmp1, i64 4), !dbg !1351
  %tmp2 = bitcast i32* %n3 to i8*, !dbg !1352
  %call4 = call i32 (i32, i8*, i64, ...) bitcast (i32 (...)* @read to i32 (i32, i8*, i64, ...)*)(i32 %call, i8* %tmp2, i64 4), !dbg !1353
  call void @llvm.dbg.value(metadata %struct.BPNN* %call5, i64 0, metadata !1354, metadata !110), !dbg !1355
  %tmp6 = load i32, i32* %n1, align 4, !dbg !1356
  %tmp7 = load i32, i32* %n2, align 4, !dbg !1357
  %tmp8 = load i32, i32* %n3, align 4, !dbg !1358
  %call6 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12, i32 0, i32 0), i8* %filename, i32 %tmp6, i32 %tmp7, i32 %tmp8), !dbg !1359
  %call7 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.13, i32 0, i32 0)), !dbg !1360
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1341, metadata !110), !dbg !1342
  %tmp9 = load i32, i32* %n1, align 4, !dbg !1361
  %add = add nsw i32 %tmp9, 1, !dbg !1362
  %tmp10 = load i32, i32* %n2, align 4, !dbg !1363
  %add8 = add nsw i32 %tmp10, 1, !dbg !1364
  %mul = mul nsw i32 %add, %add8, !dbg !1365
  %conv = sext i32 %mul to i64, !dbg !1366
  %mul9 = mul i64 %conv, 4, !dbg !1367
  %conv10 = trunc i64 %mul9 to i32, !dbg !1368
  %conv11 = zext i32 %conv10 to i64, !dbg !1368
  %call12 = call noalias i8* @malloc(i64 %conv11) #4, !dbg !1369
  call void @llvm.dbg.value(metadata i8* %call12, i64 0, metadata !1370, metadata !110), !dbg !1371
  %tmp11 = load i32, i32* %n1, align 4, !dbg !1372
  %add13 = add nsw i32 %tmp11, 1, !dbg !1373
  %tmp12 = load i32, i32* %n2, align 4, !dbg !1374
  %add14 = add nsw i32 %tmp12, 1, !dbg !1375
  %mul15 = mul nsw i32 %add13, %add14, !dbg !1376
  %conv16 = sext i32 %mul15 to i64, !dbg !1377
  %mul17 = mul i64 %conv16, 4, !dbg !1378
  %call18 = call i32 (i32, i8*, i64, ...) bitcast (i32 (...)* @read to i32 (i32, i8*, i64, ...)*)(i32 %call, i8* %call12, i64 %mul17), !dbg !1379
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1345, metadata !110), !dbg !1346
  br label %for.cond, !dbg !1380

for.cond:                                         ; preds = %for.inc.40, %if.end
  %memcnt.0 = phi i32 [ 0, %if.end ], [ %memcnt.1.lcssa, %for.inc.40 ]
  %i.0 = phi i32 [ 0, %if.end ], [ %inc41, %for.inc.40 ]
  %cmp19 = icmp sle i32 %i.0, %tmp13, !dbg !1381
  br i1 %cmp19, label %for.body, label %for.end.42, !dbg !1382

for.body:                                         ; preds = %for.cond
  br label %for.cond.21, !dbg !1383

for.cond.21:                                      ; preds = %for.inc.37, %for.body
  %memcnt.1 = phi i32 [ %memcnt.0, %for.body ], [ %conv36, %for.inc.37 ]
  %j.0 = phi i32 [ 0, %for.body ], [ %inc38, %for.inc.37 ]
  %cmp22 = icmp sle i32 %j.0, %tmp14, !dbg !1384
  br i1 %cmp22, label %for.body.24, label %for.end.39, !dbg !1385

for.body.24:                                      ; preds = %for.cond.21
  %idxprom = sext i32 %j.0 to i64, !dbg !1333
  %idxprom25 = sext i32 %i.0 to i64, !dbg !1333
  %tmp15 = load float**, float*** %input_weights, align 8, !dbg !1333
  %arrayidx = getelementptr inbounds float*, float** %tmp15, i64 %idxprom25, !dbg !1333
  %tmp16 = load float*, float** %arrayidx, align 8, !dbg !1333
  %arrayidx26 = getelementptr inbounds float, float* %tmp16, i64 %idxprom, !dbg !1333
  %tmp17 = bitcast float* %arrayidx26 to i8*, !dbg !1333
  %idxprom27 = sext i32 %memcnt.1 to i64, !dbg !1333
  %arrayidx28 = getelementptr inbounds i8, i8* %call12, i64 %idxprom27, !dbg !1333
  %scevgep = getelementptr float, float* %tmp16, i64 0, !dbg !1386
  %scevgep40 = getelementptr float, float* %tmp16, i64 0, !dbg !1386
  %scevgep47 = getelementptr float, float* %tmp16, i64 0, !dbg !1386
  br label %for.cond.29, !dbg !1386

for.cond.29:                                      ; preds = %for.inc, %for.body.24
  %_i.0 = phi i32 [ 0, %for.body.24 ], [ %inc, %for.inc ]
  %_from.0 = phi i8* [ %arrayidx28, %for.body.24 ], [ %incdec.ptr, %for.inc ]
  %_to.0 = phi i8* [ %tmp17, %for.body.24 ], [ %incdec.ptr33, %for.inc ]
  %0 = icmp sgt i32 %tmp14, -1, !dbg !1388
  %smax48 = select i1 %0, i32 %tmp14, i32 -1, !dbg !1388
  %1 = add i32 %smax48, 1, !dbg !1388
  %2 = sext i32 %1 to i64, !dbg !1388
  %3 = mul i64 4, %2, !dbg !1388
  %4 = add i64 0, %3, !dbg !1388
  %5 = mul i64 1, %2, !dbg !1388
  %6 = add i64 0, %5, !dbg !1388
  %scevgep49 = getelementptr float, float* %tmp16, i64 %6, !dbg !1388
  %scevgep4950 = ptrtoint float* %scevgep49 to i64
  %7 = add i64 %scevgep4950, 4, !dbg !1388
  %8 = sext i32 %memcnt.0 to i64, !dbg !1388
  %scevgep51 = getelementptr i8, i8* %call12, i64 %8, !dbg !1388
  %9 = mul i32 4, %1, !dbg !1388
  %10 = add i32 %memcnt.0, %9, !dbg !1388
  %11 = sext i32 %10 to i64, !dbg !1388
  %scevgep52 = getelementptr i8, i8* %call12, i64 %11, !dbg !1388
  %scevgep5253 = ptrtoint i8* %scevgep52 to i64
  %12 = add i64 %scevgep5253, 4, !dbg !1388
  %13 = icmp sgt i32 %tmp14, -1, !dbg !1388
  %smax41 = select i1 %13, i32 %tmp14, i32 -1, !dbg !1388
  %14 = add i32 %smax41, 1, !dbg !1388
  %15 = sext i32 %14 to i64, !dbg !1388
  %16 = mul i64 4, %15, !dbg !1388
  %17 = add i64 0, %16, !dbg !1388
  %18 = mul i64 1, %15, !dbg !1388
  %19 = add i64 0, %18, !dbg !1388
  %scevgep42 = getelementptr float, float* %tmp16, i64 %19, !dbg !1388
  %scevgep4243 = ptrtoint float* %scevgep42 to i64
  %20 = add i64 %scevgep4243, 4, !dbg !1388
  %21 = sext i32 %memcnt.0 to i64, !dbg !1388
  %scevgep44 = getelementptr i8, i8* %call12, i64 %21, !dbg !1388
  %22 = mul i32 4, %14, !dbg !1388
  %23 = add i32 %memcnt.0, %22, !dbg !1388
  %24 = sext i32 %23 to i64, !dbg !1388
  %scevgep45 = getelementptr i8, i8* %call12, i64 %24, !dbg !1388
  %scevgep4546 = ptrtoint i8* %scevgep45 to i64
  %25 = add i64 %scevgep4546, 4, !dbg !1388
  %26 = icmp sgt i32 %tmp14, -1, !dbg !1388
  %smax = select i1 %26, i32 %tmp14, i32 -1, !dbg !1388
  %27 = add i32 %smax, 1, !dbg !1388
  %28 = sext i32 %27 to i64, !dbg !1388
  %29 = mul i64 4, %28, !dbg !1388
  %30 = add i64 0, %29, !dbg !1388
  %31 = mul i64 1, %28, !dbg !1388
  %32 = add i64 0, %31, !dbg !1388
  %scevgep35 = getelementptr float, float* %tmp16, i64 %32, !dbg !1388
  %scevgep3536 = ptrtoint float* %scevgep35 to i64
  %33 = add i64 %scevgep3536, 4, !dbg !1388
  %34 = sext i32 %memcnt.0 to i64, !dbg !1388
  %scevgep37 = getelementptr i8, i8* %call12, i64 %34, !dbg !1388
  %35 = mul i32 4, %27, !dbg !1388
  %36 = add i32 %memcnt.0, %35, !dbg !1388
  %37 = sext i32 %36 to i64, !dbg !1388
  %scevgep38 = getelementptr i8, i8* %call12, i64 %37, !dbg !1388
  %scevgep3839 = ptrtoint i8* %scevgep38 to i64
  %38 = add i64 %scevgep3839, 4, !dbg !1388
  %cmp30 = icmp slt i32 %_i.0, 4, !dbg !1388
  br i1 %cmp30, label %for.body.32, label %for.end, !dbg !1386

for.body.32:                                      ; preds = %for.cond.29
  %incdec.ptr = getelementptr inbounds i8, i8* %_from.0, i32 1, !dbg !1392
  %tmp18 = load i8, i8* %_from.0, align 1, !dbg !1392
  %incdec.ptr33 = getelementptr inbounds i8, i8* %_to.0, i32 1, !dbg !1392
  store i8 %tmp18, i8* %_to.0, align 1, !dbg !1392
  br label %for.inc, !dbg !1392

for.inc:                                          ; preds = %for.body.32
  %inc = add nsw i32 %_i.0, 1, !dbg !1394
  br label %for.cond.29, !dbg !1394

for.end:                                          ; preds = %for.cond.29
  %conv34 = sext i32 %memcnt.1 to i64, !dbg !1396
  %add35 = add i64 %conv34, 4, !dbg !1396
  %conv36 = trunc i64 %add35 to i32, !dbg !1396
  br label %for.inc.37, !dbg !1397

for.inc.37:                                       ; preds = %for.end
  %inc38 = add nsw i32 %j.0, 1, !dbg !1398
  br label %for.cond.21, !dbg !1399

for.end.39:                                       ; preds = %for.cond.21
  %memcnt.1.lcssa = phi i32 [ %memcnt.1, %for.cond.21 ]
  br label %for.inc.40, !dbg !1400

for.inc.40:                                       ; preds = %for.end.39
  %inc41 = add nsw i32 %i.0, 1, !dbg !1401
  br label %for.cond, !dbg !1402

for.end.42:                                       ; preds = %for.cond
  %tmp23 = load i32, i32* %n2, align 4, !dbg !1403
  %tmp24 = load i32, i32* %n3, align 4, !dbg !1406
  call void @llvm.dbg.value(metadata i8* %incdec.ptr80, i64 0, metadata !1410, metadata !110), !dbg !1413
  call void @llvm.dbg.value(metadata i8* %incdec.ptr81, i64 0, metadata !1414, metadata !110), !dbg !1413
  call void @llvm.dbg.value(metadata i32 %inc83, i64 0, metadata !1415, metadata !110), !dbg !1413
  %hidden_weights = getelementptr inbounds %struct.BPNN, %struct.BPNN* %call5, i32 0, i32 10, !dbg !1413
  call void @llvm.dbg.value(metadata i8* %tmp27, i64 0, metadata !1414, metadata !110), !dbg !1413
  call void @llvm.dbg.value(metadata i8* %arrayidx75, i64 0, metadata !1410, metadata !110), !dbg !1413
  call void @llvm.dbg.value(metadata i32 4, i64 0, metadata !1416, metadata !110), !dbg !1413
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1415, metadata !110), !dbg !1413
  call void @llvm.dbg.value(metadata i32 %conv87, i64 0, metadata !1341, metadata !110), !dbg !1342
  call void @llvm.dbg.value(metadata i32 %inc89, i64 0, metadata !1343, metadata !110), !dbg !1344
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1343, metadata !110), !dbg !1344
  call void @llvm.dbg.value(metadata i32 %inc92, i64 0, metadata !1345, metadata !110), !dbg !1346
  call void @free(i8* %call12) #4, !dbg !1417
  %call43 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.14, i32 0, i32 0)), !dbg !1418
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1341, metadata !110), !dbg !1342
  %tmp19 = load i32, i32* %n2, align 4, !dbg !1419
  %add44 = add nsw i32 %tmp19, 1, !dbg !1420
  %tmp20 = load i32, i32* %n3, align 4, !dbg !1421
  %add45 = add nsw i32 %tmp20, 1, !dbg !1422
  %mul46 = mul nsw i32 %add44, %add45, !dbg !1423
  %conv47 = sext i32 %mul46 to i64, !dbg !1424
  %mul48 = mul i64 %conv47, 4, !dbg !1425
  %conv49 = trunc i64 %mul48 to i32, !dbg !1426
  %conv50 = zext i32 %conv49 to i64, !dbg !1426
  %call51 = call noalias i8* @malloc(i64 %conv50) #4, !dbg !1427
  call void @llvm.dbg.value(metadata i8* %call51, i64 0, metadata !1370, metadata !110), !dbg !1371
  %tmp21 = load i32, i32* %n2, align 4, !dbg !1428
  %add52 = add nsw i32 %tmp21, 1, !dbg !1429
  %tmp22 = load i32, i32* %n3, align 4, !dbg !1430
  %add53 = add nsw i32 %tmp22, 1, !dbg !1431
  %mul54 = mul nsw i32 %add52, %add53, !dbg !1432
  %conv55 = sext i32 %mul54 to i64, !dbg !1433
  %mul56 = mul i64 %conv55, 4, !dbg !1434
  %call57 = call i32 (i32, i8*, i64, ...) bitcast (i32 (...)* @read to i32 (i32, i8*, i64, ...)*)(i32 %call, i8* %call51, i64 %mul56), !dbg !1435
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !1345, metadata !110), !dbg !1346
  br label %for.cond.58, !dbg !1436

for.cond.58:                                      ; preds = %for.inc.91, %for.end.42
  %memcnt.2 = phi i32 [ 0, %for.end.42 ], [ %memcnt.3.lcssa, %for.inc.91 ]
  %i.1 = phi i32 [ 0, %for.end.42 ], [ %inc92, %for.inc.91 ]
  %cmp59 = icmp sle i32 %i.1, %tmp23, !dbg !1437
  br i1 %cmp59, label %for.body.61, label %for.end.93, !dbg !1438

for.body.61:                                      ; preds = %for.cond.58
  br label %for.cond.62, !dbg !1439

for.cond.62:                                      ; preds = %for.inc.88, %for.body.61
  %memcnt.3 = phi i32 [ %memcnt.2, %for.body.61 ], [ %conv87, %for.inc.88 ]
  %j.1 = phi i32 [ 0, %for.body.61 ], [ %inc89, %for.inc.88 ]
  %cmp63 = icmp sle i32 %j.1, %tmp24, !dbg !1440
  br i1 %cmp63, label %for.body.65, label %for.end.90, !dbg !1441

for.body.65:                                      ; preds = %for.cond.62
  %idxprom70 = sext i32 %j.1 to i64, !dbg !1413
  %idxprom71 = sext i32 %i.1 to i64, !dbg !1413
  %tmp25 = load float**, float*** %hidden_weights, align 8, !dbg !1413
  %arrayidx72 = getelementptr inbounds float*, float** %tmp25, i64 %idxprom71, !dbg !1413
  %tmp26 = load float*, float** %arrayidx72, align 8, !dbg !1413
  %arrayidx73 = getelementptr inbounds float, float* %tmp26, i64 %idxprom70, !dbg !1413
  %tmp27 = bitcast float* %arrayidx73 to i8*, !dbg !1413
  %idxprom74 = sext i32 %memcnt.3 to i64, !dbg !1413
  %arrayidx75 = getelementptr inbounds i8, i8* %call51, i64 %idxprom74, !dbg !1413
  %scevgep54 = getelementptr float, float* %tmp26, i64 0, !dbg !1442
  %scevgep61 = getelementptr float, float* %tmp26, i64 0, !dbg !1442
  %scevgep68 = getelementptr float, float* %tmp26, i64 0, !dbg !1442
  br label %for.cond.76, !dbg !1442

for.cond.76:                                      ; preds = %for.inc.82, %for.body.65
  %_to66.0 = phi i8* [ %tmp27, %for.body.65 ], [ %incdec.ptr81, %for.inc.82 ]
  %_from67.0 = phi i8* [ %arrayidx75, %for.body.65 ], [ %incdec.ptr80, %for.inc.82 ]
  %_i68.0 = phi i32 [ 0, %for.body.65 ], [ %inc83, %for.inc.82 ]
  %39 = icmp sgt i32 %tmp24, -1, !dbg !1444
  %smax69 = select i1 %39, i32 %tmp24, i32 -1, !dbg !1444
  %40 = add i32 %smax69, 1, !dbg !1444
  %41 = sext i32 %40 to i64, !dbg !1444
  %42 = mul i64 4, %41, !dbg !1444
  %43 = add i64 0, %42, !dbg !1444
  %44 = mul i64 1, %41, !dbg !1444
  %45 = add i64 0, %44, !dbg !1444
  %scevgep70 = getelementptr float, float* %tmp26, i64 %45, !dbg !1444
  %scevgep7071 = ptrtoint float* %scevgep70 to i64
  %46 = add i64 %scevgep7071, 4, !dbg !1444
  %47 = sext i32 %memcnt.2 to i64, !dbg !1444
  %scevgep72 = getelementptr i8, i8* %call51, i64 %47, !dbg !1444
  %48 = mul i32 4, %40, !dbg !1444
  %49 = add i32 %memcnt.2, %48, !dbg !1444
  %50 = sext i32 %49 to i64, !dbg !1444
  %scevgep73 = getelementptr i8, i8* %call51, i64 %50, !dbg !1444
  %scevgep7374 = ptrtoint i8* %scevgep73 to i64
  %51 = add i64 %scevgep7374, 4, !dbg !1444
  %52 = icmp sgt i32 %tmp24, -1, !dbg !1444
  %smax62 = select i1 %52, i32 %tmp24, i32 -1, !dbg !1444
  %53 = add i32 %smax62, 1, !dbg !1444
  %54 = sext i32 %53 to i64, !dbg !1444
  %55 = mul i64 4, %54, !dbg !1444
  %56 = add i64 0, %55, !dbg !1444
  %57 = mul i64 1, %54, !dbg !1444
  %58 = add i64 0, %57, !dbg !1444
  %scevgep63 = getelementptr float, float* %tmp26, i64 %58, !dbg !1444
  %scevgep6364 = ptrtoint float* %scevgep63 to i64
  %59 = add i64 %scevgep6364, 4, !dbg !1444
  %60 = sext i32 %memcnt.2 to i64, !dbg !1444
  %scevgep65 = getelementptr i8, i8* %call51, i64 %60, !dbg !1444
  %61 = mul i32 4, %53, !dbg !1444
  %62 = add i32 %memcnt.2, %61, !dbg !1444
  %63 = sext i32 %62 to i64, !dbg !1444
  %scevgep66 = getelementptr i8, i8* %call51, i64 %63, !dbg !1444
  %scevgep6667 = ptrtoint i8* %scevgep66 to i64
  %64 = add i64 %scevgep6667, 4, !dbg !1444
  %65 = icmp sgt i32 %tmp24, -1, !dbg !1444
  %smax55 = select i1 %65, i32 %tmp24, i32 -1, !dbg !1444
  %66 = add i32 %smax55, 1, !dbg !1444
  %67 = sext i32 %66 to i64, !dbg !1444
  %68 = mul i64 4, %67, !dbg !1444
  %69 = add i64 0, %68, !dbg !1444
  %70 = mul i64 1, %67, !dbg !1444
  %71 = add i64 0, %70, !dbg !1444
  %scevgep56 = getelementptr float, float* %tmp26, i64 %71, !dbg !1444
  %scevgep5657 = ptrtoint float* %scevgep56 to i64
  %72 = add i64 %scevgep5657, 4, !dbg !1444
  %73 = sext i32 %memcnt.2 to i64, !dbg !1444
  %scevgep58 = getelementptr i8, i8* %call51, i64 %73, !dbg !1444
  %74 = mul i32 4, %66, !dbg !1444
  %75 = add i32 %memcnt.2, %74, !dbg !1444
  %76 = sext i32 %75 to i64, !dbg !1444
  %scevgep59 = getelementptr i8, i8* %call51, i64 %76, !dbg !1444
  %scevgep5960 = ptrtoint i8* %scevgep59 to i64
  %77 = add i64 %scevgep5960, 4, !dbg !1444
  %cmp77 = icmp slt i32 %_i68.0, 4, !dbg !1444
  br i1 %cmp77, label %for.body.79, label %for.end.84, !dbg !1442

for.body.79:                                      ; preds = %for.cond.76
  %incdec.ptr80 = getelementptr inbounds i8, i8* %_from67.0, i32 1, !dbg !1448
  %tmp28 = load i8, i8* %_from67.0, align 1, !dbg !1448
  %incdec.ptr81 = getelementptr inbounds i8, i8* %_to66.0, i32 1, !dbg !1448
  store i8 %tmp28, i8* %_to66.0, align 1, !dbg !1448
  br label %for.inc.82, !dbg !1448

for.inc.82:                                       ; preds = %for.body.79
  %inc83 = add nsw i32 %_i68.0, 1, !dbg !1450
  br label %for.cond.76, !dbg !1450

for.end.84:                                       ; preds = %for.cond.76
  %conv85 = sext i32 %memcnt.3 to i64, !dbg !1452
  %add86 = add i64 %conv85, 4, !dbg !1452
  %conv87 = trunc i64 %add86 to i32, !dbg !1452
  br label %for.inc.88, !dbg !1453

for.inc.88:                                       ; preds = %for.end.84
  %inc89 = add nsw i32 %j.1, 1, !dbg !1454
  br label %for.cond.62, !dbg !1455

for.end.90:                                       ; preds = %for.cond.62
  %memcnt.3.lcssa = phi i32 [ %memcnt.3, %for.cond.62 ]
  br label %for.inc.91, !dbg !1456

for.inc.91:                                       ; preds = %for.end.90
  %inc92 = add nsw i32 %i.1, 1, !dbg !1457
  br label %for.cond.58, !dbg !1458

for.end.93:                                       ; preds = %for.cond.58
  call void @free(i8* %call51) #4, !dbg !1459
  %call94 = call i32 (i32, ...) bitcast (i32 (...)* @close to i32 (i32, ...)*)(i32 %call), !dbg !1460
  %call95 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i32 0, i32 0)), !dbg !1461
  %input_prev_weights = getelementptr inbounds %struct.BPNN, %struct.BPNN* %call5, i32 0, i32 11, !dbg !1462
  %tmp29 = load float**, float*** %input_prev_weights, align 8, !dbg !1462
  %tmp30 = load i32, i32* %n1, align 4, !dbg !1463
  %tmp31 = load i32, i32* %n2, align 4, !dbg !1464
  %call96 = call i32 @bpnn_zero_weights(float** %tmp29, i32 %tmp30, i32 %tmp31), !dbg !1465
  %hidden_prev_weights = getelementptr inbounds %struct.BPNN, %struct.BPNN* %call5, i32 0, i32 12, !dbg !1466
  %tmp32 = load float**, float*** %hidden_prev_weights, align 8, !dbg !1466
  %tmp33 = load i32, i32* %n2, align 4, !dbg !1467
  %tmp34 = load i32, i32* %n3, align 4, !dbg !1468
  %call97 = call i32 @bpnn_zero_weights(float** %tmp32, i32 %tmp33, i32 %tmp34), !dbg !1469
  br label %return, !dbg !1470

return:                                           ; preds = %for.end.93, %if.then
  %retval.0 = phi %struct.BPNN* [ null, %if.then ], [ %call5, %for.end.93 ]
  ret %struct.BPNN* %retval.0, !dbg !1471
}

declare i32 @open(...) #3

declare i32 @read(...) #3

declare i32 @close(...) #3

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!101, !102}
!llvm.ident = !{!103}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !30)
!1 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Rodinia/backprop/src/backprop.c", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!2 = !{}
!3 = !{!4, !5, !6, !7, !8, !9, !28}
!4 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!5 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64, align: 64)
!6 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!7 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!8 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64, align: 64)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64, align: 64)
!10 = !DIDerivedType(tag: DW_TAG_typedef, name: "BPNN", file: !11, line: 32, baseType: !12)
!11 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Rodinia/backprop/src/backprop.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!12 = !DICompositeType(tag: DW_TAG_structure_type, file: !11, line: 12, size: 768, align: 64, elements: !13)
!13 = !{!14, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27}
!14 = !DIDerivedType(tag: DW_TAG_member, name: "input_n", scope: !12, file: !11, line: 13, baseType: !15, size: 32, align: 32)
!15 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "hidden_n", scope: !12, file: !11, line: 14, baseType: !15, size: 32, align: 32, offset: 32)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "output_n", scope: !12, file: !11, line: 15, baseType: !15, size: 32, align: 32, offset: 64)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "input_units", scope: !12, file: !11, line: 17, baseType: !5, size: 64, align: 64, offset: 128)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "hidden_units", scope: !12, file: !11, line: 18, baseType: !5, size: 64, align: 64, offset: 192)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "output_units", scope: !12, file: !11, line: 19, baseType: !5, size: 64, align: 64, offset: 256)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "hidden_delta", scope: !12, file: !11, line: 21, baseType: !5, size: 64, align: 64, offset: 320)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "output_delta", scope: !12, file: !11, line: 22, baseType: !5, size: 64, align: 64, offset: 384)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !12, file: !11, line: 24, baseType: !5, size: 64, align: 64, offset: 448)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "input_weights", scope: !12, file: !11, line: 26, baseType: !8, size: 64, align: 64, offset: 512)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "hidden_weights", scope: !12, file: !11, line: 27, baseType: !8, size: 64, align: 64, offset: 576)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "input_prev_weights", scope: !12, file: !11, line: 30, baseType: !8, size: 64, align: 64, offset: 640)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "hidden_prev_weights", scope: !12, file: !11, line: 31, baseType: !8, size: 64, align: 64, offset: 704)
!28 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !29, size: 64, align: 64)
!29 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!30 = !{!31, !36, !39, !42, !45, !46, !47, !50, !53, !56, !59, !60, !63, !66, !69, !70, !73, !76, !79, !82, !85, !88, !91, !92, !95, !98}
!31 = !DISubprogram(name: "rtclock", scope: !32, file: !32, line: 7, type: !33, isLocal: false, isDefinition: true, scopeLine: 8, isOptimized: false, function: double ()* @rtclock, variables: !2)
!32 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Rodinia/backprop/src/../../common/rodiniaUtilFunctions.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!33 = !DISubroutineType(types: !34)
!34 = !{!35}
!35 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!36 = !DISubprogram(name: "absVal", scope: !32, file: !32, line: 18, type: !37, isLocal: false, isDefinition: true, scopeLine: 19, flags: DIFlagPrototyped, isOptimized: false, function: float (float)* @absVal, variables: !2)
!37 = !DISubroutineType(types: !38)
!38 = !{!4, !4}
!39 = !DISubprogram(name: "percentDiff", scope: !32, file: !32, line: 32, type: !40, isLocal: false, isDefinition: true, scopeLine: 33, flags: DIFlagPrototyped, isOptimized: false, function: float (double, double)* @percentDiff, variables: !2)
!40 = !DISubroutineType(types: !41)
!41 = !{!4, !35, !35}
!42 = !DISubprogram(name: "drnd", scope: !1, file: !1, line: 35, type: !43, isLocal: false, isDefinition: true, scopeLine: 36, isOptimized: false, function: float ()* @drnd, variables: !2)
!43 = !DISubroutineType(types: !44)
!44 = !{!4}
!45 = !DISubprogram(name: "dpn1", scope: !1, file: !1, line: 41, type: !43, isLocal: false, isDefinition: true, scopeLine: 42, isOptimized: false, function: float ()* @dpn1, variables: !2)
!46 = !DISubprogram(name: "squash", scope: !1, file: !1, line: 48, type: !37, isLocal: false, isDefinition: true, scopeLine: 50, isOptimized: false, function: float (double)* @squash, variables: !2)
!47 = !DISubprogram(name: "alloc_1d_dbl", scope: !1, file: !1, line: 61, type: !48, isLocal: false, isDefinition: true, scopeLine: 63, isOptimized: false, function: float* (i32)* @alloc_1d_dbl, variables: !2)
!48 = !DISubroutineType(types: !49)
!49 = !{!5, !15}
!50 = !DISubprogram(name: "alloc_2d_dbl", scope: !1, file: !1, line: 77, type: !51, isLocal: false, isDefinition: true, scopeLine: 79, isOptimized: false, function: float** (i32, i32)* @alloc_2d_dbl, variables: !2)
!51 = !DISubroutineType(types: !52)
!52 = !{!8, !15, !15}
!53 = !DISubprogram(name: "bpnn_randomize_weights", scope: !1, file: !1, line: 97, type: !54, isLocal: false, isDefinition: true, scopeLine: 100, isOptimized: false, function: i32 (float**, i32, i32)* @bpnn_randomize_weights, variables: !2)
!54 = !DISubroutineType(types: !55)
!55 = !{!15, !8, !15, !15}
!56 = !DISubprogram(name: "bpnn_randomize_row", scope: !1, file: !1, line: 111, type: !57, isLocal: false, isDefinition: true, scopeLine: 114, isOptimized: false, function: i32 (float*, i32)* @bpnn_randomize_row, variables: !2)
!57 = !DISubroutineType(types: !58)
!58 = !{!15, !5, !15}
!59 = !DISubprogram(name: "bpnn_zero_weights", scope: !1, file: !1, line: 123, type: !54, isLocal: false, isDefinition: true, scopeLine: 126, isOptimized: false, function: i32 (float**, i32, i32)* @bpnn_zero_weights, variables: !2)
!60 = !DISubprogram(name: "bpnn_initialize", scope: !1, file: !1, line: 137, type: !61, isLocal: false, isDefinition: true, scopeLine: 138, isOptimized: false, function: void (i32)* @bpnn_initialize, variables: !2)
!61 = !DISubroutineType(types: !62)
!62 = !{null, !15}
!63 = !DISubprogram(name: "bpnn_internal_create", scope: !1, file: !1, line: 144, type: !64, isLocal: false, isDefinition: true, scopeLine: 146, isOptimized: false, function: %struct.BPNN* (i32, i32, i32)* @bpnn_internal_create, variables: !2)
!64 = !DISubroutineType(types: !65)
!65 = !{!9, !15, !15, !15}
!66 = !DISubprogram(name: "bpnn_free", scope: !1, file: !1, line: 176, type: !67, isLocal: false, isDefinition: true, scopeLine: 178, isOptimized: false, function: void (%struct.BPNN*)* @bpnn_free, variables: !2)
!67 = !DISubroutineType(types: !68)
!68 = !{null, !9}
!69 = !DISubprogram(name: "bpnn_create", scope: !1, file: !1, line: 219, type: !64, isLocal: false, isDefinition: true, scopeLine: 221, isOptimized: false, function: %struct.BPNN* (i32, i32, i32)* @bpnn_create, variables: !2)
!70 = !DISubprogram(name: "compareResults", scope: !1, file: !1, line: 239, type: !71, isLocal: false, isDefinition: true, scopeLine: 239, flags: DIFlagPrototyped, isOptimized: false, function: void (float*, float*, i32)* @compareResults, variables: !2)
!71 = !DISubroutineType(types: !72)
!72 = !{null, !5, !5, !15}
!73 = !DISubprogram(name: "bpnn_layerforward", scope: !1, file: !1, line: 253, type: !74, isLocal: false, isDefinition: true, scopeLine: 256, isOptimized: false, function: void (float*, float*, float**, i32, i32)* @bpnn_layerforward, variables: !2)
!74 = !DISubroutineType(types: !75)
!75 = !{null, !5, !5, !8, !15, !15}
!76 = !DISubprogram(name: "bpnn_output_error", scope: !1, file: !1, line: 310, type: !77, isLocal: false, isDefinition: true, scopeLine: 313, isOptimized: false, function: void (float*, float*, float*, i32, float*)* @bpnn_output_error, variables: !2)
!77 = !DISubroutineType(types: !78)
!78 = !{null, !5, !5, !5, !15, !5}
!79 = !DISubprogram(name: "bpnn_hidden_error", scope: !1, file: !1, line: 326, type: !80, isLocal: false, isDefinition: true, scopeLine: 335, isOptimized: false, function: void (float*, i32, float*, i32, float**, float*, float*)* @bpnn_hidden_error, variables: !2)
!80 = !DISubroutineType(types: !81)
!81 = !{null, !5, !15, !5, !15, !8, !5, !5}
!82 = !DISubprogram(name: "test", scope: !1, file: !1, line: 352, type: !83, isLocal: false, isDefinition: true, scopeLine: 352, flags: DIFlagPrototyped, isOptimized: false, function: void (float*, i32)* @test, variables: !2)
!83 = !DISubroutineType(types: !84)
!84 = !{null, !5, !15}
!85 = !DISubprogram(name: "compareResults2", scope: !1, file: !1, line: 359, type: !86, isLocal: false, isDefinition: true, scopeLine: 359, flags: DIFlagPrototyped, isOptimized: false, function: void (float*, float**, float*, float**, i32, i32)* @compareResults2, variables: !2)
!86 = !DISubroutineType(types: !87)
!87 = !{null, !5, !8, !5, !8, !15, !15}
!88 = !DISubprogram(name: "bpnn_adjust_weights", scope: !1, file: !1, line: 380, type: !89, isLocal: false, isDefinition: true, scopeLine: 382, isOptimized: false, function: void (float*, i32, float*, i32, float**, float**)* @bpnn_adjust_weights, variables: !2)
!89 = !DISubroutineType(types: !90)
!90 = !{null, !5, !15, !5, !15, !8, !8}
!91 = !DISubprogram(name: "bpnn_feedforward", scope: !1, file: !1, line: 437, type: !67, isLocal: false, isDefinition: true, scopeLine: 439, isOptimized: false, function: void (%struct.BPNN*)* @bpnn_feedforward, variables: !2)
!92 = !DISubprogram(name: "bpnn_train", scope: !1, file: !1, line: 455, type: !93, isLocal: false, isDefinition: true, scopeLine: 458, isOptimized: false, function: void (%struct.BPNN*, float*, float*)* @bpnn_train, variables: !2)
!93 = !DISubroutineType(types: !94)
!94 = !{null, !9, !5, !5}
!95 = !DISubprogram(name: "bpnn_save", scope: !1, file: !1, line: 491, type: !96, isLocal: false, isDefinition: true, scopeLine: 494, isOptimized: false, function: void (%struct.BPNN*, i8*)* @bpnn_save, variables: !2)
!96 = !DISubroutineType(types: !97)
!97 = !{null, !9, !28}
!98 = !DISubprogram(name: "bpnn_read", scope: !1, file: !1, line: 556, type: !99, isLocal: false, isDefinition: true, scopeLine: 558, isOptimized: false, function: %struct.BPNN* (i8*)* @bpnn_read, variables: !2)
!99 = !DISubroutineType(types: !100)
!100 = !{!9, !28}
!101 = !{i32 2, !"Dwarf Version", i32 4}
!102 = !{i32 2, !"Debug Info Version", i32 3}
!103 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!104 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Tzp", scope: !31, file: !32, line: 9, type: !105)
!105 = !DICompositeType(tag: DW_TAG_structure_type, name: "timezone", file: !106, line: 57, size: 64, align: 32, elements: !107)
!106 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/time.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!107 = !{!108, !109}
!108 = !DIDerivedType(tag: DW_TAG_member, name: "tz_minuteswest", scope: !105, file: !106, line: 59, baseType: !15, size: 32, align: 32)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "tz_dsttime", scope: !105, file: !106, line: 60, baseType: !15, size: 32, align: 32, offset: 32)
!110 = !DIExpression()
!111 = !DILocation(line: 9, column: 21, scope: !31)
!112 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Tp", scope: !31, file: !32, line: 10, type: !113)
!113 = !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !114, line: 31, size: 128, align: 64, elements: !115)
!114 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!115 = !{!116, !120}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !113, file: !114, line: 33, baseType: !117, size: 64, align: 64)
!117 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !118, line: 149, baseType: !119)
!118 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!119 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!120 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !113, file: !114, line: 34, baseType: !121, size: 64, align: 64, offset: 64)
!121 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !118, line: 151, baseType: !119)
!122 = !DILocation(line: 10, column: 20, scope: !31)
!123 = !DILocation(line: 12, column: 12, scope: !31)
!124 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stat", scope: !31, file: !32, line: 11, type: !15)
!125 = !DILocation(line: 11, column: 9, scope: !31)
!126 = !DILocation(line: 13, column: 14, scope: !127)
!127 = distinct !DILexicalBlock(scope: !31, file: !32, line: 13, column: 9)
!128 = !DILocation(line: 13, column: 9, scope: !31)
!129 = !DILocation(line: 13, column: 20, scope: !127)
!130 = !DILocation(line: 14, column: 15, scope: !31)
!131 = !DILocation(line: 14, column: 12, scope: !31)
!132 = !DILocation(line: 14, column: 27, scope: !31)
!133 = !DILocation(line: 14, column: 24, scope: !31)
!134 = !DILocation(line: 14, column: 34, scope: !31)
!135 = !DILocation(line: 14, column: 22, scope: !31)
!136 = !DILocation(line: 14, column: 5, scope: !31)
!137 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !36, file: !32, line: 18, type: !4)
!138 = !DILocation(line: 18, column: 20, scope: !36)
!139 = !DILocation(line: 20, column: 7, scope: !140)
!140 = distinct !DILexicalBlock(scope: !36, file: !32, line: 20, column: 5)
!141 = !DILocation(line: 20, column: 5, scope: !36)
!142 = !DILocation(line: 22, column: 13, scope: !143)
!143 = distinct !DILexicalBlock(scope: !140, file: !32, line: 21, column: 2)
!144 = !DILocation(line: 22, column: 3, scope: !143)
!145 = !DILocation(line: 26, column: 3, scope: !146)
!146 = distinct !DILexicalBlock(scope: !140, file: !32, line: 25, column: 2)
!147 = !DILocation(line: 28, column: 1, scope: !36)
!148 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val1", arg: 1, scope: !39, file: !32, line: 32, type: !35)
!149 = !DILocation(line: 32, column: 26, scope: !39)
!150 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val2", arg: 2, scope: !39, file: !32, line: 32, type: !35)
!151 = !DILocation(line: 32, column: 39, scope: !39)
!152 = !DILocation(line: 34, column: 14, scope: !153)
!153 = distinct !DILexicalBlock(scope: !39, file: !32, line: 34, column: 6)
!154 = !DILocation(line: 34, column: 7, scope: !153)
!155 = !DILocation(line: 34, column: 20, scope: !153)
!156 = !DILocation(line: 34, column: 28, scope: !153)
!157 = !DILocation(line: 34, column: 39, scope: !158)
!158 = !DILexicalBlockFile(scope: !153, file: !32, discriminator: 1)
!159 = !DILocation(line: 34, column: 32, scope: !153)
!160 = !DILocation(line: 34, column: 45, scope: !153)
!161 = !DILocation(line: 34, column: 6, scope: !39)
!162 = !DILocation(line: 36, column: 3, scope: !163)
!163 = distinct !DILexicalBlock(scope: !153, file: !32, line: 35, column: 2)
!164 = !DILocation(line: 41, column: 43, scope: !165)
!165 = distinct !DILexicalBlock(scope: !153, file: !32, line: 40, column: 2)
!166 = !DILocation(line: 41, column: 38, scope: !165)
!167 = !DILocation(line: 41, column: 31, scope: !165)
!168 = !DILocation(line: 41, column: 65, scope: !165)
!169 = !DILocation(line: 41, column: 60, scope: !165)
!170 = !DILocation(line: 41, column: 53, scope: !165)
!171 = !DILocation(line: 41, column: 51, scope: !165)
!172 = !DILocation(line: 41, column: 24, scope: !165)
!173 = !DILocation(line: 41, column: 21, scope: !165)
!174 = !DILocation(line: 41, column: 7, scope: !165)
!175 = !DILocation(line: 43, column: 1, scope: !39)
!176 = !DILocation(line: 37, column: 19, scope: !42)
!177 = !DILocation(line: 37, column: 11, scope: !42)
!178 = !DILocation(line: 37, column: 26, scope: !42)
!179 = !DILocation(line: 37, column: 3, scope: !42)
!180 = !DILocation(line: 43, column: 12, scope: !45)
!181 = !DILocation(line: 43, column: 19, scope: !45)
!182 = !DILocation(line: 43, column: 26, scope: !45)
!183 = !DILocation(line: 43, column: 10, scope: !45)
!184 = !DILocation(line: 43, column: 3, scope: !45)
!185 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 1, scope: !46, file: !1, line: 49, type: !4)
!186 = !DILocation(line: 49, column: 7, scope: !46)
!187 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "m", scope: !46, file: !1, line: 51, type: !4)
!188 = !DILocation(line: 51, column: 9, scope: !46)
!189 = !DILocation(line: 55, column: 28, scope: !46)
!190 = !DILocation(line: 55, column: 24, scope: !46)
!191 = !DILocation(line: 55, column: 22, scope: !46)
!192 = !DILocation(line: 55, column: 15, scope: !46)
!193 = !DILocation(line: 55, column: 10, scope: !46)
!194 = !DILocation(line: 55, column: 3, scope: !46)
!195 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 1, scope: !47, file: !1, line: 62, type: !15)
!196 = !DILocation(line: 62, column: 5, scope: !47)
!197 = !DILocation(line: 66, column: 39, scope: !47)
!198 = !DILocation(line: 66, column: 41, scope: !47)
!199 = !DILocation(line: 66, column: 27, scope: !47)
!200 = !DILocation(line: 66, column: 19, scope: !47)
!201 = !DILocation(line: 66, column: 9, scope: !47)
!202 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "new", scope: !47, file: !1, line: 64, type: !5)
!203 = !DILocation(line: 64, column: 10, scope: !47)
!204 = !DILocation(line: 67, column: 11, scope: !205)
!205 = distinct !DILexicalBlock(scope: !47, file: !1, line: 67, column: 7)
!206 = !DILocation(line: 67, column: 7, scope: !47)
!207 = !DILocation(line: 68, column: 5, scope: !208)
!208 = distinct !DILexicalBlock(scope: !205, file: !1, line: 67, column: 20)
!209 = !DILocation(line: 69, column: 5, scope: !208)
!210 = !DILocation(line: 71, column: 3, scope: !47)
!211 = !DILocation(line: 72, column: 1, scope: !47)
!212 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "m", arg: 1, scope: !50, file: !1, line: 78, type: !15)
!213 = !DILocation(line: 78, column: 5, scope: !50)
!214 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 2, scope: !50, file: !1, line: 78, type: !15)
!215 = !DILocation(line: 78, column: 8, scope: !50)
!216 = !DILocation(line: 83, column: 40, scope: !50)
!217 = !DILocation(line: 83, column: 42, scope: !50)
!218 = !DILocation(line: 83, column: 28, scope: !50)
!219 = !DILocation(line: 83, column: 20, scope: !50)
!220 = !DILocation(line: 83, column: 9, scope: !50)
!221 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "new", scope: !50, file: !1, line: 81, type: !8)
!222 = !DILocation(line: 81, column: 11, scope: !50)
!223 = !DILocation(line: 84, column: 11, scope: !224)
!224 = distinct !DILexicalBlock(scope: !50, file: !1, line: 84, column: 7)
!225 = !DILocation(line: 84, column: 7, scope: !50)
!226 = !DILocation(line: 85, column: 5, scope: !227)
!227 = distinct !DILexicalBlock(scope: !224, file: !1, line: 84, column: 20)
!228 = !DILocation(line: 86, column: 5, scope: !227)
!229 = !DILocation(line: 90, column: 14, scope: !230)
!230 = distinct !DILexicalBlock(scope: !231, file: !1, line: 89, column: 27)
!231 = distinct !DILexicalBlock(scope: !232, file: !1, line: 89, column: 3)
!232 = distinct !DILexicalBlock(scope: !50, file: !1, line: 89, column: 3)
!233 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !50, file: !1, line: 80, type: !15)
!234 = !DILocation(line: 80, column: 7, scope: !50)
!235 = !DILocation(line: 89, column: 8, scope: !232)
!236 = !DILocation(line: 89, column: 17, scope: !231)
!237 = !DILocation(line: 89, column: 3, scope: !232)
!238 = !DILocation(line: 90, column: 5, scope: !230)
!239 = !DILocation(line: 90, column: 12, scope: !230)
!240 = !DILocation(line: 91, column: 3, scope: !230)
!241 = !DILocation(line: 89, column: 23, scope: !231)
!242 = !DILocation(line: 89, column: 3, scope: !231)
!243 = !DILocation(line: 93, column: 3, scope: !50)
!244 = !DILocation(line: 94, column: 1, scope: !50)
!245 = !DILocation(line: 105, column: 24, scope: !246)
!246 = distinct !DILexicalBlock(scope: !247, file: !1, line: 104, column: 30)
!247 = distinct !DILexicalBlock(scope: !248, file: !1, line: 104, column: 5)
!248 = distinct !DILexicalBlock(scope: !249, file: !1, line: 104, column: 5)
!249 = distinct !DILexicalBlock(scope: !250, file: !1, line: 103, column: 28)
!250 = distinct !DILexicalBlock(scope: !251, file: !1, line: 103, column: 3)
!251 = distinct !DILexicalBlock(scope: !53, file: !1, line: 103, column: 3)
!252 = !DILocation(line: 106, column: 16, scope: !246)
!253 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !53, file: !1, line: 101, type: !15)
!254 = !DILocation(line: 101, column: 10, scope: !53)
!255 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !53, file: !1, line: 101, type: !15)
!256 = !DILocation(line: 101, column: 7, scope: !53)
!257 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "w", arg: 1, scope: !53, file: !1, line: 98, type: !8)
!258 = !DILocation(line: 98, column: 9, scope: !53)
!259 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "m", arg: 2, scope: !53, file: !1, line: 99, type: !15)
!260 = !DILocation(line: 99, column: 5, scope: !53)
!261 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 3, scope: !53, file: !1, line: 99, type: !15)
!262 = !DILocation(line: 99, column: 8, scope: !53)
!263 = !DILocation(line: 103, column: 8, scope: !251)
!264 = !DILocation(line: 103, column: 17, scope: !250)
!265 = !DILocation(line: 103, column: 3, scope: !251)
!266 = !DILocation(line: 104, column: 10, scope: !248)
!267 = !DILocation(line: 104, column: 19, scope: !247)
!268 = !DILocation(line: 104, column: 5, scope: !248)
!269 = !DILocation(line: 105, column: 16, scope: !246)
!270 = !DILocation(line: 105, column: 30, scope: !246)
!271 = !DILocation(line: 105, column: 6, scope: !246)
!272 = !DILocation(line: 105, column: 14, scope: !246)
!273 = !DILocation(line: 106, column: 6, scope: !246)
!274 = !DILocation(line: 106, column: 14, scope: !246)
!275 = !DILocation(line: 107, column: 5, scope: !246)
!276 = !DILocation(line: 104, column: 26, scope: !247)
!277 = !DILocation(line: 104, column: 5, scope: !247)
!278 = !DILocation(line: 108, column: 3, scope: !249)
!279 = !DILocation(line: 103, column: 24, scope: !250)
!280 = !DILocation(line: 103, column: 3, scope: !250)
!281 = !DILocation(line: 109, column: 1, scope: !53)
!282 = !DILocation(line: 117, column: 19, scope: !283)
!283 = distinct !DILexicalBlock(scope: !284, file: !1, line: 116, column: 27)
!284 = distinct !DILexicalBlock(scope: !285, file: !1, line: 116, column: 2)
!285 = distinct !DILexicalBlock(scope: !56, file: !1, line: 116, column: 2)
!286 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !56, file: !1, line: 115, type: !15)
!287 = !DILocation(line: 115, column: 6, scope: !56)
!288 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "w", arg: 1, scope: !56, file: !1, line: 112, type: !5)
!289 = !DILocation(line: 112, column: 8, scope: !56)
!290 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "m", arg: 2, scope: !56, file: !1, line: 113, type: !15)
!291 = !DILocation(line: 113, column: 5, scope: !56)
!292 = !DILocation(line: 116, column: 7, scope: !285)
!293 = !DILocation(line: 116, column: 16, scope: !284)
!294 = !DILocation(line: 116, column: 2, scope: !285)
!295 = !DILocation(line: 117, column: 11, scope: !283)
!296 = !DILocation(line: 117, column: 25, scope: !283)
!297 = !DILocation(line: 117, column: 4, scope: !283)
!298 = !DILocation(line: 117, column: 9, scope: !283)
!299 = !DILocation(line: 118, column: 3, scope: !283)
!300 = !DILocation(line: 118, column: 8, scope: !283)
!301 = !DILocation(line: 119, column: 5, scope: !283)
!302 = !DILocation(line: 116, column: 23, scope: !284)
!303 = !DILocation(line: 116, column: 2, scope: !284)
!304 = !DILocation(line: 120, column: 1, scope: !56)
!305 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !59, file: !1, line: 127, type: !15)
!306 = !DILocation(line: 127, column: 10, scope: !59)
!307 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !59, file: !1, line: 127, type: !15)
!308 = !DILocation(line: 127, column: 7, scope: !59)
!309 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "w", arg: 1, scope: !59, file: !1, line: 124, type: !8)
!310 = !DILocation(line: 124, column: 9, scope: !59)
!311 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "m", arg: 2, scope: !59, file: !1, line: 125, type: !15)
!312 = !DILocation(line: 125, column: 5, scope: !59)
!313 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n", arg: 3, scope: !59, file: !1, line: 125, type: !15)
!314 = !DILocation(line: 125, column: 8, scope: !59)
!315 = !DILocation(line: 129, column: 8, scope: !316)
!316 = distinct !DILexicalBlock(scope: !59, file: !1, line: 129, column: 3)
!317 = !DILocation(line: 129, column: 17, scope: !318)
!318 = distinct !DILexicalBlock(scope: !316, file: !1, line: 129, column: 3)
!319 = !DILocation(line: 129, column: 3, scope: !316)
!320 = !DILocation(line: 130, column: 10, scope: !321)
!321 = distinct !DILexicalBlock(scope: !322, file: !1, line: 130, column: 5)
!322 = distinct !DILexicalBlock(scope: !318, file: !1, line: 129, column: 28)
!323 = !DILocation(line: 130, column: 19, scope: !324)
!324 = distinct !DILexicalBlock(scope: !321, file: !1, line: 130, column: 5)
!325 = !DILocation(line: 130, column: 5, scope: !321)
!326 = !DILocation(line: 131, column: 7, scope: !327)
!327 = distinct !DILexicalBlock(scope: !324, file: !1, line: 130, column: 30)
!328 = !DILocation(line: 131, column: 15, scope: !327)
!329 = !DILocation(line: 132, column: 5, scope: !327)
!330 = !DILocation(line: 130, column: 26, scope: !324)
!331 = !DILocation(line: 130, column: 5, scope: !324)
!332 = !DILocation(line: 133, column: 3, scope: !322)
!333 = !DILocation(line: 129, column: 24, scope: !318)
!334 = !DILocation(line: 129, column: 3, scope: !318)
!335 = !DILocation(line: 134, column: 1, scope: !59)
!336 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "seed", arg: 1, scope: !60, file: !1, line: 137, type: !15)
!337 = !DILocation(line: 137, column: 22, scope: !60)
!338 = !DILocation(line: 139, column: 3, scope: !60)
!339 = !DILocation(line: 140, column: 3, scope: !60)
!340 = !DILocation(line: 141, column: 1, scope: !60)
!341 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n_in", arg: 1, scope: !63, file: !1, line: 145, type: !15)
!342 = !DILocation(line: 145, column: 5, scope: !63)
!343 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n_hidden", arg: 2, scope: !63, file: !1, line: 145, type: !15)
!344 = !DILocation(line: 145, column: 11, scope: !63)
!345 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n_out", arg: 3, scope: !63, file: !1, line: 145, type: !15)
!346 = !DILocation(line: 145, column: 21, scope: !63)
!347 = !DILocation(line: 149, column: 21, scope: !63)
!348 = !DILocation(line: 149, column: 12, scope: !63)
!349 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newnet", scope: !63, file: !1, line: 147, type: !9)
!350 = !DILocation(line: 147, column: 9, scope: !63)
!351 = !DILocation(line: 150, column: 14, scope: !352)
!352 = distinct !DILexicalBlock(scope: !63, file: !1, line: 150, column: 7)
!353 = !DILocation(line: 150, column: 7, scope: !63)
!354 = !DILocation(line: 151, column: 5, scope: !355)
!355 = distinct !DILexicalBlock(scope: !352, file: !1, line: 150, column: 23)
!356 = !DILocation(line: 152, column: 5, scope: !355)
!357 = !DILocation(line: 155, column: 11, scope: !63)
!358 = !DILocation(line: 155, column: 19, scope: !63)
!359 = !DILocation(line: 156, column: 11, scope: !63)
!360 = !DILocation(line: 156, column: 20, scope: !63)
!361 = !DILocation(line: 157, column: 11, scope: !63)
!362 = !DILocation(line: 157, column: 20, scope: !63)
!363 = !DILocation(line: 158, column: 43, scope: !63)
!364 = !DILocation(line: 158, column: 25, scope: !63)
!365 = !DILocation(line: 158, column: 11, scope: !63)
!366 = !DILocation(line: 158, column: 23, scope: !63)
!367 = !DILocation(line: 159, column: 48, scope: !63)
!368 = !DILocation(line: 159, column: 26, scope: !63)
!369 = !DILocation(line: 159, column: 11, scope: !63)
!370 = !DILocation(line: 159, column: 24, scope: !63)
!371 = !DILocation(line: 160, column: 45, scope: !63)
!372 = !DILocation(line: 160, column: 26, scope: !63)
!373 = !DILocation(line: 160, column: 11, scope: !63)
!374 = !DILocation(line: 160, column: 24, scope: !63)
!375 = !DILocation(line: 162, column: 48, scope: !63)
!376 = !DILocation(line: 162, column: 26, scope: !63)
!377 = !DILocation(line: 162, column: 11, scope: !63)
!378 = !DILocation(line: 162, column: 24, scope: !63)
!379 = !DILocation(line: 163, column: 45, scope: !63)
!380 = !DILocation(line: 163, column: 26, scope: !63)
!381 = !DILocation(line: 163, column: 11, scope: !63)
!382 = !DILocation(line: 163, column: 24, scope: !63)
!383 = !DILocation(line: 164, column: 39, scope: !63)
!384 = !DILocation(line: 164, column: 20, scope: !63)
!385 = !DILocation(line: 164, column: 11, scope: !63)
!386 = !DILocation(line: 164, column: 18, scope: !63)
!387 = !DILocation(line: 166, column: 45, scope: !63)
!388 = !DILocation(line: 166, column: 59, scope: !63)
!389 = !DILocation(line: 166, column: 27, scope: !63)
!390 = !DILocation(line: 166, column: 11, scope: !63)
!391 = !DILocation(line: 166, column: 25, scope: !63)
!392 = !DILocation(line: 167, column: 50, scope: !63)
!393 = !DILocation(line: 167, column: 61, scope: !63)
!394 = !DILocation(line: 167, column: 28, scope: !63)
!395 = !DILocation(line: 167, column: 11, scope: !63)
!396 = !DILocation(line: 167, column: 26, scope: !63)
!397 = !DILocation(line: 169, column: 50, scope: !63)
!398 = !DILocation(line: 169, column: 64, scope: !63)
!399 = !DILocation(line: 169, column: 32, scope: !63)
!400 = !DILocation(line: 169, column: 11, scope: !63)
!401 = !DILocation(line: 169, column: 30, scope: !63)
!402 = !DILocation(line: 170, column: 55, scope: !63)
!403 = !DILocation(line: 170, column: 66, scope: !63)
!404 = !DILocation(line: 170, column: 33, scope: !63)
!405 = !DILocation(line: 170, column: 11, scope: !63)
!406 = !DILocation(line: 170, column: 31, scope: !63)
!407 = !DILocation(line: 172, column: 3, scope: !63)
!408 = !DILocation(line: 173, column: 1, scope: !63)
!409 = !DILocation(line: 193, column: 24, scope: !410)
!410 = distinct !DILexicalBlock(scope: !411, file: !1, line: 192, column: 29)
!411 = distinct !DILexicalBlock(scope: !412, file: !1, line: 192, column: 3)
!412 = distinct !DILexicalBlock(scope: !66, file: !1, line: 192, column: 3)
!413 = !DILocation(line: 194, column: 24, scope: !410)
!414 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !66, file: !1, line: 179, type: !15)
!415 = !DILocation(line: 179, column: 15, scope: !66)
!416 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "net", arg: 1, scope: !66, file: !1, line: 177, type: !9)
!417 = !DILocation(line: 177, column: 7, scope: !66)
!418 = !DILocation(line: 181, column: 13, scope: !66)
!419 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n1", scope: !66, file: !1, line: 179, type: !15)
!420 = !DILocation(line: 179, column: 7, scope: !66)
!421 = !DILocation(line: 182, column: 13, scope: !66)
!422 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n2", scope: !66, file: !1, line: 179, type: !15)
!423 = !DILocation(line: 179, column: 11, scope: !66)
!424 = !DILocation(line: 184, column: 22, scope: !66)
!425 = !DILocation(line: 184, column: 8, scope: !66)
!426 = !DILocation(line: 184, column: 3, scope: !66)
!427 = !DILocation(line: 185, column: 22, scope: !66)
!428 = !DILocation(line: 185, column: 8, scope: !66)
!429 = !DILocation(line: 185, column: 3, scope: !66)
!430 = !DILocation(line: 186, column: 22, scope: !66)
!431 = !DILocation(line: 186, column: 8, scope: !66)
!432 = !DILocation(line: 186, column: 3, scope: !66)
!433 = !DILocation(line: 188, column: 22, scope: !66)
!434 = !DILocation(line: 188, column: 8, scope: !66)
!435 = !DILocation(line: 188, column: 3, scope: !66)
!436 = !DILocation(line: 189, column: 22, scope: !66)
!437 = !DILocation(line: 189, column: 8, scope: !66)
!438 = !DILocation(line: 189, column: 3, scope: !66)
!439 = !DILocation(line: 190, column: 22, scope: !66)
!440 = !DILocation(line: 190, column: 8, scope: !66)
!441 = !DILocation(line: 190, column: 3, scope: !66)
!442 = !DILocation(line: 192, column: 8, scope: !412)
!443 = !DILocation(line: 192, column: 17, scope: !411)
!444 = !DILocation(line: 192, column: 3, scope: !412)
!445 = !DILocation(line: 193, column: 19, scope: !410)
!446 = !DILocation(line: 193, column: 10, scope: !410)
!447 = !DILocation(line: 193, column: 5, scope: !410)
!448 = !DILocation(line: 194, column: 19, scope: !410)
!449 = !DILocation(line: 194, column: 10, scope: !410)
!450 = !DILocation(line: 194, column: 5, scope: !410)
!451 = !DILocation(line: 195, column: 3, scope: !410)
!452 = !DILocation(line: 192, column: 25, scope: !411)
!453 = !DILocation(line: 192, column: 3, scope: !411)
!454 = !DILocation(line: 200, column: 24, scope: !455)
!455 = distinct !DILexicalBlock(scope: !456, file: !1, line: 199, column: 29)
!456 = distinct !DILexicalBlock(scope: !457, file: !1, line: 199, column: 3)
!457 = distinct !DILexicalBlock(scope: !66, file: !1, line: 199, column: 3)
!458 = !DILocation(line: 201, column: 24, scope: !455)
!459 = !DILocation(line: 196, column: 22, scope: !66)
!460 = !DILocation(line: 196, column: 8, scope: !66)
!461 = !DILocation(line: 196, column: 3, scope: !66)
!462 = !DILocation(line: 197, column: 22, scope: !66)
!463 = !DILocation(line: 197, column: 8, scope: !66)
!464 = !DILocation(line: 197, column: 3, scope: !66)
!465 = !DILocation(line: 199, column: 8, scope: !457)
!466 = !DILocation(line: 199, column: 17, scope: !456)
!467 = !DILocation(line: 199, column: 3, scope: !457)
!468 = !DILocation(line: 200, column: 19, scope: !455)
!469 = !DILocation(line: 200, column: 10, scope: !455)
!470 = !DILocation(line: 200, column: 5, scope: !455)
!471 = !DILocation(line: 201, column: 19, scope: !455)
!472 = !DILocation(line: 201, column: 10, scope: !455)
!473 = !DILocation(line: 201, column: 5, scope: !455)
!474 = !DILocation(line: 202, column: 3, scope: !455)
!475 = !DILocation(line: 199, column: 25, scope: !456)
!476 = !DILocation(line: 199, column: 3, scope: !456)
!477 = !DILocation(line: 203, column: 22, scope: !66)
!478 = !DILocation(line: 203, column: 8, scope: !66)
!479 = !DILocation(line: 203, column: 3, scope: !66)
!480 = !DILocation(line: 204, column: 22, scope: !66)
!481 = !DILocation(line: 204, column: 8, scope: !66)
!482 = !DILocation(line: 204, column: 3, scope: !66)
!483 = !DILocation(line: 206, column: 8, scope: !66)
!484 = !DILocation(line: 206, column: 3, scope: !66)
!485 = !DILocation(line: 207, column: 1, scope: !66)
!486 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n_in", arg: 1, scope: !69, file: !1, line: 220, type: !15)
!487 = !DILocation(line: 220, column: 5, scope: !69)
!488 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n_hidden", arg: 2, scope: !69, file: !1, line: 220, type: !15)
!489 = !DILocation(line: 220, column: 11, scope: !69)
!490 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n_out", arg: 3, scope: !69, file: !1, line: 220, type: !15)
!491 = !DILocation(line: 220, column: 21, scope: !69)
!492 = !DILocation(line: 225, column: 12, scope: !69)
!493 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "newnet", scope: !69, file: !1, line: 223, type: !9)
!494 = !DILocation(line: 223, column: 9, scope: !69)
!495 = !DILocation(line: 230, column: 34, scope: !69)
!496 = !DILocation(line: 230, column: 3, scope: !69)
!497 = !DILocation(line: 232, column: 34, scope: !69)
!498 = !DILocation(line: 232, column: 3, scope: !69)
!499 = !DILocation(line: 233, column: 29, scope: !69)
!500 = !DILocation(line: 233, column: 3, scope: !69)
!501 = !DILocation(line: 234, column: 29, scope: !69)
!502 = !DILocation(line: 234, column: 3, scope: !69)
!503 = !DILocation(line: 235, column: 30, scope: !69)
!504 = !DILocation(line: 235, column: 3, scope: !69)
!505 = !DILocation(line: 236, column: 3, scope: !69)
!506 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fail", scope: !70, file: !1, line: 241, type: !15)
!507 = !DILocation(line: 241, column: 7, scope: !70)
!508 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !70, file: !1, line: 240, type: !15)
!509 = !DILocation(line: 240, column: 7, scope: !70)
!510 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "l2", arg: 1, scope: !70, file: !1, line: 239, type: !5)
!511 = !DILocation(line: 239, column: 28, scope: !70)
!512 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "l2_gpu", arg: 2, scope: !70, file: !1, line: 239, type: !5)
!513 = !DILocation(line: 239, column: 39, scope: !70)
!514 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n2", arg: 3, scope: !70, file: !1, line: 239, type: !15)
!515 = !DILocation(line: 239, column: 51, scope: !70)
!516 = !DILocation(line: 243, column: 8, scope: !517)
!517 = distinct !DILexicalBlock(scope: !70, file: !1, line: 243, column: 3)
!518 = !DILocation(line: 243, column: 14, scope: !519)
!519 = distinct !DILexicalBlock(scope: !517, file: !1, line: 243, column: 3)
!520 = !DILocation(line: 243, column: 3, scope: !517)
!521 = !DILocation(line: 244, column: 23, scope: !522)
!522 = distinct !DILexicalBlock(scope: !523, file: !1, line: 244, column: 11)
!523 = distinct !DILexicalBlock(scope: !519, file: !1, line: 243, column: 25)
!524 = !DILocation(line: 244, column: 30, scope: !522)
!525 = !DILocation(line: 244, column: 11, scope: !522)
!526 = !DILocation(line: 244, column: 41, scope: !522)
!527 = !DILocation(line: 244, column: 11, scope: !523)
!528 = !DILocation(line: 245, column: 6, scope: !529)
!529 = distinct !DILexicalBlock(scope: !522, file: !1, line: 244, column: 60)
!530 = !DILocation(line: 246, column: 7, scope: !529)
!531 = !DILocation(line: 247, column: 3, scope: !523)
!532 = !DILocation(line: 243, column: 21, scope: !519)
!533 = !DILocation(line: 243, column: 3, scope: !519)
!534 = !DILocation(line: 250, column: 3, scope: !70)
!535 = !DILocation(line: 251, column: 1, scope: !70)
!536 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !73, file: !1, line: 259, type: !15)
!537 = !DILocation(line: 259, column: 10, scope: !73)
!538 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !73, file: !1, line: 259, type: !15)
!539 = !DILocation(line: 259, column: 7, scope: !73)
!540 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "l1", arg: 1, scope: !73, file: !1, line: 254, type: !5)
!541 = !DILocation(line: 254, column: 8, scope: !73)
!542 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "l2", arg: 2, scope: !73, file: !1, line: 254, type: !5)
!543 = !DILocation(line: 254, column: 13, scope: !73)
!544 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "conn", arg: 3, scope: !73, file: !1, line: 254, type: !8)
!545 = !DILocation(line: 254, column: 19, scope: !73)
!546 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n1", arg: 4, scope: !73, file: !1, line: 255, type: !15)
!547 = !DILocation(line: 255, column: 5, scope: !73)
!548 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "n2", arg: 5, scope: !73, file: !1, line: 255, type: !15)
!549 = !DILocation(line: 255, column: 9, scope: !73)
!550 = !DILocation(line: 260, column: 55, scope: !73)
!551 = !DILocation(line: 260, column: 62, scope: !73)
!552 = !DILocation(line: 260, column: 58, scope: !73)
!553 = !DILocation(line: 260, column: 51, scope: !73)
!554 = !DILocation(line: 260, column: 50, scope: !73)
!555 = !DILocation(line: 260, column: 30, scope: !73)
!556 = !DILocation(line: 260, column: 21, scope: !73)
!557 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "conn_gpu", scope: !73, file: !1, line: 260, type: !5)
!558 = !DILocation(line: 260, column: 10, scope: !73)
!559 = !DILocation(line: 262, column: 10, scope: !560)
!560 = distinct !DILexicalBlock(scope: !73, file: !1, line: 262, column: 5)
!561 = !DILocation(line: 262, column: 19, scope: !562)
!562 = distinct !DILexicalBlock(scope: !560, file: !1, line: 262, column: 5)
!563 = !DILocation(line: 262, column: 5, scope: !560)
!564 = !DILocation(line: 263, column: 15, scope: !565)
!565 = distinct !DILexicalBlock(scope: !566, file: !1, line: 263, column: 10)
!566 = distinct !DILexicalBlock(scope: !562, file: !1, line: 262, column: 31)
!567 = !DILocation(line: 263, column: 24, scope: !568)
!568 = distinct !DILexicalBlock(scope: !565, file: !1, line: 263, column: 10)
!569 = !DILocation(line: 263, column: 10, scope: !565)
!570 = !DILocation(line: 264, column: 33, scope: !571)
!571 = distinct !DILexicalBlock(scope: !568, file: !1, line: 263, column: 36)
!572 = !DILocation(line: 264, column: 22, scope: !571)
!573 = !DILocation(line: 264, column: 26, scope: !571)
!574 = !DILocation(line: 264, column: 12, scope: !571)
!575 = !DILocation(line: 264, column: 31, scope: !571)
!576 = !DILocation(line: 265, column: 10, scope: !571)
!577 = !DILocation(line: 263, column: 32, scope: !568)
!578 = !DILocation(line: 263, column: 10, scope: !568)
!579 = !DILocation(line: 266, column: 5, scope: !566)
!580 = !DILocation(line: 262, column: 27, scope: !562)
!581 = !DILocation(line: 262, column: 5, scope: !562)
!582 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sum", scope: !73, file: !1, line: 258, type: !4)
!583 = !DILocation(line: 258, column: 9, scope: !73)
!584 = !DILocation(line: 268, column: 52, scope: !73)
!585 = !DILocation(line: 268, column: 49, scope: !73)
!586 = !DILocation(line: 268, column: 48, scope: !73)
!587 = !DILocation(line: 268, column: 28, scope: !73)
!588 = !DILocation(line: 268, column: 19, scope: !73)
!589 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "l2_gpu", scope: !73, file: !1, line: 268, type: !5)
!590 = !DILocation(line: 268, column: 10, scope: !73)
!591 = !DILocation(line: 272, column: 3, scope: !73)
!592 = !DILocation(line: 272, column: 9, scope: !73)
!593 = !DILocation(line: 274, column: 13, scope: !73)
!594 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_start", scope: !73, file: !1, line: 257, type: !35)
!595 = !DILocation(line: 257, column: 10, scope: !73)
!596 = !DILocation(line: 279, column: 9, scope: !597)
!597 = distinct !DILexicalBlock(scope: !598, file: !1, line: 279, column: 4)
!598 = distinct !DILexicalBlock(scope: !73, file: !1, line: 277, column: 3)
!599 = !DILocation(line: 279, column: 18, scope: !600)
!600 = distinct !DILexicalBlock(scope: !597, file: !1, line: 279, column: 4)
!601 = !DILocation(line: 279, column: 4, scope: !597)
!602 = !DILocation(line: 282, column: 11, scope: !603)
!603 = distinct !DILexicalBlock(scope: !604, file: !1, line: 282, column: 6)
!604 = distinct !DILexicalBlock(scope: !600, file: !1, line: 279, column: 30)
!605 = !DILocation(line: 282, column: 20, scope: !606)
!606 = distinct !DILexicalBlock(scope: !603, file: !1, line: 282, column: 6)
!607 = !DILocation(line: 282, column: 6, scope: !603)
!608 = !DILocation(line: 283, column: 22, scope: !609)
!609 = distinct !DILexicalBlock(scope: !606, file: !1, line: 282, column: 32)
!610 = !DILocation(line: 283, column: 26, scope: !609)
!611 = !DILocation(line: 283, column: 12, scope: !609)
!612 = !DILocation(line: 283, column: 33, scope: !609)
!613 = !DILocation(line: 283, column: 31, scope: !609)
!614 = !DILocation(line: 283, column: 9, scope: !609)
!615 = !DILocation(line: 284, column: 23, scope: !609)
!616 = !DILocation(line: 284, column: 27, scope: !609)
!617 = !DILocation(line: 284, column: 13, scope: !609)
!618 = !DILocation(line: 284, column: 34, scope: !609)
!619 = !DILocation(line: 284, column: 32, scope: !609)
!620 = !DILocation(line: 285, column: 6, scope: !609)
!621 = !DILocation(line: 282, column: 28, scope: !606)
!622 = !DILocation(line: 282, column: 6, scope: !606)
!623 = !DILocation(line: 286, column: 36, scope: !604)
!624 = !DILocation(line: 286, column: 32, scope: !604)
!625 = !DILocation(line: 286, column: 30, scope: !604)
!626 = !DILocation(line: 286, column: 23, scope: !604)
!627 = !DILocation(line: 286, column: 18, scope: !604)
!628 = !DILocation(line: 286, column: 6, scope: !604)
!629 = !DILocation(line: 286, column: 16, scope: !604)
!630 = !DILocation(line: 287, column: 4, scope: !604)
!631 = !DILocation(line: 279, column: 26, scope: !600)
!632 = !DILocation(line: 279, column: 4, scope: !600)
!633 = !DILocation(line: 289, column: 11, scope: !73)
!634 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_end", scope: !73, file: !1, line: 257, type: !35)
!635 = !DILocation(line: 257, column: 19, scope: !73)
!636 = !DILocation(line: 290, column: 11, scope: !73)
!637 = !DILocation(line: 290, column: 51, scope: !73)
!638 = !DILocation(line: 290, column: 3, scope: !73)
!639 = !DILocation(line: 293, column: 13, scope: !73)
!640 = !DILocation(line: 294, column: 8, scope: !641)
!641 = distinct !DILexicalBlock(scope: !73, file: !1, line: 294, column: 3)
!642 = !DILocation(line: 294, column: 17, scope: !643)
!643 = distinct !DILexicalBlock(scope: !641, file: !1, line: 294, column: 3)
!644 = !DILocation(line: 294, column: 3, scope: !641)
!645 = !DILocation(line: 296, column: 10, scope: !646)
!646 = distinct !DILexicalBlock(scope: !647, file: !1, line: 296, column: 5)
!647 = distinct !DILexicalBlock(scope: !643, file: !1, line: 294, column: 29)
!648 = !DILocation(line: 296, column: 19, scope: !649)
!649 = distinct !DILexicalBlock(scope: !646, file: !1, line: 296, column: 5)
!650 = !DILocation(line: 296, column: 5, scope: !646)
!651 = !DILocation(line: 297, column: 14, scope: !652)
!652 = distinct !DILexicalBlock(scope: !649, file: !1, line: 296, column: 31)
!653 = !DILocation(line: 297, column: 27, scope: !652)
!654 = !DILocation(line: 297, column: 25, scope: !652)
!655 = !DILocation(line: 297, column: 11, scope: !652)
!656 = !DILocation(line: 298, column: 5, scope: !652)
!657 = !DILocation(line: 296, column: 27, scope: !649)
!658 = !DILocation(line: 296, column: 5, scope: !649)
!659 = !DILocation(line: 299, column: 20, scope: !647)
!660 = !DILocation(line: 299, column: 13, scope: !647)
!661 = !DILocation(line: 299, column: 5, scope: !647)
!662 = !DILocation(line: 299, column: 11, scope: !647)
!663 = !DILocation(line: 300, column: 3, scope: !647)
!664 = !DILocation(line: 294, column: 25, scope: !643)
!665 = !DILocation(line: 294, column: 3, scope: !643)
!666 = !DILocation(line: 301, column: 11, scope: !73)
!667 = !DILocation(line: 302, column: 11, scope: !73)
!668 = !DILocation(line: 302, column: 51, scope: !73)
!669 = !DILocation(line: 302, column: 3, scope: !73)
!670 = !DILocation(line: 304, column: 3, scope: !73)
!671 = !DILocation(line: 306, column: 3, scope: !73)
!672 = !DILocation(line: 307, column: 1, scope: !73)
!673 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errsum", scope: !76, file: !1, line: 315, type: !4)
!674 = !DILocation(line: 315, column: 10, scope: !76)
!675 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !76, file: !1, line: 314, type: !15)
!676 = !DILocation(line: 314, column: 7, scope: !76)
!677 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "delta", arg: 1, scope: !76, file: !1, line: 311, type: !5)
!678 = !DILocation(line: 311, column: 8, scope: !76)
!679 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "target", arg: 2, scope: !76, file: !1, line: 311, type: !5)
!680 = !DILocation(line: 311, column: 16, scope: !76)
!681 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "output", arg: 3, scope: !76, file: !1, line: 311, type: !5)
!682 = !DILocation(line: 311, column: 25, scope: !76)
!683 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nj", arg: 4, scope: !76, file: !1, line: 312, type: !15)
!684 = !DILocation(line: 312, column: 5, scope: !76)
!685 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "err", arg: 5, scope: !76, file: !1, line: 311, type: !5)
!686 = !DILocation(line: 311, column: 34, scope: !76)
!687 = !DILocation(line: 317, column: 8, scope: !688)
!688 = distinct !DILexicalBlock(scope: !76, file: !1, line: 317, column: 3)
!689 = !DILocation(line: 317, column: 17, scope: !690)
!690 = distinct !DILexicalBlock(scope: !688, file: !1, line: 317, column: 3)
!691 = !DILocation(line: 317, column: 3, scope: !688)
!692 = !DILocation(line: 318, column: 5, scope: !693)
!693 = distinct !DILexicalBlock(scope: !690, file: !1, line: 317, column: 29)
!694 = !DILocation(line: 318, column: 14, scope: !693)
!695 = !DILocation(line: 319, column: 23, scope: !693)
!696 = !DILocation(line: 319, column: 21, scope: !693)
!697 = !DILocation(line: 319, column: 37, scope: !693)
!698 = !DILocation(line: 319, column: 49, scope: !693)
!699 = !DILocation(line: 319, column: 47, scope: !693)
!700 = !DILocation(line: 319, column: 36, scope: !693)
!701 = !DILocation(line: 319, column: 34, scope: !693)
!702 = !DILocation(line: 319, column: 16, scope: !693)
!703 = !DILocation(line: 319, column: 5, scope: !693)
!704 = !DILocation(line: 319, column: 14, scope: !693)
!705 = !DILocation(line: 320, column: 15, scope: !693)
!706 = !DILocation(line: 320, column: 15, scope: !707)
!707 = !DILexicalBlockFile(scope: !693, file: !1, discriminator: 1)
!708 = !DILocation(line: 320, column: 15, scope: !709)
!709 = !DILexicalBlockFile(scope: !693, file: !1, discriminator: 2)
!710 = !DILocation(line: 320, column: 12, scope: !711)
!711 = !DILexicalBlockFile(scope: !712, file: !1, discriminator: 4)
!712 = !DILexicalBlockFile(scope: !693, file: !1, discriminator: 3)
!713 = !DILocation(line: 321, column: 3, scope: !693)
!714 = !DILocation(line: 317, column: 25, scope: !690)
!715 = !DILocation(line: 317, column: 3, scope: !690)
!716 = !DILocation(line: 322, column: 8, scope: !76)
!717 = !DILocation(line: 323, column: 1, scope: !76)
!718 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h", scope: !79, file: !1, line: 337, type: !4)
!719 = !DILocation(line: 337, column: 9, scope: !79)
!720 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sum", scope: !79, file: !1, line: 337, type: !4)
!721 = !DILocation(line: 337, column: 12, scope: !79)
!722 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !79, file: !1, line: 336, type: !15)
!723 = !DILocation(line: 336, column: 10, scope: !79)
!724 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "errsum", scope: !79, file: !1, line: 337, type: !4)
!725 = !DILocation(line: 337, column: 17, scope: !79)
!726 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !79, file: !1, line: 336, type: !15)
!727 = !DILocation(line: 336, column: 7, scope: !79)
!728 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "delta_h", arg: 1, scope: !79, file: !1, line: 333, type: !5)
!729 = !DILocation(line: 333, column: 8, scope: !79)
!730 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nh", arg: 2, scope: !79, file: !1, line: 334, type: !15)
!731 = !DILocation(line: 334, column: 5, scope: !79)
!732 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "delta_o", arg: 3, scope: !79, file: !1, line: 333, type: !5)
!733 = !DILocation(line: 333, column: 18, scope: !79)
!734 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "no", arg: 4, scope: !79, file: !1, line: 334, type: !15)
!735 = !DILocation(line: 334, column: 9, scope: !79)
!736 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "who", arg: 5, scope: !79, file: !1, line: 333, type: !8)
!737 = !DILocation(line: 333, column: 38, scope: !79)
!738 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "hidden", arg: 6, scope: !79, file: !1, line: 333, type: !5)
!739 = !DILocation(line: 333, column: 28, scope: !79)
!740 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "err", arg: 7, scope: !79, file: !1, line: 333, type: !5)
!741 = !DILocation(line: 333, column: 44, scope: !79)
!742 = !DILocation(line: 340, column: 8, scope: !743)
!743 = distinct !DILexicalBlock(scope: !79, file: !1, line: 340, column: 3)
!744 = !DILocation(line: 340, column: 17, scope: !745)
!745 = distinct !DILexicalBlock(scope: !743, file: !1, line: 340, column: 3)
!746 = !DILocation(line: 340, column: 3, scope: !743)
!747 = !DILocation(line: 341, column: 9, scope: !748)
!748 = distinct !DILexicalBlock(scope: !745, file: !1, line: 340, column: 29)
!749 = !DILocation(line: 343, column: 10, scope: !750)
!750 = distinct !DILexicalBlock(scope: !748, file: !1, line: 343, column: 5)
!751 = !DILocation(line: 343, column: 19, scope: !752)
!752 = distinct !DILexicalBlock(scope: !750, file: !1, line: 343, column: 5)
!753 = !DILocation(line: 343, column: 5, scope: !750)
!754 = !DILocation(line: 344, column: 14, scope: !755)
!755 = distinct !DILexicalBlock(scope: !752, file: !1, line: 343, column: 31)
!756 = !DILocation(line: 344, column: 27, scope: !755)
!757 = !DILocation(line: 344, column: 25, scope: !755)
!758 = !DILocation(line: 344, column: 11, scope: !755)
!759 = !DILocation(line: 345, column: 5, scope: !755)
!760 = !DILocation(line: 343, column: 27, scope: !752)
!761 = !DILocation(line: 343, column: 5, scope: !752)
!762 = !DILocation(line: 346, column: 18, scope: !748)
!763 = !DILocation(line: 346, column: 29, scope: !748)
!764 = !DILocation(line: 346, column: 27, scope: !748)
!765 = !DILocation(line: 346, column: 20, scope: !748)
!766 = !DILocation(line: 346, column: 34, scope: !748)
!767 = !DILocation(line: 346, column: 32, scope: !748)
!768 = !DILocation(line: 346, column: 5, scope: !748)
!769 = !DILocation(line: 346, column: 16, scope: !748)
!770 = !DILocation(line: 347, column: 15, scope: !748)
!771 = !DILocation(line: 347, column: 15, scope: !772)
!772 = !DILexicalBlockFile(scope: !748, file: !1, discriminator: 1)
!773 = !DILocation(line: 347, column: 15, scope: !774)
!774 = !DILexicalBlockFile(scope: !748, file: !1, discriminator: 2)
!775 = !DILocation(line: 347, column: 12, scope: !776)
!776 = !DILexicalBlockFile(scope: !777, file: !1, discriminator: 4)
!777 = !DILexicalBlockFile(scope: !748, file: !1, discriminator: 3)
!778 = !DILocation(line: 348, column: 3, scope: !748)
!779 = !DILocation(line: 340, column: 25, scope: !745)
!780 = !DILocation(line: 340, column: 3, scope: !745)
!781 = !DILocation(line: 349, column: 8, scope: !79)
!782 = !DILocation(line: 350, column: 1, scope: !79)
!783 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !82, file: !1, line: 353, type: !15)
!784 = !DILocation(line: 353, column: 7, scope: !82)
!785 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "delta_h", arg: 1, scope: !82, file: !1, line: 352, type: !5)
!786 = !DILocation(line: 352, column: 18, scope: !82)
!787 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nh", arg: 2, scope: !82, file: !1, line: 352, type: !15)
!788 = !DILocation(line: 352, column: 31, scope: !82)
!789 = !DILocation(line: 354, column: 8, scope: !790)
!790 = distinct !DILexicalBlock(scope: !82, file: !1, line: 354, column: 3)
!791 = !DILocation(line: 354, column: 17, scope: !792)
!792 = distinct !DILexicalBlock(scope: !790, file: !1, line: 354, column: 3)
!793 = !DILocation(line: 354, column: 3, scope: !790)
!794 = !DILocation(line: 355, column: 18, scope: !792)
!795 = !DILocation(line: 355, column: 20, scope: !792)
!796 = !DILocation(line: 355, column: 5, scope: !792)
!797 = !DILocation(line: 355, column: 16, scope: !792)
!798 = !DILocation(line: 354, column: 24, scope: !792)
!799 = !DILocation(line: 354, column: 3, scope: !792)
!800 = !DILocation(line: 356, column: 1, scope: !82)
!801 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !85, file: !1, line: 363, type: !15)
!802 = !DILocation(line: 363, column: 7, scope: !85)
!803 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !85, file: !1, line: 363, type: !15)
!804 = !DILocation(line: 363, column: 10, scope: !85)
!805 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fail", scope: !85, file: !1, line: 361, type: !15)
!806 = !DILocation(line: 361, column: 7, scope: !85)
!807 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "w_gpu", arg: 1, scope: !85, file: !1, line: 359, type: !5)
!808 = !DILocation(line: 359, column: 29, scope: !85)
!809 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "w_cpu", arg: 2, scope: !85, file: !1, line: 359, type: !8)
!810 = !DILocation(line: 359, column: 44, scope: !85)
!811 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "oldw_gpu", arg: 3, scope: !85, file: !1, line: 359, type: !5)
!812 = !DILocation(line: 359, column: 58, scope: !85)
!813 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "oldw_cpu", arg: 4, scope: !85, file: !1, line: 359, type: !8)
!814 = !DILocation(line: 359, column: 76, scope: !85)
!815 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ndelta", arg: 5, scope: !85, file: !1, line: 359, type: !15)
!816 = !DILocation(line: 359, column: 90, scope: !85)
!817 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nly", arg: 6, scope: !85, file: !1, line: 359, type: !15)
!818 = !DILocation(line: 359, column: 102, scope: !85)
!819 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !85, file: !1, line: 360, type: !15)
!820 = !DILocation(line: 360, column: 7, scope: !85)
!821 = !DILocation(line: 365, column: 8, scope: !822)
!822 = distinct !DILexicalBlock(scope: !85, file: !1, line: 365, column: 3)
!823 = !DILocation(line: 365, column: 17, scope: !824)
!824 = distinct !DILexicalBlock(scope: !822, file: !1, line: 365, column: 3)
!825 = !DILocation(line: 365, column: 3, scope: !822)
!826 = !DILocation(line: 366, column: 13, scope: !827)
!827 = distinct !DILexicalBlock(scope: !828, file: !1, line: 366, column: 8)
!828 = distinct !DILexicalBlock(scope: !824, file: !1, line: 365, column: 33)
!829 = !DILocation(line: 366, column: 22, scope: !830)
!830 = distinct !DILexicalBlock(scope: !827, file: !1, line: 366, column: 8)
!831 = !DILocation(line: 366, column: 8, scope: !827)
!832 = !DILocation(line: 367, column: 32, scope: !833)
!833 = distinct !DILexicalBlock(scope: !834, file: !1, line: 367, column: 13)
!834 = distinct !DILexicalBlock(scope: !830, file: !1, line: 366, column: 35)
!835 = !DILocation(line: 367, column: 40, scope: !833)
!836 = !DILocation(line: 367, column: 25, scope: !833)
!837 = !DILocation(line: 367, column: 46, scope: !833)
!838 = !DILocation(line: 367, column: 13, scope: !833)
!839 = !DILocation(line: 367, column: 59, scope: !833)
!840 = !DILocation(line: 367, column: 13, scope: !834)
!841 = !DILocation(line: 368, column: 8, scope: !842)
!842 = distinct !DILexicalBlock(scope: !833, file: !1, line: 367, column: 78)
!843 = !DILocation(line: 369, column: 9, scope: !842)
!844 = !DILocation(line: 370, column: 29, scope: !845)
!845 = distinct !DILexicalBlock(scope: !834, file: !1, line: 370, column: 7)
!846 = !DILocation(line: 370, column: 37, scope: !845)
!847 = !DILocation(line: 370, column: 19, scope: !845)
!848 = !DILocation(line: 370, column: 43, scope: !845)
!849 = !DILocation(line: 370, column: 7, scope: !845)
!850 = !DILocation(line: 370, column: 59, scope: !845)
!851 = !DILocation(line: 370, column: 7, scope: !834)
!852 = !DILocation(line: 371, column: 8, scope: !853)
!853 = distinct !DILexicalBlock(scope: !845, file: !1, line: 370, column: 78)
!854 = !DILocation(line: 372, column: 9, scope: !853)
!855 = !DILocation(line: 373, column: 4, scope: !834)
!856 = !DILocation(line: 366, column: 31, scope: !830)
!857 = !DILocation(line: 366, column: 8, scope: !830)
!858 = !DILocation(line: 374, column: 3, scope: !828)
!859 = !DILocation(line: 365, column: 29, scope: !824)
!860 = !DILocation(line: 365, column: 3, scope: !824)
!861 = !DILocation(line: 377, column: 3, scope: !85)
!862 = !DILocation(line: 378, column: 1, scope: !85)
!863 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !88, file: !1, line: 384, type: !15)
!864 = !DILocation(line: 384, column: 7, scope: !88)
!865 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !88, file: !1, line: 384, type: !15)
!866 = !DILocation(line: 384, column: 10, scope: !88)
!867 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "delta", arg: 1, scope: !88, file: !1, line: 381, type: !5)
!868 = !DILocation(line: 381, column: 8, scope: !88)
!869 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ndelta", arg: 2, scope: !88, file: !1, line: 380, type: !15)
!870 = !DILocation(line: 380, column: 33, scope: !88)
!871 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ly", arg: 3, scope: !88, file: !1, line: 381, type: !5)
!872 = !DILocation(line: 381, column: 16, scope: !88)
!873 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nly", arg: 4, scope: !88, file: !1, line: 380, type: !15)
!874 = !DILocation(line: 380, column: 45, scope: !88)
!875 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "w", arg: 5, scope: !88, file: !1, line: 381, type: !8)
!876 = !DILocation(line: 381, column: 22, scope: !88)
!877 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "oldw", arg: 6, scope: !88, file: !1, line: 381, type: !8)
!878 = !DILocation(line: 381, column: 27, scope: !88)
!879 = !DILocation(line: 385, column: 3, scope: !88)
!880 = !DILocation(line: 385, column: 9, scope: !88)
!881 = !DILocation(line: 391, column: 56, scope: !88)
!882 = !DILocation(line: 391, column: 64, scope: !88)
!883 = !DILocation(line: 391, column: 59, scope: !88)
!884 = !DILocation(line: 391, column: 48, scope: !88)
!885 = !DILocation(line: 391, column: 47, scope: !88)
!886 = !DILocation(line: 391, column: 27, scope: !88)
!887 = !DILocation(line: 391, column: 18, scope: !88)
!888 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "w_gpu", scope: !88, file: !1, line: 391, type: !5)
!889 = !DILocation(line: 391, column: 10, scope: !88)
!890 = !DILocation(line: 392, column: 59, scope: !88)
!891 = !DILocation(line: 392, column: 67, scope: !88)
!892 = !DILocation(line: 392, column: 62, scope: !88)
!893 = !DILocation(line: 392, column: 51, scope: !88)
!894 = !DILocation(line: 392, column: 50, scope: !88)
!895 = !DILocation(line: 392, column: 30, scope: !88)
!896 = !DILocation(line: 392, column: 21, scope: !88)
!897 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "oldw_gpu", scope: !88, file: !1, line: 392, type: !5)
!898 = !DILocation(line: 392, column: 10, scope: !88)
!899 = !DILocation(line: 394, column: 8, scope: !900)
!900 = distinct !DILexicalBlock(scope: !88, file: !1, line: 394, column: 3)
!901 = !DILocation(line: 394, column: 17, scope: !902)
!902 = distinct !DILexicalBlock(scope: !900, file: !1, line: 394, column: 3)
!903 = !DILocation(line: 394, column: 3, scope: !900)
!904 = !DILocation(line: 395, column: 13, scope: !905)
!905 = distinct !DILexicalBlock(scope: !906, file: !1, line: 395, column: 8)
!906 = distinct !DILexicalBlock(scope: !902, file: !1, line: 394, column: 33)
!907 = !DILocation(line: 395, column: 22, scope: !908)
!908 = distinct !DILexicalBlock(scope: !905, file: !1, line: 395, column: 8)
!909 = !DILocation(line: 395, column: 8, scope: !905)
!910 = !DILocation(line: 396, column: 35, scope: !911)
!911 = distinct !DILexicalBlock(scope: !908, file: !1, line: 395, column: 35)
!912 = !DILocation(line: 396, column: 20, scope: !911)
!913 = !DILocation(line: 396, column: 28, scope: !911)
!914 = !DILocation(line: 396, column: 13, scope: !911)
!915 = !DILocation(line: 396, column: 33, scope: !911)
!916 = !DILocation(line: 397, column: 38, scope: !911)
!917 = !DILocation(line: 397, column: 23, scope: !911)
!918 = !DILocation(line: 397, column: 31, scope: !911)
!919 = !DILocation(line: 397, column: 13, scope: !911)
!920 = !DILocation(line: 397, column: 36, scope: !911)
!921 = !DILocation(line: 398, column: 8, scope: !911)
!922 = !DILocation(line: 395, column: 31, scope: !908)
!923 = !DILocation(line: 395, column: 8, scope: !908)
!924 = !DILocation(line: 399, column: 3, scope: !906)
!925 = !DILocation(line: 394, column: 29, scope: !902)
!926 = !DILocation(line: 394, column: 3, scope: !902)
!927 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "new_dw", scope: !88, file: !1, line: 383, type: !4)
!928 = !DILocation(line: 383, column: 9, scope: !88)
!929 = !DILocation(line: 401, column: 21, scope: !88)
!930 = !DILocation(line: 401, column: 29, scope: !88)
!931 = !DILocation(line: 401, column: 24, scope: !88)
!932 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !88, file: !1, line: 401, type: !15)
!933 = !DILocation(line: 401, column: 7, scope: !88)
!934 = !DILocation(line: 403, column: 13, scope: !88)
!935 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_start", scope: !88, file: !1, line: 386, type: !35)
!936 = !DILocation(line: 386, column: 10, scope: !88)
!937 = !DILocation(line: 408, column: 9, scope: !938)
!938 = distinct !DILexicalBlock(scope: !939, file: !1, line: 408, column: 4)
!939 = distinct !DILexicalBlock(scope: !88, file: !1, line: 406, column: 3)
!940 = !DILocation(line: 408, column: 18, scope: !941)
!941 = distinct !DILexicalBlock(scope: !938, file: !1, line: 408, column: 4)
!942 = !DILocation(line: 408, column: 4, scope: !938)
!943 = !DILocation(line: 409, column: 11, scope: !944)
!944 = distinct !DILexicalBlock(scope: !945, file: !1, line: 409, column: 6)
!945 = distinct !DILexicalBlock(scope: !941, file: !1, line: 408, column: 34)
!946 = !DILocation(line: 409, column: 20, scope: !947)
!947 = distinct !DILexicalBlock(scope: !944, file: !1, line: 409, column: 6)
!948 = !DILocation(line: 409, column: 6, scope: !944)
!949 = !DILocation(line: 410, column: 25, scope: !950)
!950 = distinct !DILexicalBlock(scope: !947, file: !1, line: 409, column: 33)
!951 = !DILocation(line: 410, column: 23, scope: !950)
!952 = !DILocation(line: 410, column: 36, scope: !950)
!953 = !DILocation(line: 410, column: 34, scope: !950)
!954 = !DILocation(line: 410, column: 67, scope: !950)
!955 = !DILocation(line: 410, column: 75, scope: !950)
!956 = !DILocation(line: 410, column: 57, scope: !950)
!957 = !DILocation(line: 410, column: 55, scope: !950)
!958 = !DILocation(line: 410, column: 43, scope: !950)
!959 = !DILocation(line: 410, column: 17, scope: !950)
!960 = !DILocation(line: 411, column: 15, scope: !950)
!961 = !DILocation(line: 411, column: 23, scope: !950)
!962 = !DILocation(line: 411, column: 8, scope: !950)
!963 = !DILocation(line: 411, column: 28, scope: !950)
!964 = !DILocation(line: 412, column: 18, scope: !950)
!965 = !DILocation(line: 412, column: 26, scope: !950)
!966 = !DILocation(line: 412, column: 8, scope: !950)
!967 = !DILocation(line: 412, column: 31, scope: !950)
!968 = !DILocation(line: 413, column: 11, scope: !950)
!969 = !DILocation(line: 409, column: 29, scope: !947)
!970 = !DILocation(line: 409, column: 6, scope: !947)
!971 = !DILocation(line: 414, column: 6, scope: !945)
!972 = !DILocation(line: 408, column: 30, scope: !941)
!973 = !DILocation(line: 408, column: 4, scope: !941)
!974 = !DILocation(line: 416, column: 11, scope: !88)
!975 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_end", scope: !88, file: !1, line: 386, type: !35)
!976 = !DILocation(line: 386, column: 19, scope: !88)
!977 = !DILocation(line: 417, column: 11, scope: !88)
!978 = !DILocation(line: 417, column: 51, scope: !88)
!979 = !DILocation(line: 417, column: 3, scope: !88)
!980 = !DILocation(line: 420, column: 13, scope: !88)
!981 = !DILocation(line: 421, column: 8, scope: !982)
!982 = distinct !DILexicalBlock(scope: !88, file: !1, line: 421, column: 3)
!983 = !DILocation(line: 421, column: 17, scope: !984)
!984 = distinct !DILexicalBlock(scope: !982, file: !1, line: 421, column: 3)
!985 = !DILocation(line: 421, column: 3, scope: !982)
!986 = !DILocation(line: 422, column: 10, scope: !987)
!987 = distinct !DILexicalBlock(scope: !988, file: !1, line: 422, column: 5)
!988 = distinct !DILexicalBlock(scope: !984, file: !1, line: 421, column: 33)
!989 = !DILocation(line: 422, column: 19, scope: !990)
!990 = distinct !DILexicalBlock(scope: !987, file: !1, line: 422, column: 5)
!991 = !DILocation(line: 422, column: 5, scope: !987)
!992 = !DILocation(line: 423, column: 24, scope: !993)
!993 = distinct !DILexicalBlock(scope: !990, file: !1, line: 422, column: 32)
!994 = !DILocation(line: 423, column: 22, scope: !993)
!995 = !DILocation(line: 423, column: 35, scope: !993)
!996 = !DILocation(line: 423, column: 33, scope: !993)
!997 = !DILocation(line: 423, column: 56, scope: !993)
!998 = !DILocation(line: 423, column: 54, scope: !993)
!999 = !DILocation(line: 423, column: 42, scope: !993)
!1000 = !DILocation(line: 423, column: 16, scope: !993)
!1001 = !DILocation(line: 424, column: 4, scope: !993)
!1002 = !DILocation(line: 424, column: 12, scope: !993)
!1003 = !DILocation(line: 425, column: 4, scope: !993)
!1004 = !DILocation(line: 425, column: 15, scope: !993)
!1005 = !DILocation(line: 426, column: 5, scope: !993)
!1006 = !DILocation(line: 422, column: 28, scope: !990)
!1007 = !DILocation(line: 422, column: 5, scope: !990)
!1008 = !DILocation(line: 427, column: 3, scope: !988)
!1009 = !DILocation(line: 421, column: 29, scope: !984)
!1010 = !DILocation(line: 421, column: 3, scope: !984)
!1011 = !DILocation(line: 428, column: 11, scope: !88)
!1012 = !DILocation(line: 429, column: 11, scope: !88)
!1013 = !DILocation(line: 429, column: 51, scope: !88)
!1014 = !DILocation(line: 429, column: 3, scope: !88)
!1015 = !DILocation(line: 430, column: 3, scope: !88)
!1016 = !DILocation(line: 431, column: 5, scope: !88)
!1017 = !DILocation(line: 434, column: 1, scope: !88)
!1018 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "net", arg: 1, scope: !91, file: !1, line: 438, type: !9)
!1019 = !DILocation(line: 438, column: 7, scope: !91)
!1020 = !DILocation(line: 442, column: 13, scope: !91)
!1021 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "in", scope: !91, file: !1, line: 440, type: !15)
!1022 = !DILocation(line: 440, column: 7, scope: !91)
!1023 = !DILocation(line: 443, column: 14, scope: !91)
!1024 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hid", scope: !91, file: !1, line: 440, type: !15)
!1025 = !DILocation(line: 440, column: 11, scope: !91)
!1026 = !DILocation(line: 444, column: 14, scope: !91)
!1027 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "out", scope: !91, file: !1, line: 440, type: !15)
!1028 = !DILocation(line: 440, column: 16, scope: !91)
!1029 = !DILocation(line: 447, column: 26, scope: !91)
!1030 = !DILocation(line: 447, column: 44, scope: !91)
!1031 = !DILocation(line: 448, column: 12, scope: !91)
!1032 = !DILocation(line: 447, column: 3, scope: !91)
!1033 = !DILocation(line: 449, column: 26, scope: !91)
!1034 = !DILocation(line: 449, column: 45, scope: !91)
!1035 = !DILocation(line: 450, column: 12, scope: !91)
!1036 = !DILocation(line: 449, column: 3, scope: !91)
!1037 = !DILocation(line: 452, column: 1, scope: !91)
!1038 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "net", arg: 1, scope: !92, file: !1, line: 456, type: !9)
!1039 = !DILocation(line: 456, column: 7, scope: !92)
!1040 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "eo", arg: 2, scope: !92, file: !1, line: 457, type: !5)
!1041 = !DILocation(line: 457, column: 8, scope: !92)
!1042 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "eh", arg: 3, scope: !92, file: !1, line: 457, type: !5)
!1043 = !DILocation(line: 457, column: 13, scope: !92)
!1044 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "out_err", scope: !92, file: !1, line: 460, type: !4)
!1045 = !DILocation(line: 460, column: 9, scope: !92)
!1046 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hid_err", scope: !92, file: !1, line: 460, type: !4)
!1047 = !DILocation(line: 460, column: 18, scope: !92)
!1048 = !DILocation(line: 462, column: 13, scope: !92)
!1049 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "in", scope: !92, file: !1, line: 459, type: !15)
!1050 = !DILocation(line: 459, column: 7, scope: !92)
!1051 = !DILocation(line: 463, column: 14, scope: !92)
!1052 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hid", scope: !92, file: !1, line: 459, type: !15)
!1053 = !DILocation(line: 459, column: 11, scope: !92)
!1054 = !DILocation(line: 464, column: 14, scope: !92)
!1055 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "out", scope: !92, file: !1, line: 459, type: !15)
!1056 = !DILocation(line: 459, column: 16, scope: !92)
!1057 = !DILocation(line: 467, column: 26, scope: !92)
!1058 = !DILocation(line: 467, column: 44, scope: !92)
!1059 = !DILocation(line: 468, column: 12, scope: !92)
!1060 = !DILocation(line: 467, column: 3, scope: !92)
!1061 = !DILocation(line: 469, column: 26, scope: !92)
!1062 = !DILocation(line: 469, column: 45, scope: !92)
!1063 = !DILocation(line: 470, column: 12, scope: !92)
!1064 = !DILocation(line: 469, column: 3, scope: !92)
!1065 = !DILocation(line: 473, column: 26, scope: !92)
!1066 = !DILocation(line: 473, column: 45, scope: !92)
!1067 = !DILocation(line: 473, column: 58, scope: !92)
!1068 = !DILocation(line: 473, column: 3, scope: !92)
!1069 = !DILocation(line: 475, column: 26, scope: !92)
!1070 = !DILocation(line: 475, column: 50, scope: !92)
!1071 = !DILocation(line: 476, column: 12, scope: !92)
!1072 = !DILocation(line: 476, column: 33, scope: !92)
!1073 = !DILocation(line: 475, column: 3, scope: !92)
!1074 = !DILocation(line: 477, column: 9, scope: !92)
!1075 = !DILocation(line: 477, column: 7, scope: !92)
!1076 = !DILocation(line: 478, column: 9, scope: !92)
!1077 = !DILocation(line: 478, column: 7, scope: !92)
!1078 = !DILocation(line: 481, column: 28, scope: !92)
!1079 = !DILocation(line: 481, column: 52, scope: !92)
!1080 = !DILocation(line: 482, column: 12, scope: !92)
!1081 = !DILocation(line: 482, column: 33, scope: !92)
!1082 = !DILocation(line: 481, column: 3, scope: !92)
!1083 = !DILocation(line: 483, column: 28, scope: !92)
!1084 = !DILocation(line: 483, column: 52, scope: !92)
!1085 = !DILocation(line: 484, column: 12, scope: !92)
!1086 = !DILocation(line: 484, column: 32, scope: !92)
!1087 = !DILocation(line: 483, column: 3, scope: !92)
!1088 = !DILocation(line: 486, column: 1, scope: !92)
!1089 = !DILocation(line: 526, column: 20, scope: !1090)
!1090 = distinct !DILexicalBlock(scope: !1091, file: !1, line: 526, column: 3)
!1091 = distinct !DILexicalBlock(scope: !95, file: !1, line: 526, column: 3)
!1092 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !95, file: !1, line: 495, type: !15)
!1093 = !DILocation(line: 495, column: 22, scope: !95)
!1094 = !DILocation(line: 527, column: 22, scope: !1095)
!1095 = distinct !DILexicalBlock(scope: !1096, file: !1, line: 527, column: 5)
!1096 = distinct !DILexicalBlock(scope: !1097, file: !1, line: 527, column: 5)
!1097 = distinct !DILexicalBlock(scope: !1090, file: !1, line: 526, column: 29)
!1098 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !95, file: !1, line: 495, type: !15)
!1099 = !DILocation(line: 495, column: 19, scope: !95)
!1100 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_to", scope: !1101, file: !1, line: 529, type: !28)
!1101 = distinct !DILexicalBlock(scope: !1102, file: !1, line: 529, column: 7)
!1102 = distinct !DILexicalBlock(scope: !1095, file: !1, line: 527, column: 31)
!1103 = !DILocation(line: 529, column: 7, scope: !1101)
!1104 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_from", scope: !1101, file: !1, line: 529, type: !28)
!1105 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_l", scope: !1101, file: !1, line: 529, type: !15)
!1106 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_i", scope: !1101, file: !1, line: 529, type: !15)
!1107 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "memcnt", scope: !95, file: !1, line: 495, type: !15)
!1108 = !DILocation(line: 495, column: 25, scope: !95)
!1109 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "net", arg: 1, scope: !95, file: !1, line: 492, type: !9)
!1110 = !DILocation(line: 492, column: 7, scope: !95)
!1111 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "filename", arg: 2, scope: !95, file: !1, line: 493, type: !28)
!1112 = !DILocation(line: 493, column: 7, scope: !95)
!1113 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n1", scope: !95, file: !1, line: 495, type: !15)
!1114 = !DILocation(line: 495, column: 7, scope: !95)
!1115 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n2", scope: !95, file: !1, line: 495, type: !15)
!1116 = !DILocation(line: 495, column: 11, scope: !95)
!1117 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n3", scope: !95, file: !1, line: 495, type: !15)
!1118 = !DILocation(line: 495, column: 15, scope: !95)
!1119 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "dvalue", scope: !95, file: !1, line: 496, type: !4)
!1120 = !DILocation(line: 496, column: 9, scope: !95)
!1121 = !DILocation(line: 500, column: 11, scope: !95)
!1122 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "pFile", scope: !95, file: !1, line: 499, type: !1123)
!1123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1124, size: 64, align: 64)
!1124 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1125, line: 49, baseType: !1126)
!1125 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!1126 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1127, line: 273, size: 1728, align: 64, elements: !1128)
!1127 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!1128 = !{!1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1149, !1150, !1151, !1152, !1154, !1156, !1158, !1162, !1165, !1167, !1168, !1169, !1170, !1171, !1175, !1176}
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1126, file: !1127, line: 274, baseType: !15, size: 32, align: 32)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1126, file: !1127, line: 279, baseType: !28, size: 64, align: 64, offset: 64)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1126, file: !1127, line: 280, baseType: !28, size: 64, align: 64, offset: 128)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1126, file: !1127, line: 281, baseType: !28, size: 64, align: 64, offset: 192)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1126, file: !1127, line: 282, baseType: !28, size: 64, align: 64, offset: 256)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1126, file: !1127, line: 283, baseType: !28, size: 64, align: 64, offset: 320)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1126, file: !1127, line: 284, baseType: !28, size: 64, align: 64, offset: 384)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1126, file: !1127, line: 285, baseType: !28, size: 64, align: 64, offset: 448)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1126, file: !1127, line: 286, baseType: !28, size: 64, align: 64, offset: 512)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1126, file: !1127, line: 288, baseType: !28, size: 64, align: 64, offset: 576)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1126, file: !1127, line: 289, baseType: !28, size: 64, align: 64, offset: 640)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1126, file: !1127, line: 290, baseType: !28, size: 64, align: 64, offset: 704)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1126, file: !1127, line: 292, baseType: !1142, size: 64, align: 64, offset: 768)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64, align: 64)
!1143 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1127, line: 188, size: 192, align: 64, elements: !1144)
!1144 = !{!1145, !1146, !1148}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !1143, file: !1127, line: 189, baseType: !1142, size: 64, align: 64)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !1143, file: !1127, line: 190, baseType: !1147, size: 64, align: 64, offset: 64)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1126, size: 64, align: 64)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !1143, file: !1127, line: 194, baseType: !15, size: 32, align: 32, offset: 128)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1126, file: !1127, line: 294, baseType: !1147, size: 64, align: 64, offset: 832)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1126, file: !1127, line: 296, baseType: !15, size: 32, align: 32, offset: 896)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1126, file: !1127, line: 300, baseType: !15, size: 32, align: 32, offset: 928)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1126, file: !1127, line: 302, baseType: !1153, size: 64, align: 64, offset: 960)
!1153 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !118, line: 141, baseType: !119)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1126, file: !1127, line: 306, baseType: !1155, size: 16, align: 16, offset: 1024)
!1155 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1126, file: !1127, line: 307, baseType: !1157, size: 8, align: 8, offset: 1040)
!1157 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1126, file: !1127, line: 308, baseType: !1159, size: 8, align: 8, offset: 1048)
!1159 = !DICompositeType(tag: DW_TAG_array_type, baseType: !29, size: 8, align: 8, elements: !1160)
!1160 = !{!1161}
!1161 = !DISubrange(count: 1)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1126, file: !1127, line: 312, baseType: !1163, size: 64, align: 64, offset: 1088)
!1163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1164, size: 64, align: 64)
!1164 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1127, line: 182, baseType: null)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1126, file: !1127, line: 321, baseType: !1166, size: 64, align: 64, offset: 1152)
!1166 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !118, line: 142, baseType: !119)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !1126, file: !1127, line: 330, baseType: !7, size: 64, align: 64, offset: 1216)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !1126, file: !1127, line: 331, baseType: !7, size: 64, align: 64, offset: 1280)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !1126, file: !1127, line: 332, baseType: !7, size: 64, align: 64, offset: 1344)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !1126, file: !1127, line: 333, baseType: !7, size: 64, align: 64, offset: 1408)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1126, file: !1127, line: 334, baseType: !1172, size: 64, align: 64, offset: 1472)
!1172 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1173, line: 62, baseType: !1174)
!1173 = !DIFile(filename: "/home/gleison/lge/llvm-3.7-src/build-debug/bin/../lib/clang/3.7.0/include/stddef.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!1174 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1126, file: !1127, line: 336, baseType: !15, size: 32, align: 32, offset: 1536)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1126, file: !1127, line: 338, baseType: !1177, size: 160, align: 8, offset: 1568)
!1177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !29, size: 160, align: 8, elements: !1178)
!1178 = !{!1179}
!1179 = !DISubrange(count: 20)
!1180 = !DILocation(line: 499, column: 9, scope: !95)
!1181 = !DILocation(line: 509, column: 13, scope: !95)
!1182 = !DILocation(line: 509, column: 6, scope: !95)
!1183 = !DILocation(line: 509, column: 33, scope: !95)
!1184 = !DILocation(line: 509, column: 26, scope: !95)
!1185 = !DILocation(line: 509, column: 54, scope: !95)
!1186 = !DILocation(line: 509, column: 47, scope: !95)
!1187 = !DILocation(line: 510, column: 47, scope: !95)
!1188 = !DILocation(line: 510, column: 51, scope: !95)
!1189 = !DILocation(line: 510, column: 55, scope: !95)
!1190 = !DILocation(line: 510, column: 3, scope: !95)
!1191 = !DILocation(line: 517, column: 11, scope: !95)
!1192 = !DILocation(line: 517, column: 3, scope: !95)
!1193 = !DILocation(line: 518, column: 11, scope: !95)
!1194 = !DILocation(line: 518, column: 3, scope: !95)
!1195 = !DILocation(line: 519, column: 11, scope: !95)
!1196 = !DILocation(line: 519, column: 3, scope: !95)
!1197 = !DILocation(line: 524, column: 12, scope: !95)
!1198 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "w", scope: !95, file: !1, line: 496, type: !8)
!1199 = !DILocation(line: 496, column: 19, scope: !95)
!1200 = !DILocation(line: 525, column: 39, scope: !95)
!1201 = !DILocation(line: 525, column: 41, scope: !95)
!1202 = !DILocation(line: 525, column: 48, scope: !95)
!1203 = !DILocation(line: 525, column: 50, scope: !95)
!1204 = !DILocation(line: 525, column: 45, scope: !95)
!1205 = !DILocation(line: 525, column: 38, scope: !95)
!1206 = !DILocation(line: 525, column: 54, scope: !95)
!1207 = !DILocation(line: 525, column: 26, scope: !95)
!1208 = !DILocation(line: 525, column: 18, scope: !95)
!1209 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mem", scope: !95, file: !1, line: 497, type: !28)
!1210 = !DILocation(line: 497, column: 9, scope: !95)
!1211 = !DILocation(line: 529, column: 7, scope: !1212)
!1212 = !DILexicalBlockFile(scope: !1213, file: !1, discriminator: 4)
!1213 = !DILexicalBlockFile(scope: !1214, file: !1, discriminator: 1)
!1214 = distinct !DILexicalBlock(scope: !1215, file: !1, line: 529, column: 7)
!1215 = distinct !DILexicalBlock(scope: !1101, file: !1, line: 529, column: 7)
!1216 = !DILocation(line: 526, column: 8, scope: !1091)
!1217 = !DILocation(line: 526, column: 17, scope: !1090)
!1218 = !DILocation(line: 526, column: 3, scope: !1091)
!1219 = !DILocation(line: 527, column: 10, scope: !1096)
!1220 = !DILocation(line: 527, column: 19, scope: !1095)
!1221 = !DILocation(line: 527, column: 5, scope: !1096)
!1222 = !DILocation(line: 528, column: 16, scope: !1102)
!1223 = !DILocation(line: 528, column: 14, scope: !1102)
!1224 = !DILocation(line: 529, column: 7, scope: !1215)
!1225 = !DILocation(line: 529, column: 7, scope: !1226)
!1226 = !DILexicalBlockFile(scope: !1214, file: !1, discriminator: 2)
!1227 = !DILocation(line: 529, column: 7, scope: !1228)
!1228 = !DILexicalBlockFile(scope: !1214, file: !1, discriminator: 3)
!1229 = !DILocation(line: 530, column: 14, scope: !1102)
!1230 = !DILocation(line: 531, column: 5, scope: !1102)
!1231 = !DILocation(line: 527, column: 27, scope: !1095)
!1232 = !DILocation(line: 527, column: 5, scope: !1095)
!1233 = !DILocation(line: 532, column: 3, scope: !1097)
!1234 = !DILocation(line: 526, column: 25, scope: !1090)
!1235 = !DILocation(line: 526, column: 3, scope: !1090)
!1236 = !DILocation(line: 540, column: 20, scope: !1237)
!1237 = distinct !DILexicalBlock(scope: !1238, file: !1, line: 540, column: 3)
!1238 = distinct !DILexicalBlock(scope: !95, file: !1, line: 540, column: 3)
!1239 = !DILocation(line: 541, column: 22, scope: !1240)
!1240 = distinct !DILexicalBlock(scope: !1241, file: !1, line: 541, column: 5)
!1241 = distinct !DILexicalBlock(scope: !1242, file: !1, line: 541, column: 5)
!1242 = distinct !DILexicalBlock(scope: !1237, file: !1, line: 540, column: 29)
!1243 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_to", scope: !1244, file: !1, line: 543, type: !28)
!1244 = distinct !DILexicalBlock(scope: !1245, file: !1, line: 543, column: 7)
!1245 = distinct !DILexicalBlock(scope: !1240, file: !1, line: 541, column: 31)
!1246 = !DILocation(line: 543, column: 7, scope: !1244)
!1247 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_from", scope: !1244, file: !1, line: 543, type: !28)
!1248 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_l", scope: !1244, file: !1, line: 543, type: !15)
!1249 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_i", scope: !1244, file: !1, line: 543, type: !15)
!1250 = !DILocation(line: 534, column: 57, scope: !95)
!1251 = !DILocation(line: 534, column: 59, scope: !95)
!1252 = !DILocation(line: 534, column: 66, scope: !95)
!1253 = !DILocation(line: 534, column: 68, scope: !95)
!1254 = !DILocation(line: 534, column: 63, scope: !95)
!1255 = !DILocation(line: 534, column: 56, scope: !95)
!1256 = !DILocation(line: 534, column: 72, scope: !95)
!1257 = !DILocation(line: 534, column: 44, scope: !95)
!1258 = !DILocation(line: 534, column: 3, scope: !95)
!1259 = !DILocation(line: 535, column: 3, scope: !95)
!1260 = !DILocation(line: 538, column: 12, scope: !95)
!1261 = !DILocation(line: 539, column: 39, scope: !95)
!1262 = !DILocation(line: 539, column: 41, scope: !95)
!1263 = !DILocation(line: 539, column: 48, scope: !95)
!1264 = !DILocation(line: 539, column: 50, scope: !95)
!1265 = !DILocation(line: 539, column: 45, scope: !95)
!1266 = !DILocation(line: 539, column: 38, scope: !95)
!1267 = !DILocation(line: 539, column: 54, scope: !95)
!1268 = !DILocation(line: 539, column: 26, scope: !95)
!1269 = !DILocation(line: 539, column: 18, scope: !95)
!1270 = !DILocation(line: 543, column: 7, scope: !1271)
!1271 = !DILexicalBlockFile(scope: !1272, file: !1, discriminator: 4)
!1272 = !DILexicalBlockFile(scope: !1273, file: !1, discriminator: 1)
!1273 = distinct !DILexicalBlock(scope: !1274, file: !1, line: 543, column: 7)
!1274 = distinct !DILexicalBlock(scope: !1244, file: !1, line: 543, column: 7)
!1275 = !DILocation(line: 540, column: 8, scope: !1238)
!1276 = !DILocation(line: 540, column: 17, scope: !1237)
!1277 = !DILocation(line: 540, column: 3, scope: !1238)
!1278 = !DILocation(line: 541, column: 10, scope: !1241)
!1279 = !DILocation(line: 541, column: 19, scope: !1240)
!1280 = !DILocation(line: 541, column: 5, scope: !1241)
!1281 = !DILocation(line: 542, column: 16, scope: !1245)
!1282 = !DILocation(line: 542, column: 14, scope: !1245)
!1283 = !DILocation(line: 543, column: 7, scope: !1274)
!1284 = !DILocation(line: 543, column: 7, scope: !1285)
!1285 = !DILexicalBlockFile(scope: !1273, file: !1, discriminator: 2)
!1286 = !DILocation(line: 543, column: 7, scope: !1287)
!1287 = !DILexicalBlockFile(scope: !1273, file: !1, discriminator: 3)
!1288 = !DILocation(line: 544, column: 14, scope: !1245)
!1289 = !DILocation(line: 545, column: 5, scope: !1245)
!1290 = !DILocation(line: 541, column: 27, scope: !1240)
!1291 = !DILocation(line: 541, column: 5, scope: !1240)
!1292 = !DILocation(line: 546, column: 3, scope: !1242)
!1293 = !DILocation(line: 540, column: 25, scope: !1237)
!1294 = !DILocation(line: 540, column: 3, scope: !1237)
!1295 = !DILocation(line: 548, column: 45, scope: !95)
!1296 = !DILocation(line: 548, column: 47, scope: !95)
!1297 = !DILocation(line: 548, column: 54, scope: !95)
!1298 = !DILocation(line: 548, column: 56, scope: !95)
!1299 = !DILocation(line: 548, column: 51, scope: !95)
!1300 = !DILocation(line: 548, column: 44, scope: !95)
!1301 = !DILocation(line: 548, column: 60, scope: !95)
!1302 = !DILocation(line: 548, column: 32, scope: !95)
!1303 = !DILocation(line: 548, column: 3, scope: !95)
!1304 = !DILocation(line: 549, column: 3, scope: !95)
!1305 = !DILocation(line: 551, column: 3, scope: !95)
!1306 = !DILocation(line: 552, column: 3, scope: !95)
!1307 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "filename", arg: 1, scope: !98, file: !1, line: 557, type: !28)
!1308 = !DILocation(line: 557, column: 7, scope: !98)
!1309 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n1", scope: !98, file: !1, line: 561, type: !15)
!1310 = !DILocation(line: 561, column: 11, scope: !98)
!1311 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n2", scope: !98, file: !1, line: 561, type: !15)
!1312 = !DILocation(line: 561, column: 15, scope: !98)
!1313 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "n3", scope: !98, file: !1, line: 561, type: !15)
!1314 = !DILocation(line: 561, column: 19, scope: !98)
!1315 = !DILocation(line: 563, column: 13, scope: !1316)
!1316 = distinct !DILexicalBlock(scope: !98, file: !1, line: 563, column: 7)
!1317 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fd", scope: !98, file: !1, line: 561, type: !15)
!1318 = !DILocation(line: 561, column: 7, scope: !98)
!1319 = !DILocation(line: 563, column: 38, scope: !1316)
!1320 = !DILocation(line: 563, column: 7, scope: !98)
!1321 = !DILocation(line: 564, column: 5, scope: !1322)
!1322 = distinct !DILexicalBlock(scope: !1316, file: !1, line: 563, column: 45)
!1323 = !DILocation(line: 580, column: 20, scope: !1324)
!1324 = distinct !DILexicalBlock(scope: !1325, file: !1, line: 580, column: 3)
!1325 = distinct !DILexicalBlock(scope: !98, file: !1, line: 580, column: 3)
!1326 = !DILocation(line: 581, column: 22, scope: !1327)
!1327 = distinct !DILexicalBlock(scope: !1328, file: !1, line: 581, column: 5)
!1328 = distinct !DILexicalBlock(scope: !1329, file: !1, line: 581, column: 5)
!1329 = distinct !DILexicalBlock(scope: !1324, file: !1, line: 580, column: 29)
!1330 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_from", scope: !1331, file: !1, line: 582, type: !28)
!1331 = distinct !DILexicalBlock(scope: !1332, file: !1, line: 582, column: 7)
!1332 = distinct !DILexicalBlock(scope: !1327, file: !1, line: 581, column: 31)
!1333 = !DILocation(line: 582, column: 7, scope: !1331)
!1334 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_to", scope: !1331, file: !1, line: 582, type: !28)
!1335 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_i", scope: !1331, file: !1, line: 582, type: !15)
!1336 = !DILocation(line: 572, column: 30, scope: !98)
!1337 = !DILocation(line: 572, column: 34, scope: !98)
!1338 = !DILocation(line: 572, column: 38, scope: !98)
!1339 = !DILocation(line: 572, column: 9, scope: !98)
!1340 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_l", scope: !1331, file: !1, line: 582, type: !15)
!1341 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "memcnt", scope: !98, file: !1, line: 561, type: !15)
!1342 = !DILocation(line: 561, column: 29, scope: !98)
!1343 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !98, file: !1, line: 561, type: !15)
!1344 = !DILocation(line: 561, column: 26, scope: !98)
!1345 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !98, file: !1, line: 561, type: !15)
!1346 = !DILocation(line: 561, column: 23, scope: !98)
!1347 = !DILocation(line: 567, column: 3, scope: !98)
!1348 = !DILocation(line: 569, column: 12, scope: !98)
!1349 = !DILocation(line: 569, column: 3, scope: !98)
!1350 = !DILocation(line: 570, column: 12, scope: !98)
!1351 = !DILocation(line: 570, column: 3, scope: !98)
!1352 = !DILocation(line: 571, column: 12, scope: !98)
!1353 = !DILocation(line: 571, column: 3, scope: !98)
!1354 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "new", scope: !98, file: !1, line: 560, type: !9)
!1355 = !DILocation(line: 560, column: 9, scope: !98)
!1356 = !DILocation(line: 574, column: 58, scope: !98)
!1357 = !DILocation(line: 574, column: 62, scope: !98)
!1358 = !DILocation(line: 574, column: 66, scope: !98)
!1359 = !DILocation(line: 574, column: 3, scope: !98)
!1360 = !DILocation(line: 575, column: 3, scope: !98)
!1361 = !DILocation(line: 578, column: 39, scope: !98)
!1362 = !DILocation(line: 578, column: 41, scope: !98)
!1363 = !DILocation(line: 578, column: 48, scope: !98)
!1364 = !DILocation(line: 578, column: 50, scope: !98)
!1365 = !DILocation(line: 578, column: 45, scope: !98)
!1366 = !DILocation(line: 578, column: 38, scope: !98)
!1367 = !DILocation(line: 578, column: 54, scope: !98)
!1368 = !DILocation(line: 578, column: 26, scope: !98)
!1369 = !DILocation(line: 578, column: 18, scope: !98)
!1370 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "mem", scope: !98, file: !1, line: 559, type: !28)
!1371 = !DILocation(line: 559, column: 9, scope: !98)
!1372 = !DILocation(line: 579, column: 18, scope: !98)
!1373 = !DILocation(line: 579, column: 20, scope: !98)
!1374 = !DILocation(line: 579, column: 27, scope: !98)
!1375 = !DILocation(line: 579, column: 29, scope: !98)
!1376 = !DILocation(line: 579, column: 24, scope: !98)
!1377 = !DILocation(line: 579, column: 17, scope: !98)
!1378 = !DILocation(line: 579, column: 33, scope: !98)
!1379 = !DILocation(line: 579, column: 3, scope: !98)
!1380 = !DILocation(line: 580, column: 8, scope: !1325)
!1381 = !DILocation(line: 580, column: 17, scope: !1324)
!1382 = !DILocation(line: 580, column: 3, scope: !1325)
!1383 = !DILocation(line: 581, column: 10, scope: !1328)
!1384 = !DILocation(line: 581, column: 19, scope: !1327)
!1385 = !DILocation(line: 581, column: 5, scope: !1328)
!1386 = !DILocation(line: 582, column: 7, scope: !1387)
!1387 = distinct !DILexicalBlock(scope: !1331, file: !1, line: 582, column: 7)
!1388 = !DILocation(line: 582, column: 7, scope: !1389)
!1389 = !DILexicalBlockFile(scope: !1390, file: !1, discriminator: 4)
!1390 = !DILexicalBlockFile(scope: !1391, file: !1, discriminator: 1)
!1391 = distinct !DILexicalBlock(scope: !1387, file: !1, line: 582, column: 7)
!1392 = !DILocation(line: 582, column: 7, scope: !1393)
!1393 = !DILexicalBlockFile(scope: !1391, file: !1, discriminator: 2)
!1394 = !DILocation(line: 582, column: 7, scope: !1395)
!1395 = !DILexicalBlockFile(scope: !1391, file: !1, discriminator: 3)
!1396 = !DILocation(line: 583, column: 14, scope: !1332)
!1397 = !DILocation(line: 584, column: 5, scope: !1332)
!1398 = !DILocation(line: 581, column: 27, scope: !1327)
!1399 = !DILocation(line: 581, column: 5, scope: !1327)
!1400 = !DILocation(line: 585, column: 3, scope: !1329)
!1401 = !DILocation(line: 580, column: 25, scope: !1324)
!1402 = !DILocation(line: 580, column: 3, scope: !1324)
!1403 = !DILocation(line: 593, column: 20, scope: !1404)
!1404 = distinct !DILexicalBlock(scope: !1405, file: !1, line: 593, column: 3)
!1405 = distinct !DILexicalBlock(scope: !98, file: !1, line: 593, column: 3)
!1406 = !DILocation(line: 594, column: 22, scope: !1407)
!1407 = distinct !DILexicalBlock(scope: !1408, file: !1, line: 594, column: 5)
!1408 = distinct !DILexicalBlock(scope: !1409, file: !1, line: 594, column: 5)
!1409 = distinct !DILexicalBlock(scope: !1404, file: !1, line: 593, column: 29)
!1410 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_from", scope: !1411, file: !1, line: 595, type: !28)
!1411 = distinct !DILexicalBlock(scope: !1412, file: !1, line: 595, column: 7)
!1412 = distinct !DILexicalBlock(scope: !1407, file: !1, line: 594, column: 31)
!1413 = !DILocation(line: 595, column: 7, scope: !1411)
!1414 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_to", scope: !1411, file: !1, line: 595, type: !28)
!1415 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_i", scope: !1411, file: !1, line: 595, type: !15)
!1416 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_l", scope: !1411, file: !1, line: 595, type: !15)
!1417 = !DILocation(line: 586, column: 3, scope: !98)
!1418 = !DILocation(line: 588, column: 3, scope: !98)
!1419 = !DILocation(line: 591, column: 39, scope: !98)
!1420 = !DILocation(line: 591, column: 41, scope: !98)
!1421 = !DILocation(line: 591, column: 48, scope: !98)
!1422 = !DILocation(line: 591, column: 50, scope: !98)
!1423 = !DILocation(line: 591, column: 45, scope: !98)
!1424 = !DILocation(line: 591, column: 38, scope: !98)
!1425 = !DILocation(line: 591, column: 54, scope: !98)
!1426 = !DILocation(line: 591, column: 26, scope: !98)
!1427 = !DILocation(line: 591, column: 18, scope: !98)
!1428 = !DILocation(line: 592, column: 18, scope: !98)
!1429 = !DILocation(line: 592, column: 20, scope: !98)
!1430 = !DILocation(line: 592, column: 27, scope: !98)
!1431 = !DILocation(line: 592, column: 29, scope: !98)
!1432 = !DILocation(line: 592, column: 24, scope: !98)
!1433 = !DILocation(line: 592, column: 17, scope: !98)
!1434 = !DILocation(line: 592, column: 33, scope: !98)
!1435 = !DILocation(line: 592, column: 3, scope: !98)
!1436 = !DILocation(line: 593, column: 8, scope: !1405)
!1437 = !DILocation(line: 593, column: 17, scope: !1404)
!1438 = !DILocation(line: 593, column: 3, scope: !1405)
!1439 = !DILocation(line: 594, column: 10, scope: !1408)
!1440 = !DILocation(line: 594, column: 19, scope: !1407)
!1441 = !DILocation(line: 594, column: 5, scope: !1408)
!1442 = !DILocation(line: 595, column: 7, scope: !1443)
!1443 = distinct !DILexicalBlock(scope: !1411, file: !1, line: 595, column: 7)
!1444 = !DILocation(line: 595, column: 7, scope: !1445)
!1445 = !DILexicalBlockFile(scope: !1446, file: !1, discriminator: 4)
!1446 = !DILexicalBlockFile(scope: !1447, file: !1, discriminator: 1)
!1447 = distinct !DILexicalBlock(scope: !1443, file: !1, line: 595, column: 7)
!1448 = !DILocation(line: 595, column: 7, scope: !1449)
!1449 = !DILexicalBlockFile(scope: !1447, file: !1, discriminator: 2)
!1450 = !DILocation(line: 595, column: 7, scope: !1451)
!1451 = !DILexicalBlockFile(scope: !1447, file: !1, discriminator: 3)
!1452 = !DILocation(line: 596, column: 14, scope: !1412)
!1453 = !DILocation(line: 597, column: 5, scope: !1412)
!1454 = !DILocation(line: 594, column: 27, scope: !1407)
!1455 = !DILocation(line: 594, column: 5, scope: !1407)
!1456 = !DILocation(line: 598, column: 3, scope: !1409)
!1457 = !DILocation(line: 593, column: 25, scope: !1404)
!1458 = !DILocation(line: 593, column: 3, scope: !1404)
!1459 = !DILocation(line: 599, column: 3, scope: !98)
!1460 = !DILocation(line: 600, column: 3, scope: !98)
!1461 = !DILocation(line: 602, column: 3, scope: !98)
!1462 = !DILocation(line: 604, column: 26, scope: !98)
!1463 = !DILocation(line: 604, column: 46, scope: !98)
!1464 = !DILocation(line: 604, column: 50, scope: !98)
!1465 = !DILocation(line: 604, column: 3, scope: !98)
!1466 = !DILocation(line: 605, column: 26, scope: !98)
!1467 = !DILocation(line: 605, column: 47, scope: !98)
!1468 = !DILocation(line: 605, column: 51, scope: !98)
!1469 = !DILocation(line: 605, column: 3, scope: !98)
!1470 = !DILocation(line: 607, column: 3, scope: !98)
!1471 = !DILocation(line: 608, column: 1, scope: !98)
