; ModuleID = '/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Rodinia/backprop/src/imagenet.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.BPNN = type { i32, i32, i32, float*, float*, float*, float*, float*, float*, float**, float**, float**, float** }

@layer_size = external global i32, align 4

; Function Attrs: nounwind uwtable
define i32 @load(%struct.BPNN* %net) #0 {
entry:
  %call = call i32 @rand() #3, !dbg !33
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !37, metadata !38), !dbg !39
  call void @llvm.dbg.value(metadata i32 %inc1, i64 0, metadata !40, metadata !38), !dbg !41
  call void @llvm.dbg.value(metadata %struct.BPNN* %net, i64 0, metadata !42, metadata !38), !dbg !43
  call void @llvm.dbg.declare(metadata !2, metadata !44, metadata !38), !dbg !45
  %tmp = load i32, i32* @layer_size, align 4, !dbg !46
  call void @llvm.dbg.value(metadata i32 %tmp, i64 0, metadata !47, metadata !38), !dbg !48
  %mul = mul nsw i32 %tmp, undef, !dbg !49
  call void @llvm.dbg.value(metadata i32 %mul, i64 0, metadata !50, metadata !38), !dbg !51
  %input_units = getelementptr inbounds %struct.BPNN, %struct.BPNN* %net, i32 0, i32 3, !dbg !52
  %tmp1 = load float*, float** %input_units, align 8, !dbg !52
  call void @llvm.dbg.value(metadata float* %tmp1, i64 0, metadata !53, metadata !38), !dbg !54
  call void @llvm.dbg.value(metadata i32 1, i64 0, metadata !37, metadata !38), !dbg !39
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !40, metadata !38), !dbg !41
  %scevgep = getelementptr float, float* %tmp1, i64 1, !dbg !55
  %scevgep2 = getelementptr float, float* %tmp1, i64 1, !dbg !55
  %scevgep23 = ptrtoint float* %scevgep2 to i64
  %scevgep4 = getelementptr float, float* %tmp1, i64 1, !dbg !55
  %scevgep5 = getelementptr float, float* %tmp1, i64 1, !dbg !55
  %scevgep57 = ptrtoint float* %scevgep5 to i64
  %scevgep8 = getelementptr float, float* %tmp1, i64 1, !dbg !55
  %scevgep9 = getelementptr float, float* %tmp1, i64 1, !dbg !55
  %scevgep911 = ptrtoint float* %scevgep9 to i64
  br label %for.cond, !dbg !55

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc1, %for.inc ]
  %k.0 = phi i32 [ 1, %entry ], [ %inc, %for.inc ]
  %0 = icmp sgt i32 %tmp, 0, !dbg !56
  %smax10 = select i1 %0, i32 %tmp, i32 0, !dbg !56
  %1 = zext i32 %smax10 to i64, !dbg !56
  %2 = mul i64 4, %1, !dbg !56
  %3 = add i64 %scevgep911, %2, !dbg !56
  %4 = icmp sgt i32 %tmp, 0, !dbg !56
  %smax6 = select i1 %4, i32 %tmp, i32 0, !dbg !56
  %5 = zext i32 %smax6 to i64, !dbg !56
  %6 = mul i64 4, %5, !dbg !56
  %7 = add i64 %scevgep57, %6, !dbg !56
  %8 = icmp sgt i32 %tmp, 0, !dbg !56
  %smax = select i1 %8, i32 %tmp, i32 0, !dbg !56
  %9 = zext i32 %smax to i64, !dbg !56
  %10 = mul i64 4, %9, !dbg !56
  %11 = add i64 %scevgep23, %10, !dbg !56
  %cmp = icmp slt i32 %i.0, %tmp, !dbg !56
  br i1 %cmp, label %for.body, label %for.end, !dbg !57

for.body:                                         ; preds = %for.cond
  %conv = sitofp i32 %call to float, !dbg !58
  %div = fdiv float %conv, 0x41E0000000000000, !dbg !59
  %idxprom = sext i32 %k.0 to i64, !dbg !60
  %arrayidx = getelementptr inbounds float, float* %tmp1, i64 %idxprom, !dbg !60
  store float %div, float* %arrayidx, align 4, !dbg !61
  %inc = add nsw i32 %k.0, 1, !dbg !62
  br label %for.inc, !dbg !63

for.inc:                                          ; preds = %for.body
  %inc1 = add nsw i32 %i.0, 1, !dbg !64
  br label %for.cond, !dbg !65

for.end:                                          ; preds = %for.cond
  ret i32 undef, !dbg !66
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare i32 @rand() #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!30, !31}
!llvm.ident = !{!32}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !5)
!1 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Rodinia/backprop/src/imagenet.c", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!2 = !{}
!3 = !{!4}
!4 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!5 = !{!6}
!6 = !DISubprogram(name: "load", scope: !1, file: !1, line: 8, type: !7, isLocal: false, isDefinition: true, scopeLine: 10, isOptimized: false, function: i32 (%struct.BPNN*)* @load, variables: !2)
!7 = !DISubroutineType(types: !8)
!8 = !{!9, !10}
!9 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64, align: 64)
!11 = !DIDerivedType(tag: DW_TAG_typedef, name: "BPNN", file: !12, line: 32, baseType: !13)
!12 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Rodinia/backprop/src/backprop.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!13 = !DICompositeType(tag: DW_TAG_structure_type, file: !12, line: 12, size: 768, align: 64, elements: !14)
!14 = !{!15, !16, !17, !18, !20, !21, !22, !23, !24, !25, !27, !28, !29}
!15 = !DIDerivedType(tag: DW_TAG_member, name: "input_n", scope: !13, file: !12, line: 13, baseType: !9, size: 32, align: 32)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "hidden_n", scope: !13, file: !12, line: 14, baseType: !9, size: 32, align: 32, offset: 32)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "output_n", scope: !13, file: !12, line: 15, baseType: !9, size: 32, align: 32, offset: 64)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "input_units", scope: !13, file: !12, line: 17, baseType: !19, size: 64, align: 64, offset: 128)
!19 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64, align: 64)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "hidden_units", scope: !13, file: !12, line: 18, baseType: !19, size: 64, align: 64, offset: 192)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "output_units", scope: !13, file: !12, line: 19, baseType: !19, size: 64, align: 64, offset: 256)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "hidden_delta", scope: !13, file: !12, line: 21, baseType: !19, size: 64, align: 64, offset: 320)
!23 = !DIDerivedType(tag: DW_TAG_member, name: "output_delta", scope: !13, file: !12, line: 22, baseType: !19, size: 64, align: 64, offset: 384)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !13, file: !12, line: 24, baseType: !19, size: 64, align: 64, offset: 448)
!25 = !DIDerivedType(tag: DW_TAG_member, name: "input_weights", scope: !13, file: !12, line: 26, baseType: !26, size: 64, align: 64, offset: 512)
!26 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19, size: 64, align: 64)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "hidden_weights", scope: !13, file: !12, line: 27, baseType: !26, size: 64, align: 64, offset: 576)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "input_prev_weights", scope: !13, file: !12, line: 30, baseType: !26, size: 64, align: 64, offset: 640)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "hidden_prev_weights", scope: !13, file: !12, line: 31, baseType: !26, size: 64, align: 64, offset: 704)
!30 = !{i32 2, !"Dwarf Version", i32 4}
!31 = !{i32 2, !"Debug Info Version", i32 3}
!32 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!33 = !DILocation(line: 21, column: 23, scope: !34)
!34 = distinct !DILexicalBlock(scope: !35, file: !1, line: 20, column: 28)
!35 = distinct !DILexicalBlock(scope: !36, file: !1, line: 20, column: 3)
!36 = distinct !DILexicalBlock(scope: !6, file: !1, line: 20, column: 3)
!37 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !6, file: !1, line: 12, type: !9)
!38 = !DIExpression()
!39 = !DILocation(line: 12, column: 30, scope: !6)
!40 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !6, file: !1, line: 12, type: !9)
!41 = !DILocation(line: 12, column: 24, scope: !6)
!42 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "net", arg: 1, scope: !6, file: !1, line: 9, type: !10)
!43 = !DILocation(line: 9, column: 7, scope: !6)
!44 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !6, file: !1, line: 12, type: !9)
!45 = !DILocation(line: 12, column: 27, scope: !6)
!46 = !DILocation(line: 14, column: 8, scope: !6)
!47 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nr", scope: !6, file: !1, line: 12, type: !9)
!48 = !DILocation(line: 12, column: 7, scope: !6)
!49 = !DILocation(line: 16, column: 16, scope: !6)
!50 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "imgsize", scope: !6, file: !1, line: 12, type: !9)
!51 = !DILocation(line: 12, column: 15, scope: !6)
!52 = !DILocation(line: 17, column: 16, scope: !6)
!53 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "units", scope: !6, file: !1, line: 11, type: !19)
!54 = !DILocation(line: 11, column: 10, scope: !6)
!55 = !DILocation(line: 20, column: 8, scope: !36)
!56 = !DILocation(line: 20, column: 17, scope: !35)
!57 = !DILocation(line: 20, column: 3, scope: !36)
!58 = !DILocation(line: 21, column: 15, scope: !34)
!59 = !DILocation(line: 21, column: 29, scope: !34)
!60 = !DILocation(line: 21, column: 4, scope: !34)
!61 = !DILocation(line: 21, column: 13, scope: !34)
!62 = !DILocation(line: 22, column: 5, scope: !34)
!63 = !DILocation(line: 23, column: 5, scope: !34)
!64 = !DILocation(line: 20, column: 24, scope: !35)
!65 = !DILocation(line: 20, column: 3, scope: !35)
!66 = !DILocation(line: 24, column: 1, scope: !6)
