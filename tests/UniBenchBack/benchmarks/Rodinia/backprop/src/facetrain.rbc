; ModuleID = '/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Rodinia/backprop/src/facetrain.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.BPNN = type { i32, i32, i32, float*, float*, float*, float*, float*, float*, float**, float**, float**, float** }

@layer_size = global i32 0, align 4
@.str = private unnamed_addr constant [23 x i8] c"Input layer size : %d\0A\00", align 1
@.str.1 = private unnamed_addr constant [26 x i8] c"Starting training kernel\0A\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"Training done\0A\00", align 1
@stderr = external global %struct._IO_FILE*, align 8
@.str.3 = private unnamed_addr constant [41 x i8] c"usage: backprop <num of input elements>\0A\00", align 1

; Function Attrs: nounwind uwtable
define i32 @backprop_face() #0 {
entry:
  %out_err = alloca float, align 4
  %hid_err = alloca float, align 4
  call void @llvm.dbg.declare(metadata !2, metadata !19, metadata !20), !dbg !21
  call void @llvm.dbg.declare(metadata float* %out_err, metadata !22, metadata !20), !dbg !24
  call void @llvm.dbg.declare(metadata float* %hid_err, metadata !25, metadata !20), !dbg !26
  %tmp = load i32, i32* @layer_size, align 4, !dbg !27
  %call = call %struct.BPNN* (i32, i32, i32, ...) bitcast (%struct.BPNN* (...)* @bpnn_create to %struct.BPNN* (i32, i32, i32, ...)*)(i32 %tmp, i32 16, i32 1), !dbg !28
  call void @llvm.dbg.value(metadata %struct.BPNN* %call, i64 0, metadata !29, metadata !20), !dbg !50
  %tmp1 = load i32, i32* @layer_size, align 4, !dbg !51
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0), i32 %tmp1), !dbg !52
  %call2 = call i32 (%struct.BPNN*, ...) bitcast (i32 (...)* @load to i32 (%struct.BPNN*, ...)*)(%struct.BPNN* %call), !dbg !53
  %call3 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i32 0, i32 0)), !dbg !54
  %call4 = call i32 (%struct.BPNN*, float*, float*, ...) bitcast (i32 (...)* @bpnn_train_kernel to i32 (%struct.BPNN*, float*, float*, ...)*)(%struct.BPNN* %call, float* %out_err, float* %hid_err), !dbg !55
  call void (%struct.BPNN*, ...) bitcast (void (...)* @bpnn_free to void (%struct.BPNN*, ...)*)(%struct.BPNN* %call), !dbg !56
  %call5 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i32 0, i32 0)), !dbg !57
  ret i32 undef, !dbg !58
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare %struct.BPNN* @bpnn_create(...) #2

declare i32 @printf(i8*, ...) #2

declare i32 @load(...) #2

declare i32 @bpnn_train_kernel(...) #2

declare void @bpnn_free(...) #2

; Function Attrs: nounwind uwtable
define i32 @setup(i32 %argc, i8** %argv) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %argc, i64 0, metadata !59, metadata !20), !dbg !60
  call void @llvm.dbg.value(metadata i8** %argv, i64 0, metadata !61, metadata !20), !dbg !62
  %cmp = icmp ne i32 %argc, 2, !dbg !63
  br i1 %cmp, label %if.then, label %if.end, !dbg !65

if.then:                                          ; preds = %entry
  %tmp = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !66
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.3, i32 0, i32 0)), !dbg !68
  call void @exit(i32 0) #5, !dbg !69
  unreachable, !dbg !69

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 1, !dbg !70
  %tmp1 = load i8*, i8** %arrayidx, align 8, !dbg !70
  %call1 = call i32 @atoi(i8* %tmp1) #6, !dbg !71
  store i32 %call1, i32* @layer_size, align 4, !dbg !72
  call void @llvm.dbg.value(metadata i32 7, i64 0, metadata !73, metadata !20), !dbg !74
  call void (i32, ...) bitcast (void (...)* @bpnn_initialize to void (i32, ...)*)(i32 7), !dbg !75
  %call2 = call i32 @backprop_face(), !dbg !76
  call void @exit(i32 0) #5, !dbg !77
  unreachable, !dbg !77

return:                                           ; No predecessors!
  ret i32 undef, !dbg !78
}

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: noreturn nounwind
declare void @exit(i32) #3

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #4

declare void @bpnn_initialize(...) #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind }
attributes #6 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!16, !17}
!llvm.ident = !{!18}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, subprograms: !3, globals: !14)
!1 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Rodinia/backprop/src/facetrain.c", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!2 = !{}
!3 = !{!4, !8}
!4 = !DISubprogram(name: "backprop_face", scope: !1, file: !1, line: 12, type: !5, isLocal: false, isDefinition: true, scopeLine: 13, isOptimized: false, function: i32 ()* @backprop_face, variables: !2)
!5 = !DISubroutineType(types: !6)
!6 = !{!7}
!7 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!8 = !DISubprogram(name: "setup", scope: !1, file: !1, line: 31, type: !9, isLocal: false, isDefinition: true, scopeLine: 34, isOptimized: false, function: i32 (i32, i8**)* @setup, variables: !2)
!9 = !DISubroutineType(types: !10)
!10 = !{!7, !7, !11}
!11 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64, align: 64)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64, align: 64)
!13 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!14 = !{!15}
!15 = !DIGlobalVariable(name: "layer_size", scope: !0, file: !1, line: 10, type: !7, isLocal: false, isDefinition: true, variable: i32* @layer_size)
!16 = !{i32 2, !"Dwarf Version", i32 4}
!17 = !{i32 2, !"Debug Info Version", i32 3}
!18 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!19 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !4, file: !1, line: 15, type: !7)
!20 = !DIExpression()
!21 = !DILocation(line: 15, column: 7, scope: !4)
!22 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "out_err", scope: !4, file: !1, line: 16, type: !23)
!23 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!24 = !DILocation(line: 16, column: 9, scope: !4)
!25 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "hid_err", scope: !4, file: !1, line: 16, type: !23)
!26 = !DILocation(line: 16, column: 18, scope: !4)
!27 = !DILocation(line: 17, column: 21, scope: !4)
!28 = !DILocation(line: 17, column: 9, scope: !4)
!29 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "net", scope: !4, file: !1, line: 14, type: !30)
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64, align: 64)
!31 = !DIDerivedType(tag: DW_TAG_typedef, name: "BPNN", file: !32, line: 32, baseType: !33)
!32 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Rodinia/backprop/src/backprop.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!33 = !DICompositeType(tag: DW_TAG_structure_type, file: !32, line: 12, size: 768, align: 64, elements: !34)
!34 = !{!35, !36, !37, !38, !40, !41, !42, !43, !44, !45, !47, !48, !49}
!35 = !DIDerivedType(tag: DW_TAG_member, name: "input_n", scope: !33, file: !32, line: 13, baseType: !7, size: 32, align: 32)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "hidden_n", scope: !33, file: !32, line: 14, baseType: !7, size: 32, align: 32, offset: 32)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "output_n", scope: !33, file: !32, line: 15, baseType: !7, size: 32, align: 32, offset: 64)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "input_units", scope: !33, file: !32, line: 17, baseType: !39, size: 64, align: 64, offset: 128)
!39 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64, align: 64)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "hidden_units", scope: !33, file: !32, line: 18, baseType: !39, size: 64, align: 64, offset: 192)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "output_units", scope: !33, file: !32, line: 19, baseType: !39, size: 64, align: 64, offset: 256)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "hidden_delta", scope: !33, file: !32, line: 21, baseType: !39, size: 64, align: 64, offset: 320)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "output_delta", scope: !33, file: !32, line: 22, baseType: !39, size: 64, align: 64, offset: 384)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !33, file: !32, line: 24, baseType: !39, size: 64, align: 64, offset: 448)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "input_weights", scope: !33, file: !32, line: 26, baseType: !46, size: 64, align: 64, offset: 512)
!46 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !39, size: 64, align: 64)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "hidden_weights", scope: !33, file: !32, line: 27, baseType: !46, size: 64, align: 64, offset: 576)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "input_prev_weights", scope: !33, file: !32, line: 30, baseType: !46, size: 64, align: 64, offset: 640)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "hidden_prev_weights", scope: !33, file: !32, line: 31, baseType: !46, size: 64, align: 64, offset: 704)
!50 = !DILocation(line: 14, column: 9, scope: !4)
!51 = !DILocation(line: 18, column: 37, scope: !4)
!52 = !DILocation(line: 18, column: 3, scope: !4)
!53 = !DILocation(line: 19, column: 3, scope: !4)
!54 = !DILocation(line: 21, column: 3, scope: !4)
!55 = !DILocation(line: 24, column: 3, scope: !4)
!56 = !DILocation(line: 27, column: 3, scope: !4)
!57 = !DILocation(line: 28, column: 3, scope: !4)
!58 = !DILocation(line: 29, column: 1, scope: !4)
!59 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !8, file: !1, line: 32, type: !7)
!60 = !DILocation(line: 32, column: 5, scope: !8)
!61 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !8, file: !1, line: 33, type: !11)
!62 = !DILocation(line: 33, column: 7, scope: !8)
!63 = !DILocation(line: 35, column: 10, scope: !64)
!64 = distinct !DILexicalBlock(scope: !8, file: !1, line: 35, column: 6)
!65 = !DILocation(line: 35, column: 6, scope: !8)
!66 = !DILocation(line: 36, column: 11, scope: !67)
!67 = distinct !DILexicalBlock(scope: !64, file: !1, line: 35, column: 14)
!68 = !DILocation(line: 36, column: 3, scope: !67)
!69 = !DILocation(line: 37, column: 3, scope: !67)
!70 = !DILocation(line: 40, column: 21, scope: !8)
!71 = !DILocation(line: 40, column: 16, scope: !8)
!72 = !DILocation(line: 40, column: 14, scope: !8)
!73 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "seed", scope: !8, file: !1, line: 42, type: !7)
!74 = !DILocation(line: 42, column: 7, scope: !8)
!75 = !DILocation(line: 45, column: 3, scope: !8)
!76 = !DILocation(line: 46, column: 3, scope: !8)
!77 = !DILocation(line: 48, column: 3, scope: !8)
!78 = !DILocation(line: 49, column: 1, scope: !8)
