; ModuleID = '/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Polybench/SYRK_M/src/syrk_m.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.timezone = type { i32, i32 }
%struct.timeval = type { i64, i64 }

@.str = private unnamed_addr constant [35 x i8] c"Error return from gettimeofday: %d\00", align 1
@A = common global [1024 x [1024 x float]] zeroinitializer, align 16
@C = common global [1024 x [1024 x float]] zeroinitializer, align 16
@D = common global [1024 x [1024 x float]] zeroinitializer, align 16
@.str.1 = private unnamed_addr constant [74 x i8] c"Non-Matching CPU-GPU Outputs Beyond Error Threshold of %4.2f Percent: %d\0A\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@.str.2 = private unnamed_addr constant [22 x i8] c"GPU Runtime: %0.6lfs\0A\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"CPU Runtime: %0.6lfs\0A\00", align 1

; Function Attrs: nounwind uwtable
define double @rtclock() #0 {
entry:
  %Tzp = alloca %struct.timezone, align 4
  %Tp = alloca %struct.timeval, align 8
  call void @llvm.dbg.declare(metadata %struct.timezone* %Tzp, metadata !38, metadata !44), !dbg !45
  call void @llvm.dbg.declare(metadata %struct.timeval* %Tp, metadata !46, metadata !44), !dbg !56
  %call = call i32 @gettimeofday(%struct.timeval* %Tp, %struct.timezone* %Tzp) #4, !dbg !57
  call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !58, metadata !44), !dbg !59
  %cmp = icmp ne i32 %call, 0, !dbg !60
  br i1 %cmp, label %if.then, label %if.end, !dbg !62

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i32 0, i32 0), i32 %call), !dbg !63
  br label %if.end, !dbg !63

if.end:                                           ; preds = %if.then, %entry
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %Tp, i32 0, i32 0, !dbg !64
  %tmp = load i64, i64* %tv_sec, align 8, !dbg !64
  %conv = sitofp i64 %tmp to double, !dbg !65
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %Tp, i32 0, i32 1, !dbg !66
  %tmp1 = load i64, i64* %tv_usec, align 8, !dbg !66
  %conv2 = sitofp i64 %tmp1 to double, !dbg !67
  %mul = fmul double %conv2, 1.000000e-06, !dbg !68
  %add = fadd double %conv, %mul, !dbg !69
  ret double %add, !dbg !70
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timeval*, %struct.timezone*) #2

declare i32 @printf(i8*, ...) #3

; Function Attrs: nounwind uwtable
define float @absVal(float %a) #0 {
entry:
  call void @llvm.dbg.value(metadata float %a, i64 0, metadata !71, metadata !44), !dbg !72
  %cmp = fcmp olt float %a, 0.000000e+00, !dbg !73
  br i1 %cmp, label %if.then, label %if.else, !dbg !75

if.then:                                          ; preds = %entry
  %mul = fmul float %a, -1.000000e+00, !dbg !76
  br label %return, !dbg !78

if.else:                                          ; preds = %entry
  br label %return, !dbg !79

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi float [ %mul, %if.then ], [ %a, %if.else ]
  ret float %retval.0, !dbg !81
}

; Function Attrs: nounwind uwtable
define float @percentDiff(double %val1, double %val2) #0 {
entry:
  call void @llvm.dbg.value(metadata double %val1, i64 0, metadata !82, metadata !44), !dbg !83
  call void @llvm.dbg.value(metadata double %val2, i64 0, metadata !84, metadata !44), !dbg !85
  %conv = fptrunc double %val1 to float, !dbg !86
  %call = call float @absVal(float %conv), !dbg !88
  %conv1 = fpext float %call to double, !dbg !88
  %cmp = fcmp olt double %conv1, 1.000000e-02, !dbg !89
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !90

land.lhs.true:                                    ; preds = %entry
  %conv3 = fptrunc double %val2 to float, !dbg !91
  %call4 = call float @absVal(float %conv3), !dbg !93
  %conv5 = fpext float %call4 to double, !dbg !93
  %cmp6 = fcmp olt double %conv5, 1.000000e-02, !dbg !94
  br i1 %cmp6, label %if.then, label %if.else, !dbg !95

if.then:                                          ; preds = %land.lhs.true
  br label %return, !dbg !96

if.else:                                          ; preds = %land.lhs.true, %entry
  %sub = fsub double %val1, %val2, !dbg !98
  %conv8 = fptrunc double %sub to float, !dbg !100
  %call9 = call float @absVal(float %conv8), !dbg !101
  %add = fadd double %val1, 0x3E45798EE0000000, !dbg !102
  %conv10 = fptrunc double %add to float, !dbg !103
  %call11 = call float @absVal(float %conv10), !dbg !104
  %div = fdiv float %call9, %call11, !dbg !105
  %call12 = call float @absVal(float %div), !dbg !106
  %mul = fmul float 1.000000e+02, %call12, !dbg !107
  br label %return, !dbg !108

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi float [ 0.000000e+00, %if.then ], [ %mul, %if.else ]
  ret float %retval.0, !dbg !109
}

; Function Attrs: nounwind uwtable
define void @init_arrays() #0 {
entry:
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !110, metadata !44), !dbg !111
  call void @llvm.dbg.value(metadata i32 %inc28, i64 0, metadata !110, metadata !44), !dbg !111
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !110, metadata !44), !dbg !111
  call void @llvm.dbg.value(metadata i32 %inc31, i64 0, metadata !112, metadata !44), !dbg !113
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !110, metadata !44), !dbg !111
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !112, metadata !44), !dbg !113
  br label %for.cond, !dbg !114

for.cond:                                         ; preds = %for.inc.30, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc31, %for.inc.30 ]
  %cmp = icmp slt i32 %i.0, 1024, !dbg !116
  br i1 %cmp, label %for.body, label %for.end.32, !dbg !118

for.body:                                         ; preds = %for.cond
  br label %for.cond.1, !dbg !119

for.cond.1:                                       ; preds = %for.inc, %for.body
  %j.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ]
  %cmp2 = icmp slt i32 %j.0, 1024, !dbg !122
  br i1 %cmp2, label %for.body.3, label %for.end, !dbg !124

for.body.3:                                       ; preds = %for.cond.1
  %conv = sitofp i32 %i.0 to float, !dbg !125
  %conv4 = sitofp i32 %j.0 to float, !dbg !127
  %mul = fmul float %conv, %conv4, !dbg !128
  %div = fdiv float %mul, 1.024000e+03, !dbg !129
  %idxprom = sext i32 %j.0 to i64, !dbg !130
  %idxprom5 = sext i32 %i.0 to i64, !dbg !130
  %arrayidx = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @A, i32 0, i64 %idxprom5, !dbg !130
  %arrayidx6 = getelementptr inbounds [1024 x float], [1024 x float]* %arrayidx, i32 0, i64 %idxprom, !dbg !130
  store float %div, float* %arrayidx6, align 4, !dbg !131
  br label %for.inc, !dbg !132

for.inc:                                          ; preds = %for.body.3
  %inc = add nsw i32 %j.0, 1, !dbg !133
  br label %for.cond.1, !dbg !134

for.end:                                          ; preds = %for.cond.1
  br label %for.cond.7, !dbg !135

for.cond.7:                                       ; preds = %for.inc.27, %for.end
  %j.1 = phi i32 [ 0, %for.end ], [ %inc28, %for.inc.27 ]
  %cmp8 = icmp slt i32 %j.1, 1024, !dbg !137
  br i1 %cmp8, label %for.body.10, label %for.end.29, !dbg !139

for.body.10:                                      ; preds = %for.cond.7
  %conv11 = sitofp i32 %i.0 to float, !dbg !140
  %conv12 = sitofp i32 %j.1 to float, !dbg !142
  %mul13 = fmul float %conv11, %conv12, !dbg !143
  %add = fadd float %mul13, 2.000000e+00, !dbg !144
  %div14 = fdiv float %add, 1.024000e+03, !dbg !145
  %idxprom15 = sext i32 %j.1 to i64, !dbg !146
  %idxprom16 = sext i32 %i.0 to i64, !dbg !146
  %arrayidx17 = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @C, i32 0, i64 %idxprom16, !dbg !146
  %arrayidx18 = getelementptr inbounds [1024 x float], [1024 x float]* %arrayidx17, i32 0, i64 %idxprom15, !dbg !146
  store float %div14, float* %arrayidx18, align 4, !dbg !147
  %idxprom19 = sext i32 %j.1 to i64, !dbg !148
  %idxprom20 = sext i32 %i.0 to i64, !dbg !148
  %arrayidx21 = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @C, i32 0, i64 %idxprom20, !dbg !148
  %arrayidx22 = getelementptr inbounds [1024 x float], [1024 x float]* %arrayidx21, i32 0, i64 %idxprom19, !dbg !148
  %tmp = load float, float* %arrayidx22, align 4, !dbg !148
  %idxprom23 = sext i32 %j.1 to i64, !dbg !149
  %idxprom24 = sext i32 %i.0 to i64, !dbg !149
  %arrayidx25 = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @D, i32 0, i64 %idxprom24, !dbg !149
  %arrayidx26 = getelementptr inbounds [1024 x float], [1024 x float]* %arrayidx25, i32 0, i64 %idxprom23, !dbg !149
  store float %tmp, float* %arrayidx26, align 4, !dbg !150
  br label %for.inc.27, !dbg !151

for.inc.27:                                       ; preds = %for.body.10
  %inc28 = add nsw i32 %j.1, 1, !dbg !152
  br label %for.cond.7, !dbg !153

for.end.29:                                       ; preds = %for.cond.7
  br label %for.inc.30, !dbg !154

for.inc.30:                                       ; preds = %for.end.29
  %inc31 = add nsw i32 %i.0, 1, !dbg !155
  br label %for.cond, !dbg !156

for.end.32:                                       ; preds = %for.cond
  ret void, !dbg !157
}

; Function Attrs: nounwind uwtable
define void @syrk() #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !158, metadata !44), !dbg !159
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !158, metadata !44), !dbg !159
  call void @llvm.dbg.value(metadata i32 %inc7, i64 0, metadata !160, metadata !44), !dbg !161
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !160, metadata !44), !dbg !161
  br label %for.cond, !dbg !162

for.cond:                                         ; preds = %for.inc.6, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc7, %for.inc.6 ]
  %cmp = icmp slt i32 %i.0, 1024, !dbg !164
  br i1 %cmp, label %for.body, label %for.end.8, !dbg !166

for.body:                                         ; preds = %for.cond
  br label %for.cond.1, !dbg !167

for.cond.1:                                       ; preds = %for.inc, %for.body
  %j.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ]
  %cmp2 = icmp slt i32 %j.0, 1024, !dbg !170
  br i1 %cmp2, label %for.body.3, label %for.end, !dbg !172

for.body.3:                                       ; preds = %for.cond.1
  %idxprom = sext i32 %j.0 to i64, !dbg !173
  %idxprom4 = sext i32 %i.0 to i64, !dbg !173
  %arrayidx = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @C, i32 0, i64 %idxprom4, !dbg !173
  %arrayidx5 = getelementptr inbounds [1024 x float], [1024 x float]* %arrayidx, i32 0, i64 %idxprom, !dbg !173
  %tmp = load float, float* %arrayidx5, align 4, !dbg !175
  %mul = fmul float %tmp, 4.546000e+03, !dbg !175
  store float %mul, float* %arrayidx5, align 4, !dbg !175
  br label %for.inc, !dbg !176

for.inc:                                          ; preds = %for.body.3
  %inc = add nsw i32 %j.0, 1, !dbg !177
  br label %for.cond.1, !dbg !178

for.end:                                          ; preds = %for.cond.1
  br label %for.inc.6, !dbg !179

for.inc.6:                                        ; preds = %for.end
  %inc7 = add nsw i32 %i.0, 1, !dbg !180
  br label %for.cond, !dbg !181

for.end.8:                                        ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !158, metadata !44), !dbg !159
  call void @llvm.dbg.value(metadata i32 %inc39, i64 0, metadata !160, metadata !44), !dbg !161
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !182, metadata !44), !dbg !183
  call void @llvm.dbg.value(metadata i32 %inc36, i64 0, metadata !158, metadata !44), !dbg !159
  call void @llvm.dbg.value(metadata i32 %inc33, i64 0, metadata !182, metadata !44), !dbg !183
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !160, metadata !44), !dbg !161
  br label %for.cond.9, !dbg !184

for.cond.9:                                       ; preds = %for.inc.38, %for.end.8
  %i.1 = phi i32 [ 0, %for.end.8 ], [ %inc39, %for.inc.38 ]
  %cmp10 = icmp slt i32 %i.1, 1024, !dbg !186
  br i1 %cmp10, label %for.body.11, label %for.end.40, !dbg !188

for.body.11:                                      ; preds = %for.cond.9
  br label %for.cond.12, !dbg !189

for.cond.12:                                      ; preds = %for.inc.35, %for.body.11
  %j.1 = phi i32 [ 0, %for.body.11 ], [ %inc36, %for.inc.35 ]
  %cmp13 = icmp slt i32 %j.1, 1024, !dbg !192
  br i1 %cmp13, label %for.body.14, label %for.end.37, !dbg !194

for.body.14:                                      ; preds = %for.cond.12
  br label %for.cond.15, !dbg !195

for.cond.15:                                      ; preds = %for.inc.32, %for.body.14
  %k.0 = phi i32 [ 0, %for.body.14 ], [ %inc33, %for.inc.32 ]
  %cmp16 = icmp slt i32 %k.0, 1024, !dbg !198
  br i1 %cmp16, label %for.body.17, label %for.end.34, !dbg !200

for.body.17:                                      ; preds = %for.cond.15
  %idxprom18 = sext i32 %k.0 to i64, !dbg !201
  %idxprom19 = sext i32 %i.1 to i64, !dbg !201
  %arrayidx20 = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @A, i32 0, i64 %idxprom19, !dbg !201
  %arrayidx21 = getelementptr inbounds [1024 x float], [1024 x float]* %arrayidx20, i32 0, i64 %idxprom18, !dbg !201
  %tmp1 = load float, float* %arrayidx21, align 4, !dbg !201
  %mul22 = fmul float 1.243500e+04, %tmp1, !dbg !203
  %idxprom23 = sext i32 %k.0 to i64, !dbg !204
  %idxprom24 = sext i32 %j.1 to i64, !dbg !204
  %arrayidx25 = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @A, i32 0, i64 %idxprom24, !dbg !204
  %arrayidx26 = getelementptr inbounds [1024 x float], [1024 x float]* %arrayidx25, i32 0, i64 %idxprom23, !dbg !204
  %tmp2 = load float, float* %arrayidx26, align 4, !dbg !204
  %mul27 = fmul float %mul22, %tmp2, !dbg !205
  %idxprom28 = sext i32 %j.1 to i64, !dbg !206
  %idxprom29 = sext i32 %i.1 to i64, !dbg !206
  %arrayidx30 = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @C, i32 0, i64 %idxprom29, !dbg !206
  %arrayidx31 = getelementptr inbounds [1024 x float], [1024 x float]* %arrayidx30, i32 0, i64 %idxprom28, !dbg !206
  %tmp3 = load float, float* %arrayidx31, align 4, !dbg !207
  %add = fadd float %tmp3, %mul27, !dbg !207
  store float %add, float* %arrayidx31, align 4, !dbg !207
  br label %for.inc.32, !dbg !208

for.inc.32:                                       ; preds = %for.body.17
  %inc33 = add nsw i32 %k.0, 1, !dbg !209
  br label %for.cond.15, !dbg !210

for.end.34:                                       ; preds = %for.cond.15
  br label %for.inc.35, !dbg !211

for.inc.35:                                       ; preds = %for.end.34
  %inc36 = add nsw i32 %j.1, 1, !dbg !212
  br label %for.cond.12, !dbg !213

for.end.37:                                       ; preds = %for.cond.12
  br label %for.inc.38, !dbg !214

for.inc.38:                                       ; preds = %for.end.37
  %inc39 = add nsw i32 %i.1, 1, !dbg !215
  br label %for.cond.9, !dbg !216

for.end.40:                                       ; preds = %for.cond.9
  ret void, !dbg !217
}

; Function Attrs: nounwind uwtable
define void @compareResults() #0 {
entry:
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !218, metadata !44), !dbg !219
  call void @llvm.dbg.value(metadata i32 %inc16, i64 0, metadata !220, metadata !44), !dbg !221
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !222, metadata !44), !dbg !223
  call void @llvm.dbg.value(metadata i32 %inc14, i64 0, metadata !218, metadata !44), !dbg !219
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !222, metadata !44), !dbg !223
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !220, metadata !44), !dbg !221
  br label %for.cond, !dbg !224

for.cond:                                         ; preds = %for.inc.15, %entry
  %fail.0 = phi i32 [ 0, %entry ], [ %fail.1.lcssa, %for.inc.15 ]
  %i.0 = phi i32 [ 0, %entry ], [ %inc16, %for.inc.15 ]
  %cmp = icmp slt i32 %i.0, 1024, !dbg !226
  br i1 %cmp, label %for.body, label %for.end.17, !dbg !228

for.body:                                         ; preds = %for.cond
  br label %for.cond.1, !dbg !229

for.cond.1:                                       ; preds = %for.inc, %for.body
  %fail.1 = phi i32 [ %fail.0, %for.body ], [ %fail.2, %for.inc ]
  %j.0 = phi i32 [ 0, %for.body ], [ %inc14, %for.inc ]
  %cmp2 = icmp slt i32 %j.0, 1024, !dbg !232
  br i1 %cmp2, label %for.body.3, label %for.end, !dbg !234

for.body.3:                                       ; preds = %for.cond.1
  %idxprom = sext i32 %j.0 to i64, !dbg !235
  %idxprom4 = sext i32 %i.0 to i64, !dbg !235
  %arrayidx = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @C, i32 0, i64 %idxprom4, !dbg !235
  %arrayidx5 = getelementptr inbounds [1024 x float], [1024 x float]* %arrayidx, i32 0, i64 %idxprom, !dbg !235
  %tmp = load float, float* %arrayidx5, align 4, !dbg !235
  %conv = fpext float %tmp to double, !dbg !235
  %idxprom6 = sext i32 %j.0 to i64, !dbg !238
  %idxprom7 = sext i32 %i.0 to i64, !dbg !238
  %arrayidx8 = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @D, i32 0, i64 %idxprom7, !dbg !238
  %arrayidx9 = getelementptr inbounds [1024 x float], [1024 x float]* %arrayidx8, i32 0, i64 %idxprom6, !dbg !238
  %tmp1 = load float, float* %arrayidx9, align 4, !dbg !238
  %conv10 = fpext float %tmp1 to double, !dbg !238
  %call = call float @percentDiff(double %conv, double %conv10), !dbg !239
  %conv11 = fpext float %call to double, !dbg !239
  %cmp12 = fcmp ogt double %conv11, 5.000000e-02, !dbg !240
  br i1 %cmp12, label %if.then, label %if.end, !dbg !241

if.then:                                          ; preds = %for.body.3
  %inc = add nsw i32 %fail.1, 1, !dbg !242
  br label %if.end, !dbg !244

if.end:                                           ; preds = %if.then, %for.body.3
  %fail.2 = phi i32 [ %inc, %if.then ], [ %fail.1, %for.body.3 ]
  br label %for.inc, !dbg !245

for.inc:                                          ; preds = %if.end
  %inc14 = add nsw i32 %j.0, 1, !dbg !246
  br label %for.cond.1, !dbg !247

for.end:                                          ; preds = %for.cond.1
  %fail.1.lcssa = phi i32 [ %fail.1, %for.cond.1 ]
  br label %for.inc.15, !dbg !248

for.inc.15:                                       ; preds = %for.end
  %inc16 = add nsw i32 %i.0, 1, !dbg !249
  br label %for.cond, !dbg !250

for.end.17:                                       ; preds = %for.cond
  %fail.0.lcssa = phi i32 [ %fail.0, %for.cond ]
  %call18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i32 0, i32 0), double 5.000000e-02, i32 %fail.0.lcssa), !dbg !251
  ret void, !dbg !252
}

; Function Attrs: nounwind uwtable
define void @syrkGPU() #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !253, metadata !44), !dbg !260
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !253, metadata !44), !dbg !260
  call void @llvm.dbg.value(metadata i32 %inc24, i64 0, metadata !261, metadata !44), !dbg !262
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !261, metadata !44), !dbg !262
  call void @llvm.dbg.value(metadata i32 %inc27, i64 0, metadata !263, metadata !44), !dbg !264
  %call = call double @rtclock(), !dbg !265
  call void @llvm.dbg.value(metadata double %call, i64 0, metadata !266, metadata !44), !dbg !267
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !263, metadata !44), !dbg !264
  br label %for.cond, !dbg !268

for.cond:                                         ; preds = %for.inc.26, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc27, %for.inc.26 ]
  %cmp = icmp slt i32 %i.0, 1024, !dbg !269
  br i1 %cmp, label %for.body, label %for.end.28, !dbg !270

for.body:                                         ; preds = %for.cond
  br label %for.cond.1, !dbg !271

for.cond.1:                                       ; preds = %for.inc.23, %for.body
  %j.0 = phi i32 [ 0, %for.body ], [ %inc24, %for.inc.23 ]
  %cmp2 = icmp slt i32 %j.0, 1024, !dbg !272
  br i1 %cmp2, label %for.body.3, label %for.end.25, !dbg !273

for.body.3:                                       ; preds = %for.cond.1
  %idxprom = sext i32 %j.0 to i64, !dbg !274
  %idxprom4 = sext i32 %i.0 to i64, !dbg !274
  %arrayidx = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @D, i32 0, i64 %idxprom4, !dbg !274
  %arrayidx5 = getelementptr inbounds [1024 x float], [1024 x float]* %arrayidx, i32 0, i64 %idxprom, !dbg !274
  %tmp = load float, float* %arrayidx5, align 4, !dbg !275
  %mul = fmul float %tmp, 4.546000e+03, !dbg !275
  store float %mul, float* %arrayidx5, align 4, !dbg !275
  br label %for.cond.6, !dbg !276

for.cond.6:                                       ; preds = %for.inc, %for.body.3
  %k.0 = phi i32 [ 0, %for.body.3 ], [ %inc, %for.inc ]
  %cmp7 = icmp slt i32 %k.0, 1024, !dbg !278
  br i1 %cmp7, label %for.body.8, label %for.end, !dbg !280

for.body.8:                                       ; preds = %for.cond.6
  %idxprom9 = sext i32 %k.0 to i64, !dbg !281
  %idxprom10 = sext i32 %i.0 to i64, !dbg !281
  %arrayidx11 = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @A, i32 0, i64 %idxprom10, !dbg !281
  %arrayidx12 = getelementptr inbounds [1024 x float], [1024 x float]* %arrayidx11, i32 0, i64 %idxprom9, !dbg !281
  %tmp1 = load float, float* %arrayidx12, align 4, !dbg !281
  %mul13 = fmul float 1.243500e+04, %tmp1, !dbg !283
  %idxprom14 = sext i32 %k.0 to i64, !dbg !284
  %idxprom15 = sext i32 %j.0 to i64, !dbg !284
  %arrayidx16 = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @A, i32 0, i64 %idxprom15, !dbg !284
  %arrayidx17 = getelementptr inbounds [1024 x float], [1024 x float]* %arrayidx16, i32 0, i64 %idxprom14, !dbg !284
  %tmp2 = load float, float* %arrayidx17, align 4, !dbg !284
  %mul18 = fmul float %mul13, %tmp2, !dbg !285
  %idxprom19 = sext i32 %j.0 to i64, !dbg !286
  %idxprom20 = sext i32 %i.0 to i64, !dbg !286
  %arrayidx21 = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @D, i32 0, i64 %idxprom20, !dbg !286
  %arrayidx22 = getelementptr inbounds [1024 x float], [1024 x float]* %arrayidx21, i32 0, i64 %idxprom19, !dbg !286
  %tmp3 = load float, float* %arrayidx22, align 4, !dbg !287
  %add = fadd float %tmp3, %mul18, !dbg !287
  store float %add, float* %arrayidx22, align 4, !dbg !287
  br label %for.inc, !dbg !288

for.inc:                                          ; preds = %for.body.8
  %inc = add nsw i32 %k.0, 1, !dbg !289
  br label %for.cond.6, !dbg !290

for.end:                                          ; preds = %for.cond.6
  br label %for.inc.23, !dbg !291

for.inc.23:                                       ; preds = %for.end
  %inc24 = add nsw i32 %j.0, 1, !dbg !292
  br label %for.cond.1, !dbg !293

for.end.25:                                       ; preds = %for.cond.1
  br label %for.inc.26, !dbg !294

for.inc.26:                                       ; preds = %for.end.25
  %inc27 = add nsw i32 %i.0, 1, !dbg !295
  br label %for.cond, !dbg !296

for.end.28:                                       ; preds = %for.cond
  %call29 = call double @rtclock(), !dbg !297
  call void @llvm.dbg.value(metadata double %call29, i64 0, metadata !298, metadata !44), !dbg !299
  %tmp4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !300
  %sub = fsub double %call29, %call, !dbg !301
  %call30 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i32 0, i32 0), double %sub), !dbg !302
  ret void, !dbg !303
}

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define i32 @main() #0 {
entry:
  call void @init_arrays(), !dbg !304
  call void @syrkGPU(), !dbg !305
  %call = call double @rtclock(), !dbg !306
  call void @llvm.dbg.value(metadata double %call, i64 0, metadata !307, metadata !44), !dbg !308
  call void @syrk(), !dbg !309
  %call1 = call double @rtclock(), !dbg !310
  call void @llvm.dbg.value(metadata double %call1, i64 0, metadata !311, metadata !44), !dbg !312
  %tmp = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !313
  %sub = fsub double %call1, %call, !dbg !314
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i32 0, i32 0), double %sub), !dbg !315
  call void @compareResults(), !dbg !316
  ret i32 0, !dbg !317
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!35, !36}
!llvm.ident = !{!37}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !6, globals: !28)
!1 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Polybench/SYRK_M/src/syrk_m.c", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!2 = !{}
!3 = !{!4}
!4 = !DIDerivedType(tag: DW_TAG_typedef, name: "DATA_TYPE", file: !1, line: 35, baseType: !5)
!5 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!6 = !{!7, !12, !15, !18, !21, !22, !23, !24}
!7 = !DISubprogram(name: "rtclock", scope: !8, file: !8, line: 11, type: !9, isLocal: false, isDefinition: true, scopeLine: 12, isOptimized: false, function: double ()* @rtclock, variables: !2)
!8 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Polybench/SYRK_M/src/../../common/polybenchUtilFuncts.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!9 = !DISubroutineType(types: !10)
!10 = !{!11}
!11 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!12 = !DISubprogram(name: "absVal", scope: !8, file: !8, line: 22, type: !13, isLocal: false, isDefinition: true, scopeLine: 23, flags: DIFlagPrototyped, isOptimized: false, function: float (float)* @absVal, variables: !2)
!13 = !DISubroutineType(types: !14)
!14 = !{!5, !5}
!15 = !DISubprogram(name: "percentDiff", scope: !8, file: !8, line: 36, type: !16, isLocal: false, isDefinition: true, scopeLine: 37, flags: DIFlagPrototyped, isOptimized: false, function: float (double, double)* @percentDiff, variables: !2)
!16 = !DISubroutineType(types: !17)
!17 = !{!5, !11, !11}
!18 = !DISubprogram(name: "init_arrays", scope: !1, file: !1, line: 41, type: !19, isLocal: false, isDefinition: true, scopeLine: 41, isOptimized: false, function: void ()* @init_arrays, variables: !2)
!19 = !DISubroutineType(types: !20)
!20 = !{null}
!21 = !DISubprogram(name: "syrk", scope: !1, file: !1, line: 55, type: !19, isLocal: false, isDefinition: true, scopeLine: 55, isOptimized: false, function: void ()* @syrk, variables: !2)
!22 = !DISubprogram(name: "compareResults", scope: !1, file: !1, line: 73, type: !19, isLocal: false, isDefinition: true, scopeLine: 73, isOptimized: false, function: void ()* @compareResults, variables: !2)
!23 = !DISubprogram(name: "syrkGPU", scope: !1, file: !1, line: 90, type: !19, isLocal: false, isDefinition: true, scopeLine: 90, isOptimized: false, function: void ()* @syrkGPU, variables: !2)
!24 = !DISubprogram(name: "main", scope: !1, file: !1, line: 113, type: !25, isLocal: false, isDefinition: true, scopeLine: 113, isOptimized: false, function: i32 ()* @main, variables: !2)
!25 = !DISubroutineType(types: !26)
!26 = !{!27}
!27 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!28 = !{!29, !33, !34}
!29 = !DIGlobalVariable(name: "A", scope: !0, file: !1, line: 37, type: !30, isLocal: false, isDefinition: true, variable: [1024 x [1024 x float]]* @A)
!30 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 33554432, align: 32, elements: !31)
!31 = !{!32, !32}
!32 = !DISubrange(count: 1024)
!33 = !DIGlobalVariable(name: "C", scope: !0, file: !1, line: 38, type: !30, isLocal: false, isDefinition: true, variable: [1024 x [1024 x float]]* @C)
!34 = !DIGlobalVariable(name: "D", scope: !0, file: !1, line: 39, type: !30, isLocal: false, isDefinition: true, variable: [1024 x [1024 x float]]* @D)
!35 = !{i32 2, !"Dwarf Version", i32 4}
!36 = !{i32 2, !"Debug Info Version", i32 3}
!37 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!38 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Tzp", scope: !7, file: !8, line: 13, type: !39)
!39 = !DICompositeType(tag: DW_TAG_structure_type, name: "timezone", file: !40, line: 57, size: 64, align: 32, elements: !41)
!40 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/time.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!41 = !{!42, !43}
!42 = !DIDerivedType(tag: DW_TAG_member, name: "tz_minuteswest", scope: !39, file: !40, line: 59, baseType: !27, size: 32, align: 32)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "tz_dsttime", scope: !39, file: !40, line: 60, baseType: !27, size: 32, align: 32, offset: 32)
!44 = !DIExpression()
!45 = !DILocation(line: 13, column: 21, scope: !7)
!46 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Tp", scope: !7, file: !8, line: 14, type: !47)
!47 = !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !48, line: 31, size: 128, align: 64, elements: !49)
!48 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!49 = !{!50, !54}
!50 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !47, file: !48, line: 33, baseType: !51, size: 64, align: 64)
!51 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !52, line: 149, baseType: !53)
!52 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!53 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !47, file: !48, line: 34, baseType: !55, size: 64, align: 64, offset: 64)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !52, line: 151, baseType: !53)
!56 = !DILocation(line: 14, column: 20, scope: !7)
!57 = !DILocation(line: 16, column: 12, scope: !7)
!58 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stat", scope: !7, file: !8, line: 15, type: !27)
!59 = !DILocation(line: 15, column: 9, scope: !7)
!60 = !DILocation(line: 17, column: 14, scope: !61)
!61 = distinct !DILexicalBlock(scope: !7, file: !8, line: 17, column: 9)
!62 = !DILocation(line: 17, column: 9, scope: !7)
!63 = !DILocation(line: 17, column: 20, scope: !61)
!64 = !DILocation(line: 18, column: 15, scope: !7)
!65 = !DILocation(line: 18, column: 12, scope: !7)
!66 = !DILocation(line: 18, column: 27, scope: !7)
!67 = !DILocation(line: 18, column: 24, scope: !7)
!68 = !DILocation(line: 18, column: 34, scope: !7)
!69 = !DILocation(line: 18, column: 22, scope: !7)
!70 = !DILocation(line: 18, column: 5, scope: !7)
!71 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !12, file: !8, line: 22, type: !5)
!72 = !DILocation(line: 22, column: 20, scope: !12)
!73 = !DILocation(line: 24, column: 7, scope: !74)
!74 = distinct !DILexicalBlock(scope: !12, file: !8, line: 24, column: 5)
!75 = !DILocation(line: 24, column: 5, scope: !12)
!76 = !DILocation(line: 26, column: 13, scope: !77)
!77 = distinct !DILexicalBlock(scope: !74, file: !8, line: 25, column: 2)
!78 = !DILocation(line: 26, column: 3, scope: !77)
!79 = !DILocation(line: 30, column: 3, scope: !80)
!80 = distinct !DILexicalBlock(scope: !74, file: !8, line: 29, column: 2)
!81 = !DILocation(line: 32, column: 1, scope: !12)
!82 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val1", arg: 1, scope: !15, file: !8, line: 36, type: !11)
!83 = !DILocation(line: 36, column: 26, scope: !15)
!84 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val2", arg: 2, scope: !15, file: !8, line: 36, type: !11)
!85 = !DILocation(line: 36, column: 39, scope: !15)
!86 = !DILocation(line: 38, column: 14, scope: !87)
!87 = distinct !DILexicalBlock(scope: !15, file: !8, line: 38, column: 6)
!88 = !DILocation(line: 38, column: 7, scope: !87)
!89 = !DILocation(line: 38, column: 20, scope: !87)
!90 = !DILocation(line: 38, column: 28, scope: !87)
!91 = !DILocation(line: 38, column: 39, scope: !92)
!92 = !DILexicalBlockFile(scope: !87, file: !8, discriminator: 1)
!93 = !DILocation(line: 38, column: 32, scope: !87)
!94 = !DILocation(line: 38, column: 45, scope: !87)
!95 = !DILocation(line: 38, column: 6, scope: !15)
!96 = !DILocation(line: 40, column: 3, scope: !97)
!97 = distinct !DILexicalBlock(scope: !87, file: !8, line: 39, column: 2)
!98 = !DILocation(line: 45, column: 43, scope: !99)
!99 = distinct !DILexicalBlock(scope: !87, file: !8, line: 44, column: 2)
!100 = !DILocation(line: 45, column: 38, scope: !99)
!101 = !DILocation(line: 45, column: 31, scope: !99)
!102 = !DILocation(line: 45, column: 65, scope: !99)
!103 = !DILocation(line: 45, column: 60, scope: !99)
!104 = !DILocation(line: 45, column: 53, scope: !99)
!105 = !DILocation(line: 45, column: 51, scope: !99)
!106 = !DILocation(line: 45, column: 24, scope: !99)
!107 = !DILocation(line: 45, column: 21, scope: !99)
!108 = !DILocation(line: 45, column: 7, scope: !99)
!109 = !DILocation(line: 47, column: 1, scope: !15)
!110 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !18, file: !1, line: 42, type: !27)
!111 = !DILocation(line: 42, column: 10, scope: !18)
!112 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !18, file: !1, line: 42, type: !27)
!113 = !DILocation(line: 42, column: 7, scope: !18)
!114 = !DILocation(line: 44, column: 8, scope: !115)
!115 = distinct !DILexicalBlock(scope: !18, file: !1, line: 44, column: 3)
!116 = !DILocation(line: 44, column: 17, scope: !117)
!117 = distinct !DILexicalBlock(scope: !115, file: !1, line: 44, column: 3)
!118 = !DILocation(line: 44, column: 3, scope: !115)
!119 = !DILocation(line: 45, column: 10, scope: !120)
!120 = distinct !DILexicalBlock(scope: !121, file: !1, line: 45, column: 5)
!121 = distinct !DILexicalBlock(scope: !117, file: !1, line: 44, column: 27)
!122 = !DILocation(line: 45, column: 19, scope: !123)
!123 = distinct !DILexicalBlock(scope: !120, file: !1, line: 45, column: 5)
!124 = !DILocation(line: 45, column: 5, scope: !120)
!125 = !DILocation(line: 46, column: 18, scope: !126)
!126 = distinct !DILexicalBlock(scope: !123, file: !1, line: 45, column: 29)
!127 = !DILocation(line: 46, column: 32, scope: !126)
!128 = !DILocation(line: 46, column: 31, scope: !126)
!129 = !DILocation(line: 46, column: 35, scope: !126)
!130 = !DILocation(line: 46, column: 7, scope: !126)
!131 = !DILocation(line: 46, column: 15, scope: !126)
!132 = !DILocation(line: 47, column: 5, scope: !126)
!133 = !DILocation(line: 45, column: 25, scope: !123)
!134 = !DILocation(line: 45, column: 5, scope: !123)
!135 = !DILocation(line: 48, column: 10, scope: !136)
!136 = distinct !DILexicalBlock(scope: !121, file: !1, line: 48, column: 5)
!137 = !DILocation(line: 48, column: 19, scope: !138)
!138 = distinct !DILexicalBlock(scope: !136, file: !1, line: 48, column: 5)
!139 = !DILocation(line: 48, column: 5, scope: !136)
!140 = !DILocation(line: 49, column: 18, scope: !141)
!141 = distinct !DILexicalBlock(scope: !138, file: !1, line: 48, column: 29)
!142 = !DILocation(line: 49, column: 32, scope: !141)
!143 = !DILocation(line: 49, column: 31, scope: !141)
!144 = !DILocation(line: 49, column: 34, scope: !141)
!145 = !DILocation(line: 49, column: 39, scope: !141)
!146 = !DILocation(line: 49, column: 7, scope: !141)
!147 = !DILocation(line: 49, column: 15, scope: !141)
!148 = !DILocation(line: 50, column: 17, scope: !141)
!149 = !DILocation(line: 50, column: 7, scope: !141)
!150 = !DILocation(line: 50, column: 15, scope: !141)
!151 = !DILocation(line: 51, column: 5, scope: !141)
!152 = !DILocation(line: 48, column: 25, scope: !138)
!153 = !DILocation(line: 48, column: 5, scope: !138)
!154 = !DILocation(line: 52, column: 3, scope: !121)
!155 = !DILocation(line: 44, column: 23, scope: !117)
!156 = !DILocation(line: 44, column: 3, scope: !117)
!157 = !DILocation(line: 53, column: 1, scope: !18)
!158 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !21, file: !1, line: 56, type: !27)
!159 = !DILocation(line: 56, column: 10, scope: !21)
!160 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !21, file: !1, line: 56, type: !27)
!161 = !DILocation(line: 56, column: 7, scope: !21)
!162 = !DILocation(line: 58, column: 8, scope: !163)
!163 = distinct !DILexicalBlock(scope: !21, file: !1, line: 58, column: 3)
!164 = !DILocation(line: 58, column: 17, scope: !165)
!165 = distinct !DILexicalBlock(scope: !163, file: !1, line: 58, column: 3)
!166 = !DILocation(line: 58, column: 3, scope: !163)
!167 = !DILocation(line: 59, column: 10, scope: !168)
!168 = distinct !DILexicalBlock(scope: !169, file: !1, line: 59, column: 5)
!169 = distinct !DILexicalBlock(scope: !165, file: !1, line: 58, column: 27)
!170 = !DILocation(line: 59, column: 19, scope: !171)
!171 = distinct !DILexicalBlock(scope: !168, file: !1, line: 59, column: 5)
!172 = !DILocation(line: 59, column: 5, scope: !168)
!173 = !DILocation(line: 60, column: 7, scope: !174)
!174 = distinct !DILexicalBlock(scope: !171, file: !1, line: 59, column: 29)
!175 = !DILocation(line: 60, column: 15, scope: !174)
!176 = !DILocation(line: 61, column: 5, scope: !174)
!177 = !DILocation(line: 59, column: 25, scope: !171)
!178 = !DILocation(line: 59, column: 5, scope: !171)
!179 = !DILocation(line: 62, column: 3, scope: !169)
!180 = !DILocation(line: 58, column: 23, scope: !165)
!181 = !DILocation(line: 58, column: 3, scope: !165)
!182 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !21, file: !1, line: 56, type: !27)
!183 = !DILocation(line: 56, column: 13, scope: !21)
!184 = !DILocation(line: 64, column: 8, scope: !185)
!185 = distinct !DILexicalBlock(scope: !21, file: !1, line: 64, column: 3)
!186 = !DILocation(line: 64, column: 17, scope: !187)
!187 = distinct !DILexicalBlock(scope: !185, file: !1, line: 64, column: 3)
!188 = !DILocation(line: 64, column: 3, scope: !185)
!189 = !DILocation(line: 65, column: 10, scope: !190)
!190 = distinct !DILexicalBlock(scope: !191, file: !1, line: 65, column: 5)
!191 = distinct !DILexicalBlock(scope: !187, file: !1, line: 64, column: 27)
!192 = !DILocation(line: 65, column: 19, scope: !193)
!193 = distinct !DILexicalBlock(scope: !190, file: !1, line: 65, column: 5)
!194 = !DILocation(line: 65, column: 5, scope: !190)
!195 = !DILocation(line: 66, column: 12, scope: !196)
!196 = distinct !DILexicalBlock(scope: !197, file: !1, line: 66, column: 7)
!197 = distinct !DILexicalBlock(scope: !193, file: !1, line: 65, column: 29)
!198 = !DILocation(line: 66, column: 21, scope: !199)
!199 = distinct !DILexicalBlock(scope: !196, file: !1, line: 66, column: 7)
!200 = !DILocation(line: 66, column: 7, scope: !196)
!201 = !DILocation(line: 67, column: 21, scope: !202)
!202 = distinct !DILexicalBlock(scope: !199, file: !1, line: 66, column: 31)
!203 = !DILocation(line: 67, column: 19, scope: !202)
!204 = !DILocation(line: 67, column: 31, scope: !202)
!205 = !DILocation(line: 67, column: 29, scope: !202)
!206 = !DILocation(line: 67, column: 2, scope: !202)
!207 = !DILocation(line: 67, column: 10, scope: !202)
!208 = !DILocation(line: 68, column: 7, scope: !202)
!209 = !DILocation(line: 66, column: 27, scope: !199)
!210 = !DILocation(line: 66, column: 7, scope: !199)
!211 = !DILocation(line: 69, column: 5, scope: !197)
!212 = !DILocation(line: 65, column: 25, scope: !193)
!213 = !DILocation(line: 65, column: 5, scope: !193)
!214 = !DILocation(line: 70, column: 3, scope: !191)
!215 = !DILocation(line: 64, column: 23, scope: !187)
!216 = !DILocation(line: 64, column: 3, scope: !187)
!217 = !DILocation(line: 71, column: 1, scope: !21)
!218 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !22, file: !1, line: 74, type: !27)
!219 = !DILocation(line: 74, column: 9, scope: !22)
!220 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !22, file: !1, line: 74, type: !27)
!221 = !DILocation(line: 74, column: 7, scope: !22)
!222 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fail", scope: !22, file: !1, line: 74, type: !27)
!223 = !DILocation(line: 74, column: 11, scope: !22)
!224 = !DILocation(line: 78, column: 8, scope: !225)
!225 = distinct !DILexicalBlock(scope: !22, file: !1, line: 78, column: 3)
!226 = !DILocation(line: 78, column: 14, scope: !227)
!227 = distinct !DILexicalBlock(scope: !225, file: !1, line: 78, column: 3)
!228 = !DILocation(line: 78, column: 3, scope: !225)
!229 = !DILocation(line: 79, column: 10, scope: !230)
!230 = distinct !DILexicalBlock(scope: !231, file: !1, line: 79, column: 5)
!231 = distinct !DILexicalBlock(scope: !227, file: !1, line: 78, column: 23)
!232 = !DILocation(line: 79, column: 16, scope: !233)
!233 = distinct !DILexicalBlock(scope: !230, file: !1, line: 79, column: 5)
!234 = !DILocation(line: 79, column: 5, scope: !230)
!235 = !DILocation(line: 80, column: 23, scope: !236)
!236 = distinct !DILexicalBlock(scope: !237, file: !1, line: 80, column: 11)
!237 = distinct !DILexicalBlock(scope: !233, file: !1, line: 79, column: 25)
!238 = !DILocation(line: 80, column: 32, scope: !236)
!239 = !DILocation(line: 80, column: 11, scope: !236)
!240 = !DILocation(line: 80, column: 41, scope: !236)
!241 = !DILocation(line: 80, column: 11, scope: !237)
!242 = !DILocation(line: 81, column: 6, scope: !243)
!243 = distinct !DILexicalBlock(scope: !236, file: !1, line: 80, column: 60)
!244 = !DILocation(line: 82, column: 7, scope: !243)
!245 = !DILocation(line: 83, column: 5, scope: !237)
!246 = !DILocation(line: 79, column: 21, scope: !233)
!247 = !DILocation(line: 79, column: 5, scope: !233)
!248 = !DILocation(line: 84, column: 3, scope: !231)
!249 = !DILocation(line: 78, column: 19, scope: !227)
!250 = !DILocation(line: 78, column: 3, scope: !227)
!251 = !DILocation(line: 87, column: 3, scope: !22)
!252 = !DILocation(line: 88, column: 1, scope: !22)
!253 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !254, file: !1, line: 101, type: !27)
!254 = distinct !DILexicalBlock(scope: !255, file: !1, line: 99, column: 29)
!255 = distinct !DILexicalBlock(scope: !256, file: !1, line: 99, column: 5)
!256 = distinct !DILexicalBlock(scope: !257, file: !1, line: 99, column: 5)
!257 = distinct !DILexicalBlock(scope: !258, file: !1, line: 98, column: 27)
!258 = distinct !DILexicalBlock(scope: !259, file: !1, line: 98, column: 3)
!259 = distinct !DILexicalBlock(scope: !23, file: !1, line: 98, column: 3)
!260 = !DILocation(line: 101, column: 11, scope: !254)
!261 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !23, file: !1, line: 91, type: !27)
!262 = !DILocation(line: 91, column: 10, scope: !23)
!263 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !23, file: !1, line: 91, type: !27)
!264 = !DILocation(line: 91, column: 7, scope: !23)
!265 = !DILocation(line: 94, column: 13, scope: !23)
!266 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_start", scope: !23, file: !1, line: 92, type: !11)
!267 = !DILocation(line: 92, column: 10, scope: !23)
!268 = !DILocation(line: 98, column: 8, scope: !259)
!269 = !DILocation(line: 98, column: 17, scope: !258)
!270 = !DILocation(line: 98, column: 3, scope: !259)
!271 = !DILocation(line: 99, column: 10, scope: !256)
!272 = !DILocation(line: 99, column: 19, scope: !255)
!273 = !DILocation(line: 99, column: 5, scope: !256)
!274 = !DILocation(line: 100, column: 7, scope: !254)
!275 = !DILocation(line: 100, column: 15, scope: !254)
!276 = !DILocation(line: 102, column: 11, scope: !277)
!277 = distinct !DILexicalBlock(scope: !254, file: !1, line: 102, column: 7)
!278 = !DILocation(line: 102, column: 17, scope: !279)
!279 = distinct !DILexicalBlock(scope: !277, file: !1, line: 102, column: 7)
!280 = !DILocation(line: 102, column: 7, scope: !277)
!281 = !DILocation(line: 103, column: 21, scope: !282)
!282 = distinct !DILexicalBlock(scope: !279, file: !1, line: 102, column: 27)
!283 = !DILocation(line: 103, column: 19, scope: !282)
!284 = !DILocation(line: 103, column: 31, scope: !282)
!285 = !DILocation(line: 103, column: 29, scope: !282)
!286 = !DILocation(line: 103, column: 2, scope: !282)
!287 = !DILocation(line: 103, column: 10, scope: !282)
!288 = !DILocation(line: 104, column: 7, scope: !282)
!289 = !DILocation(line: 102, column: 23, scope: !279)
!290 = !DILocation(line: 102, column: 7, scope: !279)
!291 = !DILocation(line: 105, column: 5, scope: !254)
!292 = !DILocation(line: 99, column: 25, scope: !255)
!293 = !DILocation(line: 99, column: 5, scope: !255)
!294 = !DILocation(line: 106, column: 3, scope: !257)
!295 = !DILocation(line: 98, column: 23, scope: !258)
!296 = !DILocation(line: 98, column: 3, scope: !258)
!297 = !DILocation(line: 108, column: 11, scope: !23)
!298 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_end", scope: !23, file: !1, line: 92, type: !11)
!299 = !DILocation(line: 92, column: 19, scope: !23)
!300 = !DILocation(line: 109, column: 11, scope: !23)
!301 = !DILocation(line: 109, column: 51, scope: !23)
!302 = !DILocation(line: 109, column: 3, scope: !23)
!303 = !DILocation(line: 111, column: 1, scope: !23)
!304 = !DILocation(line: 116, column: 3, scope: !24)
!305 = !DILocation(line: 117, column: 3, scope: !24)
!306 = !DILocation(line: 118, column: 13, scope: !24)
!307 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_start", scope: !24, file: !1, line: 114, type: !11)
!308 = !DILocation(line: 114, column: 10, scope: !24)
!309 = !DILocation(line: 119, column: 3, scope: !24)
!310 = !DILocation(line: 120, column: 11, scope: !24)
!311 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_end", scope: !24, file: !1, line: 114, type: !11)
!312 = !DILocation(line: 114, column: 19, scope: !24)
!313 = !DILocation(line: 121, column: 11, scope: !24)
!314 = !DILocation(line: 121, column: 51, scope: !24)
!315 = !DILocation(line: 121, column: 3, scope: !24)
!316 = !DILocation(line: 122, column: 3, scope: !24)
!317 = !DILocation(line: 123, column: 3, scope: !24)
