; ModuleID = '/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Polybench/GEMM/src/gemm.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.timezone = type { i32, i32 }
%struct.timeval = type { i64, i64 }

@.str = private unnamed_addr constant [35 x i8] c"Error return from gettimeofday: %d\00", align 1
@.str.1 = private unnamed_addr constant [74 x i8] c"Non-Matching CPU-GPU Outputs Beyond Error Threshold of %4.2f Percent: %d\0A\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@.str.2 = private unnamed_addr constant [42 x i8] c"<< Matrix-multiply C=alpha.A.B+beta.C >>\0A\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"GPU Runtime: %0.6lfs\0A\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"CPU Runtime: %0.6lfs\0A\00", align 1

; Function Attrs: nounwind uwtable
define double @rtclock() #0 {
entry:
  %Tzp = alloca %struct.timezone, align 4
  %Tp = alloca %struct.timeval, align 8
  call void @llvm.dbg.declare(metadata %struct.timezone* %Tzp, metadata !39, metadata !45), !dbg !46
  call void @llvm.dbg.declare(metadata %struct.timeval* %Tp, metadata !47, metadata !45), !dbg !57
  %call = call i32 @gettimeofday(%struct.timeval* %Tp, %struct.timezone* %Tzp) #4, !dbg !58
  call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !59, metadata !45), !dbg !60
  %cmp = icmp ne i32 %call, 0, !dbg !61
  br i1 %cmp, label %if.then, label %if.end, !dbg !63

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i32 0, i32 0), i32 %call), !dbg !64
  br label %if.end, !dbg !64

if.end:                                           ; preds = %if.then, %entry
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %Tp, i32 0, i32 0, !dbg !65
  %tmp = load i64, i64* %tv_sec, align 8, !dbg !65
  %conv = sitofp i64 %tmp to double, !dbg !66
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %Tp, i32 0, i32 1, !dbg !67
  %tmp1 = load i64, i64* %tv_usec, align 8, !dbg !67
  %conv2 = sitofp i64 %tmp1 to double, !dbg !68
  %mul = fmul double %conv2, 1.000000e-06, !dbg !69
  %add = fadd double %conv, %mul, !dbg !70
  ret double %add, !dbg !71
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timeval*, %struct.timezone*) #2

declare i32 @printf(i8*, ...) #3

; Function Attrs: nounwind uwtable
define float @absVal(float %a) #0 {
entry:
  call void @llvm.dbg.value(metadata float %a, i64 0, metadata !72, metadata !45), !dbg !73
  %cmp = fcmp olt float %a, 0.000000e+00, !dbg !74
  br i1 %cmp, label %if.then, label %if.else, !dbg !76

if.then:                                          ; preds = %entry
  %mul = fmul float %a, -1.000000e+00, !dbg !77
  br label %return, !dbg !79

if.else:                                          ; preds = %entry
  br label %return, !dbg !80

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi float [ %mul, %if.then ], [ %a, %if.else ]
  ret float %retval.0, !dbg !82
}

; Function Attrs: nounwind uwtable
define float @percentDiff(double %val1, double %val2) #0 {
entry:
  call void @llvm.dbg.value(metadata double %val1, i64 0, metadata !83, metadata !45), !dbg !84
  call void @llvm.dbg.value(metadata double %val2, i64 0, metadata !85, metadata !45), !dbg !86
  %conv = fptrunc double %val1 to float, !dbg !87
  %call = call float @absVal(float %conv), !dbg !89
  %conv1 = fpext float %call to double, !dbg !89
  %cmp = fcmp olt double %conv1, 1.000000e-02, !dbg !90
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !91

land.lhs.true:                                    ; preds = %entry
  %conv3 = fptrunc double %val2 to float, !dbg !92
  %call4 = call float @absVal(float %conv3), !dbg !94
  %conv5 = fpext float %call4 to double, !dbg !94
  %cmp6 = fcmp olt double %conv5, 1.000000e-02, !dbg !95
  br i1 %cmp6, label %if.then, label %if.else, !dbg !96

if.then:                                          ; preds = %land.lhs.true
  br label %return, !dbg !97

if.else:                                          ; preds = %land.lhs.true, %entry
  %sub = fsub double %val1, %val2, !dbg !99
  %conv8 = fptrunc double %sub to float, !dbg !101
  %call9 = call float @absVal(float %conv8), !dbg !102
  %add = fadd double %val1, 0x3E45798EE0000000, !dbg !103
  %conv10 = fptrunc double %add to float, !dbg !104
  %call11 = call float @absVal(float %conv10), !dbg !105
  %div = fdiv float %call9, %call11, !dbg !106
  %call12 = call float @absVal(float %div), !dbg !107
  %mul = fmul float 1.000000e+02, %call12, !dbg !108
  br label %return, !dbg !109

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi float [ 0.000000e+00, %if.then ], [ %mul, %if.else ]
  ret float %retval.0, !dbg !110
}

; Function Attrs: nounwind uwtable
define void @gemm(float* %A, float* %B, float* %C) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !111, metadata !45), !dbg !112
  call void @llvm.dbg.value(metadata i32 %inc24, i64 0, metadata !113, metadata !45), !dbg !114
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !111, metadata !45), !dbg !112
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !113, metadata !45), !dbg !114
  call void @llvm.dbg.value(metadata i32 %inc27, i64 0, metadata !115, metadata !45), !dbg !116
  call void @llvm.dbg.value(metadata float* %A, i64 0, metadata !117, metadata !45), !dbg !118
  call void @llvm.dbg.value(metadata float* %B, i64 0, metadata !119, metadata !45), !dbg !120
  call void @llvm.dbg.value(metadata float* %C, i64 0, metadata !121, metadata !45), !dbg !122
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !115, metadata !45), !dbg !116
  %A10 = ptrtoint float* %A to i64
  %B9 = ptrtoint float* %B to i64
  %C6 = ptrtoint float* %C to i64
  %0 = ptrtoint float* undef to i64
  %1 = ptrtoint float* undef to i64
  %2 = ptrtoint float* undef to i64
  %3 = ptrtoint float* undef to i64
  %4 = ptrtoint float* undef to i64
  %5 = ptrtoint float* undef to i64
  %6 = ptrtoint float* undef to i64
  %7 = ptrtoint float* undef to i64
  %8 = ptrtoint float* undef to i64
  %9 = ptrtoint float* undef to i64
  %10 = ptrtoint float* undef to i64
  %11 = ptrtoint float* undef to i64
  %12 = ptrtoint float* undef to i64
  %13 = ptrtoint float* undef to i64
  %14 = ptrtoint float* undef to i64
  %15 = ptrtoint float* undef to i64
  %16 = ptrtoint float* undef to i64
  %17 = ptrtoint float* undef to i64
  %18 = ptrtoint float* undef to i64
  %19 = ptrtoint float* undef to i64
  %20 = ptrtoint float* undef to i64
  %21 = ptrtoint float* undef to i64
  %22 = ptrtoint float* undef to i64
  %23 = ptrtoint float* undef to i64
  %24 = ptrtoint float* undef to i64
  %25 = ptrtoint float* undef to i64
  %26 = ptrtoint float* undef to i64
  %27 = ptrtoint float* undef to i64
  %28 = ptrtoint float* undef to i64
  %29 = ptrtoint float* undef to i64
  %30 = add i64 %C6, 1048576, !dbg !123
  %31 = add i64 %30, 2048, !dbg !123
  %32 = add i64 %B9, 2048, !dbg !123
  %33 = add i64 %32, 1048576, !dbg !123
  %34 = add i64 %A10, 1048576, !dbg !123
  %35 = add i64 %34, 2048, !dbg !123
  %36 = add i64 %C6, 1048576, !dbg !123
  %37 = add i64 %36, 2048, !dbg !123
  %38 = add i64 %B9, 2048, !dbg !123
  %39 = add i64 %38, 1048576, !dbg !123
  %40 = add i64 %A10, 1048576, !dbg !123
  %41 = add i64 %40, 2048, !dbg !123
  %42 = add i64 %C6, 1048576, !dbg !126
  %43 = add i64 %42, 2048, !dbg !126
  %44 = add i64 %B9, 2048, !dbg !126
  %45 = add i64 %44, 1048576, !dbg !126
  %46 = add i64 %A10, 1048576, !dbg !126
  %47 = add i64 %46, 2048, !dbg !126
  %48 = add i64 %C6, 1048576, !dbg !123
  %49 = add i64 %48, 2048, !dbg !123
  %50 = add i64 %B9, 2048, !dbg !123
  %51 = add i64 %50, 1048576, !dbg !123
  %52 = add i64 %A10, 1048576, !dbg !123
  %53 = add i64 %52, 2048, !dbg !123
  %54 = add i64 %C6, 1048576, !dbg !123
  %55 = add i64 %54, 2048, !dbg !123
  %56 = add i64 %B9, 2048, !dbg !123
  %57 = add i64 %56, 1048576, !dbg !123
  %58 = add i64 %A10, 1048576, !dbg !123
  %59 = add i64 %58, 2048, !dbg !123
  %60 = add i64 %C6, 1048576, !dbg !126
  %61 = add i64 %60, 2048, !dbg !126
  %62 = add i64 %B9, 2048, !dbg !126
  %63 = add i64 %62, 1048576, !dbg !126
  %64 = add i64 %A10, 1048576, !dbg !126
  %65 = add i64 %64, 2048, !dbg !126
  %66 = add i64 %C6, 1048576, !dbg !130
  %67 = add i64 %66, 2048, !dbg !130
  %68 = add i64 %B9, 2048, !dbg !130
  %69 = add i64 %68, 1048576, !dbg !130
  %70 = add i64 %A10, 1048576, !dbg !130
  %71 = add i64 %70, 2048, !dbg !130
  %72 = add i64 %C6, 1048576, !dbg !126
  %73 = add i64 %72, 2048, !dbg !126
  %74 = add i64 %B9, 2048, !dbg !126
  %75 = add i64 %74, 1048576, !dbg !126
  %76 = add i64 %A10, 1048576, !dbg !126
  %77 = add i64 %76, 2048, !dbg !126
  %78 = add i64 %C6, 1048576, !dbg !126
  %79 = add i64 %78, 2048, !dbg !126
  %80 = add i64 %B9, 2048, !dbg !126
  %81 = add i64 %80, 1048576, !dbg !126
  %82 = add i64 %A10, 1048576, !dbg !126
  %83 = add i64 %82, 2048, !dbg !126
  %84 = add i64 %C6, 1048576, !dbg !130
  %85 = add i64 %84, 2048, !dbg !130
  %86 = add i64 %B9, 2048, !dbg !130
  %87 = add i64 %86, 1048576, !dbg !130
  %88 = add i64 %A10, 1048576, !dbg !130
  %89 = add i64 %88, 2048, !dbg !130
  %90 = add i64 %C6, 1048576, !dbg !130
  %91 = add i64 %90, 2048, !dbg !130
  %92 = add i64 %B9, 2048, !dbg !130
  %93 = add i64 %92, 1048576, !dbg !130
  %94 = add i64 %A10, 1048576, !dbg !130
  %95 = add i64 %94, 2048, !dbg !130
  br label %for.cond, !dbg !134

for.cond:                                         ; preds = %for.inc.26, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc27, %for.inc.26 ]
  %96 = icmp ult float* %C, %C, !dbg !123
  %umin29 = select i1 %96, float* %C, float* %C, !dbg !123
  %97 = icmp ult float* %C, %umin29, !dbg !123
  %umin30 = select i1 %97, float* %C, float* %umin29, !dbg !123
  %98 = icmp ult float* %C, %umin30, !dbg !123
  %umin31 = select i1 %98, float* %C, float* %umin30, !dbg !123
  %99 = icmp ugt i64 %55, %55, !dbg !123
  %umax32 = select i1 %99, i64 %55, i64 %55, !dbg !123
  %100 = icmp ugt i64 %55, %umax32, !dbg !123
  %umax33 = select i1 %100, i64 %55, i64 %umax32, !dbg !123
  %101 = icmp ugt i64 %55, %umax33, !dbg !123
  %umax34 = select i1 %101, i64 %55, i64 %umax33, !dbg !123
  %102 = icmp ult float* %C, %C, !dbg !123
  %umin23 = select i1 %102, float* %C, float* %C, !dbg !123
  %103 = icmp ult float* %C, %umin23, !dbg !123
  %umin24 = select i1 %103, float* %C, float* %umin23, !dbg !123
  %104 = icmp ult float* %C, %umin24, !dbg !123
  %umin25 = select i1 %104, float* %C, float* %umin24, !dbg !123
  %105 = icmp ugt i64 %49, %49, !dbg !123
  %umax26 = select i1 %105, i64 %49, i64 %49, !dbg !123
  %106 = icmp ugt i64 %49, %umax26, !dbg !123
  %umax27 = select i1 %106, i64 %49, i64 %umax26, !dbg !123
  %107 = icmp ugt i64 %49, %umax27, !dbg !123
  %umax28 = select i1 %107, i64 %49, i64 %umax27, !dbg !123
  %108 = icmp ult float* %C, %C, !dbg !123
  %umin11 = select i1 %108, float* %C, float* %C, !dbg !123
  %109 = icmp ult float* %C, %umin11, !dbg !123
  %umin12 = select i1 %109, float* %C, float* %umin11, !dbg !123
  %110 = icmp ult float* %C, %umin12, !dbg !123
  %umin13 = select i1 %110, float* %C, float* %umin12, !dbg !123
  %111 = icmp ugt i64 %37, %37, !dbg !123
  %umax14 = select i1 %111, i64 %37, i64 %37, !dbg !123
  %112 = icmp ugt i64 %37, %umax14, !dbg !123
  %umax15 = select i1 %112, i64 %37, i64 %umax14, !dbg !123
  %113 = icmp ugt i64 %37, %umax15, !dbg !123
  %umax16 = select i1 %113, i64 %37, i64 %umax15, !dbg !123
  %114 = icmp ult float* %C, %C, !dbg !123
  %umin = select i1 %114, float* %C, float* %C, !dbg !123
  %115 = icmp ult float* %C, %umin, !dbg !123
  %umin4 = select i1 %115, float* %C, float* %umin, !dbg !123
  %116 = icmp ult float* %C, %umin4, !dbg !123
  %umin5 = select i1 %116, float* %C, float* %umin4, !dbg !123
  %117 = icmp ugt i64 %31, %31, !dbg !123
  %umax = select i1 %117, i64 %31, i64 %31, !dbg !123
  %118 = icmp ugt i64 %31, %umax, !dbg !123
  %umax7 = select i1 %118, i64 %31, i64 %umax, !dbg !123
  %119 = icmp ugt i64 %31, %umax7, !dbg !123
  %umax8 = select i1 %119, i64 %31, i64 %umax7, !dbg !123
  %cmp = icmp slt i32 %i.0, 512, !dbg !123
  br i1 %cmp, label %for.body, label %for.end.28, !dbg !135

for.body:                                         ; preds = %for.cond
  br label %for.cond.1, !dbg !136

for.cond.1:                                       ; preds = %for.inc.23, %for.body
  %j.0 = phi i32 [ 0, %for.body ], [ %inc24, %for.inc.23 ]
  %120 = icmp ult float* %C, %C, !dbg !126
  %umin49 = select i1 %120, float* %C, float* %C, !dbg !126
  %121 = icmp ult float* %C, %umin49, !dbg !126
  %umin50 = select i1 %121, float* %C, float* %umin49, !dbg !126
  %122 = icmp ult float* %C, %umin50, !dbg !126
  %umin51 = select i1 %122, float* %C, float* %umin50, !dbg !126
  %123 = icmp ugt i64 %79, %79, !dbg !126
  %umax52 = select i1 %123, i64 %79, i64 %79, !dbg !126
  %124 = icmp ugt i64 %79, %umax52, !dbg !126
  %umax53 = select i1 %124, i64 %79, i64 %umax52, !dbg !126
  %125 = icmp ugt i64 %79, %umax53, !dbg !126
  %umax54 = select i1 %125, i64 %79, i64 %umax53, !dbg !126
  %126 = icmp ult float* %C, %C, !dbg !126
  %umin43 = select i1 %126, float* %C, float* %C, !dbg !126
  %127 = icmp ult float* %C, %umin43, !dbg !126
  %umin44 = select i1 %127, float* %C, float* %umin43, !dbg !126
  %128 = icmp ult float* %C, %umin44, !dbg !126
  %umin45 = select i1 %128, float* %C, float* %umin44, !dbg !126
  %129 = icmp ugt i64 %73, %73, !dbg !126
  %umax46 = select i1 %129, i64 %73, i64 %73, !dbg !126
  %130 = icmp ugt i64 %73, %umax46, !dbg !126
  %umax47 = select i1 %130, i64 %73, i64 %umax46, !dbg !126
  %131 = icmp ugt i64 %73, %umax47, !dbg !126
  %umax48 = select i1 %131, i64 %73, i64 %umax47, !dbg !126
  %132 = icmp ult float* %C, %C, !dbg !126
  %umin35 = select i1 %132, float* %C, float* %C, !dbg !126
  %133 = icmp ult float* %C, %umin35, !dbg !126
  %umin36 = select i1 %133, float* %C, float* %umin35, !dbg !126
  %134 = icmp ult float* %C, %umin36, !dbg !126
  %umin37 = select i1 %134, float* %C, float* %umin36, !dbg !126
  %135 = icmp ugt i64 %61, %61, !dbg !126
  %umax38 = select i1 %135, i64 %61, i64 %61, !dbg !126
  %136 = icmp ugt i64 %61, %umax38, !dbg !126
  %umax39 = select i1 %136, i64 %61, i64 %umax38, !dbg !126
  %137 = icmp ugt i64 %61, %umax39, !dbg !126
  %umax40 = select i1 %137, i64 %61, i64 %umax39, !dbg !126
  %138 = icmp ult float* %C, %C, !dbg !126
  %umin17 = select i1 %138, float* %C, float* %C, !dbg !126
  %139 = icmp ult float* %C, %umin17, !dbg !126
  %umin18 = select i1 %139, float* %C, float* %umin17, !dbg !126
  %140 = icmp ult float* %C, %umin18, !dbg !126
  %umin19 = select i1 %140, float* %C, float* %umin18, !dbg !126
  %141 = icmp ugt i64 %43, %43, !dbg !126
  %umax20 = select i1 %141, i64 %43, i64 %43, !dbg !126
  %142 = icmp ugt i64 %43, %umax20, !dbg !126
  %umax21 = select i1 %142, i64 %43, i64 %umax20, !dbg !126
  %143 = icmp ugt i64 %43, %umax21, !dbg !126
  %umax22 = select i1 %143, i64 %43, i64 %umax21, !dbg !126
  %cmp2 = icmp slt i32 %j.0, 512, !dbg !126
  br i1 %cmp2, label %for.body.3, label %for.end.25, !dbg !137

for.body.3:                                       ; preds = %for.cond.1
  %mul = mul nsw i32 %i.0, 512, !dbg !138
  %add = add nsw i32 %mul, %j.0, !dbg !139
  %idxprom = sext i32 %add to i64, !dbg !140
  %arrayidx = getelementptr inbounds float, float* %C, i64 %idxprom, !dbg !140
  %tmp = load float, float* %arrayidx, align 4, !dbg !141
  %mul4 = fmul float %tmp, 2.123000e+03, !dbg !141
  store float %mul4, float* %arrayidx, align 4, !dbg !141
  br label %for.cond.5, !dbg !142

for.cond.5:                                       ; preds = %for.inc, %for.body.3
  %k.0 = phi i32 [ 0, %for.body.3 ], [ %inc, %for.inc ]
  %144 = icmp ult float* %C, %C, !dbg !130
  %umin57 = select i1 %144, float* %C, float* %C, !dbg !130
  %145 = icmp ugt i64 %91, %91, !dbg !130
  %umax58 = select i1 %145, i64 %91, i64 %91, !dbg !130
  %146 = icmp ult float* %C, %C, !dbg !130
  %umin55 = select i1 %146, float* %C, float* %C, !dbg !130
  %147 = icmp ugt i64 %85, %85, !dbg !130
  %umax56 = select i1 %147, i64 %85, i64 %85, !dbg !130
  %148 = icmp ult float* %C, %C, !dbg !130
  %umin41 = select i1 %148, float* %C, float* %C, !dbg !130
  %149 = icmp ugt i64 %67, %67, !dbg !130
  %umax42 = select i1 %149, i64 %67, i64 %67, !dbg !130
  %cmp6 = icmp slt i32 %k.0, 512, !dbg !130
  br i1 %cmp6, label %for.body.7, label %for.end, !dbg !143

for.body.7:                                       ; preds = %for.cond.5
  %mul8 = mul nsw i32 %i.0, 512, !dbg !144
  %add9 = add nsw i32 %mul8, %k.0, !dbg !146
  %idxprom10 = sext i32 %add9 to i64, !dbg !147
  %arrayidx11 = getelementptr inbounds float, float* %A, i64 %idxprom10, !dbg !147
  %tmp1 = load float, float* %arrayidx11, align 4, !dbg !147
  %mul12 = fmul float 3.241200e+04, %tmp1, !dbg !148
  %mul13 = mul nsw i32 %k.0, 512, !dbg !149
  %add14 = add nsw i32 %mul13, %j.0, !dbg !150
  %idxprom15 = sext i32 %add14 to i64, !dbg !151
  %arrayidx16 = getelementptr inbounds float, float* %B, i64 %idxprom15, !dbg !151
  %tmp2 = load float, float* %arrayidx16, align 4, !dbg !151
  %mul17 = fmul float %mul12, %tmp2, !dbg !152
  %mul18 = mul nsw i32 %i.0, 512, !dbg !153
  %add19 = add nsw i32 %mul18, %j.0, !dbg !154
  %idxprom20 = sext i32 %add19 to i64, !dbg !155
  %arrayidx21 = getelementptr inbounds float, float* %C, i64 %idxprom20, !dbg !155
  %tmp3 = load float, float* %arrayidx21, align 4, !dbg !156
  %add22 = fadd float %tmp3, %mul17, !dbg !156
  store float %add22, float* %arrayidx21, align 4, !dbg !156
  br label %for.inc, !dbg !157

for.inc:                                          ; preds = %for.body.7
  %inc = add nsw i32 %k.0, 1, !dbg !158
  br label %for.cond.5, !dbg !159

for.end:                                          ; preds = %for.cond.5
  br label %for.inc.23, !dbg !160

for.inc.23:                                       ; preds = %for.end
  %inc24 = add nsw i32 %j.0, 1, !dbg !161
  br label %for.cond.1, !dbg !162

for.end.25:                                       ; preds = %for.cond.1
  br label %for.inc.26, !dbg !163

for.inc.26:                                       ; preds = %for.end.25
  %inc27 = add nsw i32 %i.0, 1, !dbg !164
  br label %for.cond, !dbg !165

for.end.28:                                       ; preds = %for.cond
  ret void, !dbg !166
}

; Function Attrs: nounwind uwtable
define void @gemm_OMP(float* %A, float* %B, float* %C) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !167, metadata !45), !dbg !168
  call void @llvm.dbg.value(metadata i32 %inc27, i64 0, metadata !169, metadata !45), !dbg !170
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !171, metadata !45), !dbg !172
  call void @llvm.dbg.value(metadata i32 %inc24, i64 0, metadata !167, metadata !45), !dbg !168
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !171, metadata !45), !dbg !172
  call void @llvm.dbg.value(metadata float* %A, i64 0, metadata !173, metadata !45), !dbg !174
  call void @llvm.dbg.value(metadata float* %B, i64 0, metadata !175, metadata !45), !dbg !176
  call void @llvm.dbg.value(metadata float* %C, i64 0, metadata !177, metadata !45), !dbg !178
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !169, metadata !45), !dbg !170
  %C8 = ptrtoint float* %C to i64
  %B5 = ptrtoint float* %B to i64
  %A4 = ptrtoint float* %A to i64
  %0 = ptrtoint float* undef to i64
  %1 = ptrtoint float* undef to i64
  %2 = ptrtoint float* undef to i64
  %3 = ptrtoint float* undef to i64
  %4 = ptrtoint float* undef to i64
  %5 = ptrtoint float* undef to i64
  %6 = ptrtoint float* undef to i64
  %7 = ptrtoint float* undef to i64
  %8 = ptrtoint float* undef to i64
  %9 = ptrtoint float* undef to i64
  %10 = ptrtoint float* undef to i64
  %11 = ptrtoint float* undef to i64
  %12 = ptrtoint float* undef to i64
  %13 = ptrtoint float* undef to i64
  %14 = ptrtoint float* undef to i64
  %15 = ptrtoint float* undef to i64
  %16 = ptrtoint float* undef to i64
  %17 = ptrtoint float* undef to i64
  %18 = ptrtoint float* undef to i64
  %19 = ptrtoint float* undef to i64
  %20 = ptrtoint float* undef to i64
  %21 = ptrtoint float* undef to i64
  %22 = ptrtoint float* undef to i64
  %23 = ptrtoint float* undef to i64
  %24 = ptrtoint float* undef to i64
  %25 = ptrtoint float* undef to i64
  %26 = ptrtoint float* undef to i64
  %27 = ptrtoint float* undef to i64
  %28 = ptrtoint float* undef to i64
  %29 = ptrtoint float* undef to i64
  %30 = add i64 %A4, 1048576, !dbg !179
  %31 = add i64 %30, 2048, !dbg !179
  %32 = add i64 %B5, 2048, !dbg !179
  %33 = add i64 %32, 1048576, !dbg !179
  %34 = add i64 %C8, 1048576, !dbg !179
  %35 = add i64 %34, 2048, !dbg !179
  %36 = add i64 %A4, 1048576, !dbg !179
  %37 = add i64 %36, 2048, !dbg !179
  %38 = add i64 %B5, 2048, !dbg !179
  %39 = add i64 %38, 1048576, !dbg !179
  %40 = add i64 %C8, 1048576, !dbg !179
  %41 = add i64 %40, 2048, !dbg !179
  %42 = add i64 %A4, 1048576, !dbg !182
  %43 = add i64 %42, 2048, !dbg !182
  %44 = add i64 %B5, 2048, !dbg !182
  %45 = add i64 %44, 1048576, !dbg !182
  %46 = add i64 %C8, 1048576, !dbg !182
  %47 = add i64 %46, 2048, !dbg !182
  %48 = add i64 %A4, 1048576, !dbg !179
  %49 = add i64 %48, 2048, !dbg !179
  %50 = add i64 %B5, 2048, !dbg !179
  %51 = add i64 %50, 1048576, !dbg !179
  %52 = add i64 %C8, 1048576, !dbg !179
  %53 = add i64 %52, 2048, !dbg !179
  %54 = add i64 %A4, 1048576, !dbg !179
  %55 = add i64 %54, 2048, !dbg !179
  %56 = add i64 %B5, 2048, !dbg !179
  %57 = add i64 %56, 1048576, !dbg !179
  %58 = add i64 %C8, 1048576, !dbg !179
  %59 = add i64 %58, 2048, !dbg !179
  %60 = add i64 %A4, 1048576, !dbg !182
  %61 = add i64 %60, 2048, !dbg !182
  %62 = add i64 %B5, 2048, !dbg !182
  %63 = add i64 %62, 1048576, !dbg !182
  %64 = add i64 %C8, 1048576, !dbg !182
  %65 = add i64 %64, 2048, !dbg !182
  %66 = add i64 %A4, 1048576, !dbg !186
  %67 = add i64 %66, 2048, !dbg !186
  %68 = add i64 %B5, 2048, !dbg !186
  %69 = add i64 %68, 1048576, !dbg !186
  %70 = add i64 %C8, 1048576, !dbg !186
  %71 = add i64 %70, 2048, !dbg !186
  %72 = add i64 %A4, 1048576, !dbg !182
  %73 = add i64 %72, 2048, !dbg !182
  %74 = add i64 %B5, 2048, !dbg !182
  %75 = add i64 %74, 1048576, !dbg !182
  %76 = add i64 %C8, 1048576, !dbg !182
  %77 = add i64 %76, 2048, !dbg !182
  %78 = add i64 %A4, 1048576, !dbg !182
  %79 = add i64 %78, 2048, !dbg !182
  %80 = add i64 %B5, 2048, !dbg !182
  %81 = add i64 %80, 1048576, !dbg !182
  %82 = add i64 %C8, 1048576, !dbg !182
  %83 = add i64 %82, 2048, !dbg !182
  %84 = add i64 %A4, 1048576, !dbg !186
  %85 = add i64 %84, 2048, !dbg !186
  %86 = add i64 %B5, 2048, !dbg !186
  %87 = add i64 %86, 1048576, !dbg !186
  %88 = add i64 %C8, 1048576, !dbg !186
  %89 = add i64 %88, 2048, !dbg !186
  %90 = add i64 %A4, 1048576, !dbg !186
  %91 = add i64 %90, 2048, !dbg !186
  %92 = add i64 %B5, 2048, !dbg !186
  %93 = add i64 %92, 1048576, !dbg !186
  %94 = add i64 %C8, 1048576, !dbg !186
  %95 = add i64 %94, 2048, !dbg !186
  br label %for.cond, !dbg !190

for.cond:                                         ; preds = %for.inc.26, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc27, %for.inc.26 ]
  %96 = icmp ult float* %C, %C, !dbg !179
  %umin29 = select i1 %96, float* %C, float* %C, !dbg !179
  %97 = icmp ult float* %C, %umin29, !dbg !179
  %umin30 = select i1 %97, float* %C, float* %umin29, !dbg !179
  %98 = icmp ult float* %C, %umin30, !dbg !179
  %umin31 = select i1 %98, float* %C, float* %umin30, !dbg !179
  %99 = icmp ugt i64 %59, %59, !dbg !179
  %umax32 = select i1 %99, i64 %59, i64 %59, !dbg !179
  %100 = icmp ugt i64 %59, %umax32, !dbg !179
  %umax33 = select i1 %100, i64 %59, i64 %umax32, !dbg !179
  %101 = icmp ugt i64 %59, %umax33, !dbg !179
  %umax34 = select i1 %101, i64 %59, i64 %umax33, !dbg !179
  %102 = icmp ult float* %C, %C, !dbg !179
  %umin23 = select i1 %102, float* %C, float* %C, !dbg !179
  %103 = icmp ult float* %C, %umin23, !dbg !179
  %umin24 = select i1 %103, float* %C, float* %umin23, !dbg !179
  %104 = icmp ult float* %C, %umin24, !dbg !179
  %umin25 = select i1 %104, float* %C, float* %umin24, !dbg !179
  %105 = icmp ugt i64 %53, %53, !dbg !179
  %umax26 = select i1 %105, i64 %53, i64 %53, !dbg !179
  %106 = icmp ugt i64 %53, %umax26, !dbg !179
  %umax27 = select i1 %106, i64 %53, i64 %umax26, !dbg !179
  %107 = icmp ugt i64 %53, %umax27, !dbg !179
  %umax28 = select i1 %107, i64 %53, i64 %umax27, !dbg !179
  %108 = icmp ult float* %C, %C, !dbg !179
  %umin11 = select i1 %108, float* %C, float* %C, !dbg !179
  %109 = icmp ult float* %C, %umin11, !dbg !179
  %umin12 = select i1 %109, float* %C, float* %umin11, !dbg !179
  %110 = icmp ult float* %C, %umin12, !dbg !179
  %umin13 = select i1 %110, float* %C, float* %umin12, !dbg !179
  %111 = icmp ugt i64 %41, %41, !dbg !179
  %umax14 = select i1 %111, i64 %41, i64 %41, !dbg !179
  %112 = icmp ugt i64 %41, %umax14, !dbg !179
  %umax15 = select i1 %112, i64 %41, i64 %umax14, !dbg !179
  %113 = icmp ugt i64 %41, %umax15, !dbg !179
  %umax16 = select i1 %113, i64 %41, i64 %umax15, !dbg !179
  %114 = icmp ult float* %C, %C, !dbg !179
  %umin = select i1 %114, float* %C, float* %C, !dbg !179
  %115 = icmp ult float* %C, %umin, !dbg !179
  %umin6 = select i1 %115, float* %C, float* %umin, !dbg !179
  %116 = icmp ult float* %C, %umin6, !dbg !179
  %umin7 = select i1 %116, float* %C, float* %umin6, !dbg !179
  %117 = icmp ugt i64 %35, %35, !dbg !179
  %umax = select i1 %117, i64 %35, i64 %35, !dbg !179
  %118 = icmp ugt i64 %35, %umax, !dbg !179
  %umax9 = select i1 %118, i64 %35, i64 %umax, !dbg !179
  %119 = icmp ugt i64 %35, %umax9, !dbg !179
  %umax10 = select i1 %119, i64 %35, i64 %umax9, !dbg !179
  %cmp = icmp slt i32 %i.0, 512, !dbg !179
  br i1 %cmp, label %for.body, label %for.end.28, !dbg !191

for.body:                                         ; preds = %for.cond
  br label %for.cond.1, !dbg !192

for.cond.1:                                       ; preds = %for.inc.23, %for.body
  %j.0 = phi i32 [ 0, %for.body ], [ %inc24, %for.inc.23 ]
  %120 = icmp ult float* %C, %C, !dbg !182
  %umin49 = select i1 %120, float* %C, float* %C, !dbg !182
  %121 = icmp ult float* %C, %umin49, !dbg !182
  %umin50 = select i1 %121, float* %C, float* %umin49, !dbg !182
  %122 = icmp ult float* %C, %umin50, !dbg !182
  %umin51 = select i1 %122, float* %C, float* %umin50, !dbg !182
  %123 = icmp ugt i64 %83, %83, !dbg !182
  %umax52 = select i1 %123, i64 %83, i64 %83, !dbg !182
  %124 = icmp ugt i64 %83, %umax52, !dbg !182
  %umax53 = select i1 %124, i64 %83, i64 %umax52, !dbg !182
  %125 = icmp ugt i64 %83, %umax53, !dbg !182
  %umax54 = select i1 %125, i64 %83, i64 %umax53, !dbg !182
  %126 = icmp ult float* %C, %C, !dbg !182
  %umin43 = select i1 %126, float* %C, float* %C, !dbg !182
  %127 = icmp ult float* %C, %umin43, !dbg !182
  %umin44 = select i1 %127, float* %C, float* %umin43, !dbg !182
  %128 = icmp ult float* %C, %umin44, !dbg !182
  %umin45 = select i1 %128, float* %C, float* %umin44, !dbg !182
  %129 = icmp ugt i64 %77, %77, !dbg !182
  %umax46 = select i1 %129, i64 %77, i64 %77, !dbg !182
  %130 = icmp ugt i64 %77, %umax46, !dbg !182
  %umax47 = select i1 %130, i64 %77, i64 %umax46, !dbg !182
  %131 = icmp ugt i64 %77, %umax47, !dbg !182
  %umax48 = select i1 %131, i64 %77, i64 %umax47, !dbg !182
  %132 = icmp ult float* %C, %C, !dbg !182
  %umin35 = select i1 %132, float* %C, float* %C, !dbg !182
  %133 = icmp ult float* %C, %umin35, !dbg !182
  %umin36 = select i1 %133, float* %C, float* %umin35, !dbg !182
  %134 = icmp ult float* %C, %umin36, !dbg !182
  %umin37 = select i1 %134, float* %C, float* %umin36, !dbg !182
  %135 = icmp ugt i64 %65, %65, !dbg !182
  %umax38 = select i1 %135, i64 %65, i64 %65, !dbg !182
  %136 = icmp ugt i64 %65, %umax38, !dbg !182
  %umax39 = select i1 %136, i64 %65, i64 %umax38, !dbg !182
  %137 = icmp ugt i64 %65, %umax39, !dbg !182
  %umax40 = select i1 %137, i64 %65, i64 %umax39, !dbg !182
  %138 = icmp ult float* %C, %C, !dbg !182
  %umin17 = select i1 %138, float* %C, float* %C, !dbg !182
  %139 = icmp ult float* %C, %umin17, !dbg !182
  %umin18 = select i1 %139, float* %C, float* %umin17, !dbg !182
  %140 = icmp ult float* %C, %umin18, !dbg !182
  %umin19 = select i1 %140, float* %C, float* %umin18, !dbg !182
  %141 = icmp ugt i64 %47, %47, !dbg !182
  %umax20 = select i1 %141, i64 %47, i64 %47, !dbg !182
  %142 = icmp ugt i64 %47, %umax20, !dbg !182
  %umax21 = select i1 %142, i64 %47, i64 %umax20, !dbg !182
  %143 = icmp ugt i64 %47, %umax21, !dbg !182
  %umax22 = select i1 %143, i64 %47, i64 %umax21, !dbg !182
  %cmp2 = icmp slt i32 %j.0, 512, !dbg !182
  br i1 %cmp2, label %for.body.3, label %for.end.25, !dbg !193

for.body.3:                                       ; preds = %for.cond.1
  %mul = mul nsw i32 %i.0, 512, !dbg !194
  %add = add nsw i32 %mul, %j.0, !dbg !195
  %idxprom = sext i32 %add to i64, !dbg !196
  %arrayidx = getelementptr inbounds float, float* %C, i64 %idxprom, !dbg !196
  %tmp = load float, float* %arrayidx, align 4, !dbg !197
  %mul4 = fmul float %tmp, 2.123000e+03, !dbg !197
  store float %mul4, float* %arrayidx, align 4, !dbg !197
  br label %for.cond.5, !dbg !198

for.cond.5:                                       ; preds = %for.inc, %for.body.3
  %k.0 = phi i32 [ 0, %for.body.3 ], [ %inc, %for.inc ]
  %144 = icmp ult float* %C, %C, !dbg !186
  %umin57 = select i1 %144, float* %C, float* %C, !dbg !186
  %145 = icmp ugt i64 %95, %95, !dbg !186
  %umax58 = select i1 %145, i64 %95, i64 %95, !dbg !186
  %146 = icmp ult float* %C, %C, !dbg !186
  %umin55 = select i1 %146, float* %C, float* %C, !dbg !186
  %147 = icmp ugt i64 %89, %89, !dbg !186
  %umax56 = select i1 %147, i64 %89, i64 %89, !dbg !186
  %148 = icmp ult float* %C, %C, !dbg !186
  %umin41 = select i1 %148, float* %C, float* %C, !dbg !186
  %149 = icmp ugt i64 %71, %71, !dbg !186
  %umax42 = select i1 %149, i64 %71, i64 %71, !dbg !186
  %cmp6 = icmp slt i32 %k.0, 512, !dbg !186
  br i1 %cmp6, label %for.body.7, label %for.end, !dbg !199

for.body.7:                                       ; preds = %for.cond.5
  %mul8 = mul nsw i32 %i.0, 512, !dbg !200
  %add9 = add nsw i32 %mul8, %k.0, !dbg !202
  %idxprom10 = sext i32 %add9 to i64, !dbg !203
  %arrayidx11 = getelementptr inbounds float, float* %A, i64 %idxprom10, !dbg !203
  %tmp1 = load float, float* %arrayidx11, align 4, !dbg !203
  %mul12 = fmul float 3.241200e+04, %tmp1, !dbg !204
  %mul13 = mul nsw i32 %k.0, 512, !dbg !205
  %add14 = add nsw i32 %mul13, %j.0, !dbg !206
  %idxprom15 = sext i32 %add14 to i64, !dbg !207
  %arrayidx16 = getelementptr inbounds float, float* %B, i64 %idxprom15, !dbg !207
  %tmp2 = load float, float* %arrayidx16, align 4, !dbg !207
  %mul17 = fmul float %mul12, %tmp2, !dbg !208
  %mul18 = mul nsw i32 %i.0, 512, !dbg !209
  %add19 = add nsw i32 %mul18, %j.0, !dbg !210
  %idxprom20 = sext i32 %add19 to i64, !dbg !211
  %arrayidx21 = getelementptr inbounds float, float* %C, i64 %idxprom20, !dbg !211
  %tmp3 = load float, float* %arrayidx21, align 4, !dbg !212
  %add22 = fadd float %tmp3, %mul17, !dbg !212
  store float %add22, float* %arrayidx21, align 4, !dbg !212
  br label %for.inc, !dbg !213

for.inc:                                          ; preds = %for.body.7
  %inc = add nsw i32 %k.0, 1, !dbg !214
  br label %for.cond.5, !dbg !215

for.end:                                          ; preds = %for.cond.5
  br label %for.inc.23, !dbg !216

for.inc.23:                                       ; preds = %for.end
  %inc24 = add nsw i32 %j.0, 1, !dbg !217
  br label %for.cond.1, !dbg !218

for.end.25:                                       ; preds = %for.cond.1
  br label %for.inc.26, !dbg !219

for.inc.26:                                       ; preds = %for.end.25
  %inc27 = add nsw i32 %i.0, 1, !dbg !220
  br label %for.cond, !dbg !221

for.end.28:                                       ; preds = %for.cond
  ret void, !dbg !222
}

; Function Attrs: nounwind uwtable
define void @init(float* %A, float* %B, float* %C, float* %C_OMP) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !223, metadata !45), !dbg !224
  call void @llvm.dbg.value(metadata i32 %inc7, i64 0, metadata !225, metadata !45), !dbg !226
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !223, metadata !45), !dbg !224
  call void @llvm.dbg.value(metadata float* %A, i64 0, metadata !227, metadata !45), !dbg !228
  call void @llvm.dbg.value(metadata float* %B, i64 0, metadata !229, metadata !45), !dbg !230
  call void @llvm.dbg.value(metadata float* %C, i64 0, metadata !231, metadata !45), !dbg !232
  call void @llvm.dbg.value(metadata float* %C_OMP, i64 0, metadata !233, metadata !45), !dbg !234
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !225, metadata !45), !dbg !226
  %C_OMP4 = ptrtoint float* %C_OMP to i64
  %C3 = ptrtoint float* %C to i64
  %0 = ptrtoint float* undef to i64
  %1 = ptrtoint float* undef to i64
  %2 = ptrtoint float* undef to i64
  %3 = ptrtoint float* undef to i64
  %4 = ptrtoint float* undef to i64
  %5 = ptrtoint float* undef to i64
  %6 = ptrtoint float* undef to i64
  %7 = ptrtoint float* undef to i64
  %8 = ptrtoint float* undef to i64
  %9 = ptrtoint float* undef to i64
  %10 = ptrtoint float* undef to i64
  %11 = ptrtoint float* undef to i64
  %B2 = ptrtoint float* %B to i64
  %A1 = ptrtoint float* %A to i64
  %12 = add i64 %A1, 1048576, !dbg !235
  %13 = add i64 %12, 2048, !dbg !235
  %14 = add i64 %A1, 1048576, !dbg !235
  %15 = add i64 %14, 2048, !dbg !235
  %16 = add i64 %A1, 1048576, !dbg !238
  %17 = add i64 %16, 2048, !dbg !238
  %18 = add i64 %A1, 1048576, !dbg !235
  %19 = add i64 %18, 2048, !dbg !235
  %20 = add i64 %A1, 1048576, !dbg !235
  %21 = add i64 %20, 2048, !dbg !235
  %22 = add i64 %A1, 1048576, !dbg !238
  %23 = add i64 %22, 2048, !dbg !238
  %24 = add i64 %A1, 1048576, !dbg !238
  %25 = add i64 %24, 2048, !dbg !238
  br label %for.cond, !dbg !242

for.cond:                                         ; preds = %for.inc.6, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc7, %for.inc.6 ]
  %cmp = icmp slt i32 %i.0, 512, !dbg !235
  br i1 %cmp, label %for.body, label %for.end.8, !dbg !243

for.body:                                         ; preds = %for.cond
  br label %for.cond.1, !dbg !244

for.cond.1:                                       ; preds = %for.inc, %for.body
  %j.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ]
  %cmp2 = icmp slt i32 %j.0, 512, !dbg !238
  br i1 %cmp2, label %for.body.3, label %for.end, !dbg !245

for.body.3:                                       ; preds = %for.cond.1
  %conv = sitofp i32 %i.0 to float, !dbg !246
  %conv4 = sitofp i32 %j.0 to float, !dbg !248
  %mul = fmul float %conv, %conv4, !dbg !249
  %div = fdiv float %mul, 5.120000e+02, !dbg !250
  %mul5 = mul nsw i32 %i.0, 512, !dbg !251
  %add = add nsw i32 %mul5, %j.0, !dbg !252
  %idxprom = sext i32 %add to i64, !dbg !253
  %arrayidx = getelementptr inbounds float, float* %A, i64 %idxprom, !dbg !253
  store float %div, float* %arrayidx, align 4, !dbg !254
  br label %for.inc, !dbg !255

for.inc:                                          ; preds = %for.body.3
  %inc = add nsw i32 %j.0, 1, !dbg !256
  br label %for.cond.1, !dbg !257

for.end:                                          ; preds = %for.cond.1
  br label %for.inc.6, !dbg !258

for.inc.6:                                        ; preds = %for.end
  %inc7 = add nsw i32 %i.0, 1, !dbg !259
  br label %for.cond, !dbg !260

for.end.8:                                        ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !223, metadata !45), !dbg !224
  call void @llvm.dbg.value(metadata i32 %inc30, i64 0, metadata !225, metadata !45), !dbg !226
  call void @llvm.dbg.value(metadata i32 %inc27, i64 0, metadata !223, metadata !45), !dbg !224
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !225, metadata !45), !dbg !226
  %26 = add i64 %B2, 1048576, !dbg !261
  %27 = add i64 %26, 2048, !dbg !261
  %28 = add i64 %B2, 1048576, !dbg !261
  %29 = add i64 %28, 2048, !dbg !261
  %30 = add i64 %B2, 1048576, !dbg !264
  %31 = add i64 %30, 2048, !dbg !264
  %32 = add i64 %B2, 1048576, !dbg !261
  %33 = add i64 %32, 2048, !dbg !261
  %34 = add i64 %B2, 1048576, !dbg !261
  %35 = add i64 %34, 2048, !dbg !261
  %36 = add i64 %B2, 1048576, !dbg !264
  %37 = add i64 %36, 2048, !dbg !264
  %38 = add i64 %B2, 1048576, !dbg !264
  %39 = add i64 %38, 2048, !dbg !264
  br label %for.cond.9, !dbg !268

for.cond.9:                                       ; preds = %for.inc.29, %for.end.8
  %i.1 = phi i32 [ 0, %for.end.8 ], [ %inc30, %for.inc.29 ]
  %cmp10 = icmp slt i32 %i.1, 512, !dbg !261
  br i1 %cmp10, label %for.body.12, label %for.end.31, !dbg !269

for.body.12:                                      ; preds = %for.cond.9
  br label %for.cond.13, !dbg !270

for.cond.13:                                      ; preds = %for.inc.26, %for.body.12
  %j.1 = phi i32 [ 0, %for.body.12 ], [ %inc27, %for.inc.26 ]
  %cmp14 = icmp slt i32 %j.1, 512, !dbg !264
  br i1 %cmp14, label %for.body.16, label %for.end.28, !dbg !271

for.body.16:                                      ; preds = %for.cond.13
  %conv17 = sitofp i32 %i.1 to float, !dbg !272
  %conv18 = sitofp i32 %j.1 to float, !dbg !274
  %mul19 = fmul float %conv17, %conv18, !dbg !275
  %add20 = fadd float %mul19, 1.000000e+00, !dbg !276
  %div21 = fdiv float %add20, 5.120000e+02, !dbg !277
  %mul22 = mul nsw i32 %i.1, 512, !dbg !278
  %add23 = add nsw i32 %mul22, %j.1, !dbg !279
  %idxprom24 = sext i32 %add23 to i64, !dbg !280
  %arrayidx25 = getelementptr inbounds float, float* %B, i64 %idxprom24, !dbg !280
  store float %div21, float* %arrayidx25, align 4, !dbg !281
  br label %for.inc.26, !dbg !282

for.inc.26:                                       ; preds = %for.body.16
  %inc27 = add nsw i32 %j.1, 1, !dbg !283
  br label %for.cond.13, !dbg !284

for.end.28:                                       ; preds = %for.cond.13
  br label %for.inc.29, !dbg !285

for.inc.29:                                       ; preds = %for.end.28
  %inc30 = add nsw i32 %i.1, 1, !dbg !286
  br label %for.cond.9, !dbg !287

for.end.31:                                       ; preds = %for.cond.9
  call void @llvm.dbg.value(metadata i32 %inc59, i64 0, metadata !223, metadata !45), !dbg !224
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !223, metadata !45), !dbg !224
  call void @llvm.dbg.value(metadata i32 %inc62, i64 0, metadata !225, metadata !45), !dbg !226
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !225, metadata !45), !dbg !226
  %40 = add i64 %C3, 1048576, !dbg !288
  %41 = add i64 %40, 2048, !dbg !288
  %42 = add i64 %C_OMP4, 1048576, !dbg !288
  %43 = add i64 %42, 2048, !dbg !288
  %44 = add i64 %C3, 1048576, !dbg !288
  %45 = add i64 %44, 2048, !dbg !288
  %46 = add i64 %C_OMP4, 1048576, !dbg !288
  %47 = add i64 %46, 2048, !dbg !288
  %48 = add i64 %C3, 1048576, !dbg !291
  %49 = add i64 %48, 2048, !dbg !291
  %50 = add i64 %C_OMP4, 1048576, !dbg !291
  %51 = add i64 %50, 2048, !dbg !291
  %52 = add i64 %C3, 1048576, !dbg !288
  %53 = add i64 %52, 2048, !dbg !288
  %54 = add i64 %C_OMP4, 1048576, !dbg !288
  %55 = add i64 %54, 2048, !dbg !288
  %56 = add i64 %C3, 1048576, !dbg !288
  %57 = add i64 %56, 2048, !dbg !288
  %58 = add i64 %C_OMP4, 1048576, !dbg !288
  %59 = add i64 %58, 2048, !dbg !288
  %60 = add i64 %C3, 1048576, !dbg !291
  %61 = add i64 %60, 2048, !dbg !291
  %62 = add i64 %C_OMP4, 1048576, !dbg !291
  %63 = add i64 %62, 2048, !dbg !291
  %64 = add i64 %C3, 1048576, !dbg !291
  %65 = add i64 %64, 2048, !dbg !291
  %66 = add i64 %C_OMP4, 1048576, !dbg !291
  %67 = add i64 %66, 2048, !dbg !291
  br label %for.cond.32, !dbg !295

for.cond.32:                                      ; preds = %for.inc.61, %for.end.31
  %i.2 = phi i32 [ 0, %for.end.31 ], [ %inc62, %for.inc.61 ]
  %cmp33 = icmp slt i32 %i.2, 512, !dbg !288
  br i1 %cmp33, label %for.body.35, label %for.end.63, !dbg !296

for.body.35:                                      ; preds = %for.cond.32
  br label %for.cond.36, !dbg !297

for.cond.36:                                      ; preds = %for.inc.58, %for.body.35
  %j.2 = phi i32 [ 0, %for.body.35 ], [ %inc59, %for.inc.58 ]
  %cmp37 = icmp slt i32 %j.2, 512, !dbg !291
  br i1 %cmp37, label %for.body.39, label %for.end.60, !dbg !298

for.body.39:                                      ; preds = %for.cond.36
  %conv40 = sitofp i32 %i.2 to float, !dbg !299
  %conv41 = sitofp i32 %j.2 to float, !dbg !301
  %mul42 = fmul float %conv40, %conv41, !dbg !302
  %add43 = fadd float %mul42, 2.000000e+00, !dbg !303
  %div44 = fdiv float %add43, 5.120000e+02, !dbg !304
  %mul45 = mul nsw i32 %i.2, 512, !dbg !305
  %add46 = add nsw i32 %mul45, %j.2, !dbg !306
  %idxprom47 = sext i32 %add46 to i64, !dbg !307
  %arrayidx48 = getelementptr inbounds float, float* %C, i64 %idxprom47, !dbg !307
  store float %div44, float* %arrayidx48, align 4, !dbg !308
  %conv49 = sitofp i32 %i.2 to float, !dbg !309
  %conv50 = sitofp i32 %j.2 to float, !dbg !310
  %mul51 = fmul float %conv49, %conv50, !dbg !311
  %add52 = fadd float %mul51, 2.000000e+00, !dbg !312
  %div53 = fdiv float %add52, 5.120000e+02, !dbg !313
  %mul54 = mul nsw i32 %i.2, 512, !dbg !314
  %add55 = add nsw i32 %mul54, %j.2, !dbg !315
  %idxprom56 = sext i32 %add55 to i64, !dbg !316
  %arrayidx57 = getelementptr inbounds float, float* %C_OMP, i64 %idxprom56, !dbg !316
  store float %div53, float* %arrayidx57, align 4, !dbg !317
  br label %for.inc.58, !dbg !318

for.inc.58:                                       ; preds = %for.body.39
  %inc59 = add nsw i32 %j.2, 1, !dbg !319
  br label %for.cond.36, !dbg !320

for.end.60:                                       ; preds = %for.cond.36
  br label %for.inc.61, !dbg !321

for.inc.61:                                       ; preds = %for.end.60
  %inc62 = add nsw i32 %i.2, 1, !dbg !322
  br label %for.cond.32, !dbg !323

for.end.63:                                       ; preds = %for.cond.32
  ret void, !dbg !324
}

; Function Attrs: nounwind uwtable
define void @compareResults(float* %C, float* %C_outputFromGpu) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !325, metadata !45), !dbg !326
  call void @llvm.dbg.value(metadata i32 %inc12, i64 0, metadata !327, metadata !45), !dbg !328
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !327, metadata !45), !dbg !328
  call void @llvm.dbg.value(metadata i32 %inc14, i64 0, metadata !329, metadata !45), !dbg !330
  call void @llvm.dbg.value(metadata float* %C, i64 0, metadata !331, metadata !45), !dbg !332
  call void @llvm.dbg.value(metadata float* %C_outputFromGpu, i64 0, metadata !333, metadata !45), !dbg !334
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !325, metadata !45), !dbg !326
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !329, metadata !45), !dbg !330
  %C_outputFromGpu3 = ptrtoint float* %C_outputFromGpu to i64
  %C2 = ptrtoint float* %C to i64
  %0 = ptrtoint float* undef to i64
  %1 = ptrtoint float* undef to i64
  %2 = ptrtoint float* undef to i64
  %3 = ptrtoint float* undef to i64
  %4 = ptrtoint float* undef to i64
  %5 = ptrtoint float* undef to i64
  %6 = ptrtoint float* undef to i64
  %7 = ptrtoint float* undef to i64
  %8 = ptrtoint float* undef to i64
  %9 = ptrtoint float* undef to i64
  %10 = ptrtoint float* undef to i64
  %11 = ptrtoint float* undef to i64
  %12 = ptrtoint float* undef to i64
  %13 = ptrtoint float* undef to i64
  %14 = ptrtoint float* undef to i64
  %15 = ptrtoint float* undef to i64
  %16 = add i64 %C2, 1048576, !dbg !335
  %17 = add i64 %16, 2048, !dbg !335
  %18 = add i64 %C_outputFromGpu3, 1048576, !dbg !335
  %19 = add i64 %18, 2048, !dbg !335
  %20 = add i64 %C2, 1048576, !dbg !335
  %21 = add i64 %20, 2048, !dbg !335
  %22 = add i64 %C_outputFromGpu3, 1048576, !dbg !335
  %23 = add i64 %22, 2048, !dbg !335
  %24 = add i64 %C2, 1048576, !dbg !338
  %25 = add i64 %24, 2048, !dbg !338
  %26 = add i64 %C_outputFromGpu3, 1048576, !dbg !338
  %27 = add i64 %26, 2048, !dbg !338
  %28 = add i64 %C2, 1048576, !dbg !335
  %29 = add i64 %28, 2048, !dbg !335
  %30 = add i64 %C_outputFromGpu3, 1048576, !dbg !335
  %31 = add i64 %30, 2048, !dbg !335
  %32 = add i64 %C2, 1048576, !dbg !335
  %33 = add i64 %32, 2048, !dbg !335
  %34 = add i64 %C_outputFromGpu3, 1048576, !dbg !335
  %35 = add i64 %34, 2048, !dbg !335
  %36 = add i64 %C2, 1048576, !dbg !342
  %37 = add i64 %36, 2048, !dbg !342
  %38 = add i64 %C_outputFromGpu3, 1048576, !dbg !342
  %39 = add i64 %38, 2048, !dbg !342
  %40 = add i64 %C2, 1048576, !dbg !342
  %41 = add i64 %40, 2048, !dbg !342
  %42 = add i64 %C_outputFromGpu3, 1048576, !dbg !342
  %43 = add i64 %42, 2048, !dbg !342
  %44 = add i64 %C2, 1048576, !dbg !338
  %45 = add i64 %44, 2048, !dbg !338
  %46 = add i64 %C_outputFromGpu3, 1048576, !dbg !338
  %47 = add i64 %46, 2048, !dbg !338
  %48 = add i64 %C2, 1048576, !dbg !338
  %49 = add i64 %48, 2048, !dbg !338
  %50 = add i64 %C_outputFromGpu3, 1048576, !dbg !338
  %51 = add i64 %50, 2048, !dbg !338
  br label %for.cond, !dbg !345

for.cond:                                         ; preds = %for.inc.13, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc14, %for.inc.13 ]
  %fail.0 = phi i32 [ 0, %entry ], [ %fail.1.lcssa, %for.inc.13 ]
  %cmp = icmp slt i32 %i.0, 512, !dbg !335
  br i1 %cmp, label %for.body, label %for.end.15, !dbg !346

for.body:                                         ; preds = %for.cond
  br label %for.cond.1, !dbg !347

for.cond.1:                                       ; preds = %for.inc, %for.body
  %j.0 = phi i32 [ 0, %for.body ], [ %inc12, %for.inc ]
  %fail.1 = phi i32 [ %fail.0, %for.body ], [ %fail.2, %for.inc ]
  %cmp2 = icmp slt i32 %j.0, 512, !dbg !338
  br i1 %cmp2, label %for.body.3, label %for.end, !dbg !348

for.body.3:                                       ; preds = %for.cond.1
  %mul = mul nsw i32 %i.0, 512, !dbg !342
  %add = add nsw i32 %mul, %j.0, !dbg !349
  %idxprom = sext i32 %add to i64, !dbg !350
  %arrayidx = getelementptr inbounds float, float* %C, i64 %idxprom, !dbg !350
  %tmp = load float, float* %arrayidx, align 4, !dbg !350
  %conv = fpext float %tmp to double, !dbg !350
  %mul4 = mul nsw i32 %i.0, 512, !dbg !351
  %add5 = add nsw i32 %mul4, %j.0, !dbg !352
  %idxprom6 = sext i32 %add5 to i64, !dbg !353
  %arrayidx7 = getelementptr inbounds float, float* %C_outputFromGpu, i64 %idxprom6, !dbg !353
  %tmp1 = load float, float* %arrayidx7, align 4, !dbg !353
  %conv8 = fpext float %tmp1 to double, !dbg !353
  %call = call float @percentDiff(double %conv, double %conv8), !dbg !354
  %conv9 = fpext float %call to double, !dbg !354
  %cmp10 = fcmp ogt double %conv9, 5.000000e-02, !dbg !355
  br i1 %cmp10, label %if.then, label %if.end, !dbg !356

if.then:                                          ; preds = %for.body.3
  %inc = add nsw i32 %fail.1, 1, !dbg !357
  br label %if.end, !dbg !359

if.end:                                           ; preds = %if.then, %for.body.3
  %fail.2 = phi i32 [ %inc, %if.then ], [ %fail.1, %for.body.3 ]
  br label %for.inc, !dbg !360

for.inc:                                          ; preds = %if.end
  %inc12 = add nsw i32 %j.0, 1, !dbg !361
  br label %for.cond.1, !dbg !362

for.end:                                          ; preds = %for.cond.1
  %fail.1.lcssa = phi i32 [ %fail.1, %for.cond.1 ]
  br label %for.inc.13, !dbg !363

for.inc.13:                                       ; preds = %for.end
  %inc14 = add nsw i32 %i.0, 1, !dbg !364
  br label %for.cond, !dbg !365

for.end.15:                                       ; preds = %for.cond
  %fail.0.lcssa = phi i32 [ %fail.0, %for.cond ]
  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i32 0, i32 0), double 5.000000e-02, i32 %fail.0.lcssa), !dbg !366
  ret void, !dbg !367
}

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %argc, i64 0, metadata !368, metadata !45), !dbg !369
  call void @llvm.dbg.value(metadata i8** %argv, i64 0, metadata !370, metadata !45), !dbg !371
  %call = call noalias i8* @malloc(i64 1048576) #4, !dbg !372
  %tmp = bitcast i8* %call to float*, !dbg !373
  call void @llvm.dbg.value(metadata float* %tmp, i64 0, metadata !374, metadata !45), !dbg !375
  %call1 = call noalias i8* @malloc(i64 1048576) #4, !dbg !376
  %tmp1 = bitcast i8* %call1 to float*, !dbg !377
  call void @llvm.dbg.value(metadata float* %tmp1, i64 0, metadata !378, metadata !45), !dbg !379
  %call2 = call noalias i8* @malloc(i64 1048576) #4, !dbg !380
  %tmp2 = bitcast i8* %call2 to float*, !dbg !381
  call void @llvm.dbg.value(metadata float* %tmp2, i64 0, metadata !382, metadata !45), !dbg !383
  %call3 = call noalias i8* @malloc(i64 1048576) #4, !dbg !384
  %tmp3 = bitcast i8* %call3 to float*, !dbg !385
  call void @llvm.dbg.value(metadata float* %tmp3, i64 0, metadata !386, metadata !45), !dbg !387
  %tmp4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !388
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i32 0, i32 0)), !dbg !389
  call void @init(float* %tmp, float* %tmp1, float* %tmp2, float* %tmp3), !dbg !390
  %call5 = call double @rtclock(), !dbg !391
  call void @llvm.dbg.value(metadata double %call5, i64 0, metadata !392, metadata !45), !dbg !393
  call void @gemm_OMP(float* %tmp, float* %tmp1, float* %tmp3), !dbg !394
  %call6 = call double @rtclock(), !dbg !395
  call void @llvm.dbg.value(metadata double %call6, i64 0, metadata !396, metadata !45), !dbg !397
  %tmp5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !398
  %sub = fsub double %call6, %call5, !dbg !399
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp5, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i32 0, i32 0), double %sub), !dbg !400
  %call8 = call double @rtclock(), !dbg !401
  call void @llvm.dbg.value(metadata double %call8, i64 0, metadata !392, metadata !45), !dbg !393
  call void @gemm(float* %tmp, float* %tmp1, float* %tmp2), !dbg !402
  %call9 = call double @rtclock(), !dbg !403
  call void @llvm.dbg.value(metadata double %call9, i64 0, metadata !396, metadata !45), !dbg !397
  %tmp6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !404
  %sub10 = fsub double %call9, %call8, !dbg !405
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp6, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i32 0, i32 0), double %sub10), !dbg !406
  call void @compareResults(float* %tmp2, float* %tmp3), !dbg !407
  %tmp7 = bitcast float* %tmp to i8*, !dbg !408
  call void @free(i8* %tmp7) #4, !dbg !409
  %tmp8 = bitcast float* %tmp1 to i8*, !dbg !410
  call void @free(i8* %tmp8) #4, !dbg !411
  %tmp9 = bitcast float* %tmp2 to i8*, !dbg !412
  call void @free(i8* %tmp9) #4, !dbg !413
  %tmp10 = bitcast float* %tmp3 to i8*, !dbg !414
  call void @free(i8* %tmp10) #4, !dbg !415
  ret i32 0, !dbg !416
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #2

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

; Function Attrs: nounwind
declare void @free(i8*) #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!36, !37}
!llvm.ident = !{!38}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !7)
!1 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Polybench/GEMM/src/gemm.c", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!2 = !{}
!3 = !{!4, !6}
!4 = !DIDerivedType(tag: DW_TAG_typedef, name: "DATA_TYPE", file: !1, line: 36, baseType: !5)
!5 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64, align: 64)
!7 = !{!8, !13, !16, !19, !22, !23, !26, !29}
!8 = !DISubprogram(name: "rtclock", scope: !9, file: !9, line: 11, type: !10, isLocal: false, isDefinition: true, scopeLine: 12, isOptimized: false, function: double ()* @rtclock, variables: !2)
!9 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Polybench/GEMM/src/../../common/polybenchUtilFuncts.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!10 = !DISubroutineType(types: !11)
!11 = !{!12}
!12 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!13 = !DISubprogram(name: "absVal", scope: !9, file: !9, line: 22, type: !14, isLocal: false, isDefinition: true, scopeLine: 23, flags: DIFlagPrototyped, isOptimized: false, function: float (float)* @absVal, variables: !2)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !5}
!16 = !DISubprogram(name: "percentDiff", scope: !9, file: !9, line: 36, type: !17, isLocal: false, isDefinition: true, scopeLine: 37, flags: DIFlagPrototyped, isOptimized: false, function: float (double, double)* @percentDiff, variables: !2)
!17 = !DISubroutineType(types: !18)
!18 = !{!5, !12, !12}
!19 = !DISubprogram(name: "gemm", scope: !1, file: !1, line: 40, type: !20, isLocal: false, isDefinition: true, scopeLine: 41, flags: DIFlagPrototyped, isOptimized: false, function: void (float*, float*, float*)* @gemm, variables: !2)
!20 = !DISubroutineType(types: !21)
!21 = !{null, !6, !6, !6}
!22 = !DISubprogram(name: "gemm_OMP", scope: !1, file: !1, line: 58, type: !20, isLocal: false, isDefinition: true, scopeLine: 59, flags: DIFlagPrototyped, isOptimized: false, function: void (float*, float*, float*)* @gemm_OMP, variables: !2)
!23 = !DISubprogram(name: "init", scope: !1, file: !1, line: 80, type: !24, isLocal: false, isDefinition: true, scopeLine: 81, flags: DIFlagPrototyped, isOptimized: false, function: void (float*, float*, float*, float*)* @init, variables: !2)
!24 = !DISubroutineType(types: !25)
!25 = !{null, !6, !6, !6, !6}
!26 = !DISubprogram(name: "compareResults", scope: !1, file: !1, line: 111, type: !27, isLocal: false, isDefinition: true, scopeLine: 112, flags: DIFlagPrototyped, isOptimized: false, function: void (float*, float*)* @compareResults, variables: !2)
!27 = !DISubroutineType(types: !28)
!28 = !{null, !6, !6}
!29 = !DISubprogram(name: "main", scope: !1, file: !1, line: 132, type: !30, isLocal: false, isDefinition: true, scopeLine: 133, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i8**)* @main, variables: !2)
!30 = !DISubroutineType(types: !31)
!31 = !{!32, !32, !33}
!32 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!33 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !34, size: 64, align: 64)
!34 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !35, size: 64, align: 64)
!35 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!36 = !{i32 2, !"Dwarf Version", i32 4}
!37 = !{i32 2, !"Debug Info Version", i32 3}
!38 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!39 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Tzp", scope: !8, file: !9, line: 13, type: !40)
!40 = !DICompositeType(tag: DW_TAG_structure_type, name: "timezone", file: !41, line: 57, size: 64, align: 32, elements: !42)
!41 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/time.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!42 = !{!43, !44}
!43 = !DIDerivedType(tag: DW_TAG_member, name: "tz_minuteswest", scope: !40, file: !41, line: 59, baseType: !32, size: 32, align: 32)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "tz_dsttime", scope: !40, file: !41, line: 60, baseType: !32, size: 32, align: 32, offset: 32)
!45 = !DIExpression()
!46 = !DILocation(line: 13, column: 21, scope: !8)
!47 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Tp", scope: !8, file: !9, line: 14, type: !48)
!48 = !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !49, line: 31, size: 128, align: 64, elements: !50)
!49 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!50 = !{!51, !55}
!51 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !48, file: !49, line: 33, baseType: !52, size: 64, align: 64)
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !53, line: 149, baseType: !54)
!53 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!54 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !48, file: !49, line: 34, baseType: !56, size: 64, align: 64, offset: 64)
!56 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !53, line: 151, baseType: !54)
!57 = !DILocation(line: 14, column: 20, scope: !8)
!58 = !DILocation(line: 16, column: 12, scope: !8)
!59 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stat", scope: !8, file: !9, line: 15, type: !32)
!60 = !DILocation(line: 15, column: 9, scope: !8)
!61 = !DILocation(line: 17, column: 14, scope: !62)
!62 = distinct !DILexicalBlock(scope: !8, file: !9, line: 17, column: 9)
!63 = !DILocation(line: 17, column: 9, scope: !8)
!64 = !DILocation(line: 17, column: 20, scope: !62)
!65 = !DILocation(line: 18, column: 15, scope: !8)
!66 = !DILocation(line: 18, column: 12, scope: !8)
!67 = !DILocation(line: 18, column: 27, scope: !8)
!68 = !DILocation(line: 18, column: 24, scope: !8)
!69 = !DILocation(line: 18, column: 34, scope: !8)
!70 = !DILocation(line: 18, column: 22, scope: !8)
!71 = !DILocation(line: 18, column: 5, scope: !8)
!72 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !13, file: !9, line: 22, type: !5)
!73 = !DILocation(line: 22, column: 20, scope: !13)
!74 = !DILocation(line: 24, column: 7, scope: !75)
!75 = distinct !DILexicalBlock(scope: !13, file: !9, line: 24, column: 5)
!76 = !DILocation(line: 24, column: 5, scope: !13)
!77 = !DILocation(line: 26, column: 13, scope: !78)
!78 = distinct !DILexicalBlock(scope: !75, file: !9, line: 25, column: 2)
!79 = !DILocation(line: 26, column: 3, scope: !78)
!80 = !DILocation(line: 30, column: 3, scope: !81)
!81 = distinct !DILexicalBlock(scope: !75, file: !9, line: 29, column: 2)
!82 = !DILocation(line: 32, column: 1, scope: !13)
!83 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val1", arg: 1, scope: !16, file: !9, line: 36, type: !12)
!84 = !DILocation(line: 36, column: 26, scope: !16)
!85 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val2", arg: 2, scope: !16, file: !9, line: 36, type: !12)
!86 = !DILocation(line: 36, column: 39, scope: !16)
!87 = !DILocation(line: 38, column: 14, scope: !88)
!88 = distinct !DILexicalBlock(scope: !16, file: !9, line: 38, column: 6)
!89 = !DILocation(line: 38, column: 7, scope: !88)
!90 = !DILocation(line: 38, column: 20, scope: !88)
!91 = !DILocation(line: 38, column: 28, scope: !88)
!92 = !DILocation(line: 38, column: 39, scope: !93)
!93 = !DILexicalBlockFile(scope: !88, file: !9, discriminator: 1)
!94 = !DILocation(line: 38, column: 32, scope: !88)
!95 = !DILocation(line: 38, column: 45, scope: !88)
!96 = !DILocation(line: 38, column: 6, scope: !16)
!97 = !DILocation(line: 40, column: 3, scope: !98)
!98 = distinct !DILexicalBlock(scope: !88, file: !9, line: 39, column: 2)
!99 = !DILocation(line: 45, column: 43, scope: !100)
!100 = distinct !DILexicalBlock(scope: !88, file: !9, line: 44, column: 2)
!101 = !DILocation(line: 45, column: 38, scope: !100)
!102 = !DILocation(line: 45, column: 31, scope: !100)
!103 = !DILocation(line: 45, column: 65, scope: !100)
!104 = !DILocation(line: 45, column: 60, scope: !100)
!105 = !DILocation(line: 45, column: 53, scope: !100)
!106 = !DILocation(line: 45, column: 51, scope: !100)
!107 = !DILocation(line: 45, column: 24, scope: !100)
!108 = !DILocation(line: 45, column: 21, scope: !100)
!109 = !DILocation(line: 45, column: 7, scope: !100)
!110 = !DILocation(line: 47, column: 1, scope: !16)
!111 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !19, file: !1, line: 42, type: !32)
!112 = !DILocation(line: 42, column: 11, scope: !19)
!113 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !19, file: !1, line: 42, type: !32)
!114 = !DILocation(line: 42, column: 9, scope: !19)
!115 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !19, file: !1, line: 42, type: !32)
!116 = !DILocation(line: 42, column: 7, scope: !19)
!117 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "A", arg: 1, scope: !19, file: !1, line: 40, type: !6)
!118 = !DILocation(line: 40, column: 22, scope: !19)
!119 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "B", arg: 2, scope: !19, file: !1, line: 40, type: !6)
!120 = !DILocation(line: 40, column: 36, scope: !19)
!121 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "C", arg: 3, scope: !19, file: !1, line: 40, type: !6)
!122 = !DILocation(line: 40, column: 50, scope: !19)
!123 = !DILocation(line: 44, column: 17, scope: !124)
!124 = distinct !DILexicalBlock(scope: !125, file: !1, line: 44, column: 3)
!125 = distinct !DILexicalBlock(scope: !19, file: !1, line: 44, column: 3)
!126 = !DILocation(line: 46, column: 21, scope: !127)
!127 = distinct !DILexicalBlock(scope: !128, file: !1, line: 46, column: 7)
!128 = distinct !DILexicalBlock(scope: !129, file: !1, line: 46, column: 7)
!129 = distinct !DILexicalBlock(scope: !124, file: !1, line: 45, column: 5)
!130 = !DILocation(line: 50, column: 18, scope: !131)
!131 = distinct !DILexicalBlock(scope: !132, file: !1, line: 50, column: 4)
!132 = distinct !DILexicalBlock(scope: !133, file: !1, line: 50, column: 4)
!133 = distinct !DILexicalBlock(scope: !127, file: !1, line: 47, column: 2)
!134 = !DILocation(line: 44, column: 8, scope: !125)
!135 = !DILocation(line: 44, column: 3, scope: !125)
!136 = !DILocation(line: 46, column: 12, scope: !128)
!137 = !DILocation(line: 46, column: 7, scope: !128)
!138 = !DILocation(line: 48, column: 7, scope: !133)
!139 = !DILocation(line: 48, column: 11, scope: !133)
!140 = !DILocation(line: 48, column: 4, scope: !133)
!141 = !DILocation(line: 48, column: 16, scope: !133)
!142 = !DILocation(line: 50, column: 9, scope: !132)
!143 = !DILocation(line: 50, column: 4, scope: !132)
!144 = !DILocation(line: 52, column: 34, scope: !145)
!145 = distinct !DILexicalBlock(scope: !131, file: !1, line: 51, column: 6)
!146 = !DILocation(line: 52, column: 38, scope: !145)
!147 = !DILocation(line: 52, column: 31, scope: !145)
!148 = !DILocation(line: 52, column: 29, scope: !145)
!149 = !DILocation(line: 52, column: 48, scope: !145)
!150 = !DILocation(line: 52, column: 52, scope: !145)
!151 = !DILocation(line: 52, column: 45, scope: !145)
!152 = !DILocation(line: 52, column: 43, scope: !145)
!153 = !DILocation(line: 52, column: 11, scope: !145)
!154 = !DILocation(line: 52, column: 15, scope: !145)
!155 = !DILocation(line: 52, column: 8, scope: !145)
!156 = !DILocation(line: 52, column: 20, scope: !145)
!157 = !DILocation(line: 53, column: 6, scope: !145)
!158 = !DILocation(line: 50, column: 24, scope: !131)
!159 = !DILocation(line: 50, column: 4, scope: !131)
!160 = !DILocation(line: 54, column: 2, scope: !133)
!161 = !DILocation(line: 46, column: 28, scope: !127)
!162 = !DILocation(line: 46, column: 7, scope: !127)
!163 = !DILocation(line: 55, column: 5, scope: !129)
!164 = !DILocation(line: 44, column: 24, scope: !124)
!165 = !DILocation(line: 44, column: 3, scope: !124)
!166 = !DILocation(line: 56, column: 1, scope: !19)
!167 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !22, file: !1, line: 60, type: !32)
!168 = !DILocation(line: 60, column: 9, scope: !22)
!169 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !22, file: !1, line: 60, type: !32)
!170 = !DILocation(line: 60, column: 7, scope: !22)
!171 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !22, file: !1, line: 60, type: !32)
!172 = !DILocation(line: 60, column: 11, scope: !22)
!173 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "A", arg: 1, scope: !22, file: !1, line: 58, type: !6)
!174 = !DILocation(line: 58, column: 26, scope: !22)
!175 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "B", arg: 2, scope: !22, file: !1, line: 58, type: !6)
!176 = !DILocation(line: 58, column: 40, scope: !22)
!177 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "C", arg: 3, scope: !22, file: !1, line: 58, type: !6)
!178 = !DILocation(line: 58, column: 54, scope: !22)
!179 = !DILocation(line: 65, column: 17, scope: !180)
!180 = distinct !DILexicalBlock(scope: !181, file: !1, line: 65, column: 3)
!181 = distinct !DILexicalBlock(scope: !22, file: !1, line: 65, column: 3)
!182 = !DILocation(line: 67, column: 21, scope: !183)
!183 = distinct !DILexicalBlock(scope: !184, file: !1, line: 67, column: 7)
!184 = distinct !DILexicalBlock(scope: !185, file: !1, line: 67, column: 7)
!185 = distinct !DILexicalBlock(scope: !180, file: !1, line: 66, column: 5)
!186 = !DILocation(line: 71, column: 18, scope: !187)
!187 = distinct !DILexicalBlock(scope: !188, file: !1, line: 71, column: 4)
!188 = distinct !DILexicalBlock(scope: !189, file: !1, line: 71, column: 4)
!189 = distinct !DILexicalBlock(scope: !183, file: !1, line: 68, column: 2)
!190 = !DILocation(line: 65, column: 8, scope: !181)
!191 = !DILocation(line: 65, column: 3, scope: !181)
!192 = !DILocation(line: 67, column: 12, scope: !184)
!193 = !DILocation(line: 67, column: 7, scope: !184)
!194 = !DILocation(line: 69, column: 7, scope: !189)
!195 = !DILocation(line: 69, column: 11, scope: !189)
!196 = !DILocation(line: 69, column: 4, scope: !189)
!197 = !DILocation(line: 69, column: 16, scope: !189)
!198 = !DILocation(line: 71, column: 9, scope: !188)
!199 = !DILocation(line: 71, column: 4, scope: !188)
!200 = !DILocation(line: 73, column: 34, scope: !201)
!201 = distinct !DILexicalBlock(scope: !187, file: !1, line: 72, column: 6)
!202 = !DILocation(line: 73, column: 38, scope: !201)
!203 = !DILocation(line: 73, column: 31, scope: !201)
!204 = !DILocation(line: 73, column: 29, scope: !201)
!205 = !DILocation(line: 73, column: 48, scope: !201)
!206 = !DILocation(line: 73, column: 52, scope: !201)
!207 = !DILocation(line: 73, column: 45, scope: !201)
!208 = !DILocation(line: 73, column: 43, scope: !201)
!209 = !DILocation(line: 73, column: 11, scope: !201)
!210 = !DILocation(line: 73, column: 15, scope: !201)
!211 = !DILocation(line: 73, column: 8, scope: !201)
!212 = !DILocation(line: 73, column: 20, scope: !201)
!213 = !DILocation(line: 74, column: 6, scope: !201)
!214 = !DILocation(line: 71, column: 24, scope: !187)
!215 = !DILocation(line: 71, column: 4, scope: !187)
!216 = !DILocation(line: 75, column: 2, scope: !189)
!217 = !DILocation(line: 67, column: 28, scope: !183)
!218 = !DILocation(line: 67, column: 7, scope: !183)
!219 = !DILocation(line: 76, column: 5, scope: !185)
!220 = !DILocation(line: 65, column: 24, scope: !180)
!221 = !DILocation(line: 65, column: 3, scope: !180)
!222 = !DILocation(line: 77, column: 1, scope: !22)
!223 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !23, file: !1, line: 82, type: !32)
!224 = !DILocation(line: 82, column: 10, scope: !23)
!225 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !23, file: !1, line: 82, type: !32)
!226 = !DILocation(line: 82, column: 7, scope: !23)
!227 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "A", arg: 1, scope: !23, file: !1, line: 80, type: !6)
!228 = !DILocation(line: 80, column: 22, scope: !23)
!229 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "B", arg: 2, scope: !23, file: !1, line: 80, type: !6)
!230 = !DILocation(line: 80, column: 36, scope: !23)
!231 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "C", arg: 3, scope: !23, file: !1, line: 80, type: !6)
!232 = !DILocation(line: 80, column: 50, scope: !23)
!233 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "C_OMP", arg: 4, scope: !23, file: !1, line: 80, type: !6)
!234 = !DILocation(line: 80, column: 64, scope: !23)
!235 = !DILocation(line: 84, column: 17, scope: !236)
!236 = distinct !DILexicalBlock(scope: !237, file: !1, line: 84, column: 3)
!237 = distinct !DILexicalBlock(scope: !23, file: !1, line: 84, column: 3)
!238 = !DILocation(line: 86, column: 21, scope: !239)
!239 = distinct !DILexicalBlock(scope: !240, file: !1, line: 86, column: 7)
!240 = distinct !DILexicalBlock(scope: !241, file: !1, line: 86, column: 7)
!241 = distinct !DILexicalBlock(scope: !236, file: !1, line: 85, column: 5)
!242 = !DILocation(line: 84, column: 8, scope: !237)
!243 = !DILocation(line: 84, column: 3, scope: !237)
!244 = !DILocation(line: 86, column: 12, scope: !240)
!245 = !DILocation(line: 86, column: 7, scope: !240)
!246 = !DILocation(line: 88, column: 19, scope: !247)
!247 = distinct !DILexicalBlock(scope: !239, file: !1, line: 87, column: 2)
!248 = !DILocation(line: 88, column: 33, scope: !247)
!249 = !DILocation(line: 88, column: 32, scope: !247)
!250 = !DILocation(line: 88, column: 36, scope: !247)
!251 = !DILocation(line: 88, column: 7, scope: !247)
!252 = !DILocation(line: 88, column: 11, scope: !247)
!253 = !DILocation(line: 88, column: 4, scope: !247)
!254 = !DILocation(line: 88, column: 16, scope: !247)
!255 = !DILocation(line: 89, column: 2, scope: !247)
!256 = !DILocation(line: 86, column: 28, scope: !239)
!257 = !DILocation(line: 86, column: 7, scope: !239)
!258 = !DILocation(line: 90, column: 5, scope: !241)
!259 = !DILocation(line: 84, column: 24, scope: !236)
!260 = !DILocation(line: 84, column: 3, scope: !236)
!261 = !DILocation(line: 92, column: 17, scope: !262)
!262 = distinct !DILexicalBlock(scope: !263, file: !1, line: 92, column: 3)
!263 = distinct !DILexicalBlock(scope: !23, file: !1, line: 92, column: 3)
!264 = !DILocation(line: 94, column: 21, scope: !265)
!265 = distinct !DILexicalBlock(scope: !266, file: !1, line: 94, column: 7)
!266 = distinct !DILexicalBlock(scope: !267, file: !1, line: 94, column: 7)
!267 = distinct !DILexicalBlock(scope: !262, file: !1, line: 93, column: 5)
!268 = !DILocation(line: 92, column: 8, scope: !263)
!269 = !DILocation(line: 92, column: 3, scope: !263)
!270 = !DILocation(line: 94, column: 12, scope: !266)
!271 = !DILocation(line: 94, column: 7, scope: !266)
!272 = !DILocation(line: 96, column: 19, scope: !273)
!273 = distinct !DILexicalBlock(scope: !265, file: !1, line: 95, column: 2)
!274 = !DILocation(line: 96, column: 33, scope: !273)
!275 = !DILocation(line: 96, column: 32, scope: !273)
!276 = !DILocation(line: 96, column: 35, scope: !273)
!277 = !DILocation(line: 96, column: 40, scope: !273)
!278 = !DILocation(line: 96, column: 7, scope: !273)
!279 = !DILocation(line: 96, column: 11, scope: !273)
!280 = !DILocation(line: 96, column: 4, scope: !273)
!281 = !DILocation(line: 96, column: 16, scope: !273)
!282 = !DILocation(line: 97, column: 2, scope: !273)
!283 = !DILocation(line: 94, column: 28, scope: !265)
!284 = !DILocation(line: 94, column: 7, scope: !265)
!285 = !DILocation(line: 98, column: 5, scope: !267)
!286 = !DILocation(line: 92, column: 24, scope: !262)
!287 = !DILocation(line: 92, column: 3, scope: !262)
!288 = !DILocation(line: 100, column: 17, scope: !289)
!289 = distinct !DILexicalBlock(scope: !290, file: !1, line: 100, column: 3)
!290 = distinct !DILexicalBlock(scope: !23, file: !1, line: 100, column: 3)
!291 = !DILocation(line: 102, column: 21, scope: !292)
!292 = distinct !DILexicalBlock(scope: !293, file: !1, line: 102, column: 7)
!293 = distinct !DILexicalBlock(scope: !294, file: !1, line: 102, column: 7)
!294 = distinct !DILexicalBlock(scope: !289, file: !1, line: 101, column: 5)
!295 = !DILocation(line: 100, column: 8, scope: !290)
!296 = !DILocation(line: 100, column: 3, scope: !290)
!297 = !DILocation(line: 102, column: 12, scope: !293)
!298 = !DILocation(line: 102, column: 7, scope: !293)
!299 = !DILocation(line: 104, column: 19, scope: !300)
!300 = distinct !DILexicalBlock(scope: !292, file: !1, line: 103, column: 2)
!301 = !DILocation(line: 104, column: 33, scope: !300)
!302 = !DILocation(line: 104, column: 32, scope: !300)
!303 = !DILocation(line: 104, column: 35, scope: !300)
!304 = !DILocation(line: 104, column: 40, scope: !300)
!305 = !DILocation(line: 104, column: 7, scope: !300)
!306 = !DILocation(line: 104, column: 11, scope: !300)
!307 = !DILocation(line: 104, column: 4, scope: !300)
!308 = !DILocation(line: 104, column: 16, scope: !300)
!309 = !DILocation(line: 105, column: 23, scope: !300)
!310 = !DILocation(line: 105, column: 37, scope: !300)
!311 = !DILocation(line: 105, column: 36, scope: !300)
!312 = !DILocation(line: 105, column: 39, scope: !300)
!313 = !DILocation(line: 105, column: 44, scope: !300)
!314 = !DILocation(line: 105, column: 11, scope: !300)
!315 = !DILocation(line: 105, column: 15, scope: !300)
!316 = !DILocation(line: 105, column: 4, scope: !300)
!317 = !DILocation(line: 105, column: 20, scope: !300)
!318 = !DILocation(line: 106, column: 2, scope: !300)
!319 = !DILocation(line: 102, column: 28, scope: !292)
!320 = !DILocation(line: 102, column: 7, scope: !292)
!321 = !DILocation(line: 107, column: 5, scope: !294)
!322 = !DILocation(line: 100, column: 24, scope: !289)
!323 = !DILocation(line: 100, column: 3, scope: !289)
!324 = !DILocation(line: 108, column: 1, scope: !23)
!325 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fail", scope: !26, file: !1, line: 113, type: !32)
!326 = !DILocation(line: 113, column: 13, scope: !26)
!327 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !26, file: !1, line: 113, type: !32)
!328 = !DILocation(line: 113, column: 10, scope: !26)
!329 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !26, file: !1, line: 113, type: !32)
!330 = !DILocation(line: 113, column: 7, scope: !26)
!331 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "C", arg: 1, scope: !26, file: !1, line: 111, type: !6)
!332 = !DILocation(line: 111, column: 32, scope: !26)
!333 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "C_outputFromGpu", arg: 2, scope: !26, file: !1, line: 111, type: !6)
!334 = !DILocation(line: 111, column: 46, scope: !26)
!335 = !DILocation(line: 117, column: 15, scope: !336)
!336 = distinct !DILexicalBlock(scope: !337, file: !1, line: 117, column: 3)
!337 = distinct !DILexicalBlock(scope: !26, file: !1, line: 117, column: 3)
!338 = !DILocation(line: 119, column: 19, scope: !339)
!339 = distinct !DILexicalBlock(scope: !340, file: !1, line: 119, column: 7)
!340 = distinct !DILexicalBlock(scope: !341, file: !1, line: 119, column: 7)
!341 = distinct !DILexicalBlock(scope: !336, file: !1, line: 118, column: 5)
!342 = !DILocation(line: 121, column: 23, scope: !343)
!343 = distinct !DILexicalBlock(scope: !344, file: !1, line: 121, column: 8)
!344 = distinct !DILexicalBlock(scope: !339, file: !1, line: 120, column: 2)
!345 = !DILocation(line: 117, column: 8, scope: !337)
!346 = !DILocation(line: 117, column: 3, scope: !337)
!347 = !DILocation(line: 119, column: 12, scope: !340)
!348 = !DILocation(line: 119, column: 7, scope: !340)
!349 = !DILocation(line: 121, column: 27, scope: !343)
!350 = !DILocation(line: 121, column: 20, scope: !343)
!351 = !DILocation(line: 121, column: 50, scope: !343)
!352 = !DILocation(line: 121, column: 54, scope: !343)
!353 = !DILocation(line: 121, column: 33, scope: !343)
!354 = !DILocation(line: 121, column: 8, scope: !343)
!355 = !DILocation(line: 121, column: 60, scope: !343)
!356 = !DILocation(line: 121, column: 8, scope: !344)
!357 = !DILocation(line: 123, column: 12, scope: !358)
!358 = distinct !DILexicalBlock(scope: !343, file: !1, line: 122, column: 6)
!359 = !DILocation(line: 124, column: 6, scope: !358)
!360 = !DILocation(line: 125, column: 2, scope: !344)
!361 = !DILocation(line: 119, column: 26, scope: !339)
!362 = !DILocation(line: 119, column: 7, scope: !339)
!363 = !DILocation(line: 126, column: 5, scope: !341)
!364 = !DILocation(line: 117, column: 22, scope: !336)
!365 = !DILocation(line: 117, column: 3, scope: !336)
!366 = !DILocation(line: 129, column: 3, scope: !26)
!367 = !DILocation(line: 130, column: 1, scope: !26)
!368 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !29, file: !1, line: 132, type: !32)
!369 = !DILocation(line: 132, column: 14, scope: !29)
!370 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !29, file: !1, line: 132, type: !33)
!371 = !DILocation(line: 132, column: 26, scope: !29)
!372 = !DILocation(line: 141, column: 19, scope: !29)
!373 = !DILocation(line: 141, column: 7, scope: !29)
!374 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "A", scope: !29, file: !1, line: 136, type: !6)
!375 = !DILocation(line: 136, column: 14, scope: !29)
!376 = !DILocation(line: 142, column: 19, scope: !29)
!377 = !DILocation(line: 142, column: 7, scope: !29)
!378 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "B", scope: !29, file: !1, line: 137, type: !6)
!379 = !DILocation(line: 137, column: 14, scope: !29)
!380 = !DILocation(line: 143, column: 19, scope: !29)
!381 = !DILocation(line: 143, column: 7, scope: !29)
!382 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "C", scope: !29, file: !1, line: 138, type: !6)
!383 = !DILocation(line: 138, column: 14, scope: !29)
!384 = !DILocation(line: 144, column: 33, scope: !29)
!385 = !DILocation(line: 144, column: 21, scope: !29)
!386 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "C_outputFromGpu", scope: !29, file: !1, line: 139, type: !6)
!387 = !DILocation(line: 139, column: 14, scope: !29)
!388 = !DILocation(line: 146, column: 11, scope: !29)
!389 = !DILocation(line: 146, column: 3, scope: !29)
!390 = !DILocation(line: 148, column: 3, scope: !29)
!391 = !DILocation(line: 150, column: 13, scope: !29)
!392 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_start", scope: !29, file: !1, line: 134, type: !12)
!393 = !DILocation(line: 134, column: 10, scope: !29)
!394 = !DILocation(line: 151, column: 3, scope: !29)
!395 = !DILocation(line: 152, column: 11, scope: !29)
!396 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_end", scope: !29, file: !1, line: 134, type: !12)
!397 = !DILocation(line: 134, column: 19, scope: !29)
!398 = !DILocation(line: 153, column: 11, scope: !29)
!399 = !DILocation(line: 153, column: 51, scope: !29)
!400 = !DILocation(line: 153, column: 3, scope: !29)
!401 = !DILocation(line: 155, column: 13, scope: !29)
!402 = !DILocation(line: 156, column: 3, scope: !29)
!403 = !DILocation(line: 157, column: 11, scope: !29)
!404 = !DILocation(line: 158, column: 11, scope: !29)
!405 = !DILocation(line: 158, column: 51, scope: !29)
!406 = !DILocation(line: 158, column: 3, scope: !29)
!407 = !DILocation(line: 160, column: 3, scope: !29)
!408 = !DILocation(line: 162, column: 8, scope: !29)
!409 = !DILocation(line: 162, column: 3, scope: !29)
!410 = !DILocation(line: 163, column: 8, scope: !29)
!411 = !DILocation(line: 163, column: 3, scope: !29)
!412 = !DILocation(line: 164, column: 8, scope: !29)
!413 = !DILocation(line: 164, column: 3, scope: !29)
!414 = !DILocation(line: 165, column: 8, scope: !29)
!415 = !DILocation(line: 165, column: 3, scope: !29)
!416 = !DILocation(line: 167, column: 3, scope: !29)
