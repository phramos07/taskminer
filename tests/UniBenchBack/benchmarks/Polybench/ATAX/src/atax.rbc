; ModuleID = '/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Polybench/ATAX/src/atax.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.timezone = type { i32, i32 }
%struct.timeval = type { i64, i64 }

@.str = private unnamed_addr constant [35 x i8] c"Error return from gettimeofday: %d\00", align 1
@.str.1 = private unnamed_addr constant [74 x i8] c"Non-Matching CPU-GPU Outputs Beyond Error Threshold of %4.2f Percent: %d\0A\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@.str.2 = private unnamed_addr constant [50 x i8] c"<< Matrix Transpose and Vector Multiplication >>\0A\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"GPU Runtime: %0.6lfs\0A\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"CPU Runtime: %0.6lfs\0A\00", align 1

; Function Attrs: nounwind uwtable
define double @rtclock() #0 {
entry:
  %Tzp = alloca %struct.timezone, align 4
  %Tp = alloca %struct.timeval, align 8
  call void @llvm.dbg.declare(metadata %struct.timezone* %Tzp, metadata !37, metadata !43), !dbg !44
  call void @llvm.dbg.declare(metadata %struct.timeval* %Tp, metadata !45, metadata !43), !dbg !55
  %call = call i32 @gettimeofday(%struct.timeval* %Tp, %struct.timezone* %Tzp) #4, !dbg !56
  call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !57, metadata !43), !dbg !58
  %cmp = icmp ne i32 %call, 0, !dbg !59
  br i1 %cmp, label %if.then, label %if.end, !dbg !61

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i32 0, i32 0), i32 %call), !dbg !62
  br label %if.end, !dbg !62

if.end:                                           ; preds = %if.then, %entry
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %Tp, i32 0, i32 0, !dbg !63
  %tmp = load i64, i64* %tv_sec, align 8, !dbg !63
  %conv = sitofp i64 %tmp to double, !dbg !64
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %Tp, i32 0, i32 1, !dbg !65
  %tmp1 = load i64, i64* %tv_usec, align 8, !dbg !65
  %conv2 = sitofp i64 %tmp1 to double, !dbg !66
  %mul = fmul double %conv2, 1.000000e-06, !dbg !67
  %add = fadd double %conv, %mul, !dbg !68
  ret double %add, !dbg !69
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timeval*, %struct.timezone*) #2

declare i32 @printf(i8*, ...) #3

; Function Attrs: nounwind uwtable
define float @absVal(float %a) #0 {
entry:
  call void @llvm.dbg.value(metadata float %a, i64 0, metadata !70, metadata !43), !dbg !71
  %cmp = fcmp olt float %a, 0.000000e+00, !dbg !72
  br i1 %cmp, label %if.then, label %if.else, !dbg !74

if.then:                                          ; preds = %entry
  %mul = fmul float %a, -1.000000e+00, !dbg !75
  br label %return, !dbg !77

if.else:                                          ; preds = %entry
  br label %return, !dbg !78

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi float [ %mul, %if.then ], [ %a, %if.else ]
  ret float %retval.0, !dbg !80
}

; Function Attrs: nounwind uwtable
define float @percentDiff(double %val1, double %val2) #0 {
entry:
  call void @llvm.dbg.value(metadata double %val1, i64 0, metadata !81, metadata !43), !dbg !82
  call void @llvm.dbg.value(metadata double %val2, i64 0, metadata !83, metadata !43), !dbg !84
  %conv = fptrunc double %val1 to float, !dbg !85
  %call = call float @absVal(float %conv), !dbg !87
  %conv1 = fpext float %call to double, !dbg !87
  %cmp = fcmp olt double %conv1, 1.000000e-02, !dbg !88
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !89

land.lhs.true:                                    ; preds = %entry
  %conv3 = fptrunc double %val2 to float, !dbg !90
  %call4 = call float @absVal(float %conv3), !dbg !92
  %conv5 = fpext float %call4 to double, !dbg !92
  %cmp6 = fcmp olt double %conv5, 1.000000e-02, !dbg !93
  br i1 %cmp6, label %if.then, label %if.else, !dbg !94

if.then:                                          ; preds = %land.lhs.true
  br label %return, !dbg !95

if.else:                                          ; preds = %land.lhs.true, %entry
  %sub = fsub double %val1, %val2, !dbg !97
  %conv8 = fptrunc double %sub to float, !dbg !99
  %call9 = call float @absVal(float %conv8), !dbg !100
  %add = fadd double %val1, 0x3E45798EE0000000, !dbg !101
  %conv10 = fptrunc double %add to float, !dbg !102
  %call11 = call float @absVal(float %conv10), !dbg !103
  %div = fdiv float %call9, %call11, !dbg !104
  %call12 = call float @absVal(float %div), !dbg !105
  %mul = fmul float 1.000000e+02, %call12, !dbg !106
  br label %return, !dbg !107

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi float [ 0.000000e+00, %if.then ], [ %mul, %if.else ]
  ret float %retval.0, !dbg !108
}

; Function Attrs: nounwind uwtable
define void @init_array(float* %x, float* %A) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !109, metadata !43), !dbg !110
  call void @llvm.dbg.value(metadata i32 %inc13, i64 0, metadata !111, metadata !43), !dbg !112
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !109, metadata !43), !dbg !110
  call void @llvm.dbg.value(metadata float* %x, i64 0, metadata !113, metadata !43), !dbg !114
  call void @llvm.dbg.value(metadata float* %A, i64 0, metadata !115, metadata !43), !dbg !116
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !111, metadata !43), !dbg !112
  %A1 = ptrtoint float* %A to i64
  %x2 = ptrtoint float* %x to i64
  %0 = ptrtoint float* undef to i64
  %1 = ptrtoint float* undef to i64
  %2 = ptrtoint float* undef to i64
  %3 = ptrtoint float* undef to i64
  %4 = ptrtoint float* undef to i64
  %5 = ptrtoint float* undef to i64
  %6 = ptrtoint float* undef to i64
  %7 = add i64 %A1, 268435456, !dbg !117
  %8 = add i64 %7, 32768, !dbg !117
  %9 = add i64 %x2, 32768, !dbg !117
  %10 = add i64 %A1, 268435456, !dbg !117
  %11 = add i64 %10, 32768, !dbg !117
  %12 = add i64 %x2, 32768, !dbg !117
  %13 = add i64 %A1, 268435456, !dbg !120
  %14 = add i64 %13, 32768, !dbg !120
  %15 = add i64 %A1, 268435456, !dbg !117
  %16 = add i64 %15, 32768, !dbg !117
  %17 = add i64 %x2, 32768, !dbg !117
  %18 = add i64 %A1, 268435456, !dbg !117
  %19 = add i64 %18, 32768, !dbg !117
  %20 = add i64 %x2, 32768, !dbg !117
  %21 = add i64 %A1, 268435456, !dbg !120
  %22 = add i64 %21, 32768, !dbg !120
  %23 = add i64 %A1, 268435456, !dbg !120
  %24 = add i64 %23, 32768, !dbg !120
  br label %for.cond, !dbg !124

for.cond:                                         ; preds = %for.inc.12, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc13, %for.inc.12 ]
  %cmp = icmp slt i32 %i.0, 8192, !dbg !117
  br i1 %cmp, label %for.body, label %for.end.14, !dbg !125

for.body:                                         ; preds = %for.cond
  %conv = sitofp i32 %i.0 to double, !dbg !126
  %mul = fmul double %conv, 0x400921FB54442D18, !dbg !127
  %conv1 = fptrunc double %mul to float, !dbg !126
  %idxprom = sext i32 %i.0 to i64, !dbg !128
  %arrayidx = getelementptr inbounds float, float* %x, i64 %idxprom, !dbg !128
  store float %conv1, float* %arrayidx, align 4, !dbg !129
  br label %for.cond.2, !dbg !130

for.cond.2:                                       ; preds = %for.inc, %for.body
  %j.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ]
  %cmp3 = icmp slt i32 %j.0, 8192, !dbg !120
  br i1 %cmp3, label %for.body.5, label %for.end, !dbg !131

for.body.5:                                       ; preds = %for.cond.2
  %conv6 = sitofp i32 %i.0 to float, !dbg !132
  %conv7 = sitofp i32 %j.0 to float, !dbg !134
  %mul8 = fmul float %conv6, %conv7, !dbg !135
  %div = fdiv float %mul8, 8.192000e+03, !dbg !136
  %mul9 = mul nsw i32 %i.0, 8192, !dbg !137
  %add = add nsw i32 %mul9, %j.0, !dbg !138
  %idxprom10 = sext i32 %add to i64, !dbg !139
  %arrayidx11 = getelementptr inbounds float, float* %A, i64 %idxprom10, !dbg !139
  store float %div, float* %arrayidx11, align 4, !dbg !140
  br label %for.inc, !dbg !141

for.inc:                                          ; preds = %for.body.5
  %inc = add nsw i32 %j.0, 1, !dbg !142
  br label %for.cond.2, !dbg !143

for.end:                                          ; preds = %for.cond.2
  br label %for.inc.12, !dbg !144

for.inc.12:                                       ; preds = %for.end
  %inc13 = add nsw i32 %i.0, 1, !dbg !145
  br label %for.cond, !dbg !146

for.end.14:                                       ; preds = %for.cond
  ret void, !dbg !147
}

; Function Attrs: nounwind uwtable
define void @compareResults(float* %z, float* %z_outputFromGpu) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !148, metadata !43), !dbg !149
  call void @llvm.dbg.value(metadata i32 %inc7, i64 0, metadata !150, metadata !43), !dbg !151
  call void @llvm.dbg.value(metadata float* %z, i64 0, metadata !152, metadata !43), !dbg !153
  call void @llvm.dbg.value(metadata float* %z_outputFromGpu, i64 0, metadata !154, metadata !43), !dbg !155
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !148, metadata !43), !dbg !149
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !150, metadata !43), !dbg !151
  %z_outputFromGpu3 = ptrtoint float* %z_outputFromGpu to i64
  %z2 = ptrtoint float* %z to i64
  %0 = ptrtoint float* undef to i64
  %1 = ptrtoint float* undef to i64
  %2 = ptrtoint float* undef to i64
  %3 = ptrtoint float* undef to i64
  %4 = ptrtoint float* undef to i64
  %5 = ptrtoint float* undef to i64
  %6 = ptrtoint float* undef to i64
  %7 = ptrtoint float* undef to i64
  %8 = add i64 %z2, 32768, !dbg !156
  %9 = add i64 %z_outputFromGpu3, 32768, !dbg !156
  %10 = add i64 %z2, 32768, !dbg !159
  %11 = add i64 %z_outputFromGpu3, 32768, !dbg !159
  %12 = add i64 %z2, 32768, !dbg !159
  %13 = add i64 %z_outputFromGpu3, 32768, !dbg !159
  %14 = add i64 %z2, 32768, !dbg !156
  %15 = add i64 %z_outputFromGpu3, 32768, !dbg !156
  %16 = add i64 %z2, 32768, !dbg !156
  %17 = add i64 %z_outputFromGpu3, 32768, !dbg !156
  br label %for.cond, !dbg !162

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc7, %for.inc ]
  %fail.0 = phi i32 [ 0, %entry ], [ %fail.1, %for.inc ]
  %cmp = icmp slt i32 %i.0, 8192, !dbg !156
  br i1 %cmp, label %for.body, label %for.end, !dbg !163

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !159
  %arrayidx = getelementptr inbounds float, float* %z, i64 %idxprom, !dbg !159
  %tmp = load float, float* %arrayidx, align 4, !dbg !159
  %conv = fpext float %tmp to double, !dbg !159
  %idxprom1 = sext i32 %i.0 to i64, !dbg !164
  %arrayidx2 = getelementptr inbounds float, float* %z_outputFromGpu, i64 %idxprom1, !dbg !164
  %tmp1 = load float, float* %arrayidx2, align 4, !dbg !164
  %conv3 = fpext float %tmp1 to double, !dbg !164
  %call = call float @percentDiff(double %conv, double %conv3), !dbg !165
  %conv4 = fpext float %call to double, !dbg !165
  %cmp5 = fcmp ogt double %conv4, 5.000000e-01, !dbg !166
  br i1 %cmp5, label %if.then, label %if.end, !dbg !167

if.then:                                          ; preds = %for.body
  %inc = add nsw i32 %fail.0, 1, !dbg !168
  br label %if.end, !dbg !170

if.end:                                           ; preds = %if.then, %for.body
  %fail.1 = phi i32 [ %inc, %if.then ], [ %fail.0, %for.body ]
  br label %for.inc, !dbg !171

for.inc:                                          ; preds = %if.end
  %inc7 = add nsw i32 %i.0, 1, !dbg !172
  br label %for.cond, !dbg !173

for.end:                                          ; preds = %for.cond
  %fail.0.lcssa = phi i32 [ %fail.0, %for.cond ]
  %call8 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i32 0, i32 0), double 5.000000e-01, i32 %fail.0.lcssa), !dbg !174
  ret void, !dbg !175
}

; Function Attrs: nounwind uwtable
define void @atax_cpu(float* %A, float* %x, float* %y, float* %tmp) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !176, metadata !43), !dbg !177
  call void @llvm.dbg.value(metadata float* %A, i64 0, metadata !178, metadata !43), !dbg !179
  call void @llvm.dbg.value(metadata float* %x, i64 0, metadata !180, metadata !43), !dbg !181
  call void @llvm.dbg.value(metadata float* %y, i64 0, metadata !182, metadata !43), !dbg !183
  call void @llvm.dbg.value(metadata float* %tmp, i64 0, metadata !184, metadata !43), !dbg !185
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !176, metadata !43), !dbg !177
  %A17 = ptrtoint float* %A to i64
  %tmp12 = ptrtoint float* %tmp to i64
  %x8 = ptrtoint float* %x to i64
  %0 = ptrtoint float* undef to i64
  %1 = ptrtoint float* undef to i64
  %2 = ptrtoint float* undef to i64
  %3 = ptrtoint float* undef to i64
  %4 = ptrtoint float* undef to i64
  %y7 = ptrtoint float* %y to i64
  %5 = ptrtoint float* undef to i64
  %6 = ptrtoint float* undef to i64
  %7 = ptrtoint float* undef to i64
  %8 = ptrtoint float* undef to i64
  %9 = ptrtoint float* undef to i64
  %10 = ptrtoint float* undef to i64
  %11 = ptrtoint float* undef to i64
  %12 = ptrtoint float* undef to i64
  %13 = ptrtoint float* undef to i64
  %14 = ptrtoint float* undef to i64
  %15 = ptrtoint float* undef to i64
  %16 = ptrtoint float* undef to i64
  %17 = ptrtoint float* undef to i64
  %18 = ptrtoint float* undef to i64
  %19 = ptrtoint float* undef to i64
  %20 = ptrtoint float* undef to i64
  %21 = ptrtoint float* undef to i64
  %22 = ptrtoint float* undef to i64
  %23 = ptrtoint float* undef to i64
  %24 = ptrtoint float* undef to i64
  %25 = ptrtoint float* undef to i64
  %26 = ptrtoint float* undef to i64
  %27 = ptrtoint float* undef to i64
  %28 = ptrtoint float* undef to i64
  %29 = ptrtoint float* undef to i64
  %30 = ptrtoint float* undef to i64
  %31 = ptrtoint float* undef to i64
  %32 = ptrtoint float* undef to i64
  %33 = ptrtoint float* undef to i64
  %34 = ptrtoint float* undef to i64
  %35 = add i64 %y7, 32768, !dbg !186
  %36 = add i64 %y7, 32768, !dbg !186
  %37 = add i64 %y7, 32768, !dbg !186
  br label %for.cond, !dbg !189

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, 8192, !dbg !186
  br i1 %cmp, label %for.body, label %for.end, !dbg !190

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !191
  %arrayidx = getelementptr inbounds float, float* %y, i64 %idxprom, !dbg !191
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !193
  br label %for.inc, !dbg !194

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !195
  br label %for.cond, !dbg !196

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 %inc22, i64 0, metadata !197, metadata !43), !dbg !198
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !197, metadata !43), !dbg !198
  call void @llvm.dbg.value(metadata i32 %inc40, i64 0, metadata !197, metadata !43), !dbg !198
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !197, metadata !43), !dbg !198
  call void @llvm.dbg.value(metadata i32 %inc43, i64 0, metadata !176, metadata !43), !dbg !177
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !176, metadata !43), !dbg !177
  %38 = add i64 %x8, 32768, !dbg !199
  %39 = add i64 %y7, 32768, !dbg !199
  %40 = add i64 %tmp12, 32768, !dbg !199
  %41 = add i64 %A17, 268435456, !dbg !199
  %42 = add i64 %41, 32768, !dbg !199
  %43 = add i64 %41, 32768, !dbg !199
  %44 = add i64 %x8, 32768, !dbg !199
  %45 = add i64 %y7, 32768, !dbg !199
  %46 = add i64 %tmp12, 32768, !dbg !199
  %47 = add i64 %A17, 268435456, !dbg !199
  %48 = add i64 %47, 32768, !dbg !199
  %49 = add i64 %47, 32768, !dbg !199
  %50 = add i64 %x8, 32768, !dbg !202
  %51 = add i64 %tmp12, 32768, !dbg !202
  %52 = add i64 %A17, 268435456, !dbg !202
  %53 = add i64 %52, 32768, !dbg !202
  %54 = add i64 %x8, 32768, !dbg !199
  %55 = add i64 %y7, 32768, !dbg !199
  %56 = add i64 %tmp12, 32768, !dbg !199
  %57 = add i64 %A17, 268435456, !dbg !199
  %58 = add i64 %57, 32768, !dbg !199
  %59 = add i64 %57, 32768, !dbg !199
  %60 = add i64 %y7, 32768, !dbg !206
  %61 = add i64 %tmp12, 32768, !dbg !206
  %62 = add i64 %A17, 268435456, !dbg !206
  %63 = add i64 %62, 32768, !dbg !206
  %64 = add i64 %x8, 32768, !dbg !199
  %65 = add i64 %y7, 32768, !dbg !199
  %66 = add i64 %tmp12, 32768, !dbg !199
  %67 = add i64 %A17, 268435456, !dbg !199
  %68 = add i64 %67, 32768, !dbg !199
  %69 = add i64 %67, 32768, !dbg !199
  %70 = add i64 %x8, 32768, !dbg !199
  %71 = add i64 %y7, 32768, !dbg !199
  %72 = add i64 %tmp12, 32768, !dbg !199
  %73 = add i64 %A17, 268435456, !dbg !199
  %74 = add i64 %73, 32768, !dbg !199
  %75 = add i64 %73, 32768, !dbg !199
  %76 = add i64 %y7, 32768, !dbg !206
  %77 = add i64 %tmp12, 32768, !dbg !206
  %78 = add i64 %A17, 268435456, !dbg !206
  %79 = add i64 %78, 32768, !dbg !206
  %80 = add i64 %y7, 32768, !dbg !206
  %81 = add i64 %tmp12, 32768, !dbg !206
  %82 = add i64 %A17, 268435456, !dbg !206
  %83 = add i64 %82, 32768, !dbg !206
  %84 = add i64 %x8, 32768, !dbg !202
  %85 = add i64 %tmp12, 32768, !dbg !202
  %86 = add i64 %A17, 268435456, !dbg !202
  %87 = add i64 %86, 32768, !dbg !202
  %88 = add i64 %x8, 32768, !dbg !202
  %89 = add i64 %tmp12, 32768, !dbg !202
  %90 = add i64 %A17, 268435456, !dbg !202
  %91 = add i64 %90, 32768, !dbg !202
  br label %for.cond.3, !dbg !209

for.cond.3:                                       ; preds = %for.inc.42, %for.end
  %i.1 = phi i32 [ 0, %for.end ], [ %inc43, %for.inc.42 ]
  %92 = icmp ult float* %y, %y, !dbg !199
  %umin53 = select i1 %92, float* %y, float* %y, !dbg !199
  %93 = icmp ugt i64 %71, %71, !dbg !199
  %umax54 = select i1 %93, i64 %71, i64 %71, !dbg !199
  %94 = icmp ult float* %tmp, %tmp, !dbg !199
  %umin55 = select i1 %94, float* %tmp, float* %tmp, !dbg !199
  %95 = icmp ult float* %tmp, %umin55, !dbg !199
  %umin56 = select i1 %95, float* %tmp, float* %umin55, !dbg !199
  %96 = icmp ult float* %tmp, %umin56, !dbg !199
  %umin57 = select i1 %96, float* %tmp, float* %umin56, !dbg !199
  %97 = icmp ugt i64 %72, %72, !dbg !199
  %umax58 = select i1 %97, i64 %72, i64 %72, !dbg !199
  %98 = icmp ugt i64 %72, %umax58, !dbg !199
  %umax59 = select i1 %98, i64 %72, i64 %umax58, !dbg !199
  %99 = icmp ugt i64 %72, %umax59, !dbg !199
  %umax60 = select i1 %99, i64 %72, i64 %umax59, !dbg !199
  %100 = icmp ult float* %A, %A, !dbg !199
  %umin61 = select i1 %100, float* %A, float* %A, !dbg !199
  %101 = icmp ugt i64 %75, %74, !dbg !199
  %umax62 = select i1 %101, i64 %75, i64 %74, !dbg !199
  %102 = icmp ult float* %y, %y, !dbg !199
  %umin43 = select i1 %102, float* %y, float* %y, !dbg !199
  %103 = icmp ugt i64 %65, %65, !dbg !199
  %umax44 = select i1 %103, i64 %65, i64 %65, !dbg !199
  %104 = icmp ult float* %tmp, %tmp, !dbg !199
  %umin45 = select i1 %104, float* %tmp, float* %tmp, !dbg !199
  %105 = icmp ult float* %tmp, %umin45, !dbg !199
  %umin46 = select i1 %105, float* %tmp, float* %umin45, !dbg !199
  %106 = icmp ult float* %tmp, %umin46, !dbg !199
  %umin47 = select i1 %106, float* %tmp, float* %umin46, !dbg !199
  %107 = icmp ugt i64 %66, %66, !dbg !199
  %umax48 = select i1 %107, i64 %66, i64 %66, !dbg !199
  %108 = icmp ugt i64 %66, %umax48, !dbg !199
  %umax49 = select i1 %108, i64 %66, i64 %umax48, !dbg !199
  %109 = icmp ugt i64 %66, %umax49, !dbg !199
  %umax50 = select i1 %109, i64 %66, i64 %umax49, !dbg !199
  %110 = icmp ult float* %A, %A, !dbg !199
  %umin51 = select i1 %110, float* %A, float* %A, !dbg !199
  %111 = icmp ugt i64 %69, %68, !dbg !199
  %umax52 = select i1 %111, i64 %69, i64 %68, !dbg !199
  %112 = icmp ult float* %y, %y, !dbg !199
  %umin31 = select i1 %112, float* %y, float* %y, !dbg !199
  %113 = icmp ugt i64 %55, %55, !dbg !199
  %umax32 = select i1 %113, i64 %55, i64 %55, !dbg !199
  %114 = icmp ult float* %tmp, %tmp, !dbg !199
  %umin33 = select i1 %114, float* %tmp, float* %tmp, !dbg !199
  %115 = icmp ult float* %tmp, %umin33, !dbg !199
  %umin34 = select i1 %115, float* %tmp, float* %umin33, !dbg !199
  %116 = icmp ult float* %tmp, %umin34, !dbg !199
  %umin35 = select i1 %116, float* %tmp, float* %umin34, !dbg !199
  %117 = icmp ugt i64 %56, %56, !dbg !199
  %umax36 = select i1 %117, i64 %56, i64 %56, !dbg !199
  %118 = icmp ugt i64 %56, %umax36, !dbg !199
  %umax37 = select i1 %118, i64 %56, i64 %umax36, !dbg !199
  %119 = icmp ugt i64 %56, %umax37, !dbg !199
  %umax38 = select i1 %119, i64 %56, i64 %umax37, !dbg !199
  %120 = icmp ult float* %A, %A, !dbg !199
  %umin39 = select i1 %120, float* %A, float* %A, !dbg !199
  %121 = icmp ugt i64 %59, %58, !dbg !199
  %umax40 = select i1 %121, i64 %59, i64 %58, !dbg !199
  %122 = icmp ult float* %y, %y, !dbg !199
  %umin19 = select i1 %122, float* %y, float* %y, !dbg !199
  %123 = icmp ugt i64 %45, %45, !dbg !199
  %umax20 = select i1 %123, i64 %45, i64 %45, !dbg !199
  %124 = icmp ult float* %tmp, %tmp, !dbg !199
  %umin21 = select i1 %124, float* %tmp, float* %tmp, !dbg !199
  %125 = icmp ult float* %tmp, %umin21, !dbg !199
  %umin22 = select i1 %125, float* %tmp, float* %umin21, !dbg !199
  %126 = icmp ult float* %tmp, %umin22, !dbg !199
  %umin23 = select i1 %126, float* %tmp, float* %umin22, !dbg !199
  %127 = icmp ugt i64 %46, %46, !dbg !199
  %umax24 = select i1 %127, i64 %46, i64 %46, !dbg !199
  %128 = icmp ugt i64 %46, %umax24, !dbg !199
  %umax25 = select i1 %128, i64 %46, i64 %umax24, !dbg !199
  %129 = icmp ugt i64 %46, %umax25, !dbg !199
  %umax26 = select i1 %129, i64 %46, i64 %umax25, !dbg !199
  %130 = icmp ult float* %A, %A, !dbg !199
  %umin27 = select i1 %130, float* %A, float* %A, !dbg !199
  %131 = icmp ugt i64 %49, %48, !dbg !199
  %umax28 = select i1 %131, i64 %49, i64 %48, !dbg !199
  %132 = icmp ult float* %y, %y, !dbg !199
  %umin = select i1 %132, float* %y, float* %y, !dbg !199
  %133 = icmp ugt i64 %39, %39, !dbg !199
  %umax = select i1 %133, i64 %39, i64 %39, !dbg !199
  %134 = icmp ult float* %tmp, %tmp, !dbg !199
  %umin9 = select i1 %134, float* %tmp, float* %tmp, !dbg !199
  %135 = icmp ult float* %tmp, %umin9, !dbg !199
  %umin10 = select i1 %135, float* %tmp, float* %umin9, !dbg !199
  %136 = icmp ult float* %tmp, %umin10, !dbg !199
  %umin11 = select i1 %136, float* %tmp, float* %umin10, !dbg !199
  %137 = icmp ugt i64 %40, %40, !dbg !199
  %umax13 = select i1 %137, i64 %40, i64 %40, !dbg !199
  %138 = icmp ugt i64 %40, %umax13, !dbg !199
  %umax14 = select i1 %138, i64 %40, i64 %umax13, !dbg !199
  %139 = icmp ugt i64 %40, %umax14, !dbg !199
  %umax15 = select i1 %139, i64 %40, i64 %umax14, !dbg !199
  %140 = icmp ult float* %A, %A, !dbg !199
  %umin16 = select i1 %140, float* %A, float* %A, !dbg !199
  %141 = icmp ugt i64 %43, %42, !dbg !199
  %umax18 = select i1 %141, i64 %43, i64 %42, !dbg !199
  %cmp4 = icmp slt i32 %i.1, 8192, !dbg !199
  br i1 %cmp4, label %for.body.5, label %for.end.44, !dbg !210

for.body.5:                                       ; preds = %for.cond.3
  %idxprom6 = sext i32 %i.1 to i64, !dbg !211
  %arrayidx7 = getelementptr inbounds float, float* %tmp, i64 %idxprom6, !dbg !211
  store float 0.000000e+00, float* %arrayidx7, align 4, !dbg !212
  br label %for.cond.8, !dbg !213

for.cond.8:                                       ; preds = %for.inc.21, %for.body.5
  %j.0 = phi i32 [ 0, %for.body.5 ], [ %inc22, %for.inc.21 ]
  %142 = icmp ult float* %tmp, %tmp, !dbg !202
  %umin69 = select i1 %142, float* %tmp, float* %tmp, !dbg !202
  %143 = icmp ugt i64 %89, %89, !dbg !202
  %umax70 = select i1 %143, i64 %89, i64 %89, !dbg !202
  %144 = icmp ult float* %tmp, %tmp, !dbg !202
  %umin67 = select i1 %144, float* %tmp, float* %tmp, !dbg !202
  %145 = icmp ugt i64 %85, %85, !dbg !202
  %umax68 = select i1 %145, i64 %85, i64 %85, !dbg !202
  %146 = icmp ult float* %tmp, %tmp, !dbg !202
  %umin29 = select i1 %146, float* %tmp, float* %tmp, !dbg !202
  %147 = icmp ugt i64 %51, %51, !dbg !202
  %umax30 = select i1 %147, i64 %51, i64 %51, !dbg !202
  %cmp9 = icmp slt i32 %j.0, 8192, !dbg !202
  br i1 %cmp9, label %for.body.10, label %for.end.23, !dbg !214

for.body.10:                                      ; preds = %for.cond.8
  %idxprom11 = sext i32 %i.1 to i64, !dbg !215
  %arrayidx12 = getelementptr inbounds float, float* %tmp, i64 %idxprom11, !dbg !215
  %tmp1 = load float, float* %arrayidx12, align 4, !dbg !215
  %mul = mul nsw i32 %i.1, 8192, !dbg !217
  %add = add nsw i32 %mul, %j.0, !dbg !218
  %idxprom13 = sext i32 %add to i64, !dbg !219
  %arrayidx14 = getelementptr inbounds float, float* %A, i64 %idxprom13, !dbg !219
  %tmp2 = load float, float* %arrayidx14, align 4, !dbg !219
  %idxprom15 = sext i32 %j.0 to i64, !dbg !220
  %arrayidx16 = getelementptr inbounds float, float* %x, i64 %idxprom15, !dbg !220
  %tmp3 = load float, float* %arrayidx16, align 4, !dbg !220
  %mul17 = fmul float %tmp2, %tmp3, !dbg !221
  %add18 = fadd float %tmp1, %mul17, !dbg !222
  %idxprom19 = sext i32 %i.1 to i64, !dbg !223
  %arrayidx20 = getelementptr inbounds float, float* %tmp, i64 %idxprom19, !dbg !223
  store float %add18, float* %arrayidx20, align 4, !dbg !224
  br label %for.inc.21, !dbg !225

for.inc.21:                                       ; preds = %for.body.10
  %inc22 = add nsw i32 %j.0, 1, !dbg !226
  br label %for.cond.8, !dbg !227

for.end.23:                                       ; preds = %for.cond.8
  br label %for.cond.24, !dbg !228

for.cond.24:                                      ; preds = %for.inc.39, %for.end.23
  %j.1 = phi i32 [ 0, %for.end.23 ], [ %inc40, %for.inc.39 ]
  %148 = icmp ult float* %y, %y, !dbg !206
  %umin65 = select i1 %148, float* %y, float* %y, !dbg !206
  %149 = icmp ugt i64 %80, %80, !dbg !206
  %umax66 = select i1 %149, i64 %80, i64 %80, !dbg !206
  %150 = icmp ult float* %y, %y, !dbg !206
  %umin63 = select i1 %150, float* %y, float* %y, !dbg !206
  %151 = icmp ugt i64 %76, %76, !dbg !206
  %umax64 = select i1 %151, i64 %76, i64 %76, !dbg !206
  %152 = icmp ult float* %y, %y, !dbg !206
  %umin41 = select i1 %152, float* %y, float* %y, !dbg !206
  %153 = icmp ugt i64 %60, %60, !dbg !206
  %umax42 = select i1 %153, i64 %60, i64 %60, !dbg !206
  %cmp25 = icmp slt i32 %j.1, 8192, !dbg !206
  br i1 %cmp25, label %for.body.26, label %for.end.41, !dbg !229

for.body.26:                                      ; preds = %for.cond.24
  %idxprom27 = sext i32 %j.1 to i64, !dbg !230
  %arrayidx28 = getelementptr inbounds float, float* %y, i64 %idxprom27, !dbg !230
  %tmp4 = load float, float* %arrayidx28, align 4, !dbg !230
  %mul29 = mul nsw i32 %i.1, 8192, !dbg !232
  %add30 = add nsw i32 %mul29, %j.1, !dbg !233
  %idxprom31 = sext i32 %add30 to i64, !dbg !234
  %arrayidx32 = getelementptr inbounds float, float* %A, i64 %idxprom31, !dbg !234
  %tmp5 = load float, float* %arrayidx32, align 4, !dbg !234
  %idxprom33 = sext i32 %i.1 to i64, !dbg !235
  %arrayidx34 = getelementptr inbounds float, float* %tmp, i64 %idxprom33, !dbg !235
  %tmp6 = load float, float* %arrayidx34, align 4, !dbg !235
  %mul35 = fmul float %tmp5, %tmp6, !dbg !236
  %add36 = fadd float %tmp4, %mul35, !dbg !237
  %idxprom37 = sext i32 %j.1 to i64, !dbg !238
  %arrayidx38 = getelementptr inbounds float, float* %y, i64 %idxprom37, !dbg !238
  store float %add36, float* %arrayidx38, align 4, !dbg !239
  br label %for.inc.39, !dbg !240

for.inc.39:                                       ; preds = %for.body.26
  %inc40 = add nsw i32 %j.1, 1, !dbg !241
  br label %for.cond.24, !dbg !242

for.end.41:                                       ; preds = %for.cond.24
  br label %for.inc.42, !dbg !243

for.inc.42:                                       ; preds = %for.end.41
  %inc43 = add nsw i32 %i.1, 1, !dbg !244
  br label %for.cond.3, !dbg !245

for.end.44:                                       ; preds = %for.cond.3
  ret void, !dbg !246
}

; Function Attrs: nounwind uwtable
define void @atax_OMP(float* %A, float* %x, float* %y, float* %tmp) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !247, metadata !43), !dbg !248
  call void @llvm.dbg.value(metadata float* %A, i64 0, metadata !249, metadata !43), !dbg !250
  call void @llvm.dbg.value(metadata float* %x, i64 0, metadata !251, metadata !43), !dbg !252
  call void @llvm.dbg.value(metadata float* %y, i64 0, metadata !253, metadata !43), !dbg !254
  call void @llvm.dbg.value(metadata float* %tmp, i64 0, metadata !255, metadata !43), !dbg !256
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !247, metadata !43), !dbg !248
  %tmp11 = ptrtoint float* %tmp to i64
  %y7 = ptrtoint float* %y to i64
  %A8 = ptrtoint float* %A to i64
  %0 = ptrtoint float* undef to i64
  %1 = ptrtoint float* undef to i64
  %2 = ptrtoint float* undef to i64
  %3 = ptrtoint float* undef to i64
  %4 = ptrtoint float* undef to i64
  %5 = ptrtoint float* undef to i64
  %6 = ptrtoint float* undef to i64
  %7 = ptrtoint float* undef to i64
  %8 = ptrtoint float* undef to i64
  %9 = ptrtoint float* undef to i64
  %10 = ptrtoint float* undef to i64
  %11 = ptrtoint float* undef to i64
  %12 = ptrtoint float* undef to i64
  %13 = ptrtoint float* undef to i64
  %14 = ptrtoint float* undef to i64
  %15 = ptrtoint float* undef to i64
  %16 = ptrtoint float* undef to i64
  %17 = ptrtoint float* undef to i64
  %18 = ptrtoint float* undef to i64
  %x9 = ptrtoint float* %x to i64
  %19 = ptrtoint float* undef to i64
  %20 = ptrtoint float* undef to i64
  %21 = ptrtoint float* undef to i64
  %22 = ptrtoint float* undef to i64
  %23 = ptrtoint float* undef to i64
  %24 = ptrtoint float* undef to i64
  %25 = ptrtoint float* undef to i64
  %26 = ptrtoint float* undef to i64
  %27 = ptrtoint float* undef to i64
  %28 = ptrtoint float* undef to i64
  %29 = ptrtoint float* undef to i64
  %30 = ptrtoint float* undef to i64
  %31 = ptrtoint float* undef to i64
  %32 = ptrtoint float* undef to i64
  %33 = ptrtoint float* undef to i64
  %34 = ptrtoint float* undef to i64
  %35 = ptrtoint float* undef to i64
  %36 = ptrtoint float* undef to i64
  %37 = ptrtoint float* undef to i64
  %38 = ptrtoint float* undef to i64
  %39 = add i64 %y7, 32768, !dbg !257
  %40 = add i64 %y7, 32768, !dbg !257
  %41 = add i64 %y7, 32768, !dbg !257
  br label %for.cond, !dbg !260

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, 8192, !dbg !257
  br i1 %cmp, label %for.body, label %for.end, !dbg !261

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !262
  %arrayidx = getelementptr inbounds float, float* %y, i64 %idxprom, !dbg !262
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !264
  br label %for.inc, !dbg !265

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !266
  br label %for.cond, !dbg !267

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !268, metadata !43), !dbg !272
  call void @llvm.dbg.value(metadata i32 %inc27, i64 0, metadata !247, metadata !43), !dbg !248
  call void @llvm.dbg.value(metadata i32 %inc24, i64 0, metadata !268, metadata !43), !dbg !272
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !247, metadata !43), !dbg !248
  %42 = add i64 %A8, 268435456, !dbg !273
  %43 = add i64 %42, 32768, !dbg !273
  %44 = add i64 %x9, 32768, !dbg !273
  %45 = add i64 %tmp11, 32768, !dbg !273
  %46 = add i64 %A8, 268435456, !dbg !273
  %47 = add i64 %46, 32768, !dbg !273
  %48 = add i64 %x9, 32768, !dbg !273
  %49 = add i64 %tmp11, 32768, !dbg !273
  %50 = add i64 %A8, 268435456, !dbg !274
  %51 = add i64 %50, 32768, !dbg !274
  %52 = add i64 %x9, 32768, !dbg !274
  %53 = add i64 %tmp11, 32768, !dbg !274
  %54 = add i64 %A8, 268435456, !dbg !273
  %55 = add i64 %54, 32768, !dbg !273
  %56 = add i64 %x9, 32768, !dbg !273
  %57 = add i64 %tmp11, 32768, !dbg !273
  %58 = add i64 %A8, 268435456, !dbg !273
  %59 = add i64 %58, 32768, !dbg !273
  %60 = add i64 %x9, 32768, !dbg !273
  %61 = add i64 %tmp11, 32768, !dbg !273
  %62 = add i64 %A8, 268435456, !dbg !274
  %63 = add i64 %62, 32768, !dbg !274
  %64 = add i64 %x9, 32768, !dbg !274
  %65 = add i64 %tmp11, 32768, !dbg !274
  %66 = add i64 %A8, 268435456, !dbg !274
  %67 = add i64 %66, 32768, !dbg !274
  %68 = add i64 %x9, 32768, !dbg !274
  %69 = add i64 %tmp11, 32768, !dbg !274
  br label %for.cond.3, !dbg !277

for.cond.3:                                       ; preds = %for.inc.26, %for.end
  %i.1 = phi i32 [ 0, %for.end ], [ %inc27, %for.inc.26 ]
  %70 = icmp ult float* %tmp, %tmp, !dbg !273
  %umin23 = select i1 %70, float* %tmp, float* %tmp, !dbg !273
  %71 = icmp ult float* %tmp, %umin23, !dbg !273
  %umin24 = select i1 %71, float* %tmp, float* %umin23, !dbg !273
  %72 = icmp ugt i64 %61, %61, !dbg !273
  %umax25 = select i1 %72, i64 %61, i64 %61, !dbg !273
  %73 = icmp ugt i64 %61, %umax25, !dbg !273
  %umax26 = select i1 %73, i64 %61, i64 %umax25, !dbg !273
  %74 = icmp ult float* %tmp, %tmp, !dbg !273
  %umin19 = select i1 %74, float* %tmp, float* %tmp, !dbg !273
  %75 = icmp ult float* %tmp, %umin19, !dbg !273
  %umin20 = select i1 %75, float* %tmp, float* %umin19, !dbg !273
  %76 = icmp ugt i64 %57, %57, !dbg !273
  %umax21 = select i1 %76, i64 %57, i64 %57, !dbg !273
  %77 = icmp ugt i64 %57, %umax21, !dbg !273
  %umax22 = select i1 %77, i64 %57, i64 %umax21, !dbg !273
  %78 = icmp ult float* %tmp, %tmp, !dbg !273
  %umin13 = select i1 %78, float* %tmp, float* %tmp, !dbg !273
  %79 = icmp ult float* %tmp, %umin13, !dbg !273
  %umin14 = select i1 %79, float* %tmp, float* %umin13, !dbg !273
  %80 = icmp ugt i64 %49, %49, !dbg !273
  %umax15 = select i1 %80, i64 %49, i64 %49, !dbg !273
  %81 = icmp ugt i64 %49, %umax15, !dbg !273
  %umax16 = select i1 %81, i64 %49, i64 %umax15, !dbg !273
  %82 = icmp ult float* %tmp, %tmp, !dbg !273
  %umin = select i1 %82, float* %tmp, float* %tmp, !dbg !273
  %83 = icmp ult float* %tmp, %umin, !dbg !273
  %umin10 = select i1 %83, float* %tmp, float* %umin, !dbg !273
  %84 = icmp ugt i64 %45, %45, !dbg !273
  %umax = select i1 %84, i64 %45, i64 %45, !dbg !273
  %85 = icmp ugt i64 %45, %umax, !dbg !273
  %umax12 = select i1 %85, i64 %45, i64 %umax, !dbg !273
  %cmp4 = icmp slt i32 %i.1, 8192, !dbg !273
  br i1 %cmp4, label %for.body.5, label %for.end.28, !dbg !278

for.body.5:                                       ; preds = %for.cond.3
  %idxprom6 = sext i32 %i.1 to i64, !dbg !279
  %arrayidx7 = getelementptr inbounds float, float* %tmp, i64 %idxprom6, !dbg !279
  store float 0.000000e+00, float* %arrayidx7, align 4, !dbg !280
  br label %for.cond.10, !dbg !281

for.cond.10:                                      ; preds = %for.inc.23, %for.body.5
  %j9.0 = phi i32 [ 0, %for.body.5 ], [ %inc24, %for.inc.23 ]
  %86 = icmp ult float* %tmp, %tmp, !dbg !274
  %umin29 = select i1 %86, float* %tmp, float* %tmp, !dbg !274
  %87 = icmp ugt i64 %69, %69, !dbg !274
  %umax30 = select i1 %87, i64 %69, i64 %69, !dbg !274
  %88 = icmp ult float* %tmp, %tmp, !dbg !274
  %umin27 = select i1 %88, float* %tmp, float* %tmp, !dbg !274
  %89 = icmp ugt i64 %65, %65, !dbg !274
  %umax28 = select i1 %89, i64 %65, i64 %65, !dbg !274
  %90 = icmp ult float* %tmp, %tmp, !dbg !274
  %umin17 = select i1 %90, float* %tmp, float* %tmp, !dbg !274
  %91 = icmp ugt i64 %53, %53, !dbg !274
  %umax18 = select i1 %91, i64 %53, i64 %53, !dbg !274
  %cmp11 = icmp slt i32 %j9.0, 8192, !dbg !274
  br i1 %cmp11, label %for.body.12, label %for.end.25, !dbg !282

for.body.12:                                      ; preds = %for.cond.10
  %idxprom13 = sext i32 %i.1 to i64, !dbg !283
  %arrayidx14 = getelementptr inbounds float, float* %tmp, i64 %idxprom13, !dbg !283
  %tmp1 = load float, float* %arrayidx14, align 4, !dbg !283
  %mul = mul nsw i32 %i.1, 8192, !dbg !285
  %add = add nsw i32 %mul, %j9.0, !dbg !286
  %idxprom15 = sext i32 %add to i64, !dbg !287
  %arrayidx16 = getelementptr inbounds float, float* %A, i64 %idxprom15, !dbg !287
  %tmp2 = load float, float* %arrayidx16, align 4, !dbg !287
  %idxprom17 = sext i32 %j9.0 to i64, !dbg !288
  %arrayidx18 = getelementptr inbounds float, float* %x, i64 %idxprom17, !dbg !288
  %tmp3 = load float, float* %arrayidx18, align 4, !dbg !288
  %mul19 = fmul float %tmp2, %tmp3, !dbg !289
  %add20 = fadd float %tmp1, %mul19, !dbg !290
  %idxprom21 = sext i32 %i.1 to i64, !dbg !291
  %arrayidx22 = getelementptr inbounds float, float* %tmp, i64 %idxprom21, !dbg !291
  store float %add20, float* %arrayidx22, align 4, !dbg !292
  br label %for.inc.23, !dbg !293

for.inc.23:                                       ; preds = %for.body.12
  %inc24 = add nsw i32 %j9.0, 1, !dbg !294
  br label %for.cond.10, !dbg !295

for.end.25:                                       ; preds = %for.cond.10
  br label %for.inc.26, !dbg !296

for.inc.26:                                       ; preds = %for.end.25
  %inc27 = add nsw i32 %i.1, 1, !dbg !297
  br label %for.cond.3, !dbg !298

for.end.28:                                       ; preds = %for.cond.3
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !247, metadata !43), !dbg !248
  call void @llvm.dbg.value(metadata i32 %inc51, i64 0, metadata !299, metadata !43), !dbg !300
  call void @llvm.dbg.value(metadata i32 %inc48, i64 0, metadata !247, metadata !43), !dbg !248
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !299, metadata !43), !dbg !300
  %92 = add i64 %A8, 32768, !dbg !301
  %93 = add i64 %92, 268435456, !dbg !301
  %94 = add i64 %y7, 32768, !dbg !301
  %95 = add i64 %tmp11, 32768, !dbg !301
  %96 = add i64 %A8, 32768, !dbg !301
  %97 = add i64 %96, 268435456, !dbg !301
  %98 = add i64 %y7, 32768, !dbg !301
  %99 = add i64 %tmp11, 32768, !dbg !301
  %100 = add i64 %A8, 32768, !dbg !304
  %101 = add i64 %100, 268435456, !dbg !304
  %102 = add i64 %y7, 32768, !dbg !304
  %103 = add i64 %tmp11, 32768, !dbg !304
  %104 = add i64 %A8, 32768, !dbg !301
  %105 = add i64 %104, 268435456, !dbg !301
  %106 = add i64 %y7, 32768, !dbg !301
  %107 = add i64 %tmp11, 32768, !dbg !301
  %108 = add i64 %A8, 32768, !dbg !301
  %109 = add i64 %108, 268435456, !dbg !301
  %110 = add i64 %y7, 32768, !dbg !301
  %111 = add i64 %tmp11, 32768, !dbg !301
  %112 = add i64 %A8, 32768, !dbg !304
  %113 = add i64 %112, 268435456, !dbg !304
  %114 = add i64 %y7, 32768, !dbg !304
  %115 = add i64 %tmp11, 32768, !dbg !304
  %116 = add i64 %A8, 32768, !dbg !304
  %117 = add i64 %116, 268435456, !dbg !304
  %118 = add i64 %y7, 32768, !dbg !304
  %119 = add i64 %tmp11, 32768, !dbg !304
  br label %for.cond.29, !dbg !307

for.cond.29:                                      ; preds = %for.inc.50, %for.end.28
  %j.0 = phi i32 [ 0, %for.end.28 ], [ %inc51, %for.inc.50 ]
  %120 = icmp ult float* %y, %y, !dbg !301
  %umin39 = select i1 %120, float* %y, float* %y, !dbg !301
  %121 = icmp ugt i64 %110, %110, !dbg !301
  %umax40 = select i1 %121, i64 %110, i64 %110, !dbg !301
  %122 = icmp ult float* %y, %y, !dbg !301
  %umin37 = select i1 %122, float* %y, float* %y, !dbg !301
  %123 = icmp ugt i64 %106, %106, !dbg !301
  %umax38 = select i1 %123, i64 %106, i64 %106, !dbg !301
  %124 = icmp ult float* %y, %y, !dbg !301
  %umin33 = select i1 %124, float* %y, float* %y, !dbg !301
  %125 = icmp ugt i64 %98, %98, !dbg !301
  %umax34 = select i1 %125, i64 %98, i64 %98, !dbg !301
  %126 = icmp ult float* %y, %y, !dbg !301
  %umin31 = select i1 %126, float* %y, float* %y, !dbg !301
  %127 = icmp ugt i64 %94, %94, !dbg !301
  %umax32 = select i1 %127, i64 %94, i64 %94, !dbg !301
  %cmp30 = icmp slt i32 %j.0, 8192, !dbg !301
  br i1 %cmp30, label %for.body.31, label %for.end.52, !dbg !308

for.body.31:                                      ; preds = %for.cond.29
  br label %for.cond.32, !dbg !309

for.cond.32:                                      ; preds = %for.inc.47, %for.body.31
  %i.2 = phi i32 [ 0, %for.body.31 ], [ %inc48, %for.inc.47 ]
  %128 = icmp ult float* %y, %y, !dbg !304
  %umin43 = select i1 %128, float* %y, float* %y, !dbg !304
  %129 = icmp ugt i64 %118, %118, !dbg !304
  %umax44 = select i1 %129, i64 %118, i64 %118, !dbg !304
  %130 = icmp ult float* %y, %y, !dbg !304
  %umin41 = select i1 %130, float* %y, float* %y, !dbg !304
  %131 = icmp ugt i64 %114, %114, !dbg !304
  %umax42 = select i1 %131, i64 %114, i64 %114, !dbg !304
  %132 = icmp ult float* %y, %y, !dbg !304
  %umin35 = select i1 %132, float* %y, float* %y, !dbg !304
  %133 = icmp ugt i64 %102, %102, !dbg !304
  %umax36 = select i1 %133, i64 %102, i64 %102, !dbg !304
  %cmp33 = icmp slt i32 %i.2, 8192, !dbg !304
  br i1 %cmp33, label %for.body.34, label %for.end.49, !dbg !310

for.body.34:                                      ; preds = %for.cond.32
  %idxprom35 = sext i32 %j.0 to i64, !dbg !311
  %arrayidx36 = getelementptr inbounds float, float* %y, i64 %idxprom35, !dbg !311
  %tmp4 = load float, float* %arrayidx36, align 4, !dbg !311
  %mul37 = mul nsw i32 %i.2, 8192, !dbg !314
  %add38 = add nsw i32 %mul37, %j.0, !dbg !315
  %idxprom39 = sext i32 %add38 to i64, !dbg !316
  %arrayidx40 = getelementptr inbounds float, float* %A, i64 %idxprom39, !dbg !316
  %tmp5 = load float, float* %arrayidx40, align 4, !dbg !316
  %idxprom41 = sext i32 %i.2 to i64, !dbg !317
  %arrayidx42 = getelementptr inbounds float, float* %tmp, i64 %idxprom41, !dbg !317
  %tmp6 = load float, float* %arrayidx42, align 4, !dbg !317
  %mul43 = fmul float %tmp5, %tmp6, !dbg !318
  %add44 = fadd float %tmp4, %mul43, !dbg !319
  %idxprom45 = sext i32 %j.0 to i64, !dbg !320
  %arrayidx46 = getelementptr inbounds float, float* %y, i64 %idxprom45, !dbg !320
  store float %add44, float* %arrayidx46, align 4, !dbg !321
  br label %for.inc.47, !dbg !322

for.inc.47:                                       ; preds = %for.body.34
  %inc48 = add nsw i32 %i.2, 1, !dbg !323
  br label %for.cond.32, !dbg !324

for.end.49:                                       ; preds = %for.cond.32
  br label %for.inc.50, !dbg !325

for.inc.50:                                       ; preds = %for.end.49
  %inc51 = add nsw i32 %j.0, 1, !dbg !326
  br label %for.cond.29, !dbg !327

for.end.52:                                       ; preds = %for.cond.29
  ret void, !dbg !328
}

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %argc, i64 0, metadata !329, metadata !43), !dbg !330
  call void @llvm.dbg.value(metadata i8** %argv, i64 0, metadata !331, metadata !43), !dbg !332
  %call = call noalias i8* @malloc(i64 268435456) #4, !dbg !333
  %tmp = bitcast i8* %call to float*, !dbg !334
  call void @llvm.dbg.value(metadata float* %tmp, i64 0, metadata !335, metadata !43), !dbg !336
  %call1 = call noalias i8* @malloc(i64 32768) #4, !dbg !337
  %tmp1 = bitcast i8* %call1 to float*, !dbg !338
  call void @llvm.dbg.value(metadata float* %tmp1, i64 0, metadata !339, metadata !43), !dbg !340
  %call2 = call noalias i8* @malloc(i64 32768) #4, !dbg !341
  %tmp2 = bitcast i8* %call2 to float*, !dbg !342
  call void @llvm.dbg.value(metadata float* %tmp2, i64 0, metadata !343, metadata !43), !dbg !344
  %call3 = call noalias i8* @malloc(i64 32768) #4, !dbg !345
  %tmp3 = bitcast i8* %call3 to float*, !dbg !346
  call void @llvm.dbg.value(metadata float* %tmp3, i64 0, metadata !347, metadata !43), !dbg !348
  %call4 = call noalias i8* @malloc(i64 32768) #4, !dbg !349
  %tmp4 = bitcast i8* %call4 to float*, !dbg !350
  call void @llvm.dbg.value(metadata float* %tmp4, i64 0, metadata !351, metadata !43), !dbg !352
  %tmp5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !353
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp5, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.2, i32 0, i32 0)), !dbg !354
  call void @init_array(float* %tmp1, float* %tmp), !dbg !355
  %call6 = call double @rtclock(), !dbg !356
  call void @llvm.dbg.value(metadata double %call6, i64 0, metadata !357, metadata !43), !dbg !358
  call void @atax_OMP(float* %tmp, float* %tmp1, float* %tmp3, float* %tmp4), !dbg !359
  %call7 = call double @rtclock(), !dbg !360
  call void @llvm.dbg.value(metadata double %call7, i64 0, metadata !361, metadata !43), !dbg !362
  %tmp6 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !363
  %sub = fsub double %call7, %call6, !dbg !364
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp6, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i32 0, i32 0), double %sub), !dbg !365
  %call9 = call double @rtclock(), !dbg !366
  call void @llvm.dbg.value(metadata double %call9, i64 0, metadata !357, metadata !43), !dbg !358
  call void @atax_cpu(float* %tmp, float* %tmp1, float* %tmp2, float* %tmp4), !dbg !367
  %call10 = call double @rtclock(), !dbg !368
  call void @llvm.dbg.value(metadata double %call10, i64 0, metadata !361, metadata !43), !dbg !362
  %tmp7 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !369
  %sub11 = fsub double %call10, %call9, !dbg !370
  %call12 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp7, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i32 0, i32 0), double %sub11), !dbg !371
  call void @compareResults(float* %tmp2, float* %tmp3), !dbg !372
  %tmp8 = bitcast float* %tmp to i8*, !dbg !373
  call void @free(i8* %tmp8) #4, !dbg !374
  %tmp9 = bitcast float* %tmp1 to i8*, !dbg !375
  call void @free(i8* %tmp9) #4, !dbg !376
  %tmp10 = bitcast float* %tmp2 to i8*, !dbg !377
  call void @free(i8* %tmp10) #4, !dbg !378
  %tmp11 = bitcast float* %tmp3 to i8*, !dbg !379
  call void @free(i8* %tmp11) #4, !dbg !380
  %tmp12 = bitcast float* %tmp4 to i8*, !dbg !381
  call void @free(i8* %tmp12) #4, !dbg !382
  ret i32 0, !dbg !383
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #2

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

; Function Attrs: nounwind
declare void @free(i8*) #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!34, !35}
!llvm.ident = !{!36}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !7)
!1 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Polybench/ATAX/src/atax.c", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!2 = !{}
!3 = !{!4, !6}
!4 = !DIDerivedType(tag: DW_TAG_typedef, name: "DATA_TYPE", file: !1, line: 36, baseType: !5)
!5 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64, align: 64)
!7 = !{!8, !13, !16, !19, !22, !23, !26, !27}
!8 = !DISubprogram(name: "rtclock", scope: !9, file: !9, line: 11, type: !10, isLocal: false, isDefinition: true, scopeLine: 12, isOptimized: false, function: double ()* @rtclock, variables: !2)
!9 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Polybench/ATAX/src/../../common/polybenchUtilFuncts.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!10 = !DISubroutineType(types: !11)
!11 = !{!12}
!12 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!13 = !DISubprogram(name: "absVal", scope: !9, file: !9, line: 22, type: !14, isLocal: false, isDefinition: true, scopeLine: 23, flags: DIFlagPrototyped, isOptimized: false, function: float (float)* @absVal, variables: !2)
!14 = !DISubroutineType(types: !15)
!15 = !{!5, !5}
!16 = !DISubprogram(name: "percentDiff", scope: !9, file: !9, line: 36, type: !17, isLocal: false, isDefinition: true, scopeLine: 37, flags: DIFlagPrototyped, isOptimized: false, function: float (double, double)* @percentDiff, variables: !2)
!17 = !DISubroutineType(types: !18)
!18 = !{!5, !12, !12}
!19 = !DISubprogram(name: "init_array", scope: !1, file: !1, line: 38, type: !20, isLocal: false, isDefinition: true, scopeLine: 39, flags: DIFlagPrototyped, isOptimized: false, function: void (float*, float*)* @init_array, variables: !2)
!20 = !DISubroutineType(types: !21)
!21 = !{null, !6, !6}
!22 = !DISubprogram(name: "compareResults", scope: !1, file: !1, line: 52, type: !20, isLocal: false, isDefinition: true, scopeLine: 53, flags: DIFlagPrototyped, isOptimized: false, function: void (float*, float*)* @compareResults, variables: !2)
!23 = !DISubprogram(name: "atax_cpu", scope: !1, file: !1, line: 69, type: !24, isLocal: false, isDefinition: true, scopeLine: 70, flags: DIFlagPrototyped, isOptimized: false, function: void (float*, float*, float*, float*)* @atax_cpu, variables: !2)
!24 = !DISubroutineType(types: !25)
!25 = !{null, !6, !6, !6, !6}
!26 = !DISubprogram(name: "atax_OMP", scope: !1, file: !1, line: 94, type: !24, isLocal: false, isDefinition: true, scopeLine: 95, flags: DIFlagPrototyped, isOptimized: false, function: void (float*, float*, float*, float*)* @atax_OMP, variables: !2)
!27 = !DISubprogram(name: "main", scope: !1, file: !1, line: 127, type: !28, isLocal: false, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i8**)* @main, variables: !2)
!28 = !DISubroutineType(types: !29)
!29 = !{!30, !30, !31}
!30 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!31 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64, align: 64)
!32 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !33, size: 64, align: 64)
!33 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!34 = !{i32 2, !"Dwarf Version", i32 4}
!35 = !{i32 2, !"Debug Info Version", i32 3}
!36 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!37 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Tzp", scope: !8, file: !9, line: 13, type: !38)
!38 = !DICompositeType(tag: DW_TAG_structure_type, name: "timezone", file: !39, line: 57, size: 64, align: 32, elements: !40)
!39 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/time.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!40 = !{!41, !42}
!41 = !DIDerivedType(tag: DW_TAG_member, name: "tz_minuteswest", scope: !38, file: !39, line: 59, baseType: !30, size: 32, align: 32)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "tz_dsttime", scope: !38, file: !39, line: 60, baseType: !30, size: 32, align: 32, offset: 32)
!43 = !DIExpression()
!44 = !DILocation(line: 13, column: 21, scope: !8)
!45 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Tp", scope: !8, file: !9, line: 14, type: !46)
!46 = !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !47, line: 31, size: 128, align: 64, elements: !48)
!47 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!48 = !{!49, !53}
!49 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !46, file: !47, line: 33, baseType: !50, size: 64, align: 64)
!50 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !51, line: 149, baseType: !52)
!51 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!52 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !46, file: !47, line: 34, baseType: !54, size: 64, align: 64, offset: 64)
!54 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !51, line: 151, baseType: !52)
!55 = !DILocation(line: 14, column: 20, scope: !8)
!56 = !DILocation(line: 16, column: 12, scope: !8)
!57 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stat", scope: !8, file: !9, line: 15, type: !30)
!58 = !DILocation(line: 15, column: 9, scope: !8)
!59 = !DILocation(line: 17, column: 14, scope: !60)
!60 = distinct !DILexicalBlock(scope: !8, file: !9, line: 17, column: 9)
!61 = !DILocation(line: 17, column: 9, scope: !8)
!62 = !DILocation(line: 17, column: 20, scope: !60)
!63 = !DILocation(line: 18, column: 15, scope: !8)
!64 = !DILocation(line: 18, column: 12, scope: !8)
!65 = !DILocation(line: 18, column: 27, scope: !8)
!66 = !DILocation(line: 18, column: 24, scope: !8)
!67 = !DILocation(line: 18, column: 34, scope: !8)
!68 = !DILocation(line: 18, column: 22, scope: !8)
!69 = !DILocation(line: 18, column: 5, scope: !8)
!70 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !13, file: !9, line: 22, type: !5)
!71 = !DILocation(line: 22, column: 20, scope: !13)
!72 = !DILocation(line: 24, column: 7, scope: !73)
!73 = distinct !DILexicalBlock(scope: !13, file: !9, line: 24, column: 5)
!74 = !DILocation(line: 24, column: 5, scope: !13)
!75 = !DILocation(line: 26, column: 13, scope: !76)
!76 = distinct !DILexicalBlock(scope: !73, file: !9, line: 25, column: 2)
!77 = !DILocation(line: 26, column: 3, scope: !76)
!78 = !DILocation(line: 30, column: 3, scope: !79)
!79 = distinct !DILexicalBlock(scope: !73, file: !9, line: 29, column: 2)
!80 = !DILocation(line: 32, column: 1, scope: !13)
!81 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val1", arg: 1, scope: !16, file: !9, line: 36, type: !12)
!82 = !DILocation(line: 36, column: 26, scope: !16)
!83 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val2", arg: 2, scope: !16, file: !9, line: 36, type: !12)
!84 = !DILocation(line: 36, column: 39, scope: !16)
!85 = !DILocation(line: 38, column: 14, scope: !86)
!86 = distinct !DILexicalBlock(scope: !16, file: !9, line: 38, column: 6)
!87 = !DILocation(line: 38, column: 7, scope: !86)
!88 = !DILocation(line: 38, column: 20, scope: !86)
!89 = !DILocation(line: 38, column: 28, scope: !86)
!90 = !DILocation(line: 38, column: 39, scope: !91)
!91 = !DILexicalBlockFile(scope: !86, file: !9, discriminator: 1)
!92 = !DILocation(line: 38, column: 32, scope: !86)
!93 = !DILocation(line: 38, column: 45, scope: !86)
!94 = !DILocation(line: 38, column: 6, scope: !16)
!95 = !DILocation(line: 40, column: 3, scope: !96)
!96 = distinct !DILexicalBlock(scope: !86, file: !9, line: 39, column: 2)
!97 = !DILocation(line: 45, column: 43, scope: !98)
!98 = distinct !DILexicalBlock(scope: !86, file: !9, line: 44, column: 2)
!99 = !DILocation(line: 45, column: 38, scope: !98)
!100 = !DILocation(line: 45, column: 31, scope: !98)
!101 = !DILocation(line: 45, column: 65, scope: !98)
!102 = !DILocation(line: 45, column: 60, scope: !98)
!103 = !DILocation(line: 45, column: 53, scope: !98)
!104 = !DILocation(line: 45, column: 51, scope: !98)
!105 = !DILocation(line: 45, column: 24, scope: !98)
!106 = !DILocation(line: 45, column: 21, scope: !98)
!107 = !DILocation(line: 45, column: 7, scope: !98)
!108 = !DILocation(line: 47, column: 1, scope: !16)
!109 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !19, file: !1, line: 40, type: !30)
!110 = !DILocation(line: 40, column: 10, scope: !19)
!111 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !19, file: !1, line: 40, type: !30)
!112 = !DILocation(line: 40, column: 7, scope: !19)
!113 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 1, scope: !19, file: !1, line: 38, type: !6)
!114 = !DILocation(line: 38, column: 28, scope: !19)
!115 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "A", arg: 2, scope: !19, file: !1, line: 38, type: !6)
!116 = !DILocation(line: 38, column: 42, scope: !19)
!117 = !DILocation(line: 42, column: 17, scope: !118)
!118 = distinct !DILexicalBlock(scope: !119, file: !1, line: 42, column: 3)
!119 = distinct !DILexicalBlock(scope: !19, file: !1, line: 42, column: 3)
!120 = !DILocation(line: 45, column: 21, scope: !121)
!121 = distinct !DILexicalBlock(scope: !122, file: !1, line: 45, column: 7)
!122 = distinct !DILexicalBlock(scope: !123, file: !1, line: 45, column: 7)
!123 = distinct !DILexicalBlock(scope: !118, file: !1, line: 43, column: 5)
!124 = !DILocation(line: 42, column: 8, scope: !119)
!125 = !DILocation(line: 42, column: 3, scope: !119)
!126 = !DILocation(line: 44, column: 14, scope: !123)
!127 = !DILocation(line: 44, column: 16, scope: !123)
!128 = !DILocation(line: 44, column: 7, scope: !123)
!129 = !DILocation(line: 44, column: 12, scope: !123)
!130 = !DILocation(line: 45, column: 12, scope: !122)
!131 = !DILocation(line: 45, column: 7, scope: !122)
!132 = !DILocation(line: 47, column: 19, scope: !133)
!133 = distinct !DILexicalBlock(scope: !121, file: !1, line: 46, column: 2)
!134 = !DILocation(line: 47, column: 33, scope: !133)
!135 = !DILocation(line: 47, column: 32, scope: !133)
!136 = !DILocation(line: 47, column: 38, scope: !133)
!137 = !DILocation(line: 47, column: 7, scope: !133)
!138 = !DILocation(line: 47, column: 11, scope: !133)
!139 = !DILocation(line: 47, column: 4, scope: !133)
!140 = !DILocation(line: 47, column: 16, scope: !133)
!141 = !DILocation(line: 48, column: 2, scope: !133)
!142 = !DILocation(line: 45, column: 28, scope: !121)
!143 = !DILocation(line: 45, column: 7, scope: !121)
!144 = !DILocation(line: 49, column: 5, scope: !123)
!145 = !DILocation(line: 42, column: 24, scope: !118)
!146 = !DILocation(line: 42, column: 3, scope: !118)
!147 = !DILocation(line: 50, column: 1, scope: !19)
!148 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fail", scope: !22, file: !1, line: 54, type: !30)
!149 = !DILocation(line: 54, column: 10, scope: !22)
!150 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !22, file: !1, line: 54, type: !30)
!151 = !DILocation(line: 54, column: 7, scope: !22)
!152 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "z", arg: 1, scope: !22, file: !1, line: 52, type: !6)
!153 = !DILocation(line: 52, column: 32, scope: !22)
!154 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "z_outputFromGpu", arg: 2, scope: !22, file: !1, line: 52, type: !6)
!155 = !DILocation(line: 52, column: 46, scope: !22)
!156 = !DILocation(line: 57, column: 14, scope: !157)
!157 = distinct !DILexicalBlock(scope: !158, file: !1, line: 57, column: 3)
!158 = distinct !DILexicalBlock(scope: !22, file: !1, line: 57, column: 3)
!159 = !DILocation(line: 59, column: 23, scope: !160)
!160 = distinct !DILexicalBlock(scope: !161, file: !1, line: 59, column: 11)
!161 = distinct !DILexicalBlock(scope: !157, file: !1, line: 58, column: 5)
!162 = !DILocation(line: 57, column: 8, scope: !158)
!163 = !DILocation(line: 57, column: 3, scope: !158)
!164 = !DILocation(line: 59, column: 29, scope: !160)
!165 = !DILocation(line: 59, column: 11, scope: !160)
!166 = !DILocation(line: 59, column: 49, scope: !160)
!167 = !DILocation(line: 59, column: 11, scope: !161)
!168 = !DILocation(line: 61, column: 8, scope: !169)
!169 = distinct !DILexicalBlock(scope: !160, file: !1, line: 60, column: 2)
!170 = !DILocation(line: 62, column: 2, scope: !169)
!171 = !DILocation(line: 63, column: 5, scope: !161)
!172 = !DILocation(line: 57, column: 20, scope: !157)
!173 = !DILocation(line: 57, column: 3, scope: !157)
!174 = !DILocation(line: 66, column: 3, scope: !22)
!175 = !DILocation(line: 67, column: 1, scope: !22)
!176 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !23, file: !1, line: 71, type: !30)
!177 = !DILocation(line: 71, column: 7, scope: !23)
!178 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "A", arg: 1, scope: !23, file: !1, line: 69, type: !6)
!179 = !DILocation(line: 69, column: 26, scope: !23)
!180 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 2, scope: !23, file: !1, line: 69, type: !6)
!181 = !DILocation(line: 69, column: 40, scope: !23)
!182 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y", arg: 3, scope: !23, file: !1, line: 69, type: !6)
!183 = !DILocation(line: 69, column: 54, scope: !23)
!184 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tmp", arg: 4, scope: !23, file: !1, line: 69, type: !6)
!185 = !DILocation(line: 69, column: 68, scope: !23)
!186 = !DILocation(line: 73, column: 16, scope: !187)
!187 = distinct !DILexicalBlock(scope: !188, file: !1, line: 73, column: 3)
!188 = distinct !DILexicalBlock(scope: !23, file: !1, line: 73, column: 3)
!189 = !DILocation(line: 73, column: 8, scope: !188)
!190 = !DILocation(line: 73, column: 3, scope: !188)
!191 = !DILocation(line: 75, column: 7, scope: !192)
!192 = distinct !DILexicalBlock(scope: !187, file: !1, line: 74, column: 5)
!193 = !DILocation(line: 75, column: 12, scope: !192)
!194 = !DILocation(line: 76, column: 5, scope: !192)
!195 = !DILocation(line: 73, column: 23, scope: !187)
!196 = !DILocation(line: 73, column: 3, scope: !187)
!197 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !23, file: !1, line: 71, type: !30)
!198 = !DILocation(line: 71, column: 9, scope: !23)
!199 = !DILocation(line: 78, column: 17, scope: !200)
!200 = distinct !DILexicalBlock(scope: !201, file: !1, line: 78, column: 3)
!201 = distinct !DILexicalBlock(scope: !23, file: !1, line: 78, column: 3)
!202 = !DILocation(line: 82, column: 21, scope: !203)
!203 = distinct !DILexicalBlock(scope: !204, file: !1, line: 82, column: 7)
!204 = distinct !DILexicalBlock(scope: !205, file: !1, line: 82, column: 7)
!205 = distinct !DILexicalBlock(scope: !200, file: !1, line: 79, column: 5)
!206 = !DILocation(line: 87, column: 21, scope: !207)
!207 = distinct !DILexicalBlock(scope: !208, file: !1, line: 87, column: 7)
!208 = distinct !DILexicalBlock(scope: !205, file: !1, line: 87, column: 7)
!209 = !DILocation(line: 78, column: 8, scope: !201)
!210 = !DILocation(line: 78, column: 3, scope: !201)
!211 = !DILocation(line: 80, column: 7, scope: !205)
!212 = !DILocation(line: 80, column: 14, scope: !205)
!213 = !DILocation(line: 82, column: 12, scope: !204)
!214 = !DILocation(line: 82, column: 7, scope: !204)
!215 = !DILocation(line: 84, column: 13, scope: !216)
!216 = distinct !DILexicalBlock(scope: !203, file: !1, line: 83, column: 2)
!217 = !DILocation(line: 84, column: 25, scope: !216)
!218 = !DILocation(line: 84, column: 29, scope: !216)
!219 = !DILocation(line: 84, column: 22, scope: !216)
!220 = !DILocation(line: 84, column: 36, scope: !216)
!221 = !DILocation(line: 84, column: 34, scope: !216)
!222 = !DILocation(line: 84, column: 20, scope: !216)
!223 = !DILocation(line: 84, column: 4, scope: !216)
!224 = !DILocation(line: 84, column: 11, scope: !216)
!225 = !DILocation(line: 85, column: 2, scope: !216)
!226 = !DILocation(line: 82, column: 28, scope: !203)
!227 = !DILocation(line: 82, column: 7, scope: !203)
!228 = !DILocation(line: 87, column: 12, scope: !208)
!229 = !DILocation(line: 87, column: 7, scope: !208)
!230 = !DILocation(line: 89, column: 11, scope: !231)
!231 = distinct !DILexicalBlock(scope: !207, file: !1, line: 88, column: 2)
!232 = !DILocation(line: 89, column: 21, scope: !231)
!233 = !DILocation(line: 89, column: 25, scope: !231)
!234 = !DILocation(line: 89, column: 18, scope: !231)
!235 = !DILocation(line: 89, column: 32, scope: !231)
!236 = !DILocation(line: 89, column: 30, scope: !231)
!237 = !DILocation(line: 89, column: 16, scope: !231)
!238 = !DILocation(line: 89, column: 4, scope: !231)
!239 = !DILocation(line: 89, column: 9, scope: !231)
!240 = !DILocation(line: 90, column: 2, scope: !231)
!241 = !DILocation(line: 87, column: 28, scope: !207)
!242 = !DILocation(line: 87, column: 7, scope: !207)
!243 = !DILocation(line: 91, column: 5, scope: !205)
!244 = !DILocation(line: 78, column: 24, scope: !200)
!245 = !DILocation(line: 78, column: 3, scope: !200)
!246 = !DILocation(line: 92, column: 1, scope: !23)
!247 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !26, file: !1, line: 96, type: !30)
!248 = !DILocation(line: 96, column: 7, scope: !26)
!249 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "A", arg: 1, scope: !26, file: !1, line: 94, type: !6)
!250 = !DILocation(line: 94, column: 26, scope: !26)
!251 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 2, scope: !26, file: !1, line: 94, type: !6)
!252 = !DILocation(line: 94, column: 40, scope: !26)
!253 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y", arg: 3, scope: !26, file: !1, line: 94, type: !6)
!254 = !DILocation(line: 94, column: 54, scope: !26)
!255 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "tmp", arg: 4, scope: !26, file: !1, line: 94, type: !6)
!256 = !DILocation(line: 94, column: 68, scope: !26)
!257 = !DILocation(line: 98, column: 16, scope: !258)
!258 = distinct !DILexicalBlock(scope: !259, file: !1, line: 98, column: 3)
!259 = distinct !DILexicalBlock(scope: !26, file: !1, line: 98, column: 3)
!260 = !DILocation(line: 98, column: 8, scope: !259)
!261 = !DILocation(line: 98, column: 3, scope: !259)
!262 = !DILocation(line: 100, column: 7, scope: !263)
!263 = distinct !DILexicalBlock(scope: !258, file: !1, line: 99, column: 5)
!264 = !DILocation(line: 100, column: 12, scope: !263)
!265 = !DILocation(line: 101, column: 5, scope: !263)
!266 = !DILocation(line: 98, column: 23, scope: !258)
!267 = !DILocation(line: 98, column: 3, scope: !258)
!268 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !269, file: !1, line: 109, type: !30)
!269 = distinct !DILexicalBlock(scope: !270, file: !1, line: 107, column: 5)
!270 = distinct !DILexicalBlock(scope: !271, file: !1, line: 106, column: 3)
!271 = distinct !DILexicalBlock(scope: !26, file: !1, line: 106, column: 3)
!272 = !DILocation(line: 109, column: 11, scope: !269)
!273 = !DILocation(line: 106, column: 17, scope: !270)
!274 = !DILocation(line: 110, column: 21, scope: !275)
!275 = distinct !DILexicalBlock(scope: !276, file: !1, line: 110, column: 7)
!276 = distinct !DILexicalBlock(scope: !269, file: !1, line: 110, column: 7)
!277 = !DILocation(line: 106, column: 8, scope: !271)
!278 = !DILocation(line: 106, column: 3, scope: !271)
!279 = !DILocation(line: 108, column: 7, scope: !269)
!280 = !DILocation(line: 108, column: 14, scope: !269)
!281 = !DILocation(line: 110, column: 12, scope: !276)
!282 = !DILocation(line: 110, column: 7, scope: !276)
!283 = !DILocation(line: 112, column: 13, scope: !284)
!284 = distinct !DILexicalBlock(scope: !275, file: !1, line: 111, column: 2)
!285 = !DILocation(line: 112, column: 25, scope: !284)
!286 = !DILocation(line: 112, column: 29, scope: !284)
!287 = !DILocation(line: 112, column: 22, scope: !284)
!288 = !DILocation(line: 112, column: 36, scope: !284)
!289 = !DILocation(line: 112, column: 34, scope: !284)
!290 = !DILocation(line: 112, column: 20, scope: !284)
!291 = !DILocation(line: 112, column: 4, scope: !284)
!292 = !DILocation(line: 112, column: 11, scope: !284)
!293 = !DILocation(line: 113, column: 2, scope: !284)
!294 = !DILocation(line: 110, column: 28, scope: !275)
!295 = !DILocation(line: 110, column: 7, scope: !275)
!296 = !DILocation(line: 114, column: 5, scope: !269)
!297 = !DILocation(line: 106, column: 24, scope: !270)
!298 = !DILocation(line: 106, column: 3, scope: !270)
!299 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !26, file: !1, line: 96, type: !30)
!300 = !DILocation(line: 96, column: 9, scope: !26)
!301 = !DILocation(line: 119, column: 17, scope: !302)
!302 = distinct !DILexicalBlock(scope: !303, file: !1, line: 119, column: 3)
!303 = distinct !DILexicalBlock(scope: !26, file: !1, line: 119, column: 3)
!304 = !DILocation(line: 120, column: 19, scope: !305)
!305 = distinct !DILexicalBlock(scope: !306, file: !1, line: 120, column: 5)
!306 = distinct !DILexicalBlock(scope: !302, file: !1, line: 120, column: 5)
!307 = !DILocation(line: 119, column: 8, scope: !303)
!308 = !DILocation(line: 119, column: 3, scope: !303)
!309 = !DILocation(line: 120, column: 10, scope: !306)
!310 = !DILocation(line: 120, column: 5, scope: !306)
!311 = !DILocation(line: 122, column: 9, scope: !312)
!312 = distinct !DILexicalBlock(scope: !313, file: !1, line: 121, column: 7)
!313 = distinct !DILexicalBlock(scope: !305, file: !1, line: 120, column: 29)
!314 = !DILocation(line: 122, column: 19, scope: !312)
!315 = !DILocation(line: 122, column: 23, scope: !312)
!316 = !DILocation(line: 122, column: 16, scope: !312)
!317 = !DILocation(line: 122, column: 30, scope: !312)
!318 = !DILocation(line: 122, column: 28, scope: !312)
!319 = !DILocation(line: 122, column: 14, scope: !312)
!320 = !DILocation(line: 122, column: 2, scope: !312)
!321 = !DILocation(line: 122, column: 7, scope: !312)
!322 = !DILocation(line: 124, column: 5, scope: !313)
!323 = !DILocation(line: 120, column: 26, scope: !305)
!324 = !DILocation(line: 120, column: 5, scope: !305)
!325 = !DILocation(line: 124, column: 5, scope: !306)
!326 = !DILocation(line: 119, column: 24, scope: !302)
!327 = !DILocation(line: 119, column: 3, scope: !302)
!328 = !DILocation(line: 125, column: 1, scope: !26)
!329 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !27, file: !1, line: 127, type: !30)
!330 = !DILocation(line: 127, column: 14, scope: !27)
!331 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !27, file: !1, line: 127, type: !31)
!332 = !DILocation(line: 127, column: 27, scope: !27)
!333 = !DILocation(line: 137, column: 19, scope: !27)
!334 = !DILocation(line: 137, column: 7, scope: !27)
!335 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "A", scope: !27, file: !1, line: 131, type: !6)
!336 = !DILocation(line: 131, column: 14, scope: !27)
!337 = !DILocation(line: 138, column: 19, scope: !27)
!338 = !DILocation(line: 138, column: 7, scope: !27)
!339 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "x", scope: !27, file: !1, line: 132, type: !6)
!340 = !DILocation(line: 132, column: 14, scope: !27)
!341 = !DILocation(line: 139, column: 19, scope: !27)
!342 = !DILocation(line: 139, column: 7, scope: !27)
!343 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y", scope: !27, file: !1, line: 133, type: !6)
!344 = !DILocation(line: 133, column: 14, scope: !27)
!345 = !DILocation(line: 140, column: 33, scope: !27)
!346 = !DILocation(line: 140, column: 21, scope: !27)
!347 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "y_outputFromGpu", scope: !27, file: !1, line: 134, type: !6)
!348 = !DILocation(line: 134, column: 14, scope: !27)
!349 = !DILocation(line: 141, column: 21, scope: !27)
!350 = !DILocation(line: 141, column: 9, scope: !27)
!351 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp", scope: !27, file: !1, line: 135, type: !6)
!352 = !DILocation(line: 135, column: 14, scope: !27)
!353 = !DILocation(line: 143, column: 11, scope: !27)
!354 = !DILocation(line: 143, column: 3, scope: !27)
!355 = !DILocation(line: 145, column: 3, scope: !27)
!356 = !DILocation(line: 147, column: 13, scope: !27)
!357 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_start", scope: !27, file: !1, line: 129, type: !12)
!358 = !DILocation(line: 129, column: 10, scope: !27)
!359 = !DILocation(line: 148, column: 3, scope: !27)
!360 = !DILocation(line: 149, column: 11, scope: !27)
!361 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_end", scope: !27, file: !1, line: 129, type: !12)
!362 = !DILocation(line: 129, column: 19, scope: !27)
!363 = !DILocation(line: 150, column: 11, scope: !27)
!364 = !DILocation(line: 150, column: 51, scope: !27)
!365 = !DILocation(line: 150, column: 3, scope: !27)
!366 = !DILocation(line: 152, column: 13, scope: !27)
!367 = !DILocation(line: 153, column: 3, scope: !27)
!368 = !DILocation(line: 154, column: 11, scope: !27)
!369 = !DILocation(line: 155, column: 11, scope: !27)
!370 = !DILocation(line: 155, column: 51, scope: !27)
!371 = !DILocation(line: 155, column: 3, scope: !27)
!372 = !DILocation(line: 157, column: 3, scope: !27)
!373 = !DILocation(line: 159, column: 8, scope: !27)
!374 = !DILocation(line: 159, column: 3, scope: !27)
!375 = !DILocation(line: 160, column: 8, scope: !27)
!376 = !DILocation(line: 160, column: 3, scope: !27)
!377 = !DILocation(line: 161, column: 8, scope: !27)
!378 = !DILocation(line: 161, column: 3, scope: !27)
!379 = !DILocation(line: 162, column: 8, scope: !27)
!380 = !DILocation(line: 162, column: 3, scope: !27)
!381 = !DILocation(line: 163, column: 8, scope: !27)
!382 = !DILocation(line: 163, column: 3, scope: !27)
!383 = !DILocation(line: 165, column: 3, scope: !27)
