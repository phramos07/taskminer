; ModuleID = '/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Parboil/mri-q/src/file.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

@.str = private unnamed_addr constant [2 x i8] c"r\00", align 1
@stderr = external global %struct._IO_FILE*, align 8
@.str.1 = private unnamed_addr constant [24 x i8] c"Cannot open input file\0A\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.3 = private unnamed_addr constant [25 x i8] c"Cannot open output file\0A\00", align 1

; Function Attrs: uwtable
define void @inputData(i8* %fName, i32* %_numK, i32* %_numX, float** %kx, float** %ky, float** %kz, float** %x, float** %y, float** %z, float** %phiR, float** %phiI) #0 {
entry:
  %numK = alloca i32, align 4
  %numX = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %fName, i64 0, metadata !74, metadata !75), !dbg !76
  call void @llvm.dbg.value(metadata i32* %_numK, i64 0, metadata !77, metadata !75), !dbg !78
  call void @llvm.dbg.value(metadata i32* %_numX, i64 0, metadata !79, metadata !75), !dbg !80
  call void @llvm.dbg.value(metadata float** %kx, i64 0, metadata !81, metadata !75), !dbg !82
  call void @llvm.dbg.value(metadata float** %ky, i64 0, metadata !83, metadata !75), !dbg !84
  call void @llvm.dbg.value(metadata float** %kz, i64 0, metadata !85, metadata !75), !dbg !86
  call void @llvm.dbg.value(metadata float** %x, i64 0, metadata !87, metadata !75), !dbg !88
  call void @llvm.dbg.value(metadata float** %y, i64 0, metadata !89, metadata !75), !dbg !90
  call void @llvm.dbg.value(metadata float** %z, i64 0, metadata !91, metadata !75), !dbg !92
  call void @llvm.dbg.value(metadata float** %phiR, i64 0, metadata !93, metadata !75), !dbg !94
  call void @llvm.dbg.value(metadata float** %phiI, i64 0, metadata !95, metadata !75), !dbg !96
  call void @llvm.dbg.declare(metadata i32* %numK, metadata !97, metadata !75), !dbg !98
  call void @llvm.dbg.declare(metadata i32* %numX, metadata !99, metadata !75), !dbg !100
  %call = call %struct._IO_FILE* @fopen(i8* %fName, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0)), !dbg !101
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call, i64 0, metadata !102, metadata !75), !dbg !106
  %cmp = icmp eq %struct._IO_FILE* %call, null, !dbg !107
  br i1 %cmp, label %if.then, label %if.end, !dbg !109

if.then:                                          ; preds = %entry
  %tmp = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !110
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i32 0, i32 0)), !dbg !112
  call void @exit(i32 -1) #5, !dbg !113
  unreachable, !dbg !113

if.end:                                           ; preds = %entry
  %tmp1 = bitcast i32* %numK to i8*, !dbg !114
  %call2 = call i64 @fread(i8* %tmp1, i64 4, i64 1, %struct._IO_FILE* %call), !dbg !115
  %tmp2 = load i32, i32* %numK, align 4, !dbg !116
  store i32 %tmp2, i32* %_numK, align 4, !dbg !117
  %tmp3 = bitcast i32* %numX to i8*, !dbg !118
  %call3 = call i64 @fread(i8* %tmp3, i64 4, i64 1, %struct._IO_FILE* %call), !dbg !119
  %tmp4 = load i32, i32* %numX, align 4, !dbg !120
  store i32 %tmp4, i32* %_numX, align 4, !dbg !121
  %tmp5 = load i32, i32* %numK, align 4, !dbg !122
  %conv = sext i32 %tmp5 to i64, !dbg !122
  %mul = mul i64 %conv, 4, !dbg !123
  %call4 = call noalias i8* @memalign(i64 16, i64 %mul) #6, !dbg !124
  %tmp6 = bitcast i8* %call4 to float*, !dbg !125
  store float* %tmp6, float** %kx, align 8, !dbg !126
  %tmp7 = load float*, float** %kx, align 8, !dbg !127
  %tmp8 = bitcast float* %tmp7 to i8*, !dbg !127
  %tmp9 = load i32, i32* %numK, align 4, !dbg !128
  %conv5 = sext i32 %tmp9 to i64, !dbg !128
  %call6 = call i64 @fread(i8* %tmp8, i64 4, i64 %conv5, %struct._IO_FILE* %call), !dbg !129
  %tmp10 = load i32, i32* %numK, align 4, !dbg !130
  %conv7 = sext i32 %tmp10 to i64, !dbg !130
  %mul8 = mul i64 %conv7, 4, !dbg !131
  %call9 = call noalias i8* @memalign(i64 16, i64 %mul8) #6, !dbg !132
  %tmp11 = bitcast i8* %call9 to float*, !dbg !133
  store float* %tmp11, float** %ky, align 8, !dbg !134
  %tmp12 = load float*, float** %ky, align 8, !dbg !135
  %tmp13 = bitcast float* %tmp12 to i8*, !dbg !135
  %tmp14 = load i32, i32* %numK, align 4, !dbg !136
  %conv10 = sext i32 %tmp14 to i64, !dbg !136
  %call11 = call i64 @fread(i8* %tmp13, i64 4, i64 %conv10, %struct._IO_FILE* %call), !dbg !137
  %tmp15 = load i32, i32* %numK, align 4, !dbg !138
  %conv12 = sext i32 %tmp15 to i64, !dbg !138
  %mul13 = mul i64 %conv12, 4, !dbg !139
  %call14 = call noalias i8* @memalign(i64 16, i64 %mul13) #6, !dbg !140
  %tmp16 = bitcast i8* %call14 to float*, !dbg !141
  store float* %tmp16, float** %kz, align 8, !dbg !142
  %tmp17 = load float*, float** %kz, align 8, !dbg !143
  %tmp18 = bitcast float* %tmp17 to i8*, !dbg !143
  %tmp19 = load i32, i32* %numK, align 4, !dbg !144
  %conv15 = sext i32 %tmp19 to i64, !dbg !144
  %call16 = call i64 @fread(i8* %tmp18, i64 4, i64 %conv15, %struct._IO_FILE* %call), !dbg !145
  %tmp20 = load i32, i32* %numX, align 4, !dbg !146
  %conv17 = sext i32 %tmp20 to i64, !dbg !146
  %mul18 = mul i64 %conv17, 4, !dbg !147
  %call19 = call noalias i8* @memalign(i64 16, i64 %mul18) #6, !dbg !148
  %tmp21 = bitcast i8* %call19 to float*, !dbg !149
  store float* %tmp21, float** %x, align 8, !dbg !150
  %tmp22 = load float*, float** %x, align 8, !dbg !151
  %tmp23 = bitcast float* %tmp22 to i8*, !dbg !151
  %tmp24 = load i32, i32* %numX, align 4, !dbg !152
  %conv20 = sext i32 %tmp24 to i64, !dbg !152
  %call21 = call i64 @fread(i8* %tmp23, i64 4, i64 %conv20, %struct._IO_FILE* %call), !dbg !153
  %tmp25 = load i32, i32* %numX, align 4, !dbg !154
  %conv22 = sext i32 %tmp25 to i64, !dbg !154
  %mul23 = mul i64 %conv22, 4, !dbg !155
  %call24 = call noalias i8* @memalign(i64 16, i64 %mul23) #6, !dbg !156
  %tmp26 = bitcast i8* %call24 to float*, !dbg !157
  store float* %tmp26, float** %y, align 8, !dbg !158
  %tmp27 = load float*, float** %y, align 8, !dbg !159
  %tmp28 = bitcast float* %tmp27 to i8*, !dbg !159
  %tmp29 = load i32, i32* %numX, align 4, !dbg !160
  %conv25 = sext i32 %tmp29 to i64, !dbg !160
  %call26 = call i64 @fread(i8* %tmp28, i64 4, i64 %conv25, %struct._IO_FILE* %call), !dbg !161
  %tmp30 = load i32, i32* %numX, align 4, !dbg !162
  %conv27 = sext i32 %tmp30 to i64, !dbg !162
  %mul28 = mul i64 %conv27, 4, !dbg !163
  %call29 = call noalias i8* @memalign(i64 16, i64 %mul28) #6, !dbg !164
  %tmp31 = bitcast i8* %call29 to float*, !dbg !165
  store float* %tmp31, float** %z, align 8, !dbg !166
  %tmp32 = load float*, float** %z, align 8, !dbg !167
  %tmp33 = bitcast float* %tmp32 to i8*, !dbg !167
  %tmp34 = load i32, i32* %numX, align 4, !dbg !168
  %conv30 = sext i32 %tmp34 to i64, !dbg !168
  %call31 = call i64 @fread(i8* %tmp33, i64 4, i64 %conv30, %struct._IO_FILE* %call), !dbg !169
  %tmp35 = load i32, i32* %numK, align 4, !dbg !170
  %conv32 = sext i32 %tmp35 to i64, !dbg !170
  %mul33 = mul i64 %conv32, 4, !dbg !171
  %call34 = call noalias i8* @memalign(i64 16, i64 %mul33) #6, !dbg !172
  %tmp36 = bitcast i8* %call34 to float*, !dbg !173
  store float* %tmp36, float** %phiR, align 8, !dbg !174
  %tmp37 = load float*, float** %phiR, align 8, !dbg !175
  %tmp38 = bitcast float* %tmp37 to i8*, !dbg !175
  %tmp39 = load i32, i32* %numK, align 4, !dbg !176
  %conv35 = sext i32 %tmp39 to i64, !dbg !176
  %call36 = call i64 @fread(i8* %tmp38, i64 4, i64 %conv35, %struct._IO_FILE* %call), !dbg !177
  %tmp40 = load i32, i32* %numK, align 4, !dbg !178
  %conv37 = sext i32 %tmp40 to i64, !dbg !178
  %mul38 = mul i64 %conv37, 4, !dbg !179
  %call39 = call noalias i8* @memalign(i64 16, i64 %mul38) #6, !dbg !180
  %tmp41 = bitcast i8* %call39 to float*, !dbg !181
  store float* %tmp41, float** %phiI, align 8, !dbg !182
  %tmp42 = load float*, float** %phiI, align 8, !dbg !183
  %tmp43 = bitcast float* %tmp42 to i8*, !dbg !183
  %tmp44 = load i32, i32* %numK, align 4, !dbg !184
  %conv40 = sext i32 %tmp44 to i64, !dbg !184
  %call41 = call i64 @fread(i8* %tmp43, i64 4, i64 %conv40, %struct._IO_FILE* %call), !dbg !185
  %call42 = call i32 @fclose(%struct._IO_FILE* %call), !dbg !186
  ret void, !dbg !187
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare %struct._IO_FILE* @fopen(i8*, i8*) #2

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: noreturn nounwind
declare void @exit(i32) #3

declare i64 @fread(i8*, i64, i64, %struct._IO_FILE*) #2

; Function Attrs: nounwind
declare noalias i8* @memalign(i64, i64) #4

declare i32 @fclose(%struct._IO_FILE*) #2

; Function Attrs: uwtable
define void @outputData(i8* %fName, float* %outR, float* %outI, i32 %numX) #0 {
entry:
  %tmp32 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %fName, i64 0, metadata !188, metadata !75), !dbg !189
  call void @llvm.dbg.value(metadata float* %outR, i64 0, metadata !190, metadata !75), !dbg !191
  call void @llvm.dbg.value(metadata float* %outI, i64 0, metadata !192, metadata !75), !dbg !193
  call void @llvm.dbg.value(metadata i32 %numX, i64 0, metadata !194, metadata !75), !dbg !195
  %call = call %struct._IO_FILE* @fopen(i8* %fName, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i32 0, i32 0)), !dbg !196
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call, i64 0, metadata !197, metadata !75), !dbg !198
  call void @llvm.dbg.declare(metadata i32* %tmp32, metadata !199, metadata !75), !dbg !203
  %cmp = icmp eq %struct._IO_FILE* %call, null, !dbg !204
  br i1 %cmp, label %if.then, label %if.end, !dbg !206

if.then:                                          ; preds = %entry
  %tmp = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !207
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.3, i32 0, i32 0)), !dbg !209
  call void @exit(i32 -1) #5, !dbg !210
  unreachable, !dbg !210

if.end:                                           ; preds = %entry
  store i32 %numX, i32* %tmp32, align 4, !dbg !211
  %tmp1 = bitcast i32* %tmp32 to i8*, !dbg !212
  %call2 = call i64 @fwrite(i8* %tmp1, i64 4, i64 1, %struct._IO_FILE* %call), !dbg !213
  %tmp2 = bitcast float* %outR to i8*, !dbg !214
  %conv = sext i32 %numX to i64, !dbg !215
  %call3 = call i64 @fwrite(i8* %tmp2, i64 4, i64 %conv, %struct._IO_FILE* %call), !dbg !216
  %tmp3 = bitcast float* %outI to i8*, !dbg !217
  %conv4 = sext i32 %numX to i64, !dbg !218
  %call5 = call i64 @fwrite(i8* %tmp3, i64 4, i64 %conv4, %struct._IO_FILE* %call), !dbg !219
  %call6 = call i32 @fclose(%struct._IO_FILE* %call), !dbg !220
  ret void, !dbg !221
}

declare i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind }
attributes #6 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!71, !72}
!llvm.ident = !{!73}

!0 = distinct !DICompileUnit(language: DW_LANG_C_plus_plus, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !62)
!1 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Parboil/mri-q/src/file.cc", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!2 = !{}
!3 = !{!4, !59, !60}
!4 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !5, line: 273, size: 1728, align: 64, elements: !6, identifier: "_ZTS8_IO_FILE")
!5 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!6 = !{!7, !9, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !24, !26, !27, !28, !32, !34, !36, !40, !43, !45, !47, !48, !49, !50, !54, !55}
!7 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !"_ZTS8_IO_FILE", file: !5, line: 274, baseType: !8, size: 32, align: 32)
!8 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!9 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !"_ZTS8_IO_FILE", file: !5, line: 279, baseType: !10, size: 64, align: 64, offset: 64)
!10 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64, align: 64)
!11 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!12 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !"_ZTS8_IO_FILE", file: !5, line: 280, baseType: !10, size: 64, align: 64, offset: 128)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !"_ZTS8_IO_FILE", file: !5, line: 281, baseType: !10, size: 64, align: 64, offset: 192)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !"_ZTS8_IO_FILE", file: !5, line: 282, baseType: !10, size: 64, align: 64, offset: 256)
!15 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !"_ZTS8_IO_FILE", file: !5, line: 283, baseType: !10, size: 64, align: 64, offset: 320)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !"_ZTS8_IO_FILE", file: !5, line: 284, baseType: !10, size: 64, align: 64, offset: 384)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !"_ZTS8_IO_FILE", file: !5, line: 285, baseType: !10, size: 64, align: 64, offset: 448)
!18 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !"_ZTS8_IO_FILE", file: !5, line: 286, baseType: !10, size: 64, align: 64, offset: 512)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !"_ZTS8_IO_FILE", file: !5, line: 288, baseType: !10, size: 64, align: 64, offset: 576)
!20 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !"_ZTS8_IO_FILE", file: !5, line: 289, baseType: !10, size: 64, align: 64, offset: 640)
!21 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !"_ZTS8_IO_FILE", file: !5, line: 290, baseType: !10, size: 64, align: 64, offset: 704)
!22 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !"_ZTS8_IO_FILE", file: !5, line: 292, baseType: !23, size: 64, align: 64, offset: 768)
!23 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS10_IO_marker", size: 64, align: 64)
!24 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !"_ZTS8_IO_FILE", file: !5, line: 294, baseType: !25, size: 64, align: 64, offset: 832)
!25 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !"_ZTS8_IO_FILE", size: 64, align: 64)
!26 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !"_ZTS8_IO_FILE", file: !5, line: 296, baseType: !8, size: 32, align: 32, offset: 896)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !"_ZTS8_IO_FILE", file: !5, line: 300, baseType: !8, size: 32, align: 32, offset: 928)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !"_ZTS8_IO_FILE", file: !5, line: 302, baseType: !29, size: 64, align: 64, offset: 960)
!29 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !30, line: 141, baseType: !31)
!30 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!31 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !"_ZTS8_IO_FILE", file: !5, line: 306, baseType: !33, size: 16, align: 16, offset: 1024)
!33 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !"_ZTS8_IO_FILE", file: !5, line: 307, baseType: !35, size: 8, align: 8, offset: 1040)
!35 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !"_ZTS8_IO_FILE", file: !5, line: 308, baseType: !37, size: 8, align: 8, offset: 1048)
!37 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 8, align: 8, elements: !38)
!38 = !{!39}
!39 = !DISubrange(count: 1)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !"_ZTS8_IO_FILE", file: !5, line: 312, baseType: !41, size: 64, align: 64, offset: 1088)
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64, align: 64)
!42 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !5, line: 182, baseType: null)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !"_ZTS8_IO_FILE", file: !5, line: 321, baseType: !44, size: 64, align: 64, offset: 1152)
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !30, line: 142, baseType: !31)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !"_ZTS8_IO_FILE", file: !5, line: 330, baseType: !46, size: 64, align: 64, offset: 1216)
!46 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !"_ZTS8_IO_FILE", file: !5, line: 331, baseType: !46, size: 64, align: 64, offset: 1280)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !"_ZTS8_IO_FILE", file: !5, line: 332, baseType: !46, size: 64, align: 64, offset: 1344)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !"_ZTS8_IO_FILE", file: !5, line: 333, baseType: !46, size: 64, align: 64, offset: 1408)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !"_ZTS8_IO_FILE", file: !5, line: 334, baseType: !51, size: 64, align: 64, offset: 1472)
!51 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !52, line: 62, baseType: !53)
!52 = !DIFile(filename: "/home/gleison/lge/llvm-3.7-src/build-debug/bin/../lib/clang/3.7.0/include/stddef.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!53 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !"_ZTS8_IO_FILE", file: !5, line: 336, baseType: !8, size: 32, align: 32, offset: 1536)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !"_ZTS8_IO_FILE", file: !5, line: 338, baseType: !56, size: 160, align: 8, offset: 1568)
!56 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11, size: 160, align: 8, elements: !57)
!57 = !{!58}
!58 = !DISubrange(count: 20)
!59 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !5, line: 188, size: 192, align: 64, flags: DIFlagFwdDecl, identifier: "_ZTS10_IO_marker")
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 64, align: 64)
!61 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!62 = !{!63, !68}
!63 = !DISubprogram(name: "inputData", scope: !1, file: !1, line: 20, type: !64, isLocal: false, isDefinition: true, scopeLine: 24, flags: DIFlagPrototyped, isOptimized: false, function: void (i8*, i32*, i32*, float**, float**, float**, float**, float**, float**, float**, float**)* @inputData, variables: !2)
!64 = !DISubroutineType(types: !65)
!65 = !{null, !10, !66, !66, !67, !67, !67, !67, !67, !67, !67, !67}
!66 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64, align: 64)
!67 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !60, size: 64, align: 64)
!68 = !DISubprogram(name: "outputData", scope: !1, file: !1, line: 57, type: !69, isLocal: false, isDefinition: true, scopeLine: 58, flags: DIFlagPrototyped, isOptimized: false, function: void (i8*, float*, float*, i32)* @outputData, variables: !2)
!69 = !DISubroutineType(types: !70)
!70 = !{null, !10, !60, !60, !8}
!71 = !{i32 2, !"Dwarf Version", i32 4}
!72 = !{i32 2, !"Debug Info Version", i32 3}
!73 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!74 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fName", arg: 1, scope: !63, file: !1, line: 20, type: !10)
!75 = !DIExpression()
!76 = !DILocation(line: 20, column: 22, scope: !63)
!77 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "_numK", arg: 2, scope: !63, file: !1, line: 20, type: !66)
!78 = !DILocation(line: 20, column: 34, scope: !63)
!79 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "_numX", arg: 3, scope: !63, file: !1, line: 20, type: !66)
!80 = !DILocation(line: 20, column: 46, scope: !63)
!81 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kx", arg: 4, scope: !63, file: !1, line: 21, type: !67)
!82 = !DILocation(line: 21, column: 24, scope: !63)
!83 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ky", arg: 5, scope: !63, file: !1, line: 21, type: !67)
!84 = !DILocation(line: 21, column: 36, scope: !63)
!85 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "kz", arg: 6, scope: !63, file: !1, line: 21, type: !67)
!86 = !DILocation(line: 21, column: 48, scope: !63)
!87 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "x", arg: 7, scope: !63, file: !1, line: 22, type: !67)
!88 = !DILocation(line: 22, column: 24, scope: !63)
!89 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y", arg: 8, scope: !63, file: !1, line: 22, type: !67)
!90 = !DILocation(line: 22, column: 35, scope: !63)
!91 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "z", arg: 9, scope: !63, file: !1, line: 22, type: !67)
!92 = !DILocation(line: 22, column: 46, scope: !63)
!93 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "phiR", arg: 10, scope: !63, file: !1, line: 23, type: !67)
!94 = !DILocation(line: 23, column: 24, scope: !63)
!95 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "phiI", arg: 11, scope: !63, file: !1, line: 23, type: !67)
!96 = !DILocation(line: 23, column: 38, scope: !63)
!97 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "numK", scope: !63, file: !1, line: 25, type: !8)
!98 = !DILocation(line: 25, column: 7, scope: !63)
!99 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "numX", scope: !63, file: !1, line: 25, type: !8)
!100 = !DILocation(line: 25, column: 13, scope: !63)
!101 = !DILocation(line: 26, column: 15, scope: !63)
!102 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fid", scope: !63, file: !1, line: 26, type: !103)
!103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 64, align: 64)
!104 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !105, line: 49, baseType: !"_ZTS8_IO_FILE")
!105 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!106 = !DILocation(line: 26, column: 9, scope: !63)
!107 = !DILocation(line: 28, column: 11, scope: !108)
!108 = distinct !DILexicalBlock(scope: !63, file: !1, line: 28, column: 7)
!109 = !DILocation(line: 28, column: 7, scope: !63)
!110 = !DILocation(line: 30, column: 15, scope: !111)
!111 = distinct !DILexicalBlock(scope: !108, file: !1, line: 29, column: 5)
!112 = !DILocation(line: 30, column: 7, scope: !111)
!113 = !DILocation(line: 31, column: 7, scope: !111)
!114 = !DILocation(line: 33, column: 10, scope: !63)
!115 = !DILocation(line: 33, column: 3, scope: !63)
!116 = !DILocation(line: 34, column: 12, scope: !63)
!117 = !DILocation(line: 34, column: 10, scope: !63)
!118 = !DILocation(line: 35, column: 10, scope: !63)
!119 = !DILocation(line: 35, column: 3, scope: !63)
!120 = !DILocation(line: 36, column: 12, scope: !63)
!121 = !DILocation(line: 36, column: 10, scope: !63)
!122 = !DILocation(line: 37, column: 32, scope: !63)
!123 = !DILocation(line: 37, column: 37, scope: !63)
!124 = !DILocation(line: 37, column: 19, scope: !63)
!125 = !DILocation(line: 37, column: 9, scope: !63)
!126 = !DILocation(line: 37, column: 7, scope: !63)
!127 = !DILocation(line: 38, column: 10, scope: !63)
!128 = !DILocation(line: 38, column: 31, scope: !63)
!129 = !DILocation(line: 38, column: 3, scope: !63)
!130 = !DILocation(line: 39, column: 32, scope: !63)
!131 = !DILocation(line: 39, column: 37, scope: !63)
!132 = !DILocation(line: 39, column: 19, scope: !63)
!133 = !DILocation(line: 39, column: 9, scope: !63)
!134 = !DILocation(line: 39, column: 7, scope: !63)
!135 = !DILocation(line: 40, column: 10, scope: !63)
!136 = !DILocation(line: 40, column: 31, scope: !63)
!137 = !DILocation(line: 40, column: 3, scope: !63)
!138 = !DILocation(line: 41, column: 32, scope: !63)
!139 = !DILocation(line: 41, column: 37, scope: !63)
!140 = !DILocation(line: 41, column: 19, scope: !63)
!141 = !DILocation(line: 41, column: 9, scope: !63)
!142 = !DILocation(line: 41, column: 7, scope: !63)
!143 = !DILocation(line: 42, column: 10, scope: !63)
!144 = !DILocation(line: 42, column: 31, scope: !63)
!145 = !DILocation(line: 42, column: 3, scope: !63)
!146 = !DILocation(line: 43, column: 31, scope: !63)
!147 = !DILocation(line: 43, column: 36, scope: !63)
!148 = !DILocation(line: 43, column: 18, scope: !63)
!149 = !DILocation(line: 43, column: 8, scope: !63)
!150 = !DILocation(line: 43, column: 6, scope: !63)
!151 = !DILocation(line: 44, column: 10, scope: !63)
!152 = !DILocation(line: 44, column: 30, scope: !63)
!153 = !DILocation(line: 44, column: 3, scope: !63)
!154 = !DILocation(line: 45, column: 31, scope: !63)
!155 = !DILocation(line: 45, column: 36, scope: !63)
!156 = !DILocation(line: 45, column: 18, scope: !63)
!157 = !DILocation(line: 45, column: 8, scope: !63)
!158 = !DILocation(line: 45, column: 6, scope: !63)
!159 = !DILocation(line: 46, column: 10, scope: !63)
!160 = !DILocation(line: 46, column: 30, scope: !63)
!161 = !DILocation(line: 46, column: 3, scope: !63)
!162 = !DILocation(line: 47, column: 31, scope: !63)
!163 = !DILocation(line: 47, column: 36, scope: !63)
!164 = !DILocation(line: 47, column: 18, scope: !63)
!165 = !DILocation(line: 47, column: 8, scope: !63)
!166 = !DILocation(line: 47, column: 6, scope: !63)
!167 = !DILocation(line: 48, column: 10, scope: !63)
!168 = !DILocation(line: 48, column: 30, scope: !63)
!169 = !DILocation(line: 48, column: 3, scope: !63)
!170 = !DILocation(line: 49, column: 34, scope: !63)
!171 = !DILocation(line: 49, column: 39, scope: !63)
!172 = !DILocation(line: 49, column: 21, scope: !63)
!173 = !DILocation(line: 49, column: 11, scope: !63)
!174 = !DILocation(line: 49, column: 9, scope: !63)
!175 = !DILocation(line: 50, column: 10, scope: !63)
!176 = !DILocation(line: 50, column: 33, scope: !63)
!177 = !DILocation(line: 50, column: 3, scope: !63)
!178 = !DILocation(line: 51, column: 34, scope: !63)
!179 = !DILocation(line: 51, column: 39, scope: !63)
!180 = !DILocation(line: 51, column: 21, scope: !63)
!181 = !DILocation(line: 51, column: 11, scope: !63)
!182 = !DILocation(line: 51, column: 9, scope: !63)
!183 = !DILocation(line: 52, column: 10, scope: !63)
!184 = !DILocation(line: 52, column: 33, scope: !63)
!185 = !DILocation(line: 52, column: 3, scope: !63)
!186 = !DILocation(line: 53, column: 3, scope: !63)
!187 = !DILocation(line: 54, column: 1, scope: !63)
!188 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fName", arg: 1, scope: !68, file: !1, line: 57, type: !10)
!189 = !DILocation(line: 57, column: 23, scope: !68)
!190 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "outR", arg: 2, scope: !68, file: !1, line: 57, type: !60)
!191 = !DILocation(line: 57, column: 37, scope: !68)
!192 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "outI", arg: 3, scope: !68, file: !1, line: 57, type: !60)
!193 = !DILocation(line: 57, column: 50, scope: !68)
!194 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "numX", arg: 4, scope: !68, file: !1, line: 57, type: !8)
!195 = !DILocation(line: 57, column: 60, scope: !68)
!196 = !DILocation(line: 59, column: 15, scope: !68)
!197 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fid", scope: !68, file: !1, line: 59, type: !103)
!198 = !DILocation(line: 59, column: 9, scope: !68)
!199 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp32", scope: !68, file: !1, line: 60, type: !200)
!200 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !201, line: 52, baseType: !202)
!201 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!202 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!203 = !DILocation(line: 60, column: 12, scope: !68)
!204 = !DILocation(line: 62, column: 11, scope: !205)
!205 = distinct !DILexicalBlock(scope: !68, file: !1, line: 62, column: 7)
!206 = !DILocation(line: 62, column: 7, scope: !68)
!207 = !DILocation(line: 64, column: 15, scope: !208)
!208 = distinct !DILexicalBlock(scope: !205, file: !1, line: 63, column: 5)
!209 = !DILocation(line: 64, column: 7, scope: !208)
!210 = !DILocation(line: 65, column: 7, scope: !208)
!211 = !DILocation(line: 69, column: 9, scope: !68)
!212 = !DILocation(line: 70, column: 10, scope: !68)
!213 = !DILocation(line: 70, column: 3, scope: !68)
!214 = !DILocation(line: 73, column: 11, scope: !68)
!215 = !DILocation(line: 73, column: 33, scope: !68)
!216 = !DILocation(line: 73, column: 3, scope: !68)
!217 = !DILocation(line: 74, column: 11, scope: !68)
!218 = !DILocation(line: 74, column: 33, scope: !68)
!219 = !DILocation(line: 74, column: 3, scope: !68)
!220 = !DILocation(line: 75, column: 3, scope: !68)
!221 = !DILocation(line: 76, column: 1, scope: !68)
