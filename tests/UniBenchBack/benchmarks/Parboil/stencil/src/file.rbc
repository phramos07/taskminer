; ModuleID = '/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Parboil/stencil/src/file.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

@.str = private unnamed_addr constant [2 x i8] c"w\00", align 1
@stderr = external global %struct._IO_FILE*, align 8
@.str.1 = private unnamed_addr constant [25 x i8] c"Cannot open output file\0A\00", align 1

; Function Attrs: nounwind uwtable
define void @outputData(i8* %fName, float* %h_A0, i32 %nx, i32 %ny, i32 %nz) #0 {
entry:
  %tmp32 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %fName, i64 0, metadata !17, metadata !18), !dbg !19
  call void @llvm.dbg.value(metadata float* %h_A0, i64 0, metadata !20, metadata !18), !dbg !21
  call void @llvm.dbg.value(metadata i32 %nx, i64 0, metadata !22, metadata !18), !dbg !23
  call void @llvm.dbg.value(metadata i32 %ny, i64 0, metadata !24, metadata !18), !dbg !25
  call void @llvm.dbg.value(metadata i32 %nz, i64 0, metadata !26, metadata !18), !dbg !27
  %call = call %struct._IO_FILE* @fopen(i8* %fName, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0)), !dbg !28
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call, i64 0, metadata !29, metadata !18), !dbg !89
  call void @llvm.dbg.declare(metadata i32* %tmp32, metadata !90, metadata !18), !dbg !94
  %cmp = icmp eq %struct._IO_FILE* %call, null, !dbg !95
  br i1 %cmp, label %if.then, label %if.end, !dbg !97

if.then:                                          ; preds = %entry
  %tmp = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !98
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i32 0, i32 0)), !dbg !100
  call void @exit(i32 -1) #4, !dbg !101
  unreachable, !dbg !101

if.end:                                           ; preds = %entry
  %mul = mul nsw i32 %nx, %ny, !dbg !102
  %mul2 = mul nsw i32 %mul, %nz, !dbg !103
  store i32 %mul2, i32* %tmp32, align 4, !dbg !104
  %tmp1 = bitcast i32* %tmp32 to i8*, !dbg !105
  %call3 = call i64 @fwrite(i8* %tmp1, i64 4, i64 1, %struct._IO_FILE* %call), !dbg !106
  %tmp2 = bitcast float* %h_A0 to i8*, !dbg !107
  %tmp3 = load i32, i32* %tmp32, align 4, !dbg !108
  %conv = zext i32 %tmp3 to i64, !dbg !108
  %call4 = call i64 @fwrite(i8* %tmp2, i64 4, i64 %conv, %struct._IO_FILE* %call), !dbg !109
  %call5 = call i32 @fclose(%struct._IO_FILE* %call), !dbg !110
  ret void, !dbg !111
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare %struct._IO_FILE* @fopen(i8*, i8*) #2

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: noreturn nounwind
declare void @exit(i32) #3

declare i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #2

declare i32 @fclose(%struct._IO_FILE*) #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!14, !15}
!llvm.ident = !{!16}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !5)
!1 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Parboil/stencil/src/file.c", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!2 = !{}
!3 = !{!4}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!5 = !{!6}
!6 = !DISubprogram(name: "outputData", scope: !1, file: !1, line: 20, type: !7, isLocal: false, isDefinition: true, scopeLine: 21, flags: DIFlagPrototyped, isOptimized: false, function: void (i8*, float*, i32, i32, i32)* @outputData, variables: !2)
!7 = !DISubroutineType(types: !8)
!8 = !{null, !9, !11, !13, !13, !13}
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10, size: 64, align: 64)
!10 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!11 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64, align: 64)
!12 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!13 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!14 = !{i32 2, !"Dwarf Version", i32 4}
!15 = !{i32 2, !"Debug Info Version", i32 3}
!16 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!17 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fName", arg: 1, scope: !6, file: !1, line: 20, type: !9)
!18 = !DIExpression()
!19 = !DILocation(line: 20, column: 23, scope: !6)
!20 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "h_A0", arg: 2, scope: !6, file: !1, line: 20, type: !11)
!21 = !DILocation(line: 20, column: 37, scope: !6)
!22 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nx", arg: 3, scope: !6, file: !1, line: 20, type: !13)
!23 = !DILocation(line: 20, column: 46, scope: !6)
!24 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ny", arg: 4, scope: !6, file: !1, line: 20, type: !13)
!25 = !DILocation(line: 20, column: 53, scope: !6)
!26 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nz", arg: 5, scope: !6, file: !1, line: 20, type: !13)
!27 = !DILocation(line: 20, column: 60, scope: !6)
!28 = !DILocation(line: 22, column: 15, scope: !6)
!29 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fid", scope: !6, file: !1, line: 22, type: !30)
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64, align: 64)
!31 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !32, line: 49, baseType: !33)
!32 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!33 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !34, line: 273, size: 1728, align: 64, elements: !35)
!34 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!35 = !{!36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !56, !57, !58, !59, !63, !65, !67, !71, !74, !76, !77, !78, !79, !80, !84, !85}
!36 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !33, file: !34, line: 274, baseType: !13, size: 32, align: 32)
!37 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !33, file: !34, line: 279, baseType: !9, size: 64, align: 64, offset: 64)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !33, file: !34, line: 280, baseType: !9, size: 64, align: 64, offset: 128)
!39 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !33, file: !34, line: 281, baseType: !9, size: 64, align: 64, offset: 192)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !33, file: !34, line: 282, baseType: !9, size: 64, align: 64, offset: 256)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !33, file: !34, line: 283, baseType: !9, size: 64, align: 64, offset: 320)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !33, file: !34, line: 284, baseType: !9, size: 64, align: 64, offset: 384)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !33, file: !34, line: 285, baseType: !9, size: 64, align: 64, offset: 448)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !33, file: !34, line: 286, baseType: !9, size: 64, align: 64, offset: 512)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !33, file: !34, line: 288, baseType: !9, size: 64, align: 64, offset: 576)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !33, file: !34, line: 289, baseType: !9, size: 64, align: 64, offset: 640)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !33, file: !34, line: 290, baseType: !9, size: 64, align: 64, offset: 704)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !33, file: !34, line: 292, baseType: !49, size: 64, align: 64, offset: 768)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64, align: 64)
!50 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !34, line: 188, size: 192, align: 64, elements: !51)
!51 = !{!52, !53, !55}
!52 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !50, file: !34, line: 189, baseType: !49, size: 64, align: 64)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !50, file: !34, line: 190, baseType: !54, size: 64, align: 64, offset: 64)
!54 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !33, size: 64, align: 64)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !50, file: !34, line: 194, baseType: !13, size: 32, align: 32, offset: 128)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !33, file: !34, line: 294, baseType: !54, size: 64, align: 64, offset: 832)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !33, file: !34, line: 296, baseType: !13, size: 32, align: 32, offset: 896)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !33, file: !34, line: 300, baseType: !13, size: 32, align: 32, offset: 928)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !33, file: !34, line: 302, baseType: !60, size: 64, align: 64, offset: 960)
!60 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !61, line: 141, baseType: !62)
!61 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!62 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !33, file: !34, line: 306, baseType: !64, size: 16, align: 16, offset: 1024)
!64 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !33, file: !34, line: 307, baseType: !66, size: 8, align: 8, offset: 1040)
!66 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !33, file: !34, line: 308, baseType: !68, size: 8, align: 8, offset: 1048)
!68 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 8, align: 8, elements: !69)
!69 = !{!70}
!70 = !DISubrange(count: 1)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !33, file: !34, line: 312, baseType: !72, size: 64, align: 64, offset: 1088)
!72 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !73, size: 64, align: 64)
!73 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !34, line: 182, baseType: null)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !33, file: !34, line: 321, baseType: !75, size: 64, align: 64, offset: 1152)
!75 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !61, line: 142, baseType: !62)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !33, file: !34, line: 330, baseType: !4, size: 64, align: 64, offset: 1216)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !33, file: !34, line: 331, baseType: !4, size: 64, align: 64, offset: 1280)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !33, file: !34, line: 332, baseType: !4, size: 64, align: 64, offset: 1344)
!79 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !33, file: !34, line: 333, baseType: !4, size: 64, align: 64, offset: 1408)
!80 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !33, file: !34, line: 334, baseType: !81, size: 64, align: 64, offset: 1472)
!81 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !82, line: 62, baseType: !83)
!82 = !DIFile(filename: "/home/gleison/lge/llvm-3.7-src/build-debug/bin/../lib/clang/3.7.0/include/stddef.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!83 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !33, file: !34, line: 336, baseType: !13, size: 32, align: 32, offset: 1536)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !33, file: !34, line: 338, baseType: !86, size: 160, align: 8, offset: 1568)
!86 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10, size: 160, align: 8, elements: !87)
!87 = !{!88}
!88 = !DISubrange(count: 20)
!89 = !DILocation(line: 22, column: 9, scope: !6)
!90 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp32", scope: !6, file: !1, line: 23, type: !91)
!91 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !92, line: 52, baseType: !93)
!92 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!93 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!94 = !DILocation(line: 23, column: 12, scope: !6)
!95 = !DILocation(line: 24, column: 11, scope: !96)
!96 = distinct !DILexicalBlock(scope: !6, file: !1, line: 24, column: 7)
!97 = !DILocation(line: 24, column: 7, scope: !6)
!98 = !DILocation(line: 26, column: 15, scope: !99)
!99 = distinct !DILexicalBlock(scope: !96, file: !1, line: 25, column: 5)
!100 = !DILocation(line: 26, column: 7, scope: !99)
!101 = !DILocation(line: 27, column: 7, scope: !99)
!102 = !DILocation(line: 29, column: 13, scope: !6)
!103 = !DILocation(line: 29, column: 16, scope: !6)
!104 = !DILocation(line: 29, column: 9, scope: !6)
!105 = !DILocation(line: 30, column: 10, scope: !6)
!106 = !DILocation(line: 30, column: 3, scope: !6)
!107 = !DILocation(line: 31, column: 10, scope: !6)
!108 = !DILocation(line: 31, column: 31, scope: !6)
!109 = !DILocation(line: 31, column: 3, scope: !6)
!110 = !DILocation(line: 33, column: 3, scope: !6)
!111 = !DILocation(line: 34, column: 1, scope: !6)
