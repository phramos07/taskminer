; ModuleID = '/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Parboil/stencil/src/main.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.pb_Parameters = type { i8*, i8** }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.timezone = type { i32, i32 }
%struct.timeval = type { i64, i64 }

@.str = private unnamed_addr constant [35 x i8] c"Error return from gettimeofday: %d\00", align 1
@NZ = common global i32 0, align 4
@NY = common global i32 0, align 4
@NX = common global i32 0, align 4
@.str.1 = private unnamed_addr constant [74 x i8] c"Non-Matching CPU-GPU Outputs Beyond Error Threshold of %4.2f Percent: %d\0A\00", align 1
@.str.2 = private unnamed_addr constant [113 x i8] c"Usage: probe nx ny nz tx ty t\0Anx: the grid size x\0Any: the grid size y\0Anz: the grid size z\0At: the iteration time\0A\00", align 1
@parameters = common global %struct.pb_Parameters* null, align 8
@.str.3 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@t_start_GPU = common global double 0.000000e+00, align 8
@t_end_GPU = common global double 0.000000e+00, align 8
@h_Anext_GPU = common global float* null, align 8
@t_start = common global double 0.000000e+00, align 8
@t_end = common global double 0.000000e+00, align 8
@h_Anext_CPU = common global float* null, align 8
@stdout = external global %struct._IO_FILE*, align 8
@.str.4 = private unnamed_addr constant [22 x i8] c"GPU Runtime: %0.6lfs\0A\00", align 1
@.str.5 = private unnamed_addr constant [22 x i8] c"CPU Runtime: %0.6lfs\0A\00", align 1

; Function Attrs: nounwind uwtable
define double @rtclock() #0 {
entry:
  %Tzp = alloca %struct.timezone, align 4
  %Tp = alloca %struct.timeval, align 8
  call void @llvm.dbg.declare(metadata %struct.timezone* %Tzp, metadata !117, metadata !123), !dbg !124
  call void @llvm.dbg.declare(metadata %struct.timeval* %Tp, metadata !125, metadata !123), !dbg !133
  %call = call i32 @gettimeofday(%struct.timeval* %Tp, %struct.timezone* %Tzp) #5, !dbg !134
  call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !135, metadata !123), !dbg !136
  %cmp = icmp ne i32 %call, 0, !dbg !137
  br i1 %cmp, label %if.then, label %if.end, !dbg !139

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i32 0, i32 0), i32 %call), !dbg !140
  br label %if.end, !dbg !140

if.end:                                           ; preds = %if.then, %entry
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %Tp, i32 0, i32 0, !dbg !141
  %tmp = load i64, i64* %tv_sec, align 8, !dbg !141
  %conv = sitofp i64 %tmp to double, !dbg !142
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %Tp, i32 0, i32 1, !dbg !143
  %tmp1 = load i64, i64* %tv_usec, align 8, !dbg !143
  %conv2 = sitofp i64 %tmp1 to double, !dbg !144
  %mul = fmul double %conv2, 1.000000e-06, !dbg !145
  %add = fadd double %conv, %mul, !dbg !146
  ret double %add, !dbg !147
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timeval*, %struct.timezone*) #2

declare i32 @printf(i8*, ...) #3

; Function Attrs: nounwind uwtable
define float @absVal(float %a) #0 {
entry:
  call void @llvm.dbg.value(metadata float %a, i64 0, metadata !148, metadata !123), !dbg !149
  %cmp = fcmp olt float %a, 0.000000e+00, !dbg !150
  br i1 %cmp, label %if.then, label %if.else, !dbg !152

if.then:                                          ; preds = %entry
  %mul = fmul float %a, -1.000000e+00, !dbg !153
  br label %return, !dbg !155

if.else:                                          ; preds = %entry
  br label %return, !dbg !156

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi float [ %mul, %if.then ], [ %a, %if.else ]
  ret float %retval.0, !dbg !158
}

; Function Attrs: nounwind uwtable
define float @percentDiff(double %val1, double %val2) #0 {
entry:
  call void @llvm.dbg.value(metadata double %val1, i64 0, metadata !159, metadata !123), !dbg !160
  call void @llvm.dbg.value(metadata double %val2, i64 0, metadata !161, metadata !123), !dbg !162
  %conv = fptrunc double %val1 to float, !dbg !163
  %call = call float @absVal(float %conv), !dbg !165
  %conv1 = fpext float %call to double, !dbg !165
  %cmp = fcmp olt double %conv1, 1.000000e-02, !dbg !166
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !167

land.lhs.true:                                    ; preds = %entry
  %conv3 = fptrunc double %val2 to float, !dbg !168
  %call4 = call float @absVal(float %conv3), !dbg !170
  %conv5 = fpext float %call4 to double, !dbg !170
  %cmp6 = fcmp olt double %conv5, 1.000000e-02, !dbg !171
  br i1 %cmp6, label %if.then, label %if.else, !dbg !172

if.then:                                          ; preds = %land.lhs.true
  br label %return, !dbg !173

if.else:                                          ; preds = %land.lhs.true, %entry
  %sub = fsub double %val1, %val2, !dbg !175
  %conv8 = fptrunc double %sub to float, !dbg !177
  %call9 = call float @absVal(float %conv8), !dbg !178
  %add = fadd double %val1, 0x3E45798EE0000000, !dbg !179
  %conv10 = fptrunc double %add to float, !dbg !180
  %call11 = call float @absVal(float %conv10), !dbg !181
  %div = fdiv float %call9, %call11, !dbg !182
  %call12 = call float @absVal(float %div), !dbg !183
  %mul = fmul float 1.000000e+02, %call12, !dbg !184
  br label %return, !dbg !185

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi float [ 0.000000e+00, %if.then ], [ %mul, %if.else ]
  ret float %retval.0, !dbg !186
}

; Function Attrs: nounwind uwtable
define void @compareResults(float* %A, float* %A_GPU) #0 {
entry:
  %tmp = load i32, i32* @NZ, align 4, !dbg !187
  %tmp1 = load i32, i32* @NY, align 4, !dbg !190
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !194, metadata !123), !dbg !195
  %tmp2 = load i32, i32* @NX, align 4, !dbg !196
  call void @llvm.dbg.value(metadata i32 %inc21, i64 0, metadata !200, metadata !123), !dbg !201
  %tmp3 = load i32, i32* @NX, align 4, !dbg !202
  %tmp4 = load i32, i32* @NY, align 4, !dbg !202
  %tmp6 = load i32, i32* @NX, align 4, !dbg !205
  %tmp7 = load i32, i32* @NY, align 4, !dbg !205
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !206, metadata !123), !dbg !207
  call void @llvm.dbg.value(metadata i32 %inc19, i64 0, metadata !194, metadata !123), !dbg !195
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !200, metadata !123), !dbg !201
  call void @llvm.dbg.value(metadata i32 %inc24, i64 0, metadata !208, metadata !123), !dbg !209
  call void @llvm.dbg.value(metadata float* %A, i64 0, metadata !210, metadata !123), !dbg !211
  call void @llvm.dbg.value(metadata float* %A_GPU, i64 0, metadata !212, metadata !123), !dbg !213
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !206, metadata !123), !dbg !207
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !208, metadata !123), !dbg !209
  %scevgep = getelementptr float, float* %A_GPU, i64 0, !dbg !214
  %0 = mul i32 %tmp6, %tmp7, !dbg !215
  %scevgep12 = getelementptr float, float* %A, i64 0, !dbg !214
  %1 = mul i32 %tmp3, %tmp4, !dbg !215
  %scevgep14 = getelementptr float, float* %A_GPU, i64 0, !dbg !214
  %2 = mul i32 %tmp6, %tmp7, !dbg !215
  %scevgep19 = getelementptr float, float* %A, i64 0, !dbg !214
  %3 = mul i32 %tmp3, %tmp4, !dbg !215
  %scevgep21 = getelementptr float, float* %A_GPU, i64 0, !dbg !214
  %4 = mul i32 %tmp6, %tmp7, !dbg !216
  %scevgep26 = getelementptr float, float* %A, i64 0, !dbg !214
  %5 = mul i32 %tmp3, %tmp4, !dbg !216
  %scevgep28 = getelementptr float, float* %A_GPU, i64 0, !dbg !214
  %6 = mul i32 %tmp6, %tmp7, !dbg !215
  %scevgep33 = getelementptr float, float* %A, i64 0, !dbg !214
  %7 = mul i32 %tmp3, %tmp4, !dbg !215
  %scevgep35 = getelementptr float, float* %A_GPU, i64 0, !dbg !214
  %8 = mul i32 %tmp6, %tmp7, !dbg !215
  %scevgep40 = getelementptr float, float* %A, i64 0, !dbg !214
  %9 = mul i32 %tmp3, %tmp4, !dbg !215
  %scevgep42 = getelementptr float, float* %A_GPU, i64 0, !dbg !214
  %10 = mul i32 %tmp6, %tmp7, !dbg !216
  %scevgep47 = getelementptr float, float* %A, i64 0, !dbg !214
  %11 = mul i32 %tmp3, %tmp4, !dbg !216
  %scevgep49 = getelementptr float, float* %A_GPU, i64 0, !dbg !214
  %12 = mul i32 %tmp6, %tmp7, !dbg !217
  %scevgep54 = getelementptr float, float* %A, i64 0, !dbg !214
  %13 = mul i32 %tmp3, %tmp4, !dbg !217
  %scevgep56 = getelementptr float, float* %A_GPU, i64 0, !dbg !214
  %14 = mul i32 %tmp6, %tmp7, !dbg !216
  %scevgep61 = getelementptr float, float* %A, i64 0, !dbg !214
  %15 = mul i32 %tmp3, %tmp4, !dbg !216
  %scevgep63 = getelementptr float, float* %A_GPU, i64 0, !dbg !214
  %16 = mul i32 %tmp6, %tmp7, !dbg !216
  %scevgep68 = getelementptr float, float* %A, i64 0, !dbg !214
  %17 = mul i32 %tmp3, %tmp4, !dbg !216
  %scevgep70 = getelementptr float, float* %A_GPU, i64 0, !dbg !214
  %18 = mul i32 %tmp6, %tmp7, !dbg !202
  %scevgep75 = getelementptr float, float* %A, i64 0, !dbg !214
  %19 = mul i32 %tmp3, %tmp4, !dbg !202
  %scevgep77 = getelementptr float, float* %A_GPU, i64 0, !dbg !214
  %20 = mul i32 %tmp6, %tmp7, !dbg !202
  %scevgep82 = getelementptr float, float* %A, i64 0, !dbg !214
  %21 = mul i32 %tmp3, %tmp4, !dbg !202
  %scevgep84 = getelementptr float, float* %A_GPU, i64 0, !dbg !214
  %22 = mul i32 %tmp6, %tmp7, !dbg !217
  %scevgep89 = getelementptr float, float* %A, i64 0, !dbg !214
  %23 = mul i32 %tmp3, %tmp4, !dbg !217
  %scevgep91 = getelementptr float, float* %A_GPU, i64 0, !dbg !214
  %24 = mul i32 %tmp6, %tmp7, !dbg !217
  %scevgep96 = getelementptr float, float* %A, i64 0, !dbg !214
  %25 = mul i32 %tmp3, %tmp4, !dbg !217
  br label %for.cond, !dbg !214

for.cond:                                         ; preds = %for.inc.23, %entry
  %k.0 = phi i32 [ 0, %entry ], [ %inc24, %for.inc.23 ]
  %fail.0 = phi i32 [ 0, %entry ], [ %fail.1.lcssa, %for.inc.23 ]
  %26 = icmp sgt i32 %tmp, 0, !dbg !215
  %smax36 = select i1 %26, i32 %tmp, i32 0, !dbg !215
  %27 = mul i32 %8, %smax36, !dbg !215
  %28 = add i32 0, %27, !dbg !215
  %29 = icmp sgt i32 %tmp1, 0, !dbg !215
  %smax37 = select i1 %29, i32 %tmp1, i32 0, !dbg !215
  %30 = mul i32 %tmp6, %smax37, !dbg !215
  %31 = add i32 %28, %30, !dbg !215
  %32 = icmp sgt i32 %tmp2, 0, !dbg !215
  %smax38 = select i1 %32, i32 %tmp2, i32 0, !dbg !215
  %33 = mul i32 1, %smax38, !dbg !215
  %34 = add i32 %31, %33, !dbg !215
  %35 = sext i32 %34 to i64, !dbg !215
  %36 = mul i64 4, %35, !dbg !215
  %scevgep39 = getelementptr float, float* %A_GPU, i64 %35, !dbg !215
  %37 = mul i32 %9, %smax36, !dbg !215
  %38 = add i32 0, %37, !dbg !215
  %39 = mul i32 %tmp3, %smax37, !dbg !215
  %40 = add i32 %38, %39, !dbg !215
  %41 = mul i32 1, %smax38, !dbg !215
  %42 = add i32 %40, %41, !dbg !215
  %43 = sext i32 %42 to i64, !dbg !215
  %44 = mul i64 4, %43, !dbg !215
  %scevgep41 = getelementptr float, float* %A, i64 %43, !dbg !215
  %45 = icmp sgt i32 %tmp, 0, !dbg !215
  %smax29 = select i1 %45, i32 %tmp, i32 0, !dbg !215
  %46 = mul i32 %6, %smax29, !dbg !215
  %47 = add i32 0, %46, !dbg !215
  %48 = icmp sgt i32 %tmp1, 0, !dbg !215
  %smax30 = select i1 %48, i32 %tmp1, i32 0, !dbg !215
  %49 = mul i32 %tmp6, %smax30, !dbg !215
  %50 = add i32 %47, %49, !dbg !215
  %51 = icmp sgt i32 %tmp2, 0, !dbg !215
  %smax31 = select i1 %51, i32 %tmp2, i32 0, !dbg !215
  %52 = mul i32 1, %smax31, !dbg !215
  %53 = add i32 %50, %52, !dbg !215
  %54 = sext i32 %53 to i64, !dbg !215
  %55 = mul i64 4, %54, !dbg !215
  %scevgep32 = getelementptr float, float* %A_GPU, i64 %54, !dbg !215
  %56 = mul i32 %7, %smax29, !dbg !215
  %57 = add i32 0, %56, !dbg !215
  %58 = mul i32 %tmp3, %smax30, !dbg !215
  %59 = add i32 %57, %58, !dbg !215
  %60 = mul i32 1, %smax31, !dbg !215
  %61 = add i32 %59, %60, !dbg !215
  %62 = sext i32 %61 to i64, !dbg !215
  %63 = mul i64 4, %62, !dbg !215
  %scevgep34 = getelementptr float, float* %A, i64 %62, !dbg !215
  %64 = icmp sgt i32 %tmp, 0, !dbg !215
  %smax15 = select i1 %64, i32 %tmp, i32 0, !dbg !215
  %65 = mul i32 %2, %smax15, !dbg !215
  %66 = add i32 0, %65, !dbg !215
  %67 = icmp sgt i32 %tmp1, 0, !dbg !215
  %smax16 = select i1 %67, i32 %tmp1, i32 0, !dbg !215
  %68 = mul i32 %tmp6, %smax16, !dbg !215
  %69 = add i32 %66, %68, !dbg !215
  %70 = icmp sgt i32 %tmp2, 0, !dbg !215
  %smax17 = select i1 %70, i32 %tmp2, i32 0, !dbg !215
  %71 = mul i32 1, %smax17, !dbg !215
  %72 = add i32 %69, %71, !dbg !215
  %73 = sext i32 %72 to i64, !dbg !215
  %74 = mul i64 4, %73, !dbg !215
  %scevgep18 = getelementptr float, float* %A_GPU, i64 %73, !dbg !215
  %75 = mul i32 %3, %smax15, !dbg !215
  %76 = add i32 0, %75, !dbg !215
  %77 = mul i32 %tmp3, %smax16, !dbg !215
  %78 = add i32 %76, %77, !dbg !215
  %79 = mul i32 1, %smax17, !dbg !215
  %80 = add i32 %78, %79, !dbg !215
  %81 = sext i32 %80 to i64, !dbg !215
  %82 = mul i64 4, %81, !dbg !215
  %scevgep20 = getelementptr float, float* %A, i64 %81, !dbg !215
  %83 = icmp sgt i32 %tmp, 0, !dbg !215
  %smax = select i1 %83, i32 %tmp, i32 0, !dbg !215
  %84 = mul i32 %0, %smax, !dbg !215
  %85 = add i32 0, %84, !dbg !215
  %86 = icmp sgt i32 %tmp1, 0, !dbg !215
  %smax9 = select i1 %86, i32 %tmp1, i32 0, !dbg !215
  %87 = mul i32 %tmp6, %smax9, !dbg !215
  %88 = add i32 %85, %87, !dbg !215
  %89 = icmp sgt i32 %tmp2, 0, !dbg !215
  %smax10 = select i1 %89, i32 %tmp2, i32 0, !dbg !215
  %90 = mul i32 1, %smax10, !dbg !215
  %91 = add i32 %88, %90, !dbg !215
  %92 = sext i32 %91 to i64, !dbg !215
  %93 = mul i64 4, %92, !dbg !215
  %scevgep11 = getelementptr float, float* %A_GPU, i64 %92, !dbg !215
  %94 = mul i32 %1, %smax, !dbg !215
  %95 = add i32 0, %94, !dbg !215
  %96 = mul i32 %tmp3, %smax9, !dbg !215
  %97 = add i32 %95, %96, !dbg !215
  %98 = mul i32 1, %smax10, !dbg !215
  %99 = add i32 %97, %98, !dbg !215
  %100 = sext i32 %99 to i64, !dbg !215
  %101 = mul i64 4, %100, !dbg !215
  %scevgep13 = getelementptr float, float* %A, i64 %100, !dbg !215
  %cmp = icmp slt i32 %k.0, %tmp, !dbg !215
  br i1 %cmp, label %for.body, label %for.end.25, !dbg !218

for.body:                                         ; preds = %for.cond
  br label %for.cond.1, !dbg !219

for.cond.1:                                       ; preds = %for.inc.20, %for.body
  %j.0 = phi i32 [ 0, %for.body ], [ %inc21, %for.inc.20 ]
  %fail.1 = phi i32 [ %fail.0, %for.body ], [ %fail.2.lcssa, %for.inc.20 ]
  %102 = icmp sgt i32 %tmp, 0, !dbg !216
  %smax64 = select i1 %102, i32 %tmp, i32 0, !dbg !216
  %103 = mul i32 %16, %smax64, !dbg !216
  %104 = add i32 0, %103, !dbg !216
  %105 = icmp sgt i32 %tmp1, 0, !dbg !216
  %smax65 = select i1 %105, i32 %tmp1, i32 0, !dbg !216
  %106 = mul i32 %tmp6, %smax65, !dbg !216
  %107 = add i32 %104, %106, !dbg !216
  %108 = icmp sgt i32 %tmp2, 0, !dbg !216
  %smax66 = select i1 %108, i32 %tmp2, i32 0, !dbg !216
  %109 = mul i32 1, %smax66, !dbg !216
  %110 = add i32 %107, %109, !dbg !216
  %111 = sext i32 %110 to i64, !dbg !216
  %112 = mul i64 4, %111, !dbg !216
  %scevgep67 = getelementptr float, float* %A_GPU, i64 %111, !dbg !216
  %113 = mul i32 %17, %smax64, !dbg !216
  %114 = add i32 0, %113, !dbg !216
  %115 = mul i32 %tmp3, %smax65, !dbg !216
  %116 = add i32 %114, %115, !dbg !216
  %117 = mul i32 1, %smax66, !dbg !216
  %118 = add i32 %116, %117, !dbg !216
  %119 = sext i32 %118 to i64, !dbg !216
  %120 = mul i64 4, %119, !dbg !216
  %scevgep69 = getelementptr float, float* %A, i64 %119, !dbg !216
  %121 = icmp sgt i32 %tmp, 0, !dbg !216
  %smax57 = select i1 %121, i32 %tmp, i32 0, !dbg !216
  %122 = mul i32 %14, %smax57, !dbg !216
  %123 = add i32 0, %122, !dbg !216
  %124 = icmp sgt i32 %tmp1, 0, !dbg !216
  %smax58 = select i1 %124, i32 %tmp1, i32 0, !dbg !216
  %125 = mul i32 %tmp6, %smax58, !dbg !216
  %126 = add i32 %123, %125, !dbg !216
  %127 = icmp sgt i32 %tmp2, 0, !dbg !216
  %smax59 = select i1 %127, i32 %tmp2, i32 0, !dbg !216
  %128 = mul i32 1, %smax59, !dbg !216
  %129 = add i32 %126, %128, !dbg !216
  %130 = sext i32 %129 to i64, !dbg !216
  %131 = mul i64 4, %130, !dbg !216
  %scevgep60 = getelementptr float, float* %A_GPU, i64 %130, !dbg !216
  %132 = mul i32 %15, %smax57, !dbg !216
  %133 = add i32 0, %132, !dbg !216
  %134 = mul i32 %tmp3, %smax58, !dbg !216
  %135 = add i32 %133, %134, !dbg !216
  %136 = mul i32 1, %smax59, !dbg !216
  %137 = add i32 %135, %136, !dbg !216
  %138 = sext i32 %137 to i64, !dbg !216
  %139 = mul i64 4, %138, !dbg !216
  %scevgep62 = getelementptr float, float* %A, i64 %138, !dbg !216
  %140 = icmp sgt i32 %tmp, 0, !dbg !216
  %smax43 = select i1 %140, i32 %tmp, i32 0, !dbg !216
  %141 = mul i32 %10, %smax43, !dbg !216
  %142 = add i32 0, %141, !dbg !216
  %143 = icmp sgt i32 %tmp1, 0, !dbg !216
  %smax44 = select i1 %143, i32 %tmp1, i32 0, !dbg !216
  %144 = mul i32 %tmp6, %smax44, !dbg !216
  %145 = add i32 %142, %144, !dbg !216
  %146 = icmp sgt i32 %tmp2, 0, !dbg !216
  %smax45 = select i1 %146, i32 %tmp2, i32 0, !dbg !216
  %147 = mul i32 1, %smax45, !dbg !216
  %148 = add i32 %145, %147, !dbg !216
  %149 = sext i32 %148 to i64, !dbg !216
  %150 = mul i64 4, %149, !dbg !216
  %scevgep46 = getelementptr float, float* %A_GPU, i64 %149, !dbg !216
  %151 = mul i32 %11, %smax43, !dbg !216
  %152 = add i32 0, %151, !dbg !216
  %153 = mul i32 %tmp3, %smax44, !dbg !216
  %154 = add i32 %152, %153, !dbg !216
  %155 = mul i32 1, %smax45, !dbg !216
  %156 = add i32 %154, %155, !dbg !216
  %157 = sext i32 %156 to i64, !dbg !216
  %158 = mul i64 4, %157, !dbg !216
  %scevgep48 = getelementptr float, float* %A, i64 %157, !dbg !216
  %159 = icmp sgt i32 %tmp, 0, !dbg !216
  %smax22 = select i1 %159, i32 %tmp, i32 0, !dbg !216
  %160 = mul i32 %4, %smax22, !dbg !216
  %161 = add i32 0, %160, !dbg !216
  %162 = icmp sgt i32 %tmp1, 0, !dbg !216
  %smax23 = select i1 %162, i32 %tmp1, i32 0, !dbg !216
  %163 = mul i32 %tmp6, %smax23, !dbg !216
  %164 = add i32 %161, %163, !dbg !216
  %165 = icmp sgt i32 %tmp2, 0, !dbg !216
  %smax24 = select i1 %165, i32 %tmp2, i32 0, !dbg !216
  %166 = mul i32 1, %smax24, !dbg !216
  %167 = add i32 %164, %166, !dbg !216
  %168 = sext i32 %167 to i64, !dbg !216
  %169 = mul i64 4, %168, !dbg !216
  %scevgep25 = getelementptr float, float* %A_GPU, i64 %168, !dbg !216
  %170 = mul i32 %5, %smax22, !dbg !216
  %171 = add i32 0, %170, !dbg !216
  %172 = mul i32 %tmp3, %smax23, !dbg !216
  %173 = add i32 %171, %172, !dbg !216
  %174 = mul i32 1, %smax24, !dbg !216
  %175 = add i32 %173, %174, !dbg !216
  %176 = sext i32 %175 to i64, !dbg !216
  %177 = mul i64 4, %176, !dbg !216
  %scevgep27 = getelementptr float, float* %A, i64 %176, !dbg !216
  %cmp2 = icmp slt i32 %j.0, %tmp1, !dbg !216
  br i1 %cmp2, label %for.body.3, label %for.end.22, !dbg !220

for.body.3:                                       ; preds = %for.cond.1
  br label %for.cond.4, !dbg !221

for.cond.4:                                       ; preds = %for.inc, %for.body.3
  %i.0 = phi i32 [ 0, %for.body.3 ], [ %inc19, %for.inc ]
  %fail.2 = phi i32 [ %fail.1, %for.body.3 ], [ %fail.3, %for.inc ]
  %178 = icmp sgt i32 %tmp, 0, !dbg !217
  %smax92 = select i1 %178, i32 %tmp, i32 0, !dbg !217
  %179 = mul i32 %24, %smax92, !dbg !217
  %180 = add i32 0, %179, !dbg !217
  %181 = icmp sgt i32 %tmp1, 0, !dbg !217
  %smax93 = select i1 %181, i32 %tmp1, i32 0, !dbg !217
  %182 = mul i32 %tmp6, %smax93, !dbg !217
  %183 = add i32 %180, %182, !dbg !217
  %184 = icmp sgt i32 %tmp2, 0, !dbg !217
  %smax94 = select i1 %184, i32 %tmp2, i32 0, !dbg !217
  %185 = mul i32 1, %smax94, !dbg !217
  %186 = add i32 %183, %185, !dbg !217
  %187 = sext i32 %186 to i64, !dbg !217
  %188 = mul i64 4, %187, !dbg !217
  %scevgep95 = getelementptr float, float* %A_GPU, i64 %187, !dbg !217
  %189 = mul i32 %25, %smax92, !dbg !217
  %190 = add i32 0, %189, !dbg !217
  %191 = mul i32 %tmp3, %smax93, !dbg !217
  %192 = add i32 %190, %191, !dbg !217
  %193 = mul i32 1, %smax94, !dbg !217
  %194 = add i32 %192, %193, !dbg !217
  %195 = sext i32 %194 to i64, !dbg !217
  %196 = mul i64 4, %195, !dbg !217
  %scevgep97 = getelementptr float, float* %A, i64 %195, !dbg !217
  %197 = icmp sgt i32 %tmp, 0, !dbg !217
  %smax85 = select i1 %197, i32 %tmp, i32 0, !dbg !217
  %198 = mul i32 %22, %smax85, !dbg !217
  %199 = add i32 0, %198, !dbg !217
  %200 = icmp sgt i32 %tmp1, 0, !dbg !217
  %smax86 = select i1 %200, i32 %tmp1, i32 0, !dbg !217
  %201 = mul i32 %tmp6, %smax86, !dbg !217
  %202 = add i32 %199, %201, !dbg !217
  %203 = icmp sgt i32 %tmp2, 0, !dbg !217
  %smax87 = select i1 %203, i32 %tmp2, i32 0, !dbg !217
  %204 = mul i32 1, %smax87, !dbg !217
  %205 = add i32 %202, %204, !dbg !217
  %206 = sext i32 %205 to i64, !dbg !217
  %207 = mul i64 4, %206, !dbg !217
  %scevgep88 = getelementptr float, float* %A_GPU, i64 %206, !dbg !217
  %208 = mul i32 %23, %smax85, !dbg !217
  %209 = add i32 0, %208, !dbg !217
  %210 = mul i32 %tmp3, %smax86, !dbg !217
  %211 = add i32 %209, %210, !dbg !217
  %212 = mul i32 1, %smax87, !dbg !217
  %213 = add i32 %211, %212, !dbg !217
  %214 = sext i32 %213 to i64, !dbg !217
  %215 = mul i64 4, %214, !dbg !217
  %scevgep90 = getelementptr float, float* %A, i64 %214, !dbg !217
  %216 = icmp sgt i32 %tmp, 0, !dbg !217
  %smax50 = select i1 %216, i32 %tmp, i32 0, !dbg !217
  %217 = mul i32 %12, %smax50, !dbg !217
  %218 = add i32 0, %217, !dbg !217
  %219 = icmp sgt i32 %tmp1, 0, !dbg !217
  %smax51 = select i1 %219, i32 %tmp1, i32 0, !dbg !217
  %220 = mul i32 %tmp6, %smax51, !dbg !217
  %221 = add i32 %218, %220, !dbg !217
  %222 = icmp sgt i32 %tmp2, 0, !dbg !217
  %smax52 = select i1 %222, i32 %tmp2, i32 0, !dbg !217
  %223 = mul i32 1, %smax52, !dbg !217
  %224 = add i32 %221, %223, !dbg !217
  %225 = sext i32 %224 to i64, !dbg !217
  %226 = mul i64 4, %225, !dbg !217
  %scevgep53 = getelementptr float, float* %A_GPU, i64 %225, !dbg !217
  %227 = mul i32 %13, %smax50, !dbg !217
  %228 = add i32 0, %227, !dbg !217
  %229 = mul i32 %tmp3, %smax51, !dbg !217
  %230 = add i32 %228, %229, !dbg !217
  %231 = mul i32 1, %smax52, !dbg !217
  %232 = add i32 %230, %231, !dbg !217
  %233 = sext i32 %232 to i64, !dbg !217
  %234 = mul i64 4, %233, !dbg !217
  %scevgep55 = getelementptr float, float* %A, i64 %233, !dbg !217
  %cmp5 = icmp slt i32 %i.0, %tmp2, !dbg !217
  br i1 %cmp5, label %for.body.6, label %for.end, !dbg !222

for.body.6:                                       ; preds = %for.cond.4
  %235 = icmp sgt i32 %tmp, 0, !dbg !202
  %smax78 = select i1 %235, i32 %tmp, i32 0, !dbg !202
  %236 = mul i32 %20, %smax78, !dbg !202
  %237 = add i32 0, %236, !dbg !202
  %238 = icmp sgt i32 %tmp1, 0, !dbg !202
  %smax79 = select i1 %238, i32 %tmp1, i32 0, !dbg !202
  %239 = mul i32 %tmp6, %smax79, !dbg !202
  %240 = add i32 %237, %239, !dbg !202
  %241 = icmp sgt i32 %tmp2, 0, !dbg !202
  %smax80 = select i1 %241, i32 %tmp2, i32 0, !dbg !202
  %242 = mul i32 1, %smax80, !dbg !202
  %243 = add i32 %240, %242, !dbg !202
  %244 = sext i32 %243 to i64, !dbg !202
  %245 = mul i64 4, %244, !dbg !202
  %scevgep81 = getelementptr float, float* %A_GPU, i64 %244, !dbg !202
  %246 = mul i32 %21, %smax78, !dbg !202
  %247 = add i32 0, %246, !dbg !202
  %248 = mul i32 %tmp3, %smax79, !dbg !202
  %249 = add i32 %247, %248, !dbg !202
  %250 = mul i32 1, %smax80, !dbg !202
  %251 = add i32 %249, %250, !dbg !202
  %252 = sext i32 %251 to i64, !dbg !202
  %253 = mul i64 4, %252, !dbg !202
  %scevgep83 = getelementptr float, float* %A, i64 %252, !dbg !202
  %254 = icmp sgt i32 %tmp, 0, !dbg !202
  %smax71 = select i1 %254, i32 %tmp, i32 0, !dbg !202
  %255 = mul i32 %18, %smax71, !dbg !202
  %256 = add i32 0, %255, !dbg !202
  %257 = icmp sgt i32 %tmp1, 0, !dbg !202
  %smax72 = select i1 %257, i32 %tmp1, i32 0, !dbg !202
  %258 = mul i32 %tmp6, %smax72, !dbg !202
  %259 = add i32 %256, %258, !dbg !202
  %260 = icmp sgt i32 %tmp2, 0, !dbg !202
  %smax73 = select i1 %260, i32 %tmp2, i32 0, !dbg !202
  %261 = mul i32 1, %smax73, !dbg !202
  %262 = add i32 %259, %261, !dbg !202
  %263 = sext i32 %262 to i64, !dbg !202
  %264 = mul i64 4, %263, !dbg !202
  %scevgep74 = getelementptr float, float* %A_GPU, i64 %263, !dbg !202
  %265 = mul i32 %19, %smax71, !dbg !202
  %266 = add i32 0, %265, !dbg !202
  %267 = mul i32 %tmp3, %smax72, !dbg !202
  %268 = add i32 %266, %267, !dbg !202
  %269 = mul i32 1, %smax73, !dbg !202
  %270 = add i32 %268, %269, !dbg !202
  %271 = sext i32 %270 to i64, !dbg !202
  %272 = mul i64 4, %271, !dbg !202
  %scevgep76 = getelementptr float, float* %A, i64 %271, !dbg !202
  %mul = mul nsw i32 %tmp4, %k.0, !dbg !202
  %add = add nsw i32 %j.0, %mul, !dbg !202
  %mul7 = mul nsw i32 %tmp3, %add, !dbg !202
  %add8 = add nsw i32 %i.0, %mul7, !dbg !202
  %idxprom = sext i32 %add8 to i64, !dbg !223
  %arrayidx = getelementptr inbounds float, float* %A, i64 %idxprom, !dbg !223
  %tmp5 = load float, float* %arrayidx, align 4, !dbg !223
  %conv = fpext float %tmp5 to double, !dbg !223
  %mul9 = mul nsw i32 %tmp7, %k.0, !dbg !205
  %add10 = add nsw i32 %j.0, %mul9, !dbg !205
  %mul11 = mul nsw i32 %tmp6, %add10, !dbg !205
  %add12 = add nsw i32 %i.0, %mul11, !dbg !205
  %idxprom13 = sext i32 %add12 to i64, !dbg !224
  %arrayidx14 = getelementptr inbounds float, float* %A_GPU, i64 %idxprom13, !dbg !224
  %tmp8 = load float, float* %arrayidx14, align 4, !dbg !224
  %conv15 = fpext float %tmp8 to double, !dbg !224
  %call = call float @percentDiff(double %conv, double %conv15), !dbg !225
  %conv16 = fpext float %call to double, !dbg !225
  %cmp17 = fcmp ogt double %conv16, 5.000000e-02, !dbg !226
  br i1 %cmp17, label %if.then, label %if.end, !dbg !227

if.then:                                          ; preds = %for.body.6
  %inc = add nsw i32 %fail.2, 1, !dbg !228
  br label %if.end, !dbg !230

if.end:                                           ; preds = %if.then, %for.body.6
  %fail.3 = phi i32 [ %inc, %if.then ], [ %fail.2, %for.body.6 ]
  br label %for.inc, !dbg !231

for.inc:                                          ; preds = %if.end
  %inc19 = add nsw i32 %i.0, 1, !dbg !232
  br label %for.cond.4, !dbg !233

for.end:                                          ; preds = %for.cond.4
  %fail.2.lcssa = phi i32 [ %fail.2, %for.cond.4 ]
  br label %for.inc.20, !dbg !234

for.inc.20:                                       ; preds = %for.end
  %inc21 = add nsw i32 %j.0, 1, !dbg !235
  br label %for.cond.1, !dbg !236

for.end.22:                                       ; preds = %for.cond.1
  %fail.1.lcssa = phi i32 [ %fail.1, %for.cond.1 ]
  br label %for.inc.23, !dbg !237

for.inc.23:                                       ; preds = %for.end.22
  %inc24 = add nsw i32 %k.0, 1, !dbg !238
  br label %for.cond, !dbg !239

for.end.25:                                       ; preds = %for.cond
  %fail.0.lcssa = phi i32 [ %fail.0, %for.cond ]
  %call26 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i32 0, i32 0), double 5.000000e-02, i32 %fail.0.lcssa), !dbg !240
  ret void, !dbg !241
}

; Function Attrs: nounwind uwtable
define double @stencilGPU(i32 %argc, i8** %argv) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %argc, i64 0, metadata !242, metadata !123), !dbg !243
  call void @llvm.dbg.value(metadata i8** %argv, i64 0, metadata !244, metadata !123), !dbg !245
  call void @llvm.dbg.value(metadata float 0x3FC5555560000000, i64 0, metadata !246, metadata !123), !dbg !247
  call void @llvm.dbg.value(metadata float 0x3F9C71C720000000, i64 0, metadata !248, metadata !123), !dbg !249
  %cmp = icmp slt i32 %argc, 5, !dbg !250
  br i1 %cmp, label %if.then, label %if.end, !dbg !252

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.2, i32 0, i32 0)), !dbg !253
  br label %return, !dbg !255

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 1, !dbg !256
  %tmp = load i8*, i8** %arrayidx, align 8, !dbg !256
  %call1 = call i32 @atoi(i8* %tmp) #6, !dbg !257
  call void @llvm.dbg.value(metadata i32 %call1, i64 0, metadata !258, metadata !123), !dbg !259
  %cmp2 = icmp slt i32 %call1, 1, !dbg !260
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !262

if.then.3:                                        ; preds = %if.end
  br label %return, !dbg !263

if.end.4:                                         ; preds = %if.end
  %arrayidx5 = getelementptr inbounds i8*, i8** %argv, i64 2, !dbg !264
  %tmp1 = load i8*, i8** %arrayidx5, align 8, !dbg !264
  %call6 = call i32 @atoi(i8* %tmp1) #6, !dbg !265
  call void @llvm.dbg.value(metadata i32 %call6, i64 0, metadata !266, metadata !123), !dbg !267
  %cmp7 = icmp slt i32 %call6, 1, !dbg !268
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !270

if.then.8:                                        ; preds = %if.end.4
  br label %return, !dbg !271

if.end.9:                                         ; preds = %if.end.4
  %arrayidx10 = getelementptr inbounds i8*, i8** %argv, i64 3, !dbg !272
  %tmp2 = load i8*, i8** %arrayidx10, align 8, !dbg !272
  %call11 = call i32 @atoi(i8* %tmp2) #6, !dbg !273
  call void @llvm.dbg.value(metadata i32 %call11, i64 0, metadata !274, metadata !123), !dbg !275
  %cmp12 = icmp slt i32 %call11, 1, !dbg !276
  br i1 %cmp12, label %if.then.13, label %if.end.14, !dbg !278

if.then.13:                                       ; preds = %if.end.9
  br label %return, !dbg !279

if.end.14:                                        ; preds = %if.end.9
  %arrayidx15 = getelementptr inbounds i8*, i8** %argv, i64 4, !dbg !280
  %tmp3 = load i8*, i8** %arrayidx15, align 8, !dbg !280
  %call16 = call i32 @atoi(i8* %tmp3) #6, !dbg !281
  call void @llvm.dbg.value(metadata i32 %call16, i64 0, metadata !282, metadata !123), !dbg !283
  %cmp17 = icmp slt i32 %call16, 1, !dbg !284
  br i1 %cmp17, label %if.then.18, label %if.end.19, !dbg !286

if.then.18:                                       ; preds = %if.end.14
  br label %return, !dbg !287

if.end.19:                                        ; preds = %if.end.14
  call void @llvm.dbg.value(metadata float* %h_A0.0, i64 0, metadata !288, metadata !123), !dbg !292
  call void @llvm.dbg.value(metadata float* %h_Anext.0, i64 0, metadata !293, metadata !123), !dbg !294
  call void @llvm.dbg.value(metadata float* %h_A0.0, i64 0, metadata !295, metadata !123), !dbg !296
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !297, metadata !123), !dbg !298
  %mul = mul nsw i32 %call1, %call6, !dbg !299
  %mul20 = mul nsw i32 %mul, %call11, !dbg !300
  call void @llvm.dbg.value(metadata i32 %mul20, i64 0, metadata !301, metadata !123), !dbg !302
  %conv = sext i32 %mul20 to i64, !dbg !303
  %mul21 = mul i64 4, %conv, !dbg !304
  %call22 = call noalias i8* @malloc(i64 %mul21) #5, !dbg !305
  %tmp4 = bitcast i8* %call22 to float*, !dbg !306
  call void @llvm.dbg.value(metadata float* %tmp4, i64 0, metadata !293, metadata !123), !dbg !294
  %conv23 = sext i32 %mul20 to i64, !dbg !307
  %mul24 = mul i64 4, %conv23, !dbg !308
  %call25 = call noalias i8* @malloc(i64 %mul24) #5, !dbg !309
  %tmp5 = bitcast i8* %call25 to float*, !dbg !310
  call void @llvm.dbg.value(metadata float* %tmp5, i64 0, metadata !295, metadata !123), !dbg !296
  %tmp6 = load %struct.pb_Parameters*, %struct.pb_Parameters** @parameters, align 8, !dbg !311
  %inpFiles = getelementptr inbounds %struct.pb_Parameters, %struct.pb_Parameters* %tmp6, i32 0, i32 1, !dbg !312
  %tmp7 = load i8**, i8*** %inpFiles, align 8, !dbg !312
  %arrayidx26 = getelementptr inbounds i8*, i8** %tmp7, i64 0, !dbg !311
  %tmp8 = load i8*, i8** %arrayidx26, align 8, !dbg !311
  %call27 = call %struct._IO_FILE* @fopen(i8* %tmp8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0)), !dbg !313
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call27, i64 0, metadata !314, metadata !123), !dbg !315
  %call28 = call i32 @read_data(float* %tmp4, i32 %call1, i32 %call6, i32 %call11, %struct._IO_FILE* %call27), !dbg !316
  %call29 = call i32 @fclose(%struct._IO_FILE* %call27), !dbg !317
  %tmp9 = bitcast float* %tmp5 to i8*, !dbg !318
  %tmp10 = bitcast float* %tmp4 to i8*, !dbg !318
  %conv30 = sext i32 %mul20 to i64, !dbg !319
  %mul31 = mul i64 4, %conv30, !dbg !320
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp9, i8* %tmp10, i64 %mul31, i32 4, i1 false), !dbg !318
  %call32 = call double @rtclock(), !dbg !321
  store double %call32, double* @t_start_GPU, align 8, !dbg !322
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !297, metadata !123), !dbg !298
  br label %for.cond, !dbg !323

for.cond:                                         ; preds = %for.inc, %if.end.19
  %h_A0.0 = phi float* [ %tmp4, %if.end.19 ], [ %h_Anext.0, %for.inc ]
  %h_Anext.0 = phi float* [ %tmp5, %if.end.19 ], [ %h_A0.0, %for.inc ]
  %t.0 = phi i32 [ 0, %if.end.19 ], [ %inc, %for.inc ]
  %cmp33 = icmp slt i32 %t.0, %call16, !dbg !324
  br i1 %cmp33, label %for.body, label %for.end, !dbg !325

for.body:                                         ; preds = %for.cond
  call void @cpu_stencilGPU(float 0x3FC5555560000000, float 0x3F9C71C720000000, float* %h_A0.0, float* %h_Anext.0, i32 %call1, i32 %call6, i32 %call11), !dbg !326
  br label %for.inc, !dbg !327

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %t.0, 1, !dbg !328
  br label %for.cond, !dbg !329

for.end:                                          ; preds = %for.cond
  %h_Anext.0.lcssa = phi float* [ %h_Anext.0, %for.cond ]
  %h_A0.0.lcssa = phi float* [ %h_A0.0, %for.cond ]
  %call35 = call double @rtclock(), !dbg !330
  store double %call35, double* @t_end_GPU, align 8, !dbg !331
  call void @llvm.dbg.value(metadata float* %h_A0.0, i64 0, metadata !332, metadata !123), !dbg !333
  call void @llvm.dbg.value(metadata float* %h_Anext.0, i64 0, metadata !293, metadata !123), !dbg !294
  store float* %h_A0.0.lcssa, float** @h_Anext_GPU, align 8, !dbg !334
  store i32 %call1, i32* @NX, align 4, !dbg !335
  store i32 %call6, i32* @NY, align 4, !dbg !336
  store i32 %call11, i32* @NZ, align 4, !dbg !337
  %tmp11 = bitcast float* %h_Anext.0.lcssa to i8*, !dbg !338
  call void @free(i8* %tmp11) #5, !dbg !339
  %tmp12 = load double, double* @t_end_GPU, align 8, !dbg !340
  %tmp13 = load double, double* @t_start_GPU, align 8, !dbg !341
  %sub = fsub double %tmp12, %tmp13, !dbg !342
  br label %return, !dbg !343

return:                                           ; preds = %for.end, %if.then.18, %if.then.13, %if.then.8, %if.then.3, %if.then
  %retval.0 = phi double [ -1.000000e+00, %if.then ], [ -1.000000e+00, %if.then.3 ], [ -1.000000e+00, %if.then.8 ], [ -1.000000e+00, %if.then.13 ], [ -1.000000e+00, %if.then.18 ], [ %sub, %for.end ]
  ret double %retval.0, !dbg !344
}

; Function Attrs: nounwind readonly
declare i32 @atoi(i8*) #4

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #2

declare %struct._IO_FILE* @fopen(i8*, i8*) #3

; Function Attrs: nounwind uwtable
define internal i32 @read_data(float* %A0, i32 %nx, i32 %ny, i32 %nz, %struct._IO_FILE* %fp) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !345, metadata !123), !dbg !346
  call void @llvm.dbg.value(metadata i32 %inc9, i64 0, metadata !347, metadata !123), !dbg !348
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !349, metadata !123), !dbg !350
  call void @llvm.dbg.value(metadata i32 %inc7, i64 0, metadata !345, metadata !123), !dbg !346
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !347, metadata !123), !dbg !348
  call void @llvm.dbg.value(metadata i32 %inc12, i64 0, metadata !351, metadata !123), !dbg !352
  call void @llvm.dbg.value(metadata float* %A0, i64 0, metadata !353, metadata !123), !dbg !354
  call void @llvm.dbg.value(metadata i32 %nx, i64 0, metadata !355, metadata !123), !dbg !356
  call void @llvm.dbg.value(metadata i32 %ny, i64 0, metadata !357, metadata !123), !dbg !358
  call void @llvm.dbg.value(metadata i32 %nz, i64 0, metadata !359, metadata !123), !dbg !360
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %fp, i64 0, metadata !361, metadata !123), !dbg !362
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !349, metadata !123), !dbg !350
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !351, metadata !123), !dbg !352
  br label %for.cond, !dbg !363

for.cond:                                         ; preds = %for.inc.11, %entry
  %s.0 = phi i32 [ 0, %entry ], [ %s.1.lcssa, %for.inc.11 ]
  %i.0 = phi i32 [ 0, %entry ], [ %inc12, %for.inc.11 ]
  %cmp = icmp slt i32 %i.0, %nz, !dbg !365
  br i1 %cmp, label %for.body, label %for.end.13, !dbg !367

for.body:                                         ; preds = %for.cond
  br label %for.cond.1, !dbg !368

for.cond.1:                                       ; preds = %for.inc.8, %for.body
  %s.1 = phi i32 [ %s.0, %for.body ], [ %s.2.lcssa, %for.inc.8 ]
  %j.0 = phi i32 [ 0, %for.body ], [ %inc9, %for.inc.8 ]
  %cmp2 = icmp slt i32 %j.0, %ny, !dbg !371
  br i1 %cmp2, label %for.body.3, label %for.end.10, !dbg !373

for.body.3:                                       ; preds = %for.cond.1
  br label %for.cond.4, !dbg !374

for.cond.4:                                       ; preds = %for.inc, %for.body.3
  %s.2 = phi i32 [ %s.1, %for.body.3 ], [ %inc, %for.inc ]
  %k.0 = phi i32 [ 0, %for.body.3 ], [ %inc7, %for.inc ]
  %cmp5 = icmp slt i32 %k.0, %nx, !dbg !377
  br i1 %cmp5, label %for.body.6, label %for.end, !dbg !379

for.body.6:                                       ; preds = %for.cond.4
  %idx.ext = sext i32 %s.2 to i64, !dbg !380
  %add.ptr = getelementptr inbounds float, float* %A0, i64 %idx.ext, !dbg !380
  %tmp = bitcast float* %add.ptr to i8*, !dbg !382
  %call = call i64 @fread(i8* %tmp, i64 4, i64 1, %struct._IO_FILE* %fp), !dbg !383
  %inc = add nsw i32 %s.2, 1, !dbg !384
  br label %for.inc, !dbg !385

for.inc:                                          ; preds = %for.body.6
  %inc7 = add nsw i32 %k.0, 1, !dbg !386
  br label %for.cond.4, !dbg !387

for.end:                                          ; preds = %for.cond.4
  %s.2.lcssa = phi i32 [ %s.2, %for.cond.4 ]
  br label %for.inc.8, !dbg !388

for.inc.8:                                        ; preds = %for.end
  %inc9 = add nsw i32 %j.0, 1, !dbg !389
  br label %for.cond.1, !dbg !390

for.end.10:                                       ; preds = %for.cond.1
  %s.1.lcssa = phi i32 [ %s.1, %for.cond.1 ]
  br label %for.inc.11, !dbg !391

for.inc.11:                                       ; preds = %for.end.10
  %inc12 = add nsw i32 %i.0, 1, !dbg !392
  br label %for.cond, !dbg !393

for.end.13:                                       ; preds = %for.cond
  ret i32 0, !dbg !394
}

declare i32 @fclose(%struct._IO_FILE*) #3

; Function Attrs: nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #5

declare void @cpu_stencilGPU(float, float, float*, float*, i32, i32, i32) #3

; Function Attrs: nounwind
declare void @free(i8*) #2

; Function Attrs: nounwind uwtable
define double @stencilCPU(i32 %argc, i8** %argv) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %argc, i64 0, metadata !395, metadata !123), !dbg !396
  call void @llvm.dbg.value(metadata i8** %argv, i64 0, metadata !397, metadata !123), !dbg !398
  call void @llvm.dbg.value(metadata float 0x3FC5555560000000, i64 0, metadata !399, metadata !123), !dbg !400
  call void @llvm.dbg.value(metadata float 0x3F9C71C720000000, i64 0, metadata !401, metadata !123), !dbg !402
  %cmp = icmp slt i32 %argc, 5, !dbg !403
  br i1 %cmp, label %if.then, label %if.end, !dbg !405

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.2, i32 0, i32 0)), !dbg !406
  br label %return, !dbg !408

if.end:                                           ; preds = %entry
  %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 1, !dbg !409
  %tmp = load i8*, i8** %arrayidx, align 8, !dbg !409
  %call1 = call i32 @atoi(i8* %tmp) #6, !dbg !410
  call void @llvm.dbg.value(metadata i32 %call1, i64 0, metadata !411, metadata !123), !dbg !412
  %cmp2 = icmp slt i32 %call1, 1, !dbg !413
  br i1 %cmp2, label %if.then.3, label %if.end.4, !dbg !415

if.then.3:                                        ; preds = %if.end
  br label %return, !dbg !416

if.end.4:                                         ; preds = %if.end
  %arrayidx5 = getelementptr inbounds i8*, i8** %argv, i64 2, !dbg !417
  %tmp1 = load i8*, i8** %arrayidx5, align 8, !dbg !417
  %call6 = call i32 @atoi(i8* %tmp1) #6, !dbg !418
  call void @llvm.dbg.value(metadata i32 %call6, i64 0, metadata !419, metadata !123), !dbg !420
  %cmp7 = icmp slt i32 %call6, 1, !dbg !421
  br i1 %cmp7, label %if.then.8, label %if.end.9, !dbg !423

if.then.8:                                        ; preds = %if.end.4
  br label %return, !dbg !424

if.end.9:                                         ; preds = %if.end.4
  %arrayidx10 = getelementptr inbounds i8*, i8** %argv, i64 3, !dbg !425
  %tmp2 = load i8*, i8** %arrayidx10, align 8, !dbg !425
  %call11 = call i32 @atoi(i8* %tmp2) #6, !dbg !426
  call void @llvm.dbg.value(metadata i32 %call11, i64 0, metadata !427, metadata !123), !dbg !428
  %cmp12 = icmp slt i32 %call11, 1, !dbg !429
  br i1 %cmp12, label %if.then.13, label %if.end.14, !dbg !431

if.then.13:                                       ; preds = %if.end.9
  br label %return, !dbg !432

if.end.14:                                        ; preds = %if.end.9
  %arrayidx15 = getelementptr inbounds i8*, i8** %argv, i64 4, !dbg !433
  %tmp3 = load i8*, i8** %arrayidx15, align 8, !dbg !433
  %call16 = call i32 @atoi(i8* %tmp3) #6, !dbg !434
  call void @llvm.dbg.value(metadata i32 %call16, i64 0, metadata !435, metadata !123), !dbg !436
  %cmp17 = icmp slt i32 %call16, 1, !dbg !437
  br i1 %cmp17, label %if.then.18, label %if.end.19, !dbg !439

if.then.18:                                       ; preds = %if.end.14
  br label %return, !dbg !440

if.end.19:                                        ; preds = %if.end.14
  call void @llvm.dbg.value(metadata float* %h_A0.0, i64 0, metadata !441, metadata !123), !dbg !445
  call void @llvm.dbg.value(metadata float* %h_Anext.0, i64 0, metadata !446, metadata !123), !dbg !447
  call void @llvm.dbg.value(metadata float* %h_A0.0, i64 0, metadata !448, metadata !123), !dbg !449
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !450, metadata !123), !dbg !451
  %mul = mul nsw i32 %call1, %call6, !dbg !452
  %mul20 = mul nsw i32 %mul, %call11, !dbg !453
  call void @llvm.dbg.value(metadata i32 %mul20, i64 0, metadata !454, metadata !123), !dbg !455
  %conv = sext i32 %mul20 to i64, !dbg !456
  %mul21 = mul i64 4, %conv, !dbg !457
  %call22 = call noalias i8* @malloc(i64 %mul21) #5, !dbg !458
  %tmp4 = bitcast i8* %call22 to float*, !dbg !459
  call void @llvm.dbg.value(metadata float* %tmp4, i64 0, metadata !446, metadata !123), !dbg !447
  %conv23 = sext i32 %mul20 to i64, !dbg !460
  %mul24 = mul i64 4, %conv23, !dbg !461
  %call25 = call noalias i8* @malloc(i64 %mul24) #5, !dbg !462
  %tmp5 = bitcast i8* %call25 to float*, !dbg !463
  call void @llvm.dbg.value(metadata float* %tmp5, i64 0, metadata !448, metadata !123), !dbg !449
  %tmp6 = load %struct.pb_Parameters*, %struct.pb_Parameters** @parameters, align 8, !dbg !464
  %inpFiles = getelementptr inbounds %struct.pb_Parameters, %struct.pb_Parameters* %tmp6, i32 0, i32 1, !dbg !465
  %tmp7 = load i8**, i8*** %inpFiles, align 8, !dbg !465
  %arrayidx26 = getelementptr inbounds i8*, i8** %tmp7, i64 0, !dbg !464
  %tmp8 = load i8*, i8** %arrayidx26, align 8, !dbg !464
  %call27 = call %struct._IO_FILE* @fopen(i8* %tmp8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i32 0, i32 0)), !dbg !466
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call27, i64 0, metadata !467, metadata !123), !dbg !468
  %call28 = call i32 @read_data(float* %tmp4, i32 %call1, i32 %call6, i32 %call11, %struct._IO_FILE* %call27), !dbg !469
  %call29 = call i32 @fclose(%struct._IO_FILE* %call27), !dbg !470
  %tmp9 = bitcast float* %tmp5 to i8*, !dbg !471
  %tmp10 = bitcast float* %tmp4 to i8*, !dbg !471
  %conv30 = sext i32 %mul20 to i64, !dbg !472
  %mul31 = mul i64 4, %conv30, !dbg !473
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %tmp9, i8* %tmp10, i64 %mul31, i32 4, i1 false), !dbg !471
  %call32 = call double @rtclock(), !dbg !474
  store double %call32, double* @t_start, align 8, !dbg !475
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !450, metadata !123), !dbg !451
  br label %for.cond, !dbg !476

for.cond:                                         ; preds = %for.inc, %if.end.19
  %h_A0.0 = phi float* [ %tmp4, %if.end.19 ], [ %h_Anext.0, %for.inc ]
  %h_Anext.0 = phi float* [ %tmp5, %if.end.19 ], [ %h_A0.0, %for.inc ]
  %t.0 = phi i32 [ 0, %if.end.19 ], [ %inc, %for.inc ]
  %cmp33 = icmp slt i32 %t.0, %call16, !dbg !477
  br i1 %cmp33, label %for.body, label %for.end, !dbg !478

for.body:                                         ; preds = %for.cond
  call void @cpu_stencilCPU(float 0x3FC5555560000000, float 0x3F9C71C720000000, float* %h_A0.0, float* %h_Anext.0, i32 %call1, i32 %call6, i32 %call11), !dbg !479
  br label %for.inc, !dbg !480

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %t.0, 1, !dbg !481
  br label %for.cond, !dbg !482

for.end:                                          ; preds = %for.cond
  %h_Anext.0.lcssa = phi float* [ %h_Anext.0, %for.cond ]
  %h_A0.0.lcssa = phi float* [ %h_A0.0, %for.cond ]
  %call35 = call double @rtclock(), !dbg !483
  store double %call35, double* @t_end, align 8, !dbg !484
  call void @llvm.dbg.value(metadata float* %h_A0.0, i64 0, metadata !485, metadata !123), !dbg !486
  call void @llvm.dbg.value(metadata float* %h_Anext.0, i64 0, metadata !446, metadata !123), !dbg !447
  store float* %h_A0.0.lcssa, float** @h_Anext_CPU, align 8, !dbg !487
  store i32 %call1, i32* @NX, align 4, !dbg !488
  store i32 %call6, i32* @NY, align 4, !dbg !489
  store i32 %call11, i32* @NZ, align 4, !dbg !490
  %tmp11 = bitcast float* %h_Anext.0.lcssa to i8*, !dbg !491
  call void @free(i8* %tmp11) #5, !dbg !492
  %tmp12 = load double, double* @t_end, align 8, !dbg !493
  %tmp13 = load double, double* @t_start, align 8, !dbg !494
  %sub = fsub double %tmp12, %tmp13, !dbg !495
  br label %return, !dbg !496

return:                                           ; preds = %for.end, %if.then.18, %if.then.13, %if.then.8, %if.then.3, %if.then
  %retval.0 = phi double [ -1.000000e+00, %if.then ], [ -1.000000e+00, %if.then.3 ], [ -1.000000e+00, %if.then.8 ], [ -1.000000e+00, %if.then.13 ], [ -1.000000e+00, %if.then.18 ], [ %sub, %for.end ]
  ret double %retval.0, !dbg !497
}

declare void @cpu_stencilCPU(float, float, float*, float*, i32, i32, i32) #3

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  %argc.addr = alloca i32, align 4
  store i32 %argc, i32* %argc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %argc.addr, metadata !498, metadata !123), !dbg !499
  call void @llvm.dbg.value(metadata i8** %argv, i64 0, metadata !500, metadata !123), !dbg !501
  %call = call %struct.pb_Parameters* @pb_ReadParameters(i32* %argc.addr, i8** %argv), !dbg !502
  store %struct.pb_Parameters* %call, %struct.pb_Parameters** @parameters, align 8, !dbg !503
  %tmp = load i32, i32* %argc.addr, align 4, !dbg !504
  %call1 = call double @stencilGPU(i32 %tmp, i8** %argv), !dbg !505
  call void @llvm.dbg.value(metadata double %call1, i64 0, metadata !506, metadata !123), !dbg !507
  %tmp1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !508
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i32 0, i32 0), double %call1), !dbg !509
  %tmp2 = load i32, i32* %argc.addr, align 4, !dbg !510
  %call3 = call double @stencilCPU(i32 %tmp2, i8** %argv), !dbg !511
  call void @llvm.dbg.value(metadata double %call3, i64 0, metadata !512, metadata !123), !dbg !513
  %tmp3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !514
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i32 0, i32 0), double %call3), !dbg !515
  %tmp4 = load float*, float** @h_Anext_GPU, align 8, !dbg !516
  %tmp5 = load float*, float** @h_Anext_CPU, align 8, !dbg !517
  call void @compareResults(float* %tmp4, float* %tmp5), !dbg !518
  %tmp6 = load %struct.pb_Parameters*, %struct.pb_Parameters** @parameters, align 8, !dbg !519
  call void @pb_FreeParameters(%struct.pb_Parameters* %tmp6), !dbg !520
  %tmp7 = load float*, float** @h_Anext_GPU, align 8, !dbg !521
  %tmp8 = bitcast float* %tmp7 to i8*, !dbg !521
  call void @free(i8* %tmp8) #5, !dbg !522
  %tmp9 = load float*, float** @h_Anext_CPU, align 8, !dbg !523
  %tmp10 = bitcast float* %tmp9 to i8*, !dbg !523
  call void @free(i8* %tmp10) #5, !dbg !524
  ret i32 0, !dbg !525
}

declare %struct.pb_Parameters* @pb_ReadParameters(i32*, i8**) #3

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

declare void @pb_FreeParameters(%struct.pb_Parameters*) #3

declare i64 @fread(i8*, i64, i64, %struct._IO_FILE*) #3

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { nounwind readonly }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!114, !115}
!llvm.ident = !{!116}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !6, globals: !97)
!1 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Parboil/stencil/src/main.c", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!2 = !{}
!3 = !{!4}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64, align: 64)
!5 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!6 = !{!7, !12, !15, !18, !23, !30, !31, !34}
!7 = !DISubprogram(name: "rtclock", scope: !8, file: !8, line: 11, type: !9, isLocal: false, isDefinition: true, scopeLine: 12, isOptimized: false, function: double ()* @rtclock, variables: !2)
!8 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Parboil/stencil/src/../../common/polybenchUtilFuncts.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!9 = !DISubroutineType(types: !10)
!10 = !{!11}
!11 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!12 = !DISubprogram(name: "absVal", scope: !8, file: !8, line: 22, type: !13, isLocal: false, isDefinition: true, scopeLine: 23, flags: DIFlagPrototyped, isOptimized: false, function: float (float)* @absVal, variables: !2)
!13 = !DISubroutineType(types: !14)
!14 = !{!5, !5}
!15 = !DISubprogram(name: "percentDiff", scope: !8, file: !8, line: 36, type: !16, isLocal: false, isDefinition: true, scopeLine: 37, flags: DIFlagPrototyped, isOptimized: false, function: float (double, double)* @percentDiff, variables: !2)
!16 = !DISubroutineType(types: !17)
!17 = !{!5, !11, !11}
!18 = !DISubprogram(name: "compareResults", scope: !1, file: !1, line: 31, type: !19, isLocal: false, isDefinition: true, scopeLine: 32, flags: DIFlagPrototyped, isOptimized: false, function: void (float*, float*)* @compareResults, variables: !2)
!19 = !DISubroutineType(types: !20)
!20 = !{null, !21, !21}
!21 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64, align: 64)
!22 = !DIDerivedType(tag: DW_TAG_typedef, name: "DATA_TYPE", file: !1, line: 28, baseType: !5)
!23 = !DISubprogram(name: "stencilGPU", scope: !1, file: !1, line: 67, type: !24, isLocal: false, isDefinition: true, scopeLine: 67, flags: DIFlagPrototyped, isOptimized: false, function: double (i32, i8**)* @stencilGPU, variables: !2)
!24 = !DISubroutineType(types: !25)
!25 = !{!11, !26, !27}
!26 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!27 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64, align: 64)
!28 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !29, size: 64, align: 64)
!29 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!30 = !DISubprogram(name: "stencilCPU", scope: !1, file: !1, line: 155, type: !24, isLocal: false, isDefinition: true, scopeLine: 155, flags: DIFlagPrototyped, isOptimized: false, function: double (i32, i8**)* @stencilCPU, variables: !2)
!31 = !DISubprogram(name: "main", scope: !1, file: !1, line: 245, type: !32, isLocal: false, isDefinition: true, scopeLine: 245, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i8**)* @main, variables: !2)
!32 = !DISubroutineType(types: !33)
!33 = !{!26, !26, !27}
!34 = !DISubprogram(name: "read_data", scope: !1, file: !1, line: 49, type: !35, isLocal: true, isDefinition: true, scopeLine: 50, flags: DIFlagPrototyped, isOptimized: false, function: i32 (float*, i32, i32, i32, %struct._IO_FILE*)* @read_data, variables: !2)
!35 = !DISubroutineType(types: !36)
!36 = !{!26, !4, !26, !26, !26, !37}
!37 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !38, size: 64, align: 64)
!38 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !39, line: 49, baseType: !40)
!39 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!40 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !41, line: 273, size: 1728, align: 64, elements: !42)
!41 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!42 = !{!43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !63, !64, !65, !66, !70, !72, !74, !78, !81, !83, !85, !86, !87, !88, !92, !93}
!43 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !40, file: !41, line: 274, baseType: !26, size: 32, align: 32)
!44 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !40, file: !41, line: 279, baseType: !28, size: 64, align: 64, offset: 64)
!45 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !40, file: !41, line: 280, baseType: !28, size: 64, align: 64, offset: 128)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !40, file: !41, line: 281, baseType: !28, size: 64, align: 64, offset: 192)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !40, file: !41, line: 282, baseType: !28, size: 64, align: 64, offset: 256)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !40, file: !41, line: 283, baseType: !28, size: 64, align: 64, offset: 320)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !40, file: !41, line: 284, baseType: !28, size: 64, align: 64, offset: 384)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !40, file: !41, line: 285, baseType: !28, size: 64, align: 64, offset: 448)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !40, file: !41, line: 286, baseType: !28, size: 64, align: 64, offset: 512)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !40, file: !41, line: 288, baseType: !28, size: 64, align: 64, offset: 576)
!53 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !40, file: !41, line: 289, baseType: !28, size: 64, align: 64, offset: 640)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !40, file: !41, line: 290, baseType: !28, size: 64, align: 64, offset: 704)
!55 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !40, file: !41, line: 292, baseType: !56, size: 64, align: 64, offset: 768)
!56 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !57, size: 64, align: 64)
!57 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !41, line: 188, size: 192, align: 64, elements: !58)
!58 = !{!59, !60, !62}
!59 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !57, file: !41, line: 189, baseType: !56, size: 64, align: 64)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !57, file: !41, line: 190, baseType: !61, size: 64, align: 64, offset: 64)
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64, align: 64)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !57, file: !41, line: 194, baseType: !26, size: 32, align: 32, offset: 128)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !40, file: !41, line: 294, baseType: !61, size: 64, align: 64, offset: 832)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !40, file: !41, line: 296, baseType: !26, size: 32, align: 32, offset: 896)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !40, file: !41, line: 300, baseType: !26, size: 32, align: 32, offset: 928)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !40, file: !41, line: 302, baseType: !67, size: 64, align: 64, offset: 960)
!67 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !68, line: 141, baseType: !69)
!68 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!69 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !40, file: !41, line: 306, baseType: !71, size: 16, align: 16, offset: 1024)
!71 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !40, file: !41, line: 307, baseType: !73, size: 8, align: 8, offset: 1040)
!73 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !40, file: !41, line: 308, baseType: !75, size: 8, align: 8, offset: 1048)
!75 = !DICompositeType(tag: DW_TAG_array_type, baseType: !29, size: 8, align: 8, elements: !76)
!76 = !{!77}
!77 = !DISubrange(count: 1)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !40, file: !41, line: 312, baseType: !79, size: 64, align: 64, offset: 1088)
!79 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !80, size: 64, align: 64)
!80 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !41, line: 182, baseType: null)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !40, file: !41, line: 321, baseType: !82, size: 64, align: 64, offset: 1152)
!82 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !68, line: 142, baseType: !69)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !40, file: !41, line: 330, baseType: !84, size: 64, align: 64, offset: 1216)
!84 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !40, file: !41, line: 331, baseType: !84, size: 64, align: 64, offset: 1280)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !40, file: !41, line: 332, baseType: !84, size: 64, align: 64, offset: 1344)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !40, file: !41, line: 333, baseType: !84, size: 64, align: 64, offset: 1408)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !40, file: !41, line: 334, baseType: !89, size: 64, align: 64, offset: 1472)
!89 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !90, line: 62, baseType: !91)
!90 = !DIFile(filename: "/home/gleison/lge/llvm-3.7-src/build-debug/bin/../lib/clang/3.7.0/include/stddef.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!91 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !40, file: !41, line: 336, baseType: !26, size: 32, align: 32, offset: 1536)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !40, file: !41, line: 338, baseType: !94, size: 160, align: 8, offset: 1568)
!94 = !DICompositeType(tag: DW_TAG_array_type, baseType: !29, size: 160, align: 8, elements: !95)
!95 = !{!96}
!96 = !DISubrange(count: 20)
!97 = !{!98, !99, !100, !101, !102, !103, !104, !105, !106, !107}
!98 = !DIGlobalVariable(name: "t_start", scope: !0, file: !1, line: 23, type: !11, isLocal: false, isDefinition: true, variable: double* @t_start)
!99 = !DIGlobalVariable(name: "t_end", scope: !0, file: !1, line: 23, type: !11, isLocal: false, isDefinition: true, variable: double* @t_end)
!100 = !DIGlobalVariable(name: "t_start_GPU", scope: !0, file: !1, line: 23, type: !11, isLocal: false, isDefinition: true, variable: double* @t_start_GPU)
!101 = !DIGlobalVariable(name: "t_end_GPU", scope: !0, file: !1, line: 23, type: !11, isLocal: false, isDefinition: true, variable: double* @t_end_GPU)
!102 = !DIGlobalVariable(name: "h_Anext_GPU", scope: !0, file: !1, line: 25, type: !4, isLocal: false, isDefinition: true, variable: float** @h_Anext_GPU)
!103 = !DIGlobalVariable(name: "h_Anext_CPU", scope: !0, file: !1, line: 25, type: !4, isLocal: false, isDefinition: true, variable: float** @h_Anext_CPU)
!104 = !DIGlobalVariable(name: "NX", scope: !0, file: !1, line: 26, type: !26, isLocal: false, isDefinition: true, variable: i32* @NX)
!105 = !DIGlobalVariable(name: "NY", scope: !0, file: !1, line: 26, type: !26, isLocal: false, isDefinition: true, variable: i32* @NY)
!106 = !DIGlobalVariable(name: "NZ", scope: !0, file: !1, line: 26, type: !26, isLocal: false, isDefinition: true, variable: i32* @NZ)
!107 = !DIGlobalVariable(name: "parameters", scope: !0, file: !1, line: 29, type: !108, isLocal: false, isDefinition: true, variable: %struct.pb_Parameters** @parameters)
!108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !109, size: 64, align: 64)
!109 = !DICompositeType(tag: DW_TAG_structure_type, name: "pb_Parameters", file: !110, line: 14, size: 128, align: 64, elements: !111)
!110 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Parboil/stencil/src/../../common/parboil.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!111 = !{!112, !113}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "outFile", scope: !109, file: !110, line: 15, baseType: !28, size: 64, align: 64)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "inpFiles", scope: !109, file: !110, line: 18, baseType: !27, size: 64, align: 64, offset: 64)
!114 = !{i32 2, !"Dwarf Version", i32 4}
!115 = !{i32 2, !"Debug Info Version", i32 3}
!116 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!117 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Tzp", scope: !7, file: !8, line: 13, type: !118)
!118 = !DICompositeType(tag: DW_TAG_structure_type, name: "timezone", file: !119, line: 57, size: 64, align: 32, elements: !120)
!119 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/time.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!120 = !{!121, !122}
!121 = !DIDerivedType(tag: DW_TAG_member, name: "tz_minuteswest", scope: !118, file: !119, line: 59, baseType: !26, size: 32, align: 32)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "tz_dsttime", scope: !118, file: !119, line: 60, baseType: !26, size: 32, align: 32, offset: 32)
!123 = !DIExpression()
!124 = !DILocation(line: 13, column: 21, scope: !7)
!125 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Tp", scope: !7, file: !8, line: 14, type: !126)
!126 = !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !127, line: 31, size: 128, align: 64, elements: !128)
!127 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!128 = !{!129, !131}
!129 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !126, file: !127, line: 33, baseType: !130, size: 64, align: 64)
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !68, line: 149, baseType: !69)
!131 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !126, file: !127, line: 34, baseType: !132, size: 64, align: 64, offset: 64)
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !68, line: 151, baseType: !69)
!133 = !DILocation(line: 14, column: 20, scope: !7)
!134 = !DILocation(line: 16, column: 12, scope: !7)
!135 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stat", scope: !7, file: !8, line: 15, type: !26)
!136 = !DILocation(line: 15, column: 9, scope: !7)
!137 = !DILocation(line: 17, column: 14, scope: !138)
!138 = distinct !DILexicalBlock(scope: !7, file: !8, line: 17, column: 9)
!139 = !DILocation(line: 17, column: 9, scope: !7)
!140 = !DILocation(line: 17, column: 20, scope: !138)
!141 = !DILocation(line: 18, column: 15, scope: !7)
!142 = !DILocation(line: 18, column: 12, scope: !7)
!143 = !DILocation(line: 18, column: 27, scope: !7)
!144 = !DILocation(line: 18, column: 24, scope: !7)
!145 = !DILocation(line: 18, column: 34, scope: !7)
!146 = !DILocation(line: 18, column: 22, scope: !7)
!147 = !DILocation(line: 18, column: 5, scope: !7)
!148 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !12, file: !8, line: 22, type: !5)
!149 = !DILocation(line: 22, column: 20, scope: !12)
!150 = !DILocation(line: 24, column: 7, scope: !151)
!151 = distinct !DILexicalBlock(scope: !12, file: !8, line: 24, column: 5)
!152 = !DILocation(line: 24, column: 5, scope: !12)
!153 = !DILocation(line: 26, column: 13, scope: !154)
!154 = distinct !DILexicalBlock(scope: !151, file: !8, line: 25, column: 2)
!155 = !DILocation(line: 26, column: 3, scope: !154)
!156 = !DILocation(line: 30, column: 3, scope: !157)
!157 = distinct !DILexicalBlock(scope: !151, file: !8, line: 29, column: 2)
!158 = !DILocation(line: 32, column: 1, scope: !12)
!159 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val1", arg: 1, scope: !15, file: !8, line: 36, type: !11)
!160 = !DILocation(line: 36, column: 26, scope: !15)
!161 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val2", arg: 2, scope: !15, file: !8, line: 36, type: !11)
!162 = !DILocation(line: 36, column: 39, scope: !15)
!163 = !DILocation(line: 38, column: 14, scope: !164)
!164 = distinct !DILexicalBlock(scope: !15, file: !8, line: 38, column: 6)
!165 = !DILocation(line: 38, column: 7, scope: !164)
!166 = !DILocation(line: 38, column: 20, scope: !164)
!167 = !DILocation(line: 38, column: 28, scope: !164)
!168 = !DILocation(line: 38, column: 39, scope: !169)
!169 = !DILexicalBlockFile(scope: !164, file: !8, discriminator: 1)
!170 = !DILocation(line: 38, column: 32, scope: !164)
!171 = !DILocation(line: 38, column: 45, scope: !164)
!172 = !DILocation(line: 38, column: 6, scope: !15)
!173 = !DILocation(line: 40, column: 3, scope: !174)
!174 = distinct !DILexicalBlock(scope: !164, file: !8, line: 39, column: 2)
!175 = !DILocation(line: 45, column: 43, scope: !176)
!176 = distinct !DILexicalBlock(scope: !164, file: !8, line: 44, column: 2)
!177 = !DILocation(line: 45, column: 38, scope: !176)
!178 = !DILocation(line: 45, column: 31, scope: !176)
!179 = !DILocation(line: 45, column: 65, scope: !176)
!180 = !DILocation(line: 45, column: 60, scope: !176)
!181 = !DILocation(line: 45, column: 53, scope: !176)
!182 = !DILocation(line: 45, column: 51, scope: !176)
!183 = !DILocation(line: 45, column: 24, scope: !176)
!184 = !DILocation(line: 45, column: 21, scope: !176)
!185 = !DILocation(line: 45, column: 7, scope: !176)
!186 = !DILocation(line: 47, column: 1, scope: !15)
!187 = !DILocation(line: 35, column: 17, scope: !188)
!188 = distinct !DILexicalBlock(scope: !189, file: !1, line: 35, column: 3)
!189 = distinct !DILexicalBlock(scope: !18, file: !1, line: 35, column: 3)
!190 = !DILocation(line: 36, column: 16, scope: !191)
!191 = distinct !DILexicalBlock(scope: !192, file: !1, line: 36, column: 2)
!192 = distinct !DILexicalBlock(scope: !193, file: !1, line: 36, column: 2)
!193 = distinct !DILexicalBlock(scope: !188, file: !1, line: 35, column: 26)
!194 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !18, file: !1, line: 33, type: !26)
!195 = !DILocation(line: 33, column: 7, scope: !18)
!196 = !DILocation(line: 37, column: 17, scope: !197)
!197 = distinct !DILexicalBlock(scope: !198, file: !1, line: 37, column: 3)
!198 = distinct !DILexicalBlock(scope: !199, file: !1, line: 37, column: 3)
!199 = distinct !DILexicalBlock(scope: !191, file: !1, line: 36, column: 25)
!200 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !18, file: !1, line: 33, type: !26)
!201 = !DILocation(line: 33, column: 10, scope: !18)
!202 = !DILocation(line: 38, column: 22, scope: !203)
!203 = distinct !DILexicalBlock(scope: !204, file: !1, line: 38, column: 8)
!204 = distinct !DILexicalBlock(scope: !197, file: !1, line: 37, column: 26)
!205 = !DILocation(line: 38, column: 56, scope: !203)
!206 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fail", scope: !18, file: !1, line: 33, type: !26)
!207 = !DILocation(line: 33, column: 16, scope: !18)
!208 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !18, file: !1, line: 33, type: !26)
!209 = !DILocation(line: 33, column: 13, scope: !18)
!210 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "A", arg: 1, scope: !18, file: !1, line: 31, type: !21)
!211 = !DILocation(line: 31, column: 32, scope: !18)
!212 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "A_GPU", arg: 2, scope: !18, file: !1, line: 31, type: !21)
!213 = !DILocation(line: 31, column: 46, scope: !18)
!214 = !DILocation(line: 35, column: 8, scope: !189)
!215 = !DILocation(line: 35, column: 15, scope: !188)
!216 = !DILocation(line: 36, column: 14, scope: !191)
!217 = !DILocation(line: 37, column: 15, scope: !197)
!218 = !DILocation(line: 35, column: 3, scope: !189)
!219 = !DILocation(line: 36, column: 7, scope: !192)
!220 = !DILocation(line: 36, column: 2, scope: !192)
!221 = !DILocation(line: 37, column: 8, scope: !198)
!222 = !DILocation(line: 37, column: 3, scope: !198)
!223 = !DILocation(line: 38, column: 20, scope: !203)
!224 = !DILocation(line: 38, column: 50, scope: !203)
!225 = !DILocation(line: 38, column: 8, scope: !203)
!226 = !DILocation(line: 38, column: 84, scope: !203)
!227 = !DILocation(line: 38, column: 8, scope: !204)
!228 = !DILocation(line: 39, column: 9, scope: !229)
!229 = distinct !DILexicalBlock(scope: !203, file: !1, line: 38, column: 103)
!230 = !DILocation(line: 40, column: 7, scope: !229)
!231 = !DILocation(line: 41, column: 3, scope: !204)
!232 = !DILocation(line: 37, column: 22, scope: !197)
!233 = !DILocation(line: 37, column: 3, scope: !197)
!234 = !DILocation(line: 42, column: 2, scope: !199)
!235 = !DILocation(line: 36, column: 21, scope: !191)
!236 = !DILocation(line: 36, column: 2, scope: !191)
!237 = !DILocation(line: 43, column: 5, scope: !193)
!238 = !DILocation(line: 35, column: 22, scope: !188)
!239 = !DILocation(line: 35, column: 3, scope: !188)
!240 = !DILocation(line: 46, column: 3, scope: !18)
!241 = !DILocation(line: 47, column: 1, scope: !18)
!242 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !23, file: !1, line: 67, type: !26)
!243 = !DILocation(line: 67, column: 23, scope: !23)
!244 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !23, file: !1, line: 67, type: !27)
!245 = !DILocation(line: 67, column: 36, scope: !23)
!246 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c0", scope: !23, file: !1, line: 83, type: !5)
!247 = !DILocation(line: 83, column: 8, scope: !23)
!248 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c1", scope: !23, file: !1, line: 84, type: !5)
!249 = !DILocation(line: 84, column: 8, scope: !23)
!250 = !DILocation(line: 86, column: 10, scope: !251)
!251 = distinct !DILexicalBlock(scope: !23, file: !1, line: 86, column: 6)
!252 = !DILocation(line: 86, column: 6, scope: !23)
!253 = !DILocation(line: 88, column: 7, scope: !254)
!254 = distinct !DILexicalBlock(scope: !251, file: !1, line: 87, column: 5)
!255 = !DILocation(line: 93, column: 7, scope: !254)
!256 = !DILocation(line: 96, column: 12, scope: !23)
!257 = !DILocation(line: 96, column: 7, scope: !23)
!258 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nx", scope: !23, file: !1, line: 80, type: !26)
!259 = !DILocation(line: 80, column: 6, scope: !23)
!260 = !DILocation(line: 97, column: 8, scope: !261)
!261 = distinct !DILexicalBlock(scope: !23, file: !1, line: 97, column: 6)
!262 = !DILocation(line: 97, column: 6, scope: !23)
!263 = !DILocation(line: 98, column: 3, scope: !261)
!264 = !DILocation(line: 99, column: 12, scope: !23)
!265 = !DILocation(line: 99, column: 7, scope: !23)
!266 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ny", scope: !23, file: !1, line: 80, type: !26)
!267 = !DILocation(line: 80, column: 9, scope: !23)
!268 = !DILocation(line: 100, column: 8, scope: !269)
!269 = distinct !DILexicalBlock(scope: !23, file: !1, line: 100, column: 6)
!270 = !DILocation(line: 100, column: 6, scope: !23)
!271 = !DILocation(line: 101, column: 3, scope: !269)
!272 = !DILocation(line: 102, column: 12, scope: !23)
!273 = !DILocation(line: 102, column: 7, scope: !23)
!274 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nz", scope: !23, file: !1, line: 80, type: !26)
!275 = !DILocation(line: 80, column: 12, scope: !23)
!276 = !DILocation(line: 103, column: 8, scope: !277)
!277 = distinct !DILexicalBlock(scope: !23, file: !1, line: 103, column: 6)
!278 = !DILocation(line: 103, column: 6, scope: !23)
!279 = !DILocation(line: 104, column: 3, scope: !277)
!280 = !DILocation(line: 105, column: 19, scope: !23)
!281 = !DILocation(line: 105, column: 14, scope: !23)
!282 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iteration", scope: !23, file: !1, line: 82, type: !26)
!283 = !DILocation(line: 82, column: 9, scope: !23)
!284 = !DILocation(line: 106, column: 14, scope: !285)
!285 = distinct !DILexicalBlock(scope: !23, file: !1, line: 106, column: 5)
!286 = !DILocation(line: 106, column: 5, scope: !23)
!287 = !DILocation(line: 107, column: 3, scope: !285)
!288 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !289, file: !1, line: 128, type: !4)
!289 = distinct !DILexicalBlock(scope: !290, file: !1, line: 126, column: 2)
!290 = distinct !DILexicalBlock(scope: !291, file: !1, line: 125, column: 2)
!291 = distinct !DILexicalBlock(scope: !23, file: !1, line: 125, column: 2)
!292 = !DILocation(line: 128, column: 13, scope: !289)
!293 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h_A0", scope: !23, file: !1, line: 111, type: !4)
!294 = !DILocation(line: 111, column: 9, scope: !23)
!295 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h_Anext", scope: !23, file: !1, line: 112, type: !4)
!296 = !DILocation(line: 112, column: 9, scope: !23)
!297 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !23, file: !1, line: 123, type: !26)
!298 = !DILocation(line: 123, column: 7, scope: !23)
!299 = !DILocation(line: 114, column: 9, scope: !23)
!300 = !DILocation(line: 114, column: 12, scope: !23)
!301 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !23, file: !1, line: 81, type: !26)
!302 = !DILocation(line: 81, column: 6, scope: !23)
!303 = !DILocation(line: 116, column: 36, scope: !23)
!304 = !DILocation(line: 116, column: 35, scope: !23)
!305 = !DILocation(line: 116, column: 15, scope: !23)
!306 = !DILocation(line: 116, column: 7, scope: !23)
!307 = !DILocation(line: 117, column: 39, scope: !23)
!308 = !DILocation(line: 117, column: 38, scope: !23)
!309 = !DILocation(line: 117, column: 18, scope: !23)
!310 = !DILocation(line: 117, column: 10, scope: !23)
!311 = !DILocation(line: 118, column: 20, scope: !23)
!312 = !DILocation(line: 118, column: 32, scope: !23)
!313 = !DILocation(line: 118, column: 14, scope: !23)
!314 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fp", scope: !23, file: !1, line: 118, type: !37)
!315 = !DILocation(line: 118, column: 9, scope: !23)
!316 = !DILocation(line: 119, column: 2, scope: !23)
!317 = !DILocation(line: 120, column: 3, scope: !23)
!318 = !DILocation(line: 121, column: 3, scope: !23)
!319 = !DILocation(line: 121, column: 39, scope: !23)
!320 = !DILocation(line: 121, column: 38, scope: !23)
!321 = !DILocation(line: 124, column: 16, scope: !23)
!322 = !DILocation(line: 124, column: 14, scope: !23)
!323 = !DILocation(line: 125, column: 6, scope: !291)
!324 = !DILocation(line: 125, column: 11, scope: !290)
!325 = !DILocation(line: 125, column: 2, scope: !291)
!326 = !DILocation(line: 127, column: 3, scope: !289)
!327 = !DILocation(line: 131, column: 2, scope: !289)
!328 = !DILocation(line: 125, column: 23, scope: !290)
!329 = !DILocation(line: 125, column: 2, scope: !290)
!330 = !DILocation(line: 132, column: 14, scope: !23)
!331 = !DILocation(line: 132, column: 12, scope: !23)
!332 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !23, file: !1, line: 133, type: !4)
!333 = !DILocation(line: 133, column: 10, scope: !23)
!334 = !DILocation(line: 135, column: 15, scope: !23)
!335 = !DILocation(line: 136, column: 5, scope: !23)
!336 = !DILocation(line: 137, column: 5, scope: !23)
!337 = !DILocation(line: 138, column: 5, scope: !23)
!338 = !DILocation(line: 146, column: 8, scope: !23)
!339 = !DILocation(line: 146, column: 2, scope: !23)
!340 = !DILocation(line: 152, column: 9, scope: !23)
!341 = !DILocation(line: 152, column: 21, scope: !23)
!342 = !DILocation(line: 152, column: 19, scope: !23)
!343 = !DILocation(line: 152, column: 2, scope: !23)
!344 = !DILocation(line: 153, column: 1, scope: !23)
!345 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !34, file: !1, line: 52, type: !26)
!346 = !DILocation(line: 52, column: 19, scope: !34)
!347 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !34, file: !1, line: 52, type: !26)
!348 = !DILocation(line: 52, column: 16, scope: !34)
!349 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "s", scope: !34, file: !1, line: 51, type: !26)
!350 = !DILocation(line: 51, column: 6, scope: !34)
!351 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !34, file: !1, line: 52, type: !26)
!352 = !DILocation(line: 52, column: 13, scope: !34)
!353 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "A0", arg: 1, scope: !34, file: !1, line: 49, type: !4)
!354 = !DILocation(line: 49, column: 29, scope: !34)
!355 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nx", arg: 2, scope: !34, file: !1, line: 49, type: !26)
!356 = !DILocation(line: 49, column: 37, scope: !34)
!357 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "ny", arg: 3, scope: !34, file: !1, line: 49, type: !26)
!358 = !DILocation(line: 49, column: 44, scope: !34)
!359 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nz", arg: 4, scope: !34, file: !1, line: 49, type: !26)
!360 = !DILocation(line: 49, column: 51, scope: !34)
!361 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fp", arg: 5, scope: !34, file: !1, line: 49, type: !37)
!362 = !DILocation(line: 49, column: 60, scope: !34)
!363 = !DILocation(line: 53, column: 6, scope: !364)
!364 = distinct !DILexicalBlock(scope: !34, file: !1, line: 53, column: 2)
!365 = !DILocation(line: 53, column: 11, scope: !366)
!366 = distinct !DILexicalBlock(scope: !364, file: !1, line: 53, column: 2)
!367 = !DILocation(line: 53, column: 2, scope: !364)
!368 = !DILocation(line: 55, column: 7, scope: !369)
!369 = distinct !DILexicalBlock(scope: !370, file: !1, line: 55, column: 3)
!370 = distinct !DILexicalBlock(scope: !366, file: !1, line: 54, column: 2)
!371 = !DILocation(line: 55, column: 12, scope: !372)
!372 = distinct !DILexicalBlock(scope: !369, file: !1, line: 55, column: 3)
!373 = !DILocation(line: 55, column: 3, scope: !369)
!374 = !DILocation(line: 57, column: 8, scope: !375)
!375 = distinct !DILexicalBlock(scope: !376, file: !1, line: 57, column: 4)
!376 = distinct !DILexicalBlock(scope: !372, file: !1, line: 56, column: 3)
!377 = !DILocation(line: 57, column: 13, scope: !378)
!378 = distinct !DILexicalBlock(scope: !375, file: !1, line: 57, column: 4)
!379 = !DILocation(line: 57, column: 4, scope: !375)
!380 = !DILocation(line: 59, column: 41, scope: !381)
!381 = distinct !DILexicalBlock(scope: !378, file: !1, line: 58, column: 4)
!382 = !DILocation(line: 59, column: 39, scope: !381)
!383 = !DILocation(line: 59, column: 33, scope: !381)
!384 = !DILocation(line: 60, column: 6, scope: !381)
!385 = !DILocation(line: 61, column: 4, scope: !381)
!386 = !DILocation(line: 57, column: 18, scope: !378)
!387 = !DILocation(line: 57, column: 4, scope: !378)
!388 = !DILocation(line: 62, column: 3, scope: !376)
!389 = !DILocation(line: 55, column: 17, scope: !372)
!390 = !DILocation(line: 55, column: 3, scope: !372)
!391 = !DILocation(line: 63, column: 2, scope: !370)
!392 = !DILocation(line: 53, column: 16, scope: !366)
!393 = !DILocation(line: 53, column: 2, scope: !366)
!394 = !DILocation(line: 64, column: 2, scope: !34)
!395 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !30, file: !1, line: 155, type: !26)
!396 = !DILocation(line: 155, column: 23, scope: !30)
!397 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !30, file: !1, line: 155, type: !27)
!398 = !DILocation(line: 155, column: 36, scope: !30)
!399 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c0", scope: !30, file: !1, line: 172, type: !5)
!400 = !DILocation(line: 172, column: 8, scope: !30)
!401 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c1", scope: !30, file: !1, line: 173, type: !5)
!402 = !DILocation(line: 173, column: 8, scope: !30)
!403 = !DILocation(line: 175, column: 10, scope: !404)
!404 = distinct !DILexicalBlock(scope: !30, file: !1, line: 175, column: 6)
!405 = !DILocation(line: 175, column: 6, scope: !30)
!406 = !DILocation(line: 177, column: 7, scope: !407)
!407 = distinct !DILexicalBlock(scope: !404, file: !1, line: 176, column: 5)
!408 = !DILocation(line: 182, column: 7, scope: !407)
!409 = !DILocation(line: 185, column: 12, scope: !30)
!410 = !DILocation(line: 185, column: 7, scope: !30)
!411 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nx", scope: !30, file: !1, line: 169, type: !26)
!412 = !DILocation(line: 169, column: 6, scope: !30)
!413 = !DILocation(line: 186, column: 8, scope: !414)
!414 = distinct !DILexicalBlock(scope: !30, file: !1, line: 186, column: 6)
!415 = !DILocation(line: 186, column: 6, scope: !30)
!416 = !DILocation(line: 187, column: 3, scope: !414)
!417 = !DILocation(line: 188, column: 12, scope: !30)
!418 = !DILocation(line: 188, column: 7, scope: !30)
!419 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "ny", scope: !30, file: !1, line: 169, type: !26)
!420 = !DILocation(line: 169, column: 9, scope: !30)
!421 = !DILocation(line: 189, column: 8, scope: !422)
!422 = distinct !DILexicalBlock(scope: !30, file: !1, line: 189, column: 6)
!423 = !DILocation(line: 189, column: 6, scope: !30)
!424 = !DILocation(line: 190, column: 3, scope: !422)
!425 = !DILocation(line: 191, column: 12, scope: !30)
!426 = !DILocation(line: 191, column: 7, scope: !30)
!427 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "nz", scope: !30, file: !1, line: 169, type: !26)
!428 = !DILocation(line: 169, column: 12, scope: !30)
!429 = !DILocation(line: 192, column: 8, scope: !430)
!430 = distinct !DILexicalBlock(scope: !30, file: !1, line: 192, column: 6)
!431 = !DILocation(line: 192, column: 6, scope: !30)
!432 = !DILocation(line: 193, column: 3, scope: !430)
!433 = !DILocation(line: 194, column: 19, scope: !30)
!434 = !DILocation(line: 194, column: 14, scope: !30)
!435 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "iteration", scope: !30, file: !1, line: 171, type: !26)
!436 = !DILocation(line: 171, column: 9, scope: !30)
!437 = !DILocation(line: 195, column: 14, scope: !438)
!438 = distinct !DILexicalBlock(scope: !30, file: !1, line: 195, column: 5)
!439 = !DILocation(line: 195, column: 5, scope: !30)
!440 = !DILocation(line: 196, column: 3, scope: !438)
!441 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !442, file: !1, line: 217, type: !4)
!442 = distinct !DILexicalBlock(scope: !443, file: !1, line: 215, column: 2)
!443 = distinct !DILexicalBlock(scope: !444, file: !1, line: 214, column: 2)
!444 = distinct !DILexicalBlock(scope: !30, file: !1, line: 214, column: 2)
!445 = !DILocation(line: 217, column: 13, scope: !442)
!446 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h_A0", scope: !30, file: !1, line: 200, type: !4)
!447 = !DILocation(line: 200, column: 9, scope: !30)
!448 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "h_Anext", scope: !30, file: !1, line: 201, type: !4)
!449 = !DILocation(line: 201, column: 9, scope: !30)
!450 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t", scope: !30, file: !1, line: 212, type: !26)
!451 = !DILocation(line: 212, column: 7, scope: !30)
!452 = !DILocation(line: 203, column: 9, scope: !30)
!453 = !DILocation(line: 203, column: 12, scope: !30)
!454 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "size", scope: !30, file: !1, line: 170, type: !26)
!455 = !DILocation(line: 170, column: 6, scope: !30)
!456 = !DILocation(line: 205, column: 36, scope: !30)
!457 = !DILocation(line: 205, column: 35, scope: !30)
!458 = !DILocation(line: 205, column: 15, scope: !30)
!459 = !DILocation(line: 205, column: 7, scope: !30)
!460 = !DILocation(line: 206, column: 39, scope: !30)
!461 = !DILocation(line: 206, column: 38, scope: !30)
!462 = !DILocation(line: 206, column: 18, scope: !30)
!463 = !DILocation(line: 206, column: 10, scope: !30)
!464 = !DILocation(line: 207, column: 21, scope: !30)
!465 = !DILocation(line: 207, column: 33, scope: !30)
!466 = !DILocation(line: 207, column: 15, scope: !30)
!467 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fp", scope: !30, file: !1, line: 207, type: !37)
!468 = !DILocation(line: 207, column: 10, scope: !30)
!469 = !DILocation(line: 208, column: 2, scope: !30)
!470 = !DILocation(line: 209, column: 3, scope: !30)
!471 = !DILocation(line: 210, column: 3, scope: !30)
!472 = !DILocation(line: 210, column: 39, scope: !30)
!473 = !DILocation(line: 210, column: 38, scope: !30)
!474 = !DILocation(line: 213, column: 12, scope: !30)
!475 = !DILocation(line: 213, column: 10, scope: !30)
!476 = !DILocation(line: 214, column: 6, scope: !444)
!477 = !DILocation(line: 214, column: 11, scope: !443)
!478 = !DILocation(line: 214, column: 2, scope: !444)
!479 = !DILocation(line: 216, column: 3, scope: !442)
!480 = !DILocation(line: 220, column: 2, scope: !442)
!481 = !DILocation(line: 214, column: 23, scope: !443)
!482 = !DILocation(line: 214, column: 2, scope: !443)
!483 = !DILocation(line: 221, column: 10, scope: !30)
!484 = !DILocation(line: 221, column: 8, scope: !30)
!485 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "temp", scope: !30, file: !1, line: 223, type: !4)
!486 = !DILocation(line: 223, column: 10, scope: !30)
!487 = !DILocation(line: 225, column: 15, scope: !30)
!488 = !DILocation(line: 226, column: 6, scope: !30)
!489 = !DILocation(line: 227, column: 5, scope: !30)
!490 = !DILocation(line: 228, column: 5, scope: !30)
!491 = !DILocation(line: 236, column: 8, scope: !30)
!492 = !DILocation(line: 236, column: 2, scope: !30)
!493 = !DILocation(line: 242, column: 9, scope: !30)
!494 = !DILocation(line: 242, column: 17, scope: !30)
!495 = !DILocation(line: 242, column: 15, scope: !30)
!496 = !DILocation(line: 242, column: 2, scope: !30)
!497 = !DILocation(line: 243, column: 1, scope: !30)
!498 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !31, file: !1, line: 245, type: !26)
!499 = !DILocation(line: 245, column: 14, scope: !31)
!500 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !31, file: !1, line: 245, type: !27)
!501 = !DILocation(line: 245, column: 27, scope: !31)
!502 = !DILocation(line: 248, column: 15, scope: !31)
!503 = !DILocation(line: 248, column: 13, scope: !31)
!504 = !DILocation(line: 250, column: 22, scope: !31)
!505 = !DILocation(line: 250, column: 11, scope: !31)
!506 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_GPU", scope: !31, file: !1, line: 246, type: !11)
!507 = !DILocation(line: 246, column: 10, scope: !31)
!508 = !DILocation(line: 251, column: 11, scope: !31)
!509 = !DILocation(line: 251, column: 3, scope: !31)
!510 = !DILocation(line: 253, column: 22, scope: !31)
!511 = !DILocation(line: 253, column: 11, scope: !31)
!512 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_CPU", scope: !31, file: !1, line: 246, type: !11)
!513 = !DILocation(line: 246, column: 17, scope: !31)
!514 = !DILocation(line: 254, column: 11, scope: !31)
!515 = !DILocation(line: 254, column: 3, scope: !31)
!516 = !DILocation(line: 256, column: 18, scope: !31)
!517 = !DILocation(line: 256, column: 31, scope: !31)
!518 = !DILocation(line: 256, column: 3, scope: !31)
!519 = !DILocation(line: 258, column: 20, scope: !31)
!520 = !DILocation(line: 258, column: 2, scope: !31)
!521 = !DILocation(line: 259, column: 8, scope: !31)
!522 = !DILocation(line: 259, column: 2, scope: !31)
!523 = !DILocation(line: 260, column: 8, scope: !31)
!524 = !DILocation(line: 260, column: 2, scope: !31)
!525 = !DILocation(line: 262, column: 2, scope: !31)
