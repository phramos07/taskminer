; ModuleID = '/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Parboil/spmv/src/file.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }

@.str = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@stderr = external global %struct._IO_FILE*, align 8
@.str.1 = private unnamed_addr constant [24 x i8] c"Cannot open input file\0A\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"%d %d %d %d %d\0A\00", align 1
@.str.3 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"Cannot open output file\0A\00", align 1

; Function Attrs: nounwind uwtable
define void @inputData(i8* %fName, i32* %len, i32* %depth, i32* %dim, i32* %nzcnt_len, i32* %pad, float** %h_data, i32** %h_indices, i32** %h_ptr, i32** %h_perm, i32** %h_nzcnt) #0 {
entry:
  call void @llvm.dbg.value(metadata i8* %fName, i64 0, metadata !24, metadata !25), !dbg !26
  call void @llvm.dbg.value(metadata i32* %len, i64 0, metadata !27, metadata !25), !dbg !28
  call void @llvm.dbg.value(metadata i32* %depth, i64 0, metadata !29, metadata !25), !dbg !30
  call void @llvm.dbg.value(metadata i32* %dim, i64 0, metadata !31, metadata !25), !dbg !32
  call void @llvm.dbg.value(metadata i32* %nzcnt_len, i64 0, metadata !33, metadata !25), !dbg !34
  call void @llvm.dbg.value(metadata i32* %pad, i64 0, metadata !35, metadata !25), !dbg !36
  call void @llvm.dbg.value(metadata float** %h_data, i64 0, metadata !37, metadata !25), !dbg !38
  call void @llvm.dbg.value(metadata i32** %h_indices, i64 0, metadata !39, metadata !25), !dbg !40
  call void @llvm.dbg.value(metadata i32** %h_ptr, i64 0, metadata !41, metadata !25), !dbg !42
  call void @llvm.dbg.value(metadata i32** %h_perm, i64 0, metadata !43, metadata !25), !dbg !44
  call void @llvm.dbg.value(metadata i32** %h_nzcnt, i64 0, metadata !45, metadata !25), !dbg !46
  %call = call %struct._IO_FILE* @fopen(i8* %fName, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !47
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call, i64 0, metadata !48, metadata !25), !dbg !108
  %cmp = icmp eq %struct._IO_FILE* %call, null, !dbg !109
  br i1 %cmp, label %if.then, label %if.end, !dbg !111

if.then:                                          ; preds = %entry
  %tmp = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !112
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.1, i32 0, i32 0)), !dbg !114
  call void @exit(i32 -1) #5, !dbg !115
  unreachable, !dbg !115

if.end:                                           ; preds = %entry
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @__isoc99_fscanf(%struct._IO_FILE* %call, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i32 0, i32 0), i32* %len, i32* %depth, i32* %nzcnt_len, i32* %dim, i32* %pad), !dbg !116
  %arrayidx = getelementptr inbounds i32, i32* %len, i64 0, !dbg !117
  %tmp1 = load i32, i32* %arrayidx, align 4, !dbg !117
  call void @llvm.dbg.value(metadata i32 %tmp1, i64 0, metadata !118, metadata !25), !dbg !119
  %arrayidx3 = getelementptr inbounds i32, i32* %depth, i64 0, !dbg !120
  %tmp2 = load i32, i32* %arrayidx3, align 4, !dbg !120
  call void @llvm.dbg.value(metadata i32 %tmp2, i64 0, metadata !121, metadata !25), !dbg !122
  %arrayidx4 = getelementptr inbounds i32, i32* %dim, i64 0, !dbg !123
  %tmp3 = load i32, i32* %arrayidx4, align 4, !dbg !123
  call void @llvm.dbg.value(metadata i32 %tmp3, i64 0, metadata !124, metadata !25), !dbg !125
  %arrayidx5 = getelementptr inbounds i32, i32* %pad, i64 0, !dbg !126
  %tmp4 = load i32, i32* %arrayidx5, align 4, !dbg !126
  call void @llvm.dbg.value(metadata i32 %tmp4, i64 0, metadata !127, metadata !25), !dbg !128
  %arrayidx6 = getelementptr inbounds i32, i32* %nzcnt_len, i64 0, !dbg !129
  %tmp5 = load i32, i32* %arrayidx6, align 4, !dbg !129
  call void @llvm.dbg.value(metadata i32 %tmp5, i64 0, metadata !130, metadata !25), !dbg !131
  %conv = sext i32 %tmp1 to i64, !dbg !132
  %mul = mul i64 %conv, 4, !dbg !133
  %call7 = call noalias i8* @malloc(i64 %mul) #6, !dbg !134
  %tmp6 = bitcast i8* %call7 to float*, !dbg !135
  store float* %tmp6, float** %h_data, align 8, !dbg !136
  %tmp7 = load float*, float** %h_data, align 8, !dbg !137
  %tmp8 = bitcast float* %tmp7 to i8*, !dbg !137
  %conv8 = sext i32 %tmp1 to i64, !dbg !138
  %call9 = call i64 @fread(i8* %tmp8, i64 4, i64 %conv8, %struct._IO_FILE* %call), !dbg !139
  %conv10 = sext i32 %tmp1 to i64, !dbg !140
  %mul11 = mul i64 %conv10, 4, !dbg !141
  %call12 = call noalias i8* @malloc(i64 %mul11) #6, !dbg !142
  %tmp9 = bitcast i8* %call12 to i32*, !dbg !143
  store i32* %tmp9, i32** %h_indices, align 8, !dbg !144
  %tmp10 = load i32*, i32** %h_indices, align 8, !dbg !145
  %tmp11 = bitcast i32* %tmp10 to i8*, !dbg !145
  %conv13 = sext i32 %tmp1 to i64, !dbg !146
  %call14 = call i64 @fread(i8* %tmp11, i64 4, i64 %conv13, %struct._IO_FILE* %call), !dbg !147
  %conv15 = sext i32 %tmp2 to i64, !dbg !148
  %mul16 = mul i64 %conv15, 4, !dbg !149
  %call17 = call noalias i8* @malloc(i64 %mul16) #6, !dbg !150
  %tmp12 = bitcast i8* %call17 to i32*, !dbg !151
  store i32* %tmp12, i32** %h_ptr, align 8, !dbg !152
  %tmp13 = load i32*, i32** %h_ptr, align 8, !dbg !153
  %tmp14 = bitcast i32* %tmp13 to i8*, !dbg !153
  %conv18 = sext i32 %tmp2 to i64, !dbg !154
  %call19 = call i64 @fread(i8* %tmp14, i64 4, i64 %conv18, %struct._IO_FILE* %call), !dbg !155
  %conv20 = sext i32 %tmp3 to i64, !dbg !156
  %mul21 = mul i64 %conv20, 4, !dbg !157
  %call22 = call noalias i8* @malloc(i64 %mul21) #6, !dbg !158
  %tmp15 = bitcast i8* %call22 to i32*, !dbg !159
  store i32* %tmp15, i32** %h_perm, align 8, !dbg !160
  %tmp16 = load i32*, i32** %h_perm, align 8, !dbg !161
  %tmp17 = bitcast i32* %tmp16 to i8*, !dbg !161
  %conv23 = sext i32 %tmp3 to i64, !dbg !162
  %call24 = call i64 @fread(i8* %tmp17, i64 4, i64 %conv23, %struct._IO_FILE* %call), !dbg !163
  %conv25 = sext i32 %tmp5 to i64, !dbg !164
  %mul26 = mul i64 %conv25, 4, !dbg !165
  %call27 = call noalias i8* @malloc(i64 %mul26) #6, !dbg !166
  %tmp18 = bitcast i8* %call27 to i32*, !dbg !167
  store i32* %tmp18, i32** %h_nzcnt, align 8, !dbg !168
  %tmp19 = load i32*, i32** %h_nzcnt, align 8, !dbg !169
  %tmp20 = bitcast i32* %tmp19 to i8*, !dbg !169
  %conv28 = sext i32 %tmp5 to i64, !dbg !170
  %call29 = call i64 @fread(i8* %tmp20, i64 4, i64 %conv28, %struct._IO_FILE* %call), !dbg !171
  %call30 = call i32 @fclose(%struct._IO_FILE* %call), !dbg !172
  ret void, !dbg !173
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare %struct._IO_FILE* @fopen(i8*, i8*) #2

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: noreturn nounwind
declare void @exit(i32) #3

declare i32 @__isoc99_fscanf(%struct._IO_FILE*, i8*, ...) #2

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #4

declare i64 @fread(i8*, i64, i64, %struct._IO_FILE*) #2

declare i32 @fclose(%struct._IO_FILE*) #2

; Function Attrs: nounwind uwtable
define void @input_vec(i8* %fName, float* %h_vec, i32 %dim) #0 {
entry:
  call void @llvm.dbg.value(metadata i8* %fName, i64 0, metadata !174, metadata !25), !dbg !175
  call void @llvm.dbg.value(metadata float* %h_vec, i64 0, metadata !176, metadata !25), !dbg !177
  call void @llvm.dbg.value(metadata i32 %dim, i64 0, metadata !178, metadata !25), !dbg !179
  %call = call %struct._IO_FILE* @fopen(i8* %fName, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0)), !dbg !180
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call, i64 0, metadata !181, metadata !25), !dbg !182
  %tmp = bitcast float* %h_vec to i8*, !dbg !183
  %conv = sext i32 %dim to i64, !dbg !184
  %call1 = call i64 @fread(i8* %tmp, i64 4, i64 %conv, %struct._IO_FILE* %call), !dbg !185
  %call2 = call i32 @fclose(%struct._IO_FILE* %call), !dbg !186
  ret void, !dbg !187
}

; Function Attrs: nounwind uwtable
define void @outputData(i8* %fName, float* %h_Ax_vector, i32 %dim) #0 {
entry:
  %tmp32 = alloca i32, align 4
  call void @llvm.dbg.value(metadata i8* %fName, i64 0, metadata !188, metadata !25), !dbg !189
  call void @llvm.dbg.value(metadata float* %h_Ax_vector, i64 0, metadata !190, metadata !25), !dbg !191
  call void @llvm.dbg.value(metadata i32 %dim, i64 0, metadata !192, metadata !25), !dbg !193
  %call = call %struct._IO_FILE* @fopen(i8* %fName, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.3, i32 0, i32 0)), !dbg !194
  call void @llvm.dbg.value(metadata %struct._IO_FILE* %call, i64 0, metadata !195, metadata !25), !dbg !196
  call void @llvm.dbg.declare(metadata i32* %tmp32, metadata !197, metadata !25), !dbg !201
  %cmp = icmp eq %struct._IO_FILE* %call, null, !dbg !202
  br i1 %cmp, label %if.then, label %if.end, !dbg !204

if.then:                                          ; preds = %entry
  %tmp = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !205
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i32 0, i32 0)), !dbg !207
  call void @exit(i32 -1) #5, !dbg !208
  unreachable, !dbg !208

if.end:                                           ; preds = %entry
  store i32 %dim, i32* %tmp32, align 4, !dbg !209
  %tmp1 = bitcast i32* %tmp32 to i8*, !dbg !210
  %call2 = call i64 @fwrite(i8* %tmp1, i64 4, i64 1, %struct._IO_FILE* %call), !dbg !211
  %tmp2 = bitcast float* %h_Ax_vector to i8*, !dbg !212
  %conv = sext i32 %dim to i64, !dbg !213
  %call3 = call i64 @fwrite(i8* %tmp2, i64 4, i64 %conv, %struct._IO_FILE* %call), !dbg !214
  %call4 = call i32 @fclose(%struct._IO_FILE* %call), !dbg !215
  ret void, !dbg !216
}

declare i64 @fwrite(i8*, i64, i64, %struct._IO_FILE*) #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind }
attributes #6 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!21, !22}
!llvm.ident = !{!23}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !9)
!1 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/UniBench/benchmarks//Parboil/spmv/src/file.c", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!2 = !{}
!3 = !{!4, !5, !7}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64, align: 64)
!5 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64, align: 64)
!6 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!7 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64, align: 64)
!8 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!9 = !{!10, !17, !20}
!10 = !DISubprogram(name: "inputData", scope: !1, file: !1, line: 19, type: !11, isLocal: false, isDefinition: true, scopeLine: 22, flags: DIFlagPrototyped, isOptimized: false, function: void (i8*, i32*, i32*, i32*, i32*, i32*, float**, i32**, i32**, i32**, i32**)* @inputData, variables: !2)
!11 = !DISubroutineType(types: !12)
!12 = !{null, !13, !7, !7, !7, !7, !7, !15, !16, !16, !16, !16}
!13 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64, align: 64)
!14 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!15 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64, align: 64)
!16 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64, align: 64)
!17 = !DISubprogram(name: "input_vec", scope: !1, file: !1, line: 56, type: !18, isLocal: false, isDefinition: true, scopeLine: 57, flags: DIFlagPrototyped, isOptimized: false, function: void (i8*, float*, i32)* @input_vec, variables: !2)
!18 = !DISubroutineType(types: !19)
!19 = !{null, !13, !5, !8}
!20 = !DISubprogram(name: "outputData", scope: !1, file: !1, line: 64, type: !18, isLocal: false, isDefinition: true, scopeLine: 65, flags: DIFlagPrototyped, isOptimized: false, function: void (i8*, float*, i32)* @outputData, variables: !2)
!21 = !{i32 2, !"Dwarf Version", i32 4}
!22 = !{i32 2, !"Debug Info Version", i32 3}
!23 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!24 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fName", arg: 1, scope: !10, file: !1, line: 19, type: !13)
!25 = !DIExpression()
!26 = !DILocation(line: 19, column: 22, scope: !10)
!27 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "len", arg: 2, scope: !10, file: !1, line: 19, type: !7)
!28 = !DILocation(line: 19, column: 34, scope: !10)
!29 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "depth", arg: 3, scope: !10, file: !1, line: 19, type: !7)
!30 = !DILocation(line: 19, column: 44, scope: !10)
!31 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dim", arg: 4, scope: !10, file: !1, line: 19, type: !7)
!32 = !DILocation(line: 19, column: 56, scope: !10)
!33 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "nzcnt_len", arg: 5, scope: !10, file: !1, line: 19, type: !7)
!34 = !DILocation(line: 19, column: 65, scope: !10)
!35 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "pad", arg: 6, scope: !10, file: !1, line: 19, type: !7)
!36 = !DILocation(line: 19, column: 80, scope: !10)
!37 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "h_data", arg: 7, scope: !10, file: !1, line: 20, type: !15)
!38 = !DILocation(line: 20, column: 24, scope: !10)
!39 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "h_indices", arg: 8, scope: !10, file: !1, line: 20, type: !16)
!40 = !DILocation(line: 20, column: 38, scope: !10)
!41 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "h_ptr", arg: 9, scope: !10, file: !1, line: 20, type: !16)
!42 = !DILocation(line: 20, column: 55, scope: !10)
!43 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "h_perm", arg: 10, scope: !10, file: !1, line: 21, type: !16)
!44 = !DILocation(line: 21, column: 22, scope: !10)
!45 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "h_nzcnt", arg: 11, scope: !10, file: !1, line: 21, type: !16)
!46 = !DILocation(line: 21, column: 36, scope: !10)
!47 = !DILocation(line: 23, column: 15, scope: !10)
!48 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fid", scope: !10, file: !1, line: 23, type: !49)
!49 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !50, size: 64, align: 64)
!50 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !51, line: 49, baseType: !52)
!51 = !DIFile(filename: "/usr/include/stdio.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!52 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !53, line: 273, size: 1728, align: 64, elements: !54)
!53 = !DIFile(filename: "/usr/include/libio.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!54 = !{!55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !75, !76, !77, !78, !82, !84, !86, !90, !93, !95, !96, !97, !98, !99, !103, !104}
!55 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !52, file: !53, line: 274, baseType: !8, size: 32, align: 32)
!56 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !52, file: !53, line: 279, baseType: !13, size: 64, align: 64, offset: 64)
!57 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !52, file: !53, line: 280, baseType: !13, size: 64, align: 64, offset: 128)
!58 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !52, file: !53, line: 281, baseType: !13, size: 64, align: 64, offset: 192)
!59 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !52, file: !53, line: 282, baseType: !13, size: 64, align: 64, offset: 256)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !52, file: !53, line: 283, baseType: !13, size: 64, align: 64, offset: 320)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !52, file: !53, line: 284, baseType: !13, size: 64, align: 64, offset: 384)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !52, file: !53, line: 285, baseType: !13, size: 64, align: 64, offset: 448)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !52, file: !53, line: 286, baseType: !13, size: 64, align: 64, offset: 512)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !52, file: !53, line: 288, baseType: !13, size: 64, align: 64, offset: 576)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !52, file: !53, line: 289, baseType: !13, size: 64, align: 64, offset: 640)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !52, file: !53, line: 290, baseType: !13, size: 64, align: 64, offset: 704)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !52, file: !53, line: 292, baseType: !68, size: 64, align: 64, offset: 768)
!68 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !69, size: 64, align: 64)
!69 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !53, line: 188, size: 192, align: 64, elements: !70)
!70 = !{!71, !72, !74}
!71 = !DIDerivedType(tag: DW_TAG_member, name: "_next", scope: !69, file: !53, line: 189, baseType: !68, size: 64, align: 64)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "_sbuf", scope: !69, file: !53, line: 190, baseType: !73, size: 64, align: 64, offset: 64)
!73 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !52, size: 64, align: 64)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "_pos", scope: !69, file: !53, line: 194, baseType: !8, size: 32, align: 32, offset: 128)
!75 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !52, file: !53, line: 294, baseType: !73, size: 64, align: 64, offset: 832)
!76 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !52, file: !53, line: 296, baseType: !8, size: 32, align: 32, offset: 896)
!77 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !52, file: !53, line: 300, baseType: !8, size: 32, align: 32, offset: 928)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !52, file: !53, line: 302, baseType: !79, size: 64, align: 64, offset: 960)
!79 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !80, line: 141, baseType: !81)
!80 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!81 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !52, file: !53, line: 306, baseType: !83, size: 16, align: 16, offset: 1024)
!83 = !DIBasicType(name: "unsigned short", size: 16, align: 16, encoding: DW_ATE_unsigned)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !52, file: !53, line: 307, baseType: !85, size: 8, align: 8, offset: 1040)
!85 = !DIBasicType(name: "signed char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !52, file: !53, line: 308, baseType: !87, size: 8, align: 8, offset: 1048)
!87 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 8, align: 8, elements: !88)
!88 = !{!89}
!89 = !DISubrange(count: 1)
!90 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !52, file: !53, line: 312, baseType: !91, size: 64, align: 64, offset: 1088)
!91 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !92, size: 64, align: 64)
!92 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !53, line: 182, baseType: null)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !52, file: !53, line: 321, baseType: !94, size: 64, align: 64, offset: 1152)
!94 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !80, line: 142, baseType: !81)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !52, file: !53, line: 330, baseType: !4, size: 64, align: 64, offset: 1216)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "__pad2", scope: !52, file: !53, line: 331, baseType: !4, size: 64, align: 64, offset: 1280)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "__pad3", scope: !52, file: !53, line: 332, baseType: !4, size: 64, align: 64, offset: 1344)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "__pad4", scope: !52, file: !53, line: 333, baseType: !4, size: 64, align: 64, offset: 1408)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !52, file: !53, line: 334, baseType: !100, size: 64, align: 64, offset: 1472)
!100 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !101, line: 62, baseType: !102)
!101 = !DIFile(filename: "/home/gleison/lge/llvm-3.7-src/build-debug/bin/../lib/clang/3.7.0/include/stddef.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!102 = !DIBasicType(name: "long unsigned int", size: 64, align: 64, encoding: DW_ATE_unsigned)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !52, file: !53, line: 336, baseType: !8, size: 32, align: 32, offset: 1536)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !52, file: !53, line: 338, baseType: !105, size: 160, align: 8, offset: 1568)
!105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !14, size: 160, align: 8, elements: !106)
!106 = !{!107}
!107 = !DISubrange(count: 20)
!108 = !DILocation(line: 23, column: 9, scope: !10)
!109 = !DILocation(line: 25, column: 11, scope: !110)
!110 = distinct !DILexicalBlock(scope: !10, file: !1, line: 25, column: 7)
!111 = !DILocation(line: 25, column: 7, scope: !10)
!112 = !DILocation(line: 27, column: 15, scope: !113)
!113 = distinct !DILexicalBlock(scope: !110, file: !1, line: 26, column: 5)
!114 = !DILocation(line: 27, column: 7, scope: !113)
!115 = !DILocation(line: 28, column: 7, scope: !113)
!116 = !DILocation(line: 31, column: 3, scope: !10)
!117 = !DILocation(line: 32, column: 12, scope: !10)
!118 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_len", scope: !10, file: !1, line: 32, type: !8)
!119 = !DILocation(line: 32, column: 7, scope: !10)
!120 = !DILocation(line: 33, column: 14, scope: !10)
!121 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_depth", scope: !10, file: !1, line: 33, type: !8)
!122 = !DILocation(line: 33, column: 7, scope: !10)
!123 = !DILocation(line: 34, column: 12, scope: !10)
!124 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_dim", scope: !10, file: !1, line: 34, type: !8)
!125 = !DILocation(line: 34, column: 7, scope: !10)
!126 = !DILocation(line: 35, column: 12, scope: !10)
!127 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_pad", scope: !10, file: !1, line: 35, type: !8)
!128 = !DILocation(line: 35, column: 7, scope: !10)
!129 = !DILocation(line: 36, column: 18, scope: !10)
!130 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "_nzcnt_len", scope: !10, file: !1, line: 36, type: !8)
!131 = !DILocation(line: 36, column: 7, scope: !10)
!132 = !DILocation(line: 38, column: 30, scope: !10)
!133 = !DILocation(line: 38, column: 35, scope: !10)
!134 = !DILocation(line: 38, column: 23, scope: !10)
!135 = !DILocation(line: 38, column: 13, scope: !10)
!136 = !DILocation(line: 38, column: 11, scope: !10)
!137 = !DILocation(line: 39, column: 10, scope: !10)
!138 = !DILocation(line: 39, column: 35, scope: !10)
!139 = !DILocation(line: 39, column: 3, scope: !10)
!140 = !DILocation(line: 41, column: 31, scope: !10)
!141 = !DILocation(line: 41, column: 36, scope: !10)
!142 = !DILocation(line: 41, column: 24, scope: !10)
!143 = !DILocation(line: 41, column: 16, scope: !10)
!144 = !DILocation(line: 41, column: 14, scope: !10)
!145 = !DILocation(line: 42, column: 10, scope: !10)
!146 = !DILocation(line: 42, column: 36, scope: !10)
!147 = !DILocation(line: 42, column: 3, scope: !10)
!148 = !DILocation(line: 44, column: 27, scope: !10)
!149 = !DILocation(line: 44, column: 34, scope: !10)
!150 = !DILocation(line: 44, column: 20, scope: !10)
!151 = !DILocation(line: 44, column: 12, scope: !10)
!152 = !DILocation(line: 44, column: 10, scope: !10)
!153 = !DILocation(line: 45, column: 10, scope: !10)
!154 = !DILocation(line: 45, column: 32, scope: !10)
!155 = !DILocation(line: 45, column: 3, scope: !10)
!156 = !DILocation(line: 47, column: 28, scope: !10)
!157 = !DILocation(line: 47, column: 33, scope: !10)
!158 = !DILocation(line: 47, column: 21, scope: !10)
!159 = !DILocation(line: 47, column: 13, scope: !10)
!160 = !DILocation(line: 47, column: 11, scope: !10)
!161 = !DILocation(line: 48, column: 10, scope: !10)
!162 = !DILocation(line: 48, column: 33, scope: !10)
!163 = !DILocation(line: 48, column: 3, scope: !10)
!164 = !DILocation(line: 50, column: 29, scope: !10)
!165 = !DILocation(line: 50, column: 40, scope: !10)
!166 = !DILocation(line: 50, column: 22, scope: !10)
!167 = !DILocation(line: 50, column: 14, scope: !10)
!168 = !DILocation(line: 50, column: 12, scope: !10)
!169 = !DILocation(line: 51, column: 10, scope: !10)
!170 = !DILocation(line: 51, column: 34, scope: !10)
!171 = !DILocation(line: 51, column: 3, scope: !10)
!172 = !DILocation(line: 53, column: 3, scope: !10)
!173 = !DILocation(line: 54, column: 1, scope: !10)
!174 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fName", arg: 1, scope: !17, file: !1, line: 56, type: !13)
!175 = !DILocation(line: 56, column: 22, scope: !17)
!176 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "h_vec", arg: 2, scope: !17, file: !1, line: 56, type: !5)
!177 = !DILocation(line: 56, column: 35, scope: !17)
!178 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dim", arg: 3, scope: !17, file: !1, line: 56, type: !8)
!179 = !DILocation(line: 56, column: 45, scope: !17)
!180 = !DILocation(line: 58, column: 15, scope: !17)
!181 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fid", scope: !17, file: !1, line: 58, type: !49)
!182 = !DILocation(line: 58, column: 9, scope: !17)
!183 = !DILocation(line: 59, column: 10, scope: !17)
!184 = !DILocation(line: 59, column: 33, scope: !17)
!185 = !DILocation(line: 59, column: 3, scope: !17)
!186 = !DILocation(line: 60, column: 3, scope: !17)
!187 = !DILocation(line: 62, column: 1, scope: !17)
!188 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "fName", arg: 1, scope: !20, file: !1, line: 64, type: !13)
!189 = !DILocation(line: 64, column: 23, scope: !20)
!190 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "h_Ax_vector", arg: 2, scope: !20, file: !1, line: 64, type: !5)
!191 = !DILocation(line: 64, column: 37, scope: !20)
!192 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "dim", arg: 3, scope: !20, file: !1, line: 64, type: !8)
!193 = !DILocation(line: 64, column: 53, scope: !20)
!194 = !DILocation(line: 66, column: 15, scope: !20)
!195 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fid", scope: !20, file: !1, line: 66, type: !49)
!196 = !DILocation(line: 66, column: 9, scope: !20)
!197 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "tmp32", scope: !20, file: !1, line: 67, type: !198)
!198 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !199, line: 52, baseType: !200)
!199 = !DIFile(filename: "/usr/include/stdint.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!200 = !DIBasicType(name: "unsigned int", size: 32, align: 32, encoding: DW_ATE_unsigned)
!201 = !DILocation(line: 67, column: 12, scope: !20)
!202 = !DILocation(line: 68, column: 11, scope: !203)
!203 = distinct !DILexicalBlock(scope: !20, file: !1, line: 68, column: 7)
!204 = !DILocation(line: 68, column: 7, scope: !20)
!205 = !DILocation(line: 70, column: 15, scope: !206)
!206 = distinct !DILexicalBlock(scope: !203, file: !1, line: 69, column: 5)
!207 = !DILocation(line: 70, column: 7, scope: !206)
!208 = !DILocation(line: 71, column: 7, scope: !206)
!209 = !DILocation(line: 73, column: 9, scope: !20)
!210 = !DILocation(line: 74, column: 10, scope: !20)
!211 = !DILocation(line: 74, column: 3, scope: !20)
!212 = !DILocation(line: 75, column: 10, scope: !20)
!213 = !DILocation(line: 75, column: 38, scope: !20)
!214 = !DILocation(line: 75, column: 3, scope: !20)
!215 = !DILocation(line: 77, column: 3, scope: !20)
!216 = !DILocation(line: 78, column: 1, scope: !20)
