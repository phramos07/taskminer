; ModuleID = '/home/gleison/lge/dawn-3.7/UniBench/benchmarks//mgBench/search-vector/src/search-vector_gpu.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.timezone = type { i32, i32 }
%struct.timeval = type { i64, i64 }

@.str = private unnamed_addr constant [35 x i8] c"Error return from gettimeofday: %d\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@.str.1 = private unnamed_addr constant [21 x i8] c"<< Search Vector >>\0A\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"GPU Runtime: %0.6lfs\0A\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"CPU Runtime: %0.6lfs\0A\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"Working %d=%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"Error %d != %d\0A\00", align 1

; Function Attrs: nounwind uwtable
define double @rtclock() #0 {
entry:
  %Tzp = alloca %struct.timezone, align 4
  %Tp = alloca %struct.timeval, align 8
  call void @llvm.dbg.declare(metadata %struct.timezone* %Tzp, metadata !35, metadata !41), !dbg !42
  call void @llvm.dbg.declare(metadata %struct.timeval* %Tp, metadata !43, metadata !41), !dbg !53
  %call = call i32 @gettimeofday(%struct.timeval* %Tp, %struct.timezone* %Tzp) #4, !dbg !54
  call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !55, metadata !41), !dbg !56
  %cmp = icmp ne i32 %call, 0, !dbg !57
  br i1 %cmp, label %if.then, label %if.end, !dbg !59

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i32 0, i32 0), i32 %call), !dbg !60
  br label %if.end, !dbg !60

if.end:                                           ; preds = %if.then, %entry
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %Tp, i32 0, i32 0, !dbg !61
  %tmp = load i64, i64* %tv_sec, align 8, !dbg !61
  %conv = sitofp i64 %tmp to double, !dbg !62
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %Tp, i32 0, i32 1, !dbg !63
  %tmp1 = load i64, i64* %tv_usec, align 8, !dbg !63
  %conv2 = sitofp i64 %tmp1 to double, !dbg !64
  %mul = fmul double %conv2, 1.000000e-06, !dbg !65
  %add = fadd double %conv, %mul, !dbg !66
  ret double %add, !dbg !67
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timeval*, %struct.timezone*) #2

declare i32 @printf(i8*, ...) #3

; Function Attrs: nounwind uwtable
define float @absVal(float %a) #0 {
entry:
  call void @llvm.dbg.value(metadata float %a, i64 0, metadata !68, metadata !41), !dbg !69
  %cmp = fcmp olt float %a, 0.000000e+00, !dbg !70
  br i1 %cmp, label %if.then, label %if.else, !dbg !72

if.then:                                          ; preds = %entry
  %mul = fmul float %a, -1.000000e+00, !dbg !73
  br label %return, !dbg !75

if.else:                                          ; preds = %entry
  br label %return, !dbg !76

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi float [ %mul, %if.then ], [ %a, %if.else ]
  ret float %retval.0, !dbg !78
}

; Function Attrs: nounwind uwtable
define float @percentDiff(double %val1, double %val2) #0 {
entry:
  call void @llvm.dbg.value(metadata double %val1, i64 0, metadata !79, metadata !41), !dbg !80
  call void @llvm.dbg.value(metadata double %val2, i64 0, metadata !81, metadata !41), !dbg !82
  %conv = fptrunc double %val1 to float, !dbg !83
  %call = call float @absVal(float %conv), !dbg !85
  %conv1 = fpext float %call to double, !dbg !85
  %cmp = fcmp olt double %conv1, 1.000000e-02, !dbg !86
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !87

land.lhs.true:                                    ; preds = %entry
  %conv3 = fptrunc double %val2 to float, !dbg !88
  %call4 = call float @absVal(float %conv3), !dbg !90
  %conv5 = fpext float %call4 to double, !dbg !90
  %cmp6 = fcmp olt double %conv5, 1.000000e-02, !dbg !91
  br i1 %cmp6, label %if.then, label %if.else, !dbg !92

if.then:                                          ; preds = %land.lhs.true
  br label %return, !dbg !93

if.else:                                          ; preds = %land.lhs.true, %entry
  %sub = fsub double %val1, %val2, !dbg !95
  %conv8 = fptrunc double %sub to float, !dbg !97
  %call9 = call float @absVal(float %conv8), !dbg !98
  %add = fadd double %val1, 0x3E45798EE0000000, !dbg !99
  %conv10 = fptrunc double %add to float, !dbg !100
  %call11 = call float @absVal(float %conv10), !dbg !101
  %div = fdiv float %call9, %call11, !dbg !102
  %call12 = call float @absVal(float %div), !dbg !103
  %mul = fmul float 1.000000e+02, %call12, !dbg !104
  br label %return, !dbg !105

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi float [ 0.000000e+00, %if.then ], [ %mul, %if.else ]
  ret float %retval.0, !dbg !106
}

; Function Attrs: nounwind uwtable
define void @init(float* %a) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !107, metadata !41), !dbg !108
  call void @llvm.dbg.value(metadata float* %a, i64 0, metadata !109, metadata !41), !dbg !110
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !107, metadata !41), !dbg !108
  %a1 = ptrtoint float* %a to i64
  %0 = add i64 %a1, 4000, !dbg !111
  %1 = add i64 %a1, 4000, !dbg !111
  %2 = add i64 %a1, 4000, !dbg !111
  br label %for.cond, !dbg !114

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, 1000, !dbg !111
  br i1 %cmp, label %for.body, label %for.end, !dbg !115

for.body:                                         ; preds = %for.cond
  %mul = mul nsw i32 2, %i.0, !dbg !116
  %add = add nsw i32 %mul, 7, !dbg !118
  %conv = sitofp i32 %add to float, !dbg !119
  %idxprom = sext i32 %i.0 to i64, !dbg !120
  %arrayidx = getelementptr inbounds float, float* %a, i64 %idxprom, !dbg !120
  store float %conv, float* %arrayidx, align 4, !dbg !121
  br label %for.inc, !dbg !122

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !123
  br label %for.cond, !dbg !124

for.end:                                          ; preds = %for.cond
  ret void, !dbg !125
}

; Function Attrs: nounwind uwtable
define i32 @search_GPU(float* %a, float %c) #0 {
entry:
  %find = alloca i32, align 4
  %arrayidx2 = getelementptr inbounds i32, i32* %find, i64 0, !dbg !126
  call void @llvm.dbg.value(metadata i32 1000, i64 0, metadata !133, metadata !41), !dbg !134
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !133, metadata !41), !dbg !134
  call void @llvm.dbg.value(metadata float* %a, i64 0, metadata !135, metadata !41), !dbg !136
  call void @llvm.dbg.value(metadata float %c, i64 0, metadata !137, metadata !41), !dbg !138
  call void @llvm.dbg.declare(metadata i32* %find, metadata !139, metadata !41), !dbg !140
  store i32 -1, i32* %find, align 4, !dbg !140
  call void @llvm.dbg.value(metadata i32* %find, i64 0, metadata !141, metadata !41), !dbg !143
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !133, metadata !41), !dbg !134
  br label %for.cond, !dbg !144

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, 1000, !dbg !145
  br i1 %cmp, label %for.body, label %for.end, !dbg !146

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !147
  %arrayidx = getelementptr inbounds float, float* %a, i64 %idxprom, !dbg !147
  %tmp = load float, float* %arrayidx, align 4, !dbg !147
  %cmp1 = fcmp oeq float %tmp, %c, !dbg !148
  br i1 %cmp1, label %if.then, label %if.end, !dbg !149

if.then:                                          ; preds = %for.body
  store i32 %i.0, i32* %arrayidx2, align 4, !dbg !150
  br label %if.end, !dbg !151

if.end:                                           ; preds = %if.then, %for.body
  %i.1 = phi i32 [ 1000, %if.then ], [ %i.0, %for.body ]
  br label %for.inc, !dbg !152

for.inc:                                          ; preds = %if.end
  %inc = add nsw i32 %i.1, 1, !dbg !153
  br label %for.cond, !dbg !154

for.end:                                          ; preds = %for.cond
  %tmp1 = load i32, i32* %find, align 4, !dbg !155
  ret i32 %tmp1, !dbg !156
}

; Function Attrs: nounwind uwtable
define i32 @search_CPU(float* %a, float %c) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %i.0, i64 0, metadata !157, metadata !41), !dbg !158
  call void @llvm.dbg.value(metadata i32 1000, i64 0, metadata !159, metadata !41), !dbg !160
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !159, metadata !41), !dbg !160
  call void @llvm.dbg.value(metadata float* %a, i64 0, metadata !161, metadata !41), !dbg !162
  call void @llvm.dbg.value(metadata float %c, i64 0, metadata !163, metadata !41), !dbg !164
  call void @llvm.dbg.value(metadata i32 -1, i64 0, metadata !157, metadata !41), !dbg !158
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !159, metadata !41), !dbg !160
  br label %for.cond, !dbg !165

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %find.0 = phi i32 [ -1, %entry ], [ %find.1, %for.inc ]
  %cmp = icmp slt i32 %i.0, 1000, !dbg !167
  br i1 %cmp, label %for.body, label %for.end, !dbg !169

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64, !dbg !170
  %arrayidx = getelementptr inbounds float, float* %a, i64 %idxprom, !dbg !170
  %tmp = load float, float* %arrayidx, align 4, !dbg !170
  %cmp1 = fcmp oeq float %tmp, %c, !dbg !173
  br i1 %cmp1, label %if.then, label %if.end, !dbg !174

if.then:                                          ; preds = %for.body
  br label %if.end, !dbg !175

if.end:                                           ; preds = %if.then, %for.body
  %i.1 = phi i32 [ 1000, %if.then ], [ %i.0, %for.body ]
  %find.1 = phi i32 [ %i.0, %if.then ], [ %find.0, %for.body ]
  br label %for.inc, !dbg !177

for.inc:                                          ; preds = %if.end
  %inc = add nsw i32 %i.1, 1, !dbg !178
  br label %for.cond, !dbg !179

for.end:                                          ; preds = %for.cond
  %find.0.lcssa = phi i32 [ %find.0, %for.cond ]
  ret i32 %find.0.lcssa, !dbg !180
}

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %argc, i64 0, metadata !181, metadata !41), !dbg !182
  call void @llvm.dbg.value(metadata i8** %argv, i64 0, metadata !183, metadata !41), !dbg !184
  %call = call noalias i8* @malloc(i64 4000) #4, !dbg !185
  %tmp = bitcast i8* %call to float*, !dbg !186
  call void @llvm.dbg.value(metadata float* %tmp, i64 0, metadata !187, metadata !41), !dbg !188
  call void @llvm.dbg.value(metadata float 9.950000e+02, i64 0, metadata !189, metadata !41), !dbg !190
  call void @init(float* %tmp), !dbg !191
  %tmp1 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !192
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i32 0, i32 0)), !dbg !193
  %call2 = call double @rtclock(), !dbg !194
  call void @llvm.dbg.value(metadata double %call2, i64 0, metadata !195, metadata !41), !dbg !196
  %call3 = call i32 @search_GPU(float* %tmp, float 9.950000e+02), !dbg !197
  call void @llvm.dbg.value(metadata i32 %call3, i64 0, metadata !198, metadata !41), !dbg !199
  %call4 = call double @rtclock(), !dbg !200
  call void @llvm.dbg.value(metadata double %call4, i64 0, metadata !201, metadata !41), !dbg !202
  %tmp2 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !203
  %sub = fsub double %call4, %call2, !dbg !204
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i32 0, i32 0), double %sub), !dbg !205
  %call6 = call double @rtclock(), !dbg !206
  call void @llvm.dbg.value(metadata double %call6, i64 0, metadata !195, metadata !41), !dbg !196
  %call7 = call i32 @search_CPU(float* %tmp, float 9.950000e+02), !dbg !207
  call void @llvm.dbg.value(metadata i32 %call7, i64 0, metadata !208, metadata !41), !dbg !209
  %call8 = call double @rtclock(), !dbg !210
  call void @llvm.dbg.value(metadata double %call8, i64 0, metadata !201, metadata !41), !dbg !202
  %tmp3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !211
  %sub9 = fsub double %call8, %call6, !dbg !212
  %call10 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp3, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i32 0, i32 0), double %sub9), !dbg !213
  %cmp = icmp eq i32 %call3, %call7, !dbg !214
  br i1 %cmp, label %if.then, label %if.else, !dbg !216

if.then:                                          ; preds = %entry
  %call11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i32 0, i32 0), i32 %call3, i32 %call7), !dbg !217
  br label %if.end, !dbg !217

if.else:                                          ; preds = %entry
  %call12 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i32 0, i32 0), i32 %call3, i32 %call7), !dbg !218
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %tmp4 = bitcast float* %tmp to i8*, !dbg !219
  call void @free(i8* %tmp4) #4, !dbg !220
  ret i32 0, !dbg !221
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #2

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

; Function Attrs: nounwind
declare void @free(i8*) #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!32, !33}
!llvm.ident = !{!34}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !6)
!1 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/UniBench/benchmarks//mgBench/search-vector/src/search-vector_gpu.c", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!2 = !{}
!3 = !{!4, !5}
!4 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64, align: 64)
!5 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!6 = !{!7, !12, !15, !18, !21, !25, !26}
!7 = !DISubprogram(name: "rtclock", scope: !8, file: !8, line: 7, type: !9, isLocal: false, isDefinition: true, scopeLine: 8, isOptimized: false, function: double ()* @rtclock, variables: !2)
!8 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/UniBench/benchmarks//mgBench/search-vector/src/../../common/mgbenchUtilFunctions.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!9 = !DISubroutineType(types: !10)
!10 = !{!11}
!11 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!12 = !DISubprogram(name: "absVal", scope: !8, file: !8, line: 18, type: !13, isLocal: false, isDefinition: true, scopeLine: 19, flags: DIFlagPrototyped, isOptimized: false, function: float (float)* @absVal, variables: !2)
!13 = !DISubroutineType(types: !14)
!14 = !{!5, !5}
!15 = !DISubprogram(name: "percentDiff", scope: !8, file: !8, line: 32, type: !16, isLocal: false, isDefinition: true, scopeLine: 33, flags: DIFlagPrototyped, isOptimized: false, function: float (double, double)* @percentDiff, variables: !2)
!16 = !DISubroutineType(types: !17)
!17 = !{!5, !11, !11}
!18 = !DISubprogram(name: "init", scope: !1, file: !1, line: 27, type: !19, isLocal: false, isDefinition: true, scopeLine: 28, flags: DIFlagPrototyped, isOptimized: false, function: void (float*)* @init, variables: !2)
!19 = !DISubroutineType(types: !20)
!20 = !{null, !4}
!21 = !DISubprogram(name: "search_GPU", scope: !1, file: !1, line: 36, type: !22, isLocal: false, isDefinition: true, scopeLine: 37, flags: DIFlagPrototyped, isOptimized: false, function: i32 (float*, float)* @search_GPU, variables: !2)
!22 = !DISubroutineType(types: !23)
!23 = !{!24, !4, !5}
!24 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!25 = !DISubprogram(name: "search_CPU", scope: !1, file: !1, line: 61, type: !22, isLocal: false, isDefinition: true, scopeLine: 62, flags: DIFlagPrototyped, isOptimized: false, function: i32 (float*, float)* @search_CPU, variables: !2)
!26 = !DISubprogram(name: "main", scope: !1, file: !1, line: 78, type: !27, isLocal: false, isDefinition: true, scopeLine: 78, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i8**)* @main, variables: !2)
!27 = !DISubroutineType(types: !28)
!28 = !{!24, !24, !29}
!29 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64, align: 64)
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64, align: 64)
!31 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!32 = !{i32 2, !"Dwarf Version", i32 4}
!33 = !{i32 2, !"Debug Info Version", i32 3}
!34 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!35 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Tzp", scope: !7, file: !8, line: 9, type: !36)
!36 = !DICompositeType(tag: DW_TAG_structure_type, name: "timezone", file: !37, line: 57, size: 64, align: 32, elements: !38)
!37 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/time.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!38 = !{!39, !40}
!39 = !DIDerivedType(tag: DW_TAG_member, name: "tz_minuteswest", scope: !36, file: !37, line: 59, baseType: !24, size: 32, align: 32)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "tz_dsttime", scope: !36, file: !37, line: 60, baseType: !24, size: 32, align: 32, offset: 32)
!41 = !DIExpression()
!42 = !DILocation(line: 9, column: 21, scope: !7)
!43 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Tp", scope: !7, file: !8, line: 10, type: !44)
!44 = !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !45, line: 31, size: 128, align: 64, elements: !46)
!45 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!46 = !{!47, !51}
!47 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !44, file: !45, line: 33, baseType: !48, size: 64, align: 64)
!48 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !49, line: 149, baseType: !50)
!49 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!50 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !44, file: !45, line: 34, baseType: !52, size: 64, align: 64, offset: 64)
!52 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !49, line: 151, baseType: !50)
!53 = !DILocation(line: 10, column: 20, scope: !7)
!54 = !DILocation(line: 12, column: 12, scope: !7)
!55 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stat", scope: !7, file: !8, line: 11, type: !24)
!56 = !DILocation(line: 11, column: 9, scope: !7)
!57 = !DILocation(line: 13, column: 14, scope: !58)
!58 = distinct !DILexicalBlock(scope: !7, file: !8, line: 13, column: 9)
!59 = !DILocation(line: 13, column: 9, scope: !7)
!60 = !DILocation(line: 13, column: 20, scope: !58)
!61 = !DILocation(line: 14, column: 15, scope: !7)
!62 = !DILocation(line: 14, column: 12, scope: !7)
!63 = !DILocation(line: 14, column: 27, scope: !7)
!64 = !DILocation(line: 14, column: 24, scope: !7)
!65 = !DILocation(line: 14, column: 34, scope: !7)
!66 = !DILocation(line: 14, column: 22, scope: !7)
!67 = !DILocation(line: 14, column: 5, scope: !7)
!68 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !12, file: !8, line: 18, type: !5)
!69 = !DILocation(line: 18, column: 20, scope: !12)
!70 = !DILocation(line: 20, column: 7, scope: !71)
!71 = distinct !DILexicalBlock(scope: !12, file: !8, line: 20, column: 5)
!72 = !DILocation(line: 20, column: 5, scope: !12)
!73 = !DILocation(line: 22, column: 13, scope: !74)
!74 = distinct !DILexicalBlock(scope: !71, file: !8, line: 21, column: 2)
!75 = !DILocation(line: 22, column: 3, scope: !74)
!76 = !DILocation(line: 26, column: 3, scope: !77)
!77 = distinct !DILexicalBlock(scope: !71, file: !8, line: 25, column: 2)
!78 = !DILocation(line: 28, column: 1, scope: !12)
!79 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val1", arg: 1, scope: !15, file: !8, line: 32, type: !11)
!80 = !DILocation(line: 32, column: 26, scope: !15)
!81 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val2", arg: 2, scope: !15, file: !8, line: 32, type: !11)
!82 = !DILocation(line: 32, column: 39, scope: !15)
!83 = !DILocation(line: 34, column: 14, scope: !84)
!84 = distinct !DILexicalBlock(scope: !15, file: !8, line: 34, column: 6)
!85 = !DILocation(line: 34, column: 7, scope: !84)
!86 = !DILocation(line: 34, column: 20, scope: !84)
!87 = !DILocation(line: 34, column: 28, scope: !84)
!88 = !DILocation(line: 34, column: 39, scope: !89)
!89 = !DILexicalBlockFile(scope: !84, file: !8, discriminator: 1)
!90 = !DILocation(line: 34, column: 32, scope: !84)
!91 = !DILocation(line: 34, column: 45, scope: !84)
!92 = !DILocation(line: 34, column: 6, scope: !15)
!93 = !DILocation(line: 36, column: 3, scope: !94)
!94 = distinct !DILexicalBlock(scope: !84, file: !8, line: 35, column: 2)
!95 = !DILocation(line: 41, column: 43, scope: !96)
!96 = distinct !DILexicalBlock(scope: !84, file: !8, line: 40, column: 2)
!97 = !DILocation(line: 41, column: 38, scope: !96)
!98 = !DILocation(line: 41, column: 31, scope: !96)
!99 = !DILocation(line: 41, column: 65, scope: !96)
!100 = !DILocation(line: 41, column: 60, scope: !96)
!101 = !DILocation(line: 41, column: 53, scope: !96)
!102 = !DILocation(line: 41, column: 51, scope: !96)
!103 = !DILocation(line: 41, column: 24, scope: !96)
!104 = !DILocation(line: 41, column: 21, scope: !96)
!105 = !DILocation(line: 41, column: 7, scope: !96)
!106 = !DILocation(line: 43, column: 1, scope: !15)
!107 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !18, file: !1, line: 29, type: !24)
!108 = !DILocation(line: 29, column: 6, scope: !18)
!109 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !18, file: !1, line: 27, type: !4)
!110 = !DILocation(line: 27, column: 18, scope: !18)
!111 = !DILocation(line: 30, column: 16, scope: !112)
!112 = distinct !DILexicalBlock(scope: !113, file: !1, line: 30, column: 2)
!113 = distinct !DILexicalBlock(scope: !18, file: !1, line: 30, column: 2)
!114 = !DILocation(line: 30, column: 7, scope: !113)
!115 = !DILocation(line: 30, column: 2, scope: !113)
!116 = !DILocation(line: 32, column: 18, scope: !117)
!117 = distinct !DILexicalBlock(scope: !112, file: !1, line: 31, column: 2)
!118 = !DILocation(line: 32, column: 20, scope: !117)
!119 = !DILocation(line: 32, column: 17, scope: !117)
!120 = !DILocation(line: 32, column: 10, scope: !117)
!121 = !DILocation(line: 32, column: 15, scope: !117)
!122 = !DILocation(line: 33, column: 2, scope: !117)
!123 = !DILocation(line: 30, column: 24, scope: !112)
!124 = !DILocation(line: 30, column: 2, scope: !112)
!125 = !DILocation(line: 34, column: 1, scope: !18)
!126 = !DILocation(line: 52, column: 10, scope: !127)
!127 = distinct !DILexicalBlock(scope: !128, file: !1, line: 51, column: 6)
!128 = distinct !DILexicalBlock(scope: !129, file: !1, line: 50, column: 9)
!129 = distinct !DILexicalBlock(scope: !130, file: !1, line: 49, column: 9)
!130 = distinct !DILexicalBlock(scope: !131, file: !1, line: 48, column: 9)
!131 = distinct !DILexicalBlock(scope: !132, file: !1, line: 48, column: 9)
!132 = distinct !DILexicalBlock(scope: !21, file: !1, line: 46, column: 5)
!133 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !21, file: !1, line: 38, type: !24)
!134 = !DILocation(line: 38, column: 9, scope: !21)
!135 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !21, file: !1, line: 36, type: !4)
!136 = !DILocation(line: 36, column: 23, scope: !21)
!137 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "c", arg: 2, scope: !21, file: !1, line: 36, type: !5)
!138 = !DILocation(line: 36, column: 32, scope: !21)
!139 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "find", scope: !21, file: !1, line: 39, type: !24)
!140 = !DILocation(line: 39, column: 9, scope: !21)
!141 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "find2", scope: !21, file: !1, line: 40, type: !142)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64, align: 64)
!143 = !DILocation(line: 40, column: 7, scope: !21)
!144 = !DILocation(line: 48, column: 14, scope: !131)
!145 = !DILocation(line: 48, column: 23, scope: !130)
!146 = !DILocation(line: 48, column: 9, scope: !131)
!147 = !DILocation(line: 50, column: 9, scope: !128)
!148 = !DILocation(line: 50, column: 14, scope: !128)
!149 = !DILocation(line: 50, column: 9, scope: !129)
!150 = !DILocation(line: 52, column: 19, scope: !127)
!151 = !DILocation(line: 54, column: 6, scope: !127)
!152 = !DILocation(line: 55, column: 9, scope: !129)
!153 = !DILocation(line: 48, column: 31, scope: !130)
!154 = !DILocation(line: 48, column: 9, scope: !130)
!155 = !DILocation(line: 58, column: 12, scope: !21)
!156 = !DILocation(line: 58, column: 5, scope: !21)
!157 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "find", scope: !25, file: !1, line: 64, type: !24)
!158 = !DILocation(line: 64, column: 10, scope: !25)
!159 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !25, file: !1, line: 63, type: !24)
!160 = !DILocation(line: 63, column: 6, scope: !25)
!161 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !25, file: !1, line: 61, type: !4)
!162 = !DILocation(line: 61, column: 23, scope: !25)
!163 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "c", arg: 2, scope: !25, file: !1, line: 61, type: !5)
!164 = !DILocation(line: 61, column: 32, scope: !25)
!165 = !DILocation(line: 66, column: 7, scope: !166)
!166 = distinct !DILexicalBlock(scope: !25, file: !1, line: 66, column: 2)
!167 = !DILocation(line: 66, column: 16, scope: !168)
!168 = distinct !DILexicalBlock(scope: !166, file: !1, line: 66, column: 2)
!169 = !DILocation(line: 66, column: 2, scope: !166)
!170 = !DILocation(line: 68, column: 13, scope: !171)
!171 = distinct !DILexicalBlock(scope: !172, file: !1, line: 68, column: 13)
!172 = distinct !DILexicalBlock(scope: !168, file: !1, line: 67, column: 2)
!173 = !DILocation(line: 68, column: 18, scope: !171)
!174 = !DILocation(line: 68, column: 13, scope: !172)
!175 = !DILocation(line: 72, column: 10, scope: !176)
!176 = distinct !DILexicalBlock(scope: !171, file: !1, line: 69, column: 10)
!177 = !DILocation(line: 73, column: 2, scope: !172)
!178 = !DILocation(line: 66, column: 24, scope: !168)
!179 = !DILocation(line: 66, column: 2, scope: !168)
!180 = !DILocation(line: 75, column: 2, scope: !25)
!181 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !26, file: !1, line: 78, type: !24)
!182 = !DILocation(line: 78, column: 14, scope: !26)
!183 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !26, file: !1, line: 78, type: !29)
!184 = !DILocation(line: 78, column: 26, scope: !26)
!185 = !DILocation(line: 83, column: 19, scope: !26)
!186 = !DILocation(line: 83, column: 9, scope: !26)
!187 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a", scope: !26, file: !1, line: 80, type: !4)
!188 = !DILocation(line: 80, column: 12, scope: !26)
!189 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "c", scope: !26, file: !1, line: 80, type: !5)
!190 = !DILocation(line: 80, column: 15, scope: !26)
!191 = !DILocation(line: 86, column: 5, scope: !26)
!192 = !DILocation(line: 88, column: 13, scope: !26)
!193 = !DILocation(line: 88, column: 5, scope: !26)
!194 = !DILocation(line: 90, column: 15, scope: !26)
!195 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_start", scope: !26, file: !1, line: 79, type: !11)
!196 = !DILocation(line: 79, column: 12, scope: !26)
!197 = !DILocation(line: 91, column: 16, scope: !26)
!198 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "find_gpu", scope: !26, file: !1, line: 81, type: !24)
!199 = !DILocation(line: 81, column: 19, scope: !26)
!200 = !DILocation(line: 92, column: 13, scope: !26)
!201 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_end", scope: !26, file: !1, line: 79, type: !11)
!202 = !DILocation(line: 79, column: 21, scope: !26)
!203 = !DILocation(line: 93, column: 13, scope: !26)
!204 = !DILocation(line: 93, column: 53, scope: !26)
!205 = !DILocation(line: 93, column: 5, scope: !26)
!206 = !DILocation(line: 95, column: 15, scope: !26)
!207 = !DILocation(line: 96, column: 16, scope: !26)
!208 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "find_cpu", scope: !26, file: !1, line: 81, type: !24)
!209 = !DILocation(line: 81, column: 9, scope: !26)
!210 = !DILocation(line: 97, column: 13, scope: !26)
!211 = !DILocation(line: 98, column: 13, scope: !26)
!212 = !DILocation(line: 98, column: 53, scope: !26)
!213 = !DILocation(line: 98, column: 5, scope: !26)
!214 = !DILocation(line: 100, column: 17, scope: !215)
!215 = distinct !DILexicalBlock(scope: !26, file: !1, line: 100, column: 8)
!216 = !DILocation(line: 100, column: 8, scope: !26)
!217 = !DILocation(line: 101, column: 9, scope: !215)
!218 = !DILocation(line: 103, column: 2, scope: !215)
!219 = !DILocation(line: 105, column: 10, scope: !26)
!220 = !DILocation(line: 105, column: 5, scope: !26)
!221 = !DILocation(line: 107, column: 5, scope: !26)
