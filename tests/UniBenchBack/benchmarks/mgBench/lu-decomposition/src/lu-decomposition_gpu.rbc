; ModuleID = '/home/gleison/lge/dawn-3.7/UniBench/benchmarks//mgBench/lu-decomposition/src/lu-decomposition_gpu.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.timezone = type { i32, i32 }
%struct.timeval = type { i64, i64 }

@.str = private unnamed_addr constant [35 x i8] c"Error return from gettimeofday: %d\00", align 1
@.str.1 = private unnamed_addr constant [74 x i8] c"Non-Matching CPU-GPU Outputs Beyond Error Threshold of %4.2f Percent: %d\0A\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@.str.2 = private unnamed_addr constant [28 x i8] c"<< LU decomposition GPU >>\0A\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"GPU Runtime: %0.6lfs\0A\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"CPU Runtime: %0.6lfs\0A\00", align 1

; Function Attrs: nounwind uwtable
define double @rtclock() #0 {
entry:
  %Tzp = alloca %struct.timezone, align 4
  %Tp = alloca %struct.timeval, align 8
  call void @llvm.dbg.declare(metadata %struct.timezone* %Tzp, metadata !36, metadata !42), !dbg !43
  call void @llvm.dbg.declare(metadata %struct.timeval* %Tp, metadata !44, metadata !42), !dbg !54
  %call = call i32 @gettimeofday(%struct.timeval* %Tp, %struct.timezone* %Tzp) #4, !dbg !55
  call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !56, metadata !42), !dbg !57
  %cmp = icmp ne i32 %call, 0, !dbg !58
  br i1 %cmp, label %if.then, label %if.end, !dbg !60

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i32 0, i32 0), i32 %call), !dbg !61
  br label %if.end, !dbg !61

if.end:                                           ; preds = %if.then, %entry
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %Tp, i32 0, i32 0, !dbg !62
  %tmp = load i64, i64* %tv_sec, align 8, !dbg !62
  %conv = sitofp i64 %tmp to double, !dbg !63
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %Tp, i32 0, i32 1, !dbg !64
  %tmp1 = load i64, i64* %tv_usec, align 8, !dbg !64
  %conv2 = sitofp i64 %tmp1 to double, !dbg !65
  %mul = fmul double %conv2, 1.000000e-06, !dbg !66
  %add = fadd double %conv, %mul, !dbg !67
  ret double %add, !dbg !68
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timeval*, %struct.timezone*) #2

declare i32 @printf(i8*, ...) #3

; Function Attrs: nounwind uwtable
define float @absVal(float %a) #0 {
entry:
  call void @llvm.dbg.value(metadata float %a, i64 0, metadata !69, metadata !42), !dbg !70
  %cmp = fcmp olt float %a, 0.000000e+00, !dbg !71
  br i1 %cmp, label %if.then, label %if.else, !dbg !73

if.then:                                          ; preds = %entry
  %mul = fmul float %a, -1.000000e+00, !dbg !74
  br label %return, !dbg !76

if.else:                                          ; preds = %entry
  br label %return, !dbg !77

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi float [ %mul, %if.then ], [ %a, %if.else ]
  ret float %retval.0, !dbg !79
}

; Function Attrs: nounwind uwtable
define float @percentDiff(double %val1, double %val2) #0 {
entry:
  call void @llvm.dbg.value(metadata double %val1, i64 0, metadata !80, metadata !42), !dbg !81
  call void @llvm.dbg.value(metadata double %val2, i64 0, metadata !82, metadata !42), !dbg !83
  %conv = fptrunc double %val1 to float, !dbg !84
  %call = call float @absVal(float %conv), !dbg !86
  %conv1 = fpext float %call to double, !dbg !86
  %cmp = fcmp olt double %conv1, 1.000000e-02, !dbg !87
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !88

land.lhs.true:                                    ; preds = %entry
  %conv3 = fptrunc double %val2 to float, !dbg !89
  %call4 = call float @absVal(float %conv3), !dbg !91
  %conv5 = fpext float %call4 to double, !dbg !91
  %cmp6 = fcmp olt double %conv5, 1.000000e-02, !dbg !92
  br i1 %cmp6, label %if.then, label %if.else, !dbg !93

if.then:                                          ; preds = %land.lhs.true
  br label %return, !dbg !94

if.else:                                          ; preds = %land.lhs.true, %entry
  %sub = fsub double %val1, %val2, !dbg !96
  %conv8 = fptrunc double %sub to float, !dbg !98
  %call9 = call float @absVal(float %conv8), !dbg !99
  %add = fadd double %val1, 0x3E45798EE0000000, !dbg !100
  %conv10 = fptrunc double %add to float, !dbg !101
  %call11 = call float @absVal(float %conv10), !dbg !102
  %div = fdiv float %call9, %call11, !dbg !103
  %call12 = call float @absVal(float %div), !dbg !104
  %mul = fmul float 1.000000e+02, %call12, !dbg !105
  br label %return, !dbg !106

return:                                           ; preds = %if.else, %if.then
  %retval.0 = phi float [ 0.000000e+00, %if.then ], [ %mul, %if.else ]
  ret float %retval.0, !dbg !107
}

; Function Attrs: nounwind uwtable
define void @init(i32 %s, float* %a, float* %b) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !108, metadata !42), !dbg !109
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !108, metadata !42), !dbg !109
  call void @llvm.dbg.value(metadata i32 %inc13, i64 0, metadata !110, metadata !42), !dbg !111
  call void @llvm.dbg.value(metadata i32 %s, i64 0, metadata !112, metadata !42), !dbg !113
  call void @llvm.dbg.value(metadata float* %a, i64 0, metadata !114, metadata !42), !dbg !115
  call void @llvm.dbg.value(metadata float* %b, i64 0, metadata !116, metadata !42), !dbg !117
  %mul = mul nsw i32 %s, %s, !dbg !118
  call void @llvm.dbg.value(metadata i32 %mul, i64 0, metadata !119, metadata !42), !dbg !120
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !110, metadata !42), !dbg !111
  %scevgep = getelementptr float, float* %b, i64 0, !dbg !121
  %0 = mul i32 1, %s, !dbg !123
  %scevgep2 = getelementptr float, float* %a, i64 0, !dbg !121
  %scevgep4 = getelementptr float, float* %b, i64 0, !dbg !121
  %1 = mul i32 1, %s, !dbg !123
  %scevgep7 = getelementptr float, float* %a, i64 0, !dbg !121
  %scevgep9 = getelementptr float, float* %b, i64 0, !dbg !121
  %2 = mul i32 1, %s, !dbg !125
  %scevgep12 = getelementptr float, float* %a, i64 0, !dbg !121
  %scevgep14 = getelementptr float, float* %b, i64 0, !dbg !121
  %3 = mul i32 1, %s, !dbg !123
  %scevgep17 = getelementptr float, float* %a, i64 0, !dbg !121
  %scevgep19 = getelementptr float, float* %b, i64 0, !dbg !121
  %4 = mul i32 1, %s, !dbg !123
  %scevgep22 = getelementptr float, float* %a, i64 0, !dbg !121
  %scevgep24 = getelementptr float, float* %b, i64 0, !dbg !121
  %5 = mul i32 1, %s, !dbg !125
  %scevgep27 = getelementptr float, float* %a, i64 0, !dbg !121
  %scevgep29 = getelementptr float, float* %b, i64 0, !dbg !121
  %6 = mul i32 1, %s, !dbg !125
  %scevgep32 = getelementptr float, float* %a, i64 0, !dbg !121
  br label %for.cond, !dbg !121

for.cond:                                         ; preds = %for.inc.12, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc13, %for.inc.12 ]
  %7 = icmp sgt i32 %s, 0, !dbg !123
  %smax20 = select i1 %7, i32 %s, i32 0, !dbg !123
  %8 = mul i32 %s, %smax20, !dbg !123
  %9 = add i32 0, %8, !dbg !123
  %10 = add i32 %9, %4, !dbg !123
  %11 = sext i32 %10 to i64, !dbg !123
  %12 = mul i64 4, %11, !dbg !123
  %scevgep21 = getelementptr float, float* %b, i64 %11, !dbg !123
  %scevgep23 = getelementptr float, float* %a, i64 %11, !dbg !123
  %13 = icmp sgt i32 %s, 0, !dbg !123
  %smax15 = select i1 %13, i32 %s, i32 0, !dbg !123
  %14 = mul i32 %s, %smax15, !dbg !123
  %15 = add i32 0, %14, !dbg !123
  %16 = add i32 %15, %3, !dbg !123
  %17 = sext i32 %16 to i64, !dbg !123
  %18 = mul i64 4, %17, !dbg !123
  %scevgep16 = getelementptr float, float* %b, i64 %17, !dbg !123
  %scevgep18 = getelementptr float, float* %a, i64 %17, !dbg !123
  %19 = icmp sgt i32 %s, 0, !dbg !123
  %smax5 = select i1 %19, i32 %s, i32 0, !dbg !123
  %20 = mul i32 %s, %smax5, !dbg !123
  %21 = add i32 0, %20, !dbg !123
  %22 = add i32 %21, %1, !dbg !123
  %23 = sext i32 %22 to i64, !dbg !123
  %24 = mul i64 4, %23, !dbg !123
  %scevgep6 = getelementptr float, float* %b, i64 %23, !dbg !123
  %scevgep8 = getelementptr float, float* %a, i64 %23, !dbg !123
  %25 = icmp sgt i32 %s, 0, !dbg !123
  %smax = select i1 %25, i32 %s, i32 0, !dbg !123
  %26 = mul i32 %s, %smax, !dbg !123
  %27 = add i32 0, %26, !dbg !123
  %28 = add i32 %27, %0, !dbg !123
  %29 = sext i32 %28 to i64, !dbg !123
  %30 = mul i64 4, %29, !dbg !123
  %scevgep1 = getelementptr float, float* %b, i64 %29, !dbg !123
  %scevgep3 = getelementptr float, float* %a, i64 %29, !dbg !123
  %cmp = icmp slt i32 %i.0, %s, !dbg !123
  br i1 %cmp, label %for.body, label %for.end.14, !dbg !129

for.body:                                         ; preds = %for.cond
  br label %for.cond.1, !dbg !130

for.cond.1:                                       ; preds = %for.inc, %for.body
  %j.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ]
  %31 = icmp sgt i32 %s, 0, !dbg !125
  %smax30 = select i1 %31, i32 %s, i32 0, !dbg !125
  %32 = mul i32 %s, %smax30, !dbg !125
  %33 = add i32 0, %32, !dbg !125
  %34 = add i32 %33, %6, !dbg !125
  %35 = sext i32 %34 to i64, !dbg !125
  %36 = mul i64 4, %35, !dbg !125
  %scevgep31 = getelementptr float, float* %b, i64 %35, !dbg !125
  %scevgep33 = getelementptr float, float* %a, i64 %35, !dbg !125
  %37 = icmp sgt i32 %s, 0, !dbg !125
  %smax25 = select i1 %37, i32 %s, i32 0, !dbg !125
  %38 = mul i32 %s, %smax25, !dbg !125
  %39 = add i32 0, %38, !dbg !125
  %40 = add i32 %39, %5, !dbg !125
  %41 = sext i32 %40 to i64, !dbg !125
  %42 = mul i64 4, %41, !dbg !125
  %scevgep26 = getelementptr float, float* %b, i64 %41, !dbg !125
  %scevgep28 = getelementptr float, float* %a, i64 %41, !dbg !125
  %43 = icmp sgt i32 %s, 0, !dbg !125
  %smax10 = select i1 %43, i32 %s, i32 0, !dbg !125
  %44 = mul i32 %s, %smax10, !dbg !125
  %45 = add i32 0, %44, !dbg !125
  %46 = add i32 %45, %2, !dbg !125
  %47 = sext i32 %46 to i64, !dbg !125
  %48 = mul i64 4, %47, !dbg !125
  %scevgep11 = getelementptr float, float* %b, i64 %47, !dbg !125
  %scevgep13 = getelementptr float, float* %a, i64 %47, !dbg !125
  %cmp2 = icmp slt i32 %j.0, %s, !dbg !125
  br i1 %cmp2, label %for.body.3, label %for.end, !dbg !131

for.body.3:                                       ; preds = %for.cond.1
  %mul4 = mul nsw i32 10, %i.0, !dbg !132
  %mul5 = mul nsw i32 5, %j.0, !dbg !134
  %add = add nsw i32 %mul4, %mul5, !dbg !135
  %sub = sub nsw i32 %mul, %add, !dbg !136
  %conv = sitofp i32 %sub to float, !dbg !137
  %mul6 = mul nsw i32 %i.0, %s, !dbg !138
  %add7 = add nsw i32 %mul6, %j.0, !dbg !139
  %idxprom = sext i32 %add7 to i64, !dbg !140
  %arrayidx = getelementptr inbounds float, float* %a, i64 %idxprom, !dbg !140
  store float %conv, float* %arrayidx, align 4, !dbg !141
  %mul8 = mul nsw i32 %i.0, %s, !dbg !142
  %add9 = add nsw i32 %mul8, %j.0, !dbg !143
  %idxprom10 = sext i32 %add9 to i64, !dbg !144
  %arrayidx11 = getelementptr inbounds float, float* %b, i64 %idxprom10, !dbg !144
  store float 0.000000e+00, float* %arrayidx11, align 4, !dbg !145
  br label %for.inc, !dbg !146

for.inc:                                          ; preds = %for.body.3
  %inc = add nsw i32 %j.0, 1, !dbg !147
  br label %for.cond.1, !dbg !148

for.end:                                          ; preds = %for.cond.1
  br label %for.inc.12, !dbg !149

for.inc.12:                                       ; preds = %for.end
  %inc13 = add nsw i32 %i.0, 1, !dbg !150
  br label %for.cond, !dbg !151

for.end.14:                                       ; preds = %for.cond
  ret void, !dbg !152
}

; Function Attrs: nounwind uwtable
define void @Crout_GPU(i32 %s, float* %a, float* %b) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %k.0, i64 0, metadata !153, metadata !42), !dbg !154
  call void @llvm.dbg.value(metadata float %add40, i64 0, metadata !155, metadata !42), !dbg !156
  call void @llvm.dbg.value(metadata i32 %inc42, i64 0, metadata !153, metadata !42), !dbg !154
  call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !155, metadata !42), !dbg !156
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !153, metadata !42), !dbg !154
  call void @llvm.dbg.value(metadata i32 %inc58, i64 0, metadata !157, metadata !42), !dbg !158
  call void @llvm.dbg.value(metadata i32 %add24, i64 0, metadata !157, metadata !42), !dbg !158
  call void @llvm.dbg.value(metadata i32 %inc61, i64 0, metadata !159, metadata !42), !dbg !160
  call void @llvm.dbg.value(metadata float %add12, i64 0, metadata !155, metadata !42), !dbg !156
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !157, metadata !42), !dbg !158
  call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !155, metadata !42), !dbg !156
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !157, metadata !42), !dbg !158
  call void @llvm.dbg.value(metadata i32 %inc22, i64 0, metadata !153, metadata !42), !dbg !154
  call void @llvm.dbg.value(metadata i32 %s, i64 0, metadata !161, metadata !42), !dbg !162
  call void @llvm.dbg.value(metadata float* %a, i64 0, metadata !163, metadata !42), !dbg !164
  call void @llvm.dbg.value(metadata float* %b, i64 0, metadata !165, metadata !42), !dbg !166
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !159, metadata !42), !dbg !160
  %scevgep = getelementptr float, float* %a, i64 0, !dbg !167
  %scevgep7 = getelementptr float, float* %a, i64 1, !dbg !167
  %0 = add i32 %s, 1, !dbg !170
  %1 = add i32 %s, -1, !dbg !170
  %scevgep11 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep12 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep14 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep16 = getelementptr float, float* %b, i64 0, !dbg !167
  %2 = add i32 %s, 1, !dbg !170
  %scevgep20 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep22 = getelementptr float, float* %b, i64 1, !dbg !167
  %scevgep37 = getelementptr float, float* %a, i64 0, !dbg !167
  %scevgep38 = getelementptr float, float* %a, i64 1, !dbg !167
  %3 = add i32 %s, 1, !dbg !170
  %4 = add i32 %s, -1, !dbg !170
  %scevgep45 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep46 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep48 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep50 = getelementptr float, float* %b, i64 0, !dbg !167
  %5 = add i32 %s, 1, !dbg !170
  %scevgep54 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep56 = getelementptr float, float* %b, i64 1, !dbg !167
  %scevgep71 = getelementptr float, float* %a, i64 0, !dbg !167
  %6 = add i32 %s, 1, !dbg !172
  %scevgep75 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep76 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep78 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep85 = getelementptr float, float* %a, i64 0, !dbg !167
  %scevgep86 = getelementptr float, float* %a, i64 1, !dbg !167
  %7 = add i32 %s, 1, !dbg !170
  %8 = add i32 %s, -1, !dbg !170
  %scevgep93 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep94 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep96 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep98 = getelementptr float, float* %b, i64 0, !dbg !167
  %9 = add i32 %s, 1, !dbg !170
  %scevgep102 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep104 = getelementptr float, float* %b, i64 1, !dbg !167
  %scevgep119 = getelementptr float, float* %a, i64 1, !dbg !167
  %10 = add i32 %s, 1, !dbg !176
  %11 = add i32 %s, -1, !dbg !176
  %scevgep122 = getelementptr float, float* %b, i64 0, !dbg !167
  %12 = add i32 %s, 1, !dbg !176
  %scevgep125 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep127 = getelementptr float, float* %b, i64 1, !dbg !167
  %scevgep136 = getelementptr float, float* %a, i64 0, !dbg !167
  %scevgep137 = getelementptr float, float* %a, i64 1, !dbg !167
  %13 = add i32 %s, 1, !dbg !170
  %14 = add i32 %s, -1, !dbg !170
  %scevgep144 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep145 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep147 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep149 = getelementptr float, float* %b, i64 0, !dbg !167
  %15 = add i32 %s, 1, !dbg !170
  %scevgep153 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep155 = getelementptr float, float* %b, i64 1, !dbg !167
  %scevgep170 = getelementptr float, float* %a, i64 0, !dbg !167
  %scevgep171 = getelementptr float, float* %a, i64 1, !dbg !167
  %16 = add i32 %s, 1, !dbg !170
  %17 = add i32 %s, -1, !dbg !170
  %scevgep178 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep179 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep181 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep183 = getelementptr float, float* %b, i64 0, !dbg !167
  %18 = add i32 %s, 1, !dbg !170
  %scevgep187 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep189 = getelementptr float, float* %b, i64 1, !dbg !167
  %scevgep204 = getelementptr float, float* %a, i64 1, !dbg !167
  %19 = add i32 %s, 1, !dbg !176
  %20 = add i32 %s, -1, !dbg !176
  %scevgep207 = getelementptr float, float* %b, i64 0, !dbg !167
  %21 = add i32 %s, 1, !dbg !176
  %scevgep210 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep212 = getelementptr float, float* %b, i64 1, !dbg !167
  %scevgep221 = getelementptr float, float* %b, i64 0, !dbg !167
  %22 = add i32 %s, 1, !dbg !179
  %23 = add i32 %s, 1, !dbg !179
  %24 = add i32 %s, -1, !dbg !179
  %scevgep228 = getelementptr float, float* %a, i64 1, !dbg !167
  %25 = add i32 %s, 1, !dbg !176
  %26 = add i32 %s, -1, !dbg !176
  %scevgep231 = getelementptr float, float* %b, i64 0, !dbg !167
  %27 = add i32 %s, 1, !dbg !176
  %scevgep234 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep236 = getelementptr float, float* %b, i64 1, !dbg !167
  %scevgep245 = getelementptr float, float* %a, i64 1, !dbg !167
  %28 = add i32 %s, 1, !dbg !176
  %29 = add i32 %s, -1, !dbg !176
  %scevgep248 = getelementptr float, float* %b, i64 0, !dbg !167
  %30 = add i32 %s, 1, !dbg !176
  %scevgep251 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep253 = getelementptr float, float* %b, i64 1, !dbg !167
  %scevgep262 = getelementptr float, float* %b, i64 0, !dbg !167
  %31 = add i32 %s, 1, !dbg !179
  %32 = add i32 %s, 1, !dbg !179
  %33 = add i32 %s, -1, !dbg !179
  %scevgep269 = getelementptr float, float* %b, i64 0, !dbg !167
  %34 = add i32 %s, 1, !dbg !179
  %35 = add i32 %s, 1, !dbg !179
  %36 = add i32 %s, -1, !dbg !179
  %scevgep276 = getelementptr float, float* %a, i64 0, !dbg !167
  %37 = add i32 %s, 1, !dbg !172
  %scevgep280 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep281 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep283 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep290 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep291 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep298 = getelementptr float, float* %a, i64 0, !dbg !167
  %38 = add i32 %s, 1, !dbg !172
  %scevgep302 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep303 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep305 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep312 = getelementptr float, float* %a, i64 0, !dbg !167
  %39 = add i32 %s, 1, !dbg !172
  %scevgep316 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep317 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep319 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep326 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep327 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep334 = getelementptr float, float* %b, i64 0, !dbg !167
  %scevgep335 = getelementptr float, float* %b, i64 0, !dbg !167
  br label %for.cond, !dbg !167

for.cond:                                         ; preds = %for.inc.60, %entry
  %k.0 = phi i32 [ 0, %entry ], [ %inc61, %for.inc.60 ]
  %40 = icmp ult float* %scevgep171, %scevgep170, !dbg !170
  %umin172 = select i1 %40, float* %scevgep171, float* %scevgep170, !dbg !170
  %41 = icmp sgt i32 %s, 0, !dbg !170
  %smax173 = select i1 %41, i32 %s, i32 0, !dbg !170
  %42 = mul i32 %16, %smax173, !dbg !170
  %43 = add i32 0, %42, !dbg !170
  %44 = mul i32 -1, %smax173, !dbg !170
  %45 = add i32 0, %44, !dbg !170
  %46 = mul i32 1, %smax173, !dbg !170
  %47 = add i32 0, %46, !dbg !170
  %48 = icmp sgt i32 %s, %47, !dbg !170
  %smax174 = select i1 %48, i32 %s, i32 %47, !dbg !170
  %49 = add i32 %smax174, %45, !dbg !170
  %50 = mul i32 %s, %49, !dbg !170
  %51 = add i32 %43, %50, !dbg !170
  %52 = sext i32 %51 to i64, !dbg !170
  %53 = mul i64 4, %52, !dbg !170
  %scevgep175 = getelementptr float, float* %a, i64 %52, !dbg !170
  %54 = mul i32 %16, %smax173, !dbg !170
  %55 = add i32 1, %54, !dbg !170
  %56 = mul i32 -1, %smax173, !dbg !170
  %57 = add i32 %17, %56, !dbg !170
  %58 = mul i32 1, %57, !dbg !170
  %59 = add i32 %55, %58, !dbg !170
  %60 = sext i32 %59 to i64, !dbg !170
  %61 = mul i64 4, %60, !dbg !170
  %scevgep176 = getelementptr float, float* %a, i64 %60, !dbg !170
  %62 = icmp ugt float* %scevgep176, %scevgep175, !dbg !170
  %umax177 = select i1 %62, float* %scevgep176, float* %scevgep175, !dbg !170
  %63 = icmp ult float* %scevgep179, %scevgep178, !dbg !170
  %umin180 = select i1 %63, float* %scevgep179, float* %scevgep178, !dbg !170
  %64 = icmp ult float* %scevgep181, %umin180, !dbg !170
  %umin182 = select i1 %64, float* %scevgep181, float* %umin180, !dbg !170
  %65 = icmp ult float* %scevgep183, %umin182, !dbg !170
  %umin184 = select i1 %65, float* %scevgep183, float* %umin182, !dbg !170
  %66 = sext i32 %18 to i64, !dbg !170
  %67 = mul i64 4, %66, !dbg !170
  %scevgep185 = getelementptr float, float* %b, i64 %66, !dbg !170
  %68 = icmp ult float* %scevgep185, %umin184, !dbg !170
  %umin186 = select i1 %68, float* %scevgep185, float* %umin184, !dbg !170
  %69 = icmp ult float* %scevgep187, %umin186, !dbg !170
  %umin188 = select i1 %69, float* %scevgep187, float* %umin186, !dbg !170
  %70 = icmp ult float* %scevgep189, %umin188, !dbg !170
  %umin190 = select i1 %70, float* %scevgep189, float* %umin188, !dbg !170
  %71 = mul i32 %s, %smax173, !dbg !170
  %72 = add i32 0, %71, !dbg !170
  %73 = mul i32 %s, %49, !dbg !170
  %74 = add i32 %72, %73, !dbg !170
  %75 = mul i32 1, %47, !dbg !170
  %76 = add i32 %74, %75, !dbg !170
  %77 = sext i32 %76 to i64, !dbg !170
  %78 = mul i64 4, %77, !dbg !170
  %scevgep191 = getelementptr float, float* %b, i64 %77, !dbg !170
  %79 = mul i32 %s, %47, !dbg !170
  %80 = add i32 %47, %79, !dbg !170
  %81 = sext i32 %80 to i64, !dbg !170
  %82 = mul i64 4, %81, !dbg !170
  %scevgep192 = getelementptr float, float* %b, i64 %81, !dbg !170
  %83 = icmp ugt float* %scevgep192, %scevgep191, !dbg !170
  %umax193 = select i1 %83, float* %scevgep192, float* %scevgep191, !dbg !170
  %scevgep194 = getelementptr float, float* %b, i64 %52, !dbg !170
  %84 = icmp ugt float* %scevgep194, %umax193, !dbg !170
  %umax195 = select i1 %84, float* %scevgep194, float* %umax193, !dbg !170
  %85 = mul i32 1, %47, !dbg !170
  %86 = add i32 %72, %85, !dbg !170
  %87 = sext i32 %86 to i64, !dbg !170
  %88 = mul i64 4, %87, !dbg !170
  %scevgep196 = getelementptr float, float* %b, i64 %87, !dbg !170
  %89 = icmp ugt float* %scevgep196, %umax195, !dbg !170
  %umax197 = select i1 %89, float* %scevgep196, float* %umax195, !dbg !170
  %90 = mul i32 %16, %smax173, !dbg !170
  %91 = add i32 %16, %90, !dbg !170
  %92 = mul i32 %16, %57, !dbg !170
  %93 = add i32 %91, %92, !dbg !170
  %94 = sext i32 %93 to i64, !dbg !170
  %95 = mul i64 4, %94, !dbg !170
  %scevgep198 = getelementptr float, float* %b, i64 %94, !dbg !170
  %96 = icmp ugt float* %scevgep198, %umax197, !dbg !170
  %umax199 = select i1 %96, float* %scevgep198, float* %umax197, !dbg !170
  %97 = sext i32 %43 to i64, !dbg !170
  %98 = mul i64 4, %97, !dbg !170
  %scevgep200 = getelementptr float, float* %b, i64 %97, !dbg !170
  %99 = icmp ugt float* %scevgep200, %umax199, !dbg !170
  %umax201 = select i1 %99, float* %scevgep200, float* %umax199, !dbg !170
  %scevgep202 = getelementptr float, float* %b, i64 %60, !dbg !170
  %100 = icmp ugt float* %scevgep202, %umax201, !dbg !170
  %umax203 = select i1 %100, float* %scevgep202, float* %umax201, !dbg !170
  %101 = icmp ult float* %scevgep137, %scevgep136, !dbg !170
  %umin138 = select i1 %101, float* %scevgep137, float* %scevgep136, !dbg !170
  %102 = icmp sgt i32 %s, 0, !dbg !170
  %smax139 = select i1 %102, i32 %s, i32 0, !dbg !170
  %103 = mul i32 %13, %smax139, !dbg !170
  %104 = add i32 0, %103, !dbg !170
  %105 = mul i32 -1, %smax139, !dbg !170
  %106 = add i32 0, %105, !dbg !170
  %107 = mul i32 1, %smax139, !dbg !170
  %108 = add i32 0, %107, !dbg !170
  %109 = icmp sgt i32 %s, %108, !dbg !170
  %smax140 = select i1 %109, i32 %s, i32 %108, !dbg !170
  %110 = add i32 %smax140, %106, !dbg !170
  %111 = mul i32 %s, %110, !dbg !170
  %112 = add i32 %104, %111, !dbg !170
  %113 = sext i32 %112 to i64, !dbg !170
  %114 = mul i64 4, %113, !dbg !170
  %scevgep141 = getelementptr float, float* %a, i64 %113, !dbg !170
  %115 = mul i32 %13, %smax139, !dbg !170
  %116 = add i32 1, %115, !dbg !170
  %117 = mul i32 -1, %smax139, !dbg !170
  %118 = add i32 %14, %117, !dbg !170
  %119 = mul i32 1, %118, !dbg !170
  %120 = add i32 %116, %119, !dbg !170
  %121 = sext i32 %120 to i64, !dbg !170
  %122 = mul i64 4, %121, !dbg !170
  %scevgep142 = getelementptr float, float* %a, i64 %121, !dbg !170
  %123 = icmp ugt float* %scevgep142, %scevgep141, !dbg !170
  %umax143 = select i1 %123, float* %scevgep142, float* %scevgep141, !dbg !170
  %124 = icmp ult float* %scevgep145, %scevgep144, !dbg !170
  %umin146 = select i1 %124, float* %scevgep145, float* %scevgep144, !dbg !170
  %125 = icmp ult float* %scevgep147, %umin146, !dbg !170
  %umin148 = select i1 %125, float* %scevgep147, float* %umin146, !dbg !170
  %126 = icmp ult float* %scevgep149, %umin148, !dbg !170
  %umin150 = select i1 %126, float* %scevgep149, float* %umin148, !dbg !170
  %127 = sext i32 %15 to i64, !dbg !170
  %128 = mul i64 4, %127, !dbg !170
  %scevgep151 = getelementptr float, float* %b, i64 %127, !dbg !170
  %129 = icmp ult float* %scevgep151, %umin150, !dbg !170
  %umin152 = select i1 %129, float* %scevgep151, float* %umin150, !dbg !170
  %130 = icmp ult float* %scevgep153, %umin152, !dbg !170
  %umin154 = select i1 %130, float* %scevgep153, float* %umin152, !dbg !170
  %131 = icmp ult float* %scevgep155, %umin154, !dbg !170
  %umin156 = select i1 %131, float* %scevgep155, float* %umin154, !dbg !170
  %132 = mul i32 %s, %smax139, !dbg !170
  %133 = add i32 0, %132, !dbg !170
  %134 = mul i32 %s, %110, !dbg !170
  %135 = add i32 %133, %134, !dbg !170
  %136 = mul i32 1, %108, !dbg !170
  %137 = add i32 %135, %136, !dbg !170
  %138 = sext i32 %137 to i64, !dbg !170
  %139 = mul i64 4, %138, !dbg !170
  %scevgep157 = getelementptr float, float* %b, i64 %138, !dbg !170
  %140 = mul i32 %s, %108, !dbg !170
  %141 = add i32 %108, %140, !dbg !170
  %142 = sext i32 %141 to i64, !dbg !170
  %143 = mul i64 4, %142, !dbg !170
  %scevgep158 = getelementptr float, float* %b, i64 %142, !dbg !170
  %144 = icmp ugt float* %scevgep158, %scevgep157, !dbg !170
  %umax159 = select i1 %144, float* %scevgep158, float* %scevgep157, !dbg !170
  %scevgep160 = getelementptr float, float* %b, i64 %113, !dbg !170
  %145 = icmp ugt float* %scevgep160, %umax159, !dbg !170
  %umax161 = select i1 %145, float* %scevgep160, float* %umax159, !dbg !170
  %146 = mul i32 1, %108, !dbg !170
  %147 = add i32 %133, %146, !dbg !170
  %148 = sext i32 %147 to i64, !dbg !170
  %149 = mul i64 4, %148, !dbg !170
  %scevgep162 = getelementptr float, float* %b, i64 %148, !dbg !170
  %150 = icmp ugt float* %scevgep162, %umax161, !dbg !170
  %umax163 = select i1 %150, float* %scevgep162, float* %umax161, !dbg !170
  %151 = mul i32 %13, %smax139, !dbg !170
  %152 = add i32 %13, %151, !dbg !170
  %153 = mul i32 %13, %118, !dbg !170
  %154 = add i32 %152, %153, !dbg !170
  %155 = sext i32 %154 to i64, !dbg !170
  %156 = mul i64 4, %155, !dbg !170
  %scevgep164 = getelementptr float, float* %b, i64 %155, !dbg !170
  %157 = icmp ugt float* %scevgep164, %umax163, !dbg !170
  %umax165 = select i1 %157, float* %scevgep164, float* %umax163, !dbg !170
  %158 = sext i32 %104 to i64, !dbg !170
  %159 = mul i64 4, %158, !dbg !170
  %scevgep166 = getelementptr float, float* %b, i64 %158, !dbg !170
  %160 = icmp ugt float* %scevgep166, %umax165, !dbg !170
  %umax167 = select i1 %160, float* %scevgep166, float* %umax165, !dbg !170
  %scevgep168 = getelementptr float, float* %b, i64 %121, !dbg !170
  %161 = icmp ugt float* %scevgep168, %umax167, !dbg !170
  %umax169 = select i1 %161, float* %scevgep168, float* %umax167, !dbg !170
  %162 = icmp ult float* %scevgep86, %scevgep85, !dbg !170
  %umin87 = select i1 %162, float* %scevgep86, float* %scevgep85, !dbg !170
  %163 = icmp sgt i32 %s, 0, !dbg !170
  %smax88 = select i1 %163, i32 %s, i32 0, !dbg !170
  %164 = mul i32 %7, %smax88, !dbg !170
  %165 = add i32 0, %164, !dbg !170
  %166 = mul i32 -1, %smax88, !dbg !170
  %167 = add i32 0, %166, !dbg !170
  %168 = mul i32 1, %smax88, !dbg !170
  %169 = add i32 0, %168, !dbg !170
  %170 = icmp sgt i32 %s, %169, !dbg !170
  %smax89 = select i1 %170, i32 %s, i32 %169, !dbg !170
  %171 = add i32 %smax89, %167, !dbg !170
  %172 = mul i32 %s, %171, !dbg !170
  %173 = add i32 %165, %172, !dbg !170
  %174 = sext i32 %173 to i64, !dbg !170
  %175 = mul i64 4, %174, !dbg !170
  %scevgep90 = getelementptr float, float* %a, i64 %174, !dbg !170
  %176 = mul i32 %7, %smax88, !dbg !170
  %177 = add i32 1, %176, !dbg !170
  %178 = mul i32 -1, %smax88, !dbg !170
  %179 = add i32 %8, %178, !dbg !170
  %180 = mul i32 1, %179, !dbg !170
  %181 = add i32 %177, %180, !dbg !170
  %182 = sext i32 %181 to i64, !dbg !170
  %183 = mul i64 4, %182, !dbg !170
  %scevgep91 = getelementptr float, float* %a, i64 %182, !dbg !170
  %184 = icmp ugt float* %scevgep91, %scevgep90, !dbg !170
  %umax92 = select i1 %184, float* %scevgep91, float* %scevgep90, !dbg !170
  %185 = icmp ult float* %scevgep94, %scevgep93, !dbg !170
  %umin95 = select i1 %185, float* %scevgep94, float* %scevgep93, !dbg !170
  %186 = icmp ult float* %scevgep96, %umin95, !dbg !170
  %umin97 = select i1 %186, float* %scevgep96, float* %umin95, !dbg !170
  %187 = icmp ult float* %scevgep98, %umin97, !dbg !170
  %umin99 = select i1 %187, float* %scevgep98, float* %umin97, !dbg !170
  %188 = sext i32 %9 to i64, !dbg !170
  %189 = mul i64 4, %188, !dbg !170
  %scevgep100 = getelementptr float, float* %b, i64 %188, !dbg !170
  %190 = icmp ult float* %scevgep100, %umin99, !dbg !170
  %umin101 = select i1 %190, float* %scevgep100, float* %umin99, !dbg !170
  %191 = icmp ult float* %scevgep102, %umin101, !dbg !170
  %umin103 = select i1 %191, float* %scevgep102, float* %umin101, !dbg !170
  %192 = icmp ult float* %scevgep104, %umin103, !dbg !170
  %umin105 = select i1 %192, float* %scevgep104, float* %umin103, !dbg !170
  %193 = mul i32 %s, %smax88, !dbg !170
  %194 = add i32 0, %193, !dbg !170
  %195 = mul i32 %s, %171, !dbg !170
  %196 = add i32 %194, %195, !dbg !170
  %197 = mul i32 1, %169, !dbg !170
  %198 = add i32 %196, %197, !dbg !170
  %199 = sext i32 %198 to i64, !dbg !170
  %200 = mul i64 4, %199, !dbg !170
  %scevgep106 = getelementptr float, float* %b, i64 %199, !dbg !170
  %201 = mul i32 %s, %169, !dbg !170
  %202 = add i32 %169, %201, !dbg !170
  %203 = sext i32 %202 to i64, !dbg !170
  %204 = mul i64 4, %203, !dbg !170
  %scevgep107 = getelementptr float, float* %b, i64 %203, !dbg !170
  %205 = icmp ugt float* %scevgep107, %scevgep106, !dbg !170
  %umax108 = select i1 %205, float* %scevgep107, float* %scevgep106, !dbg !170
  %scevgep109 = getelementptr float, float* %b, i64 %174, !dbg !170
  %206 = icmp ugt float* %scevgep109, %umax108, !dbg !170
  %umax110 = select i1 %206, float* %scevgep109, float* %umax108, !dbg !170
  %207 = mul i32 1, %169, !dbg !170
  %208 = add i32 %194, %207, !dbg !170
  %209 = sext i32 %208 to i64, !dbg !170
  %210 = mul i64 4, %209, !dbg !170
  %scevgep111 = getelementptr float, float* %b, i64 %209, !dbg !170
  %211 = icmp ugt float* %scevgep111, %umax110, !dbg !170
  %umax112 = select i1 %211, float* %scevgep111, float* %umax110, !dbg !170
  %212 = mul i32 %7, %smax88, !dbg !170
  %213 = add i32 %7, %212, !dbg !170
  %214 = mul i32 %7, %179, !dbg !170
  %215 = add i32 %213, %214, !dbg !170
  %216 = sext i32 %215 to i64, !dbg !170
  %217 = mul i64 4, %216, !dbg !170
  %scevgep113 = getelementptr float, float* %b, i64 %216, !dbg !170
  %218 = icmp ugt float* %scevgep113, %umax112, !dbg !170
  %umax114 = select i1 %218, float* %scevgep113, float* %umax112, !dbg !170
  %219 = sext i32 %165 to i64, !dbg !170
  %220 = mul i64 4, %219, !dbg !170
  %scevgep115 = getelementptr float, float* %b, i64 %219, !dbg !170
  %221 = icmp ugt float* %scevgep115, %umax114, !dbg !170
  %umax116 = select i1 %221, float* %scevgep115, float* %umax114, !dbg !170
  %scevgep117 = getelementptr float, float* %b, i64 %182, !dbg !170
  %222 = icmp ugt float* %scevgep117, %umax116, !dbg !170
  %umax118 = select i1 %222, float* %scevgep117, float* %umax116, !dbg !170
  %223 = icmp ult float* %scevgep38, %scevgep37, !dbg !170
  %umin39 = select i1 %223, float* %scevgep38, float* %scevgep37, !dbg !170
  %224 = icmp sgt i32 %s, 0, !dbg !170
  %smax40 = select i1 %224, i32 %s, i32 0, !dbg !170
  %225 = mul i32 %3, %smax40, !dbg !170
  %226 = add i32 0, %225, !dbg !170
  %227 = mul i32 -1, %smax40, !dbg !170
  %228 = add i32 0, %227, !dbg !170
  %229 = mul i32 1, %smax40, !dbg !170
  %230 = add i32 0, %229, !dbg !170
  %231 = icmp sgt i32 %s, %230, !dbg !170
  %smax41 = select i1 %231, i32 %s, i32 %230, !dbg !170
  %232 = add i32 %smax41, %228, !dbg !170
  %233 = mul i32 %s, %232, !dbg !170
  %234 = add i32 %226, %233, !dbg !170
  %235 = sext i32 %234 to i64, !dbg !170
  %236 = mul i64 4, %235, !dbg !170
  %scevgep42 = getelementptr float, float* %a, i64 %235, !dbg !170
  %237 = mul i32 %3, %smax40, !dbg !170
  %238 = add i32 1, %237, !dbg !170
  %239 = mul i32 -1, %smax40, !dbg !170
  %240 = add i32 %4, %239, !dbg !170
  %241 = mul i32 1, %240, !dbg !170
  %242 = add i32 %238, %241, !dbg !170
  %243 = sext i32 %242 to i64, !dbg !170
  %244 = mul i64 4, %243, !dbg !170
  %scevgep43 = getelementptr float, float* %a, i64 %243, !dbg !170
  %245 = icmp ugt float* %scevgep43, %scevgep42, !dbg !170
  %umax44 = select i1 %245, float* %scevgep43, float* %scevgep42, !dbg !170
  %246 = icmp ult float* %scevgep46, %scevgep45, !dbg !170
  %umin47 = select i1 %246, float* %scevgep46, float* %scevgep45, !dbg !170
  %247 = icmp ult float* %scevgep48, %umin47, !dbg !170
  %umin49 = select i1 %247, float* %scevgep48, float* %umin47, !dbg !170
  %248 = icmp ult float* %scevgep50, %umin49, !dbg !170
  %umin51 = select i1 %248, float* %scevgep50, float* %umin49, !dbg !170
  %249 = sext i32 %5 to i64, !dbg !170
  %250 = mul i64 4, %249, !dbg !170
  %scevgep52 = getelementptr float, float* %b, i64 %249, !dbg !170
  %251 = icmp ult float* %scevgep52, %umin51, !dbg !170
  %umin53 = select i1 %251, float* %scevgep52, float* %umin51, !dbg !170
  %252 = icmp ult float* %scevgep54, %umin53, !dbg !170
  %umin55 = select i1 %252, float* %scevgep54, float* %umin53, !dbg !170
  %253 = icmp ult float* %scevgep56, %umin55, !dbg !170
  %umin57 = select i1 %253, float* %scevgep56, float* %umin55, !dbg !170
  %254 = mul i32 %s, %smax40, !dbg !170
  %255 = add i32 0, %254, !dbg !170
  %256 = mul i32 %s, %232, !dbg !170
  %257 = add i32 %255, %256, !dbg !170
  %258 = mul i32 1, %230, !dbg !170
  %259 = add i32 %257, %258, !dbg !170
  %260 = sext i32 %259 to i64, !dbg !170
  %261 = mul i64 4, %260, !dbg !170
  %scevgep58 = getelementptr float, float* %b, i64 %260, !dbg !170
  %262 = mul i32 %s, %230, !dbg !170
  %263 = add i32 %230, %262, !dbg !170
  %264 = sext i32 %263 to i64, !dbg !170
  %265 = mul i64 4, %264, !dbg !170
  %scevgep59 = getelementptr float, float* %b, i64 %264, !dbg !170
  %266 = icmp ugt float* %scevgep59, %scevgep58, !dbg !170
  %umax60 = select i1 %266, float* %scevgep59, float* %scevgep58, !dbg !170
  %scevgep61 = getelementptr float, float* %b, i64 %235, !dbg !170
  %267 = icmp ugt float* %scevgep61, %umax60, !dbg !170
  %umax62 = select i1 %267, float* %scevgep61, float* %umax60, !dbg !170
  %268 = mul i32 1, %230, !dbg !170
  %269 = add i32 %255, %268, !dbg !170
  %270 = sext i32 %269 to i64, !dbg !170
  %271 = mul i64 4, %270, !dbg !170
  %scevgep63 = getelementptr float, float* %b, i64 %270, !dbg !170
  %272 = icmp ugt float* %scevgep63, %umax62, !dbg !170
  %umax64 = select i1 %272, float* %scevgep63, float* %umax62, !dbg !170
  %273 = mul i32 %3, %smax40, !dbg !170
  %274 = add i32 %3, %273, !dbg !170
  %275 = mul i32 %3, %240, !dbg !170
  %276 = add i32 %274, %275, !dbg !170
  %277 = sext i32 %276 to i64, !dbg !170
  %278 = mul i64 4, %277, !dbg !170
  %scevgep65 = getelementptr float, float* %b, i64 %277, !dbg !170
  %279 = icmp ugt float* %scevgep65, %umax64, !dbg !170
  %umax66 = select i1 %279, float* %scevgep65, float* %umax64, !dbg !170
  %280 = sext i32 %226 to i64, !dbg !170
  %281 = mul i64 4, %280, !dbg !170
  %scevgep67 = getelementptr float, float* %b, i64 %280, !dbg !170
  %282 = icmp ugt float* %scevgep67, %umax66, !dbg !170
  %umax68 = select i1 %282, float* %scevgep67, float* %umax66, !dbg !170
  %scevgep69 = getelementptr float, float* %b, i64 %243, !dbg !170
  %283 = icmp ugt float* %scevgep69, %umax68, !dbg !170
  %umax70 = select i1 %283, float* %scevgep69, float* %umax68, !dbg !170
  %284 = icmp ult float* %scevgep7, %scevgep, !dbg !170
  %umin = select i1 %284, float* %scevgep7, float* %scevgep, !dbg !170
  %285 = icmp sgt i32 %s, 0, !dbg !170
  %smax = select i1 %285, i32 %s, i32 0, !dbg !170
  %286 = mul i32 %0, %smax, !dbg !170
  %287 = add i32 0, %286, !dbg !170
  %288 = mul i32 -1, %smax, !dbg !170
  %289 = add i32 0, %288, !dbg !170
  %290 = mul i32 1, %smax, !dbg !170
  %291 = add i32 0, %290, !dbg !170
  %292 = icmp sgt i32 %s, %291, !dbg !170
  %smax8 = select i1 %292, i32 %s, i32 %291, !dbg !170
  %293 = add i32 %smax8, %289, !dbg !170
  %294 = mul i32 %s, %293, !dbg !170
  %295 = add i32 %287, %294, !dbg !170
  %296 = sext i32 %295 to i64, !dbg !170
  %297 = mul i64 4, %296, !dbg !170
  %scevgep9 = getelementptr float, float* %a, i64 %296, !dbg !170
  %298 = mul i32 %0, %smax, !dbg !170
  %299 = add i32 1, %298, !dbg !170
  %300 = mul i32 -1, %smax, !dbg !170
  %301 = add i32 %1, %300, !dbg !170
  %302 = mul i32 1, %301, !dbg !170
  %303 = add i32 %299, %302, !dbg !170
  %304 = sext i32 %303 to i64, !dbg !170
  %305 = mul i64 4, %304, !dbg !170
  %scevgep10 = getelementptr float, float* %a, i64 %304, !dbg !170
  %306 = icmp ugt float* %scevgep10, %scevgep9, !dbg !170
  %umax = select i1 %306, float* %scevgep10, float* %scevgep9, !dbg !170
  %307 = icmp ult float* %scevgep12, %scevgep11, !dbg !170
  %umin13 = select i1 %307, float* %scevgep12, float* %scevgep11, !dbg !170
  %308 = icmp ult float* %scevgep14, %umin13, !dbg !170
  %umin15 = select i1 %308, float* %scevgep14, float* %umin13, !dbg !170
  %309 = icmp ult float* %scevgep16, %umin15, !dbg !170
  %umin17 = select i1 %309, float* %scevgep16, float* %umin15, !dbg !170
  %310 = sext i32 %2 to i64, !dbg !170
  %311 = mul i64 4, %310, !dbg !170
  %scevgep18 = getelementptr float, float* %b, i64 %310, !dbg !170
  %312 = icmp ult float* %scevgep18, %umin17, !dbg !170
  %umin19 = select i1 %312, float* %scevgep18, float* %umin17, !dbg !170
  %313 = icmp ult float* %scevgep20, %umin19, !dbg !170
  %umin21 = select i1 %313, float* %scevgep20, float* %umin19, !dbg !170
  %314 = icmp ult float* %scevgep22, %umin21, !dbg !170
  %umin23 = select i1 %314, float* %scevgep22, float* %umin21, !dbg !170
  %315 = mul i32 %s, %smax, !dbg !170
  %316 = add i32 0, %315, !dbg !170
  %317 = mul i32 %s, %293, !dbg !170
  %318 = add i32 %316, %317, !dbg !170
  %319 = mul i32 1, %291, !dbg !170
  %320 = add i32 %318, %319, !dbg !170
  %321 = sext i32 %320 to i64, !dbg !170
  %322 = mul i64 4, %321, !dbg !170
  %scevgep24 = getelementptr float, float* %b, i64 %321, !dbg !170
  %323 = mul i32 %s, %291, !dbg !170
  %324 = add i32 %291, %323, !dbg !170
  %325 = sext i32 %324 to i64, !dbg !170
  %326 = mul i64 4, %325, !dbg !170
  %scevgep25 = getelementptr float, float* %b, i64 %325, !dbg !170
  %327 = icmp ugt float* %scevgep25, %scevgep24, !dbg !170
  %umax26 = select i1 %327, float* %scevgep25, float* %scevgep24, !dbg !170
  %scevgep27 = getelementptr float, float* %b, i64 %296, !dbg !170
  %328 = icmp ugt float* %scevgep27, %umax26, !dbg !170
  %umax28 = select i1 %328, float* %scevgep27, float* %umax26, !dbg !170
  %329 = mul i32 1, %291, !dbg !170
  %330 = add i32 %316, %329, !dbg !170
  %331 = sext i32 %330 to i64, !dbg !170
  %332 = mul i64 4, %331, !dbg !170
  %scevgep29 = getelementptr float, float* %b, i64 %331, !dbg !170
  %333 = icmp ugt float* %scevgep29, %umax28, !dbg !170
  %umax30 = select i1 %333, float* %scevgep29, float* %umax28, !dbg !170
  %334 = mul i32 %0, %smax, !dbg !170
  %335 = add i32 %0, %334, !dbg !170
  %336 = mul i32 %0, %301, !dbg !170
  %337 = add i32 %335, %336, !dbg !170
  %338 = sext i32 %337 to i64, !dbg !170
  %339 = mul i64 4, %338, !dbg !170
  %scevgep31 = getelementptr float, float* %b, i64 %338, !dbg !170
  %340 = icmp ugt float* %scevgep31, %umax30, !dbg !170
  %umax32 = select i1 %340, float* %scevgep31, float* %umax30, !dbg !170
  %341 = sext i32 %287 to i64, !dbg !170
  %342 = mul i64 4, %341, !dbg !170
  %scevgep33 = getelementptr float, float* %b, i64 %341, !dbg !170
  %343 = icmp ugt float* %scevgep33, %umax32, !dbg !170
  %umax34 = select i1 %343, float* %scevgep33, float* %umax32, !dbg !170
  %scevgep35 = getelementptr float, float* %b, i64 %304, !dbg !170
  %344 = icmp ugt float* %scevgep35, %umax34, !dbg !170
  %umax36 = select i1 %344, float* %scevgep35, float* %umax34, !dbg !170
  %cmp = icmp slt i32 %k.0, %s, !dbg !170
  br i1 %cmp, label %for.body, label %for.end.62, !dbg !183

for.body:                                         ; preds = %for.cond
  br label %for.cond.1, !dbg !184

for.cond.1:                                       ; preds = %for.inc.21, %for.body
  %j.0 = phi i32 [ %k.0, %for.body ], [ %inc22, %for.inc.21 ]
  %345 = icmp sgt i32 %s, 0, !dbg !172
  %smax313 = select i1 %345, i32 %s, i32 0, !dbg !172
  %346 = mul i32 %39, %smax313, !dbg !172
  %347 = add i32 0, %346, !dbg !172
  %348 = mul i32 -1, %smax313, !dbg !172
  %349 = add i32 0, %348, !dbg !172
  %350 = mul i32 1, %smax313, !dbg !172
  %351 = add i32 0, %350, !dbg !172
  %352 = icmp sgt i32 %s, %351, !dbg !172
  %smax314 = select i1 %352, i32 %s, i32 %351, !dbg !172
  %353 = add i32 %smax314, %349, !dbg !172
  %354 = mul i32 %s, %353, !dbg !172
  %355 = add i32 %347, %354, !dbg !172
  %356 = sext i32 %355 to i64, !dbg !172
  %357 = mul i64 4, %356, !dbg !172
  %scevgep315 = getelementptr float, float* %a, i64 %356, !dbg !172
  %358 = icmp ult float* %scevgep317, %scevgep316, !dbg !172
  %umin318 = select i1 %358, float* %scevgep317, float* %scevgep316, !dbg !172
  %359 = icmp ult float* %scevgep319, %umin318, !dbg !172
  %umin320 = select i1 %359, float* %scevgep319, float* %umin318, !dbg !172
  %360 = mul i32 %s, %smax313, !dbg !172
  %361 = add i32 0, %360, !dbg !172
  %362 = mul i32 %s, %353, !dbg !172
  %363 = add i32 %361, %362, !dbg !172
  %364 = mul i32 1, %351, !dbg !172
  %365 = add i32 %363, %364, !dbg !172
  %366 = sext i32 %365 to i64, !dbg !172
  %367 = mul i64 4, %366, !dbg !172
  %scevgep321 = getelementptr float, float* %b, i64 %366, !dbg !172
  %368 = mul i32 %s, %351, !dbg !172
  %369 = add i32 %351, %368, !dbg !172
  %370 = sext i32 %369 to i64, !dbg !172
  %371 = mul i64 4, %370, !dbg !172
  %scevgep322 = getelementptr float, float* %b, i64 %370, !dbg !172
  %372 = icmp ugt float* %scevgep322, %scevgep321, !dbg !172
  %umax323 = select i1 %372, float* %scevgep322, float* %scevgep321, !dbg !172
  %scevgep324 = getelementptr float, float* %b, i64 %356, !dbg !172
  %373 = icmp ugt float* %scevgep324, %umax323, !dbg !172
  %umax325 = select i1 %373, float* %scevgep324, float* %umax323, !dbg !172
  %374 = icmp sgt i32 %s, 0, !dbg !172
  %smax299 = select i1 %374, i32 %s, i32 0, !dbg !172
  %375 = mul i32 %38, %smax299, !dbg !172
  %376 = add i32 0, %375, !dbg !172
  %377 = mul i32 -1, %smax299, !dbg !172
  %378 = add i32 0, %377, !dbg !172
  %379 = mul i32 1, %smax299, !dbg !172
  %380 = add i32 0, %379, !dbg !172
  %381 = icmp sgt i32 %s, %380, !dbg !172
  %smax300 = select i1 %381, i32 %s, i32 %380, !dbg !172
  %382 = add i32 %smax300, %378, !dbg !172
  %383 = mul i32 %s, %382, !dbg !172
  %384 = add i32 %376, %383, !dbg !172
  %385 = sext i32 %384 to i64, !dbg !172
  %386 = mul i64 4, %385, !dbg !172
  %scevgep301 = getelementptr float, float* %a, i64 %385, !dbg !172
  %387 = icmp ult float* %scevgep303, %scevgep302, !dbg !172
  %umin304 = select i1 %387, float* %scevgep303, float* %scevgep302, !dbg !172
  %388 = icmp ult float* %scevgep305, %umin304, !dbg !172
  %umin306 = select i1 %388, float* %scevgep305, float* %umin304, !dbg !172
  %389 = mul i32 %s, %smax299, !dbg !172
  %390 = add i32 0, %389, !dbg !172
  %391 = mul i32 %s, %382, !dbg !172
  %392 = add i32 %390, %391, !dbg !172
  %393 = mul i32 1, %380, !dbg !172
  %394 = add i32 %392, %393, !dbg !172
  %395 = sext i32 %394 to i64, !dbg !172
  %396 = mul i64 4, %395, !dbg !172
  %scevgep307 = getelementptr float, float* %b, i64 %395, !dbg !172
  %397 = mul i32 %s, %380, !dbg !172
  %398 = add i32 %380, %397, !dbg !172
  %399 = sext i32 %398 to i64, !dbg !172
  %400 = mul i64 4, %399, !dbg !172
  %scevgep308 = getelementptr float, float* %b, i64 %399, !dbg !172
  %401 = icmp ugt float* %scevgep308, %scevgep307, !dbg !172
  %umax309 = select i1 %401, float* %scevgep308, float* %scevgep307, !dbg !172
  %scevgep310 = getelementptr float, float* %b, i64 %385, !dbg !172
  %402 = icmp ugt float* %scevgep310, %umax309, !dbg !172
  %umax311 = select i1 %402, float* %scevgep310, float* %umax309, !dbg !172
  %403 = icmp sgt i32 %s, 0, !dbg !172
  %smax277 = select i1 %403, i32 %s, i32 0, !dbg !172
  %404 = mul i32 %37, %smax277, !dbg !172
  %405 = add i32 0, %404, !dbg !172
  %406 = mul i32 -1, %smax277, !dbg !172
  %407 = add i32 0, %406, !dbg !172
  %408 = mul i32 1, %smax277, !dbg !172
  %409 = add i32 0, %408, !dbg !172
  %410 = icmp sgt i32 %s, %409, !dbg !172
  %smax278 = select i1 %410, i32 %s, i32 %409, !dbg !172
  %411 = add i32 %smax278, %407, !dbg !172
  %412 = mul i32 %s, %411, !dbg !172
  %413 = add i32 %405, %412, !dbg !172
  %414 = sext i32 %413 to i64, !dbg !172
  %415 = mul i64 4, %414, !dbg !172
  %scevgep279 = getelementptr float, float* %a, i64 %414, !dbg !172
  %416 = icmp ult float* %scevgep281, %scevgep280, !dbg !172
  %umin282 = select i1 %416, float* %scevgep281, float* %scevgep280, !dbg !172
  %417 = icmp ult float* %scevgep283, %umin282, !dbg !172
  %umin284 = select i1 %417, float* %scevgep283, float* %umin282, !dbg !172
  %418 = mul i32 %s, %smax277, !dbg !172
  %419 = add i32 0, %418, !dbg !172
  %420 = mul i32 %s, %411, !dbg !172
  %421 = add i32 %419, %420, !dbg !172
  %422 = mul i32 1, %409, !dbg !172
  %423 = add i32 %421, %422, !dbg !172
  %424 = sext i32 %423 to i64, !dbg !172
  %425 = mul i64 4, %424, !dbg !172
  %scevgep285 = getelementptr float, float* %b, i64 %424, !dbg !172
  %426 = mul i32 %s, %409, !dbg !172
  %427 = add i32 %409, %426, !dbg !172
  %428 = sext i32 %427 to i64, !dbg !172
  %429 = mul i64 4, %428, !dbg !172
  %scevgep286 = getelementptr float, float* %b, i64 %428, !dbg !172
  %430 = icmp ugt float* %scevgep286, %scevgep285, !dbg !172
  %umax287 = select i1 %430, float* %scevgep286, float* %scevgep285, !dbg !172
  %scevgep288 = getelementptr float, float* %b, i64 %414, !dbg !172
  %431 = icmp ugt float* %scevgep288, %umax287, !dbg !172
  %umax289 = select i1 %431, float* %scevgep288, float* %umax287, !dbg !172
  %432 = icmp sgt i32 %s, 0, !dbg !172
  %smax72 = select i1 %432, i32 %s, i32 0, !dbg !172
  %433 = mul i32 %6, %smax72, !dbg !172
  %434 = add i32 0, %433, !dbg !172
  %435 = mul i32 -1, %smax72, !dbg !172
  %436 = add i32 0, %435, !dbg !172
  %437 = mul i32 1, %smax72, !dbg !172
  %438 = add i32 0, %437, !dbg !172
  %439 = icmp sgt i32 %s, %438, !dbg !172
  %smax73 = select i1 %439, i32 %s, i32 %438, !dbg !172
  %440 = add i32 %smax73, %436, !dbg !172
  %441 = mul i32 %s, %440, !dbg !172
  %442 = add i32 %434, %441, !dbg !172
  %443 = sext i32 %442 to i64, !dbg !172
  %444 = mul i64 4, %443, !dbg !172
  %scevgep74 = getelementptr float, float* %a, i64 %443, !dbg !172
  %445 = icmp ult float* %scevgep76, %scevgep75, !dbg !172
  %umin77 = select i1 %445, float* %scevgep76, float* %scevgep75, !dbg !172
  %446 = icmp ult float* %scevgep78, %umin77, !dbg !172
  %umin79 = select i1 %446, float* %scevgep78, float* %umin77, !dbg !172
  %447 = mul i32 %s, %smax72, !dbg !172
  %448 = add i32 0, %447, !dbg !172
  %449 = mul i32 %s, %440, !dbg !172
  %450 = add i32 %448, %449, !dbg !172
  %451 = mul i32 1, %438, !dbg !172
  %452 = add i32 %450, %451, !dbg !172
  %453 = sext i32 %452 to i64, !dbg !172
  %454 = mul i64 4, %453, !dbg !172
  %scevgep80 = getelementptr float, float* %b, i64 %453, !dbg !172
  %455 = mul i32 %s, %438, !dbg !172
  %456 = add i32 %438, %455, !dbg !172
  %457 = sext i32 %456 to i64, !dbg !172
  %458 = mul i64 4, %457, !dbg !172
  %scevgep81 = getelementptr float, float* %b, i64 %457, !dbg !172
  %459 = icmp ugt float* %scevgep81, %scevgep80, !dbg !172
  %umax82 = select i1 %459, float* %scevgep81, float* %scevgep80, !dbg !172
  %scevgep83 = getelementptr float, float* %b, i64 %443, !dbg !172
  %460 = icmp ugt float* %scevgep83, %umax82, !dbg !172
  %umax84 = select i1 %460, float* %scevgep83, float* %umax82, !dbg !172
  %cmp2 = icmp slt i32 %j.0, %s, !dbg !172
  br i1 %cmp2, label %for.body.3, label %for.end.23, !dbg !185

for.body.3:                                       ; preds = %for.cond.1
  br label %for.cond.4, !dbg !186

for.cond.4:                                       ; preds = %for.inc, %for.body.3
  %i.0 = phi i32 [ 0, %for.body.3 ], [ %inc, %for.inc ]
  %sum.0 = phi float [ 0.000000e+00, %for.body.3 ], [ %add12, %for.inc ]
  %461 = icmp ult float* %scevgep335, %scevgep334, !dbg !189
  %umin336 = select i1 %461, float* %scevgep335, float* %scevgep334, !dbg !189
  %462 = icmp sgt i32 %s, 0, !dbg !189
  %smax337 = select i1 %462, i32 %s, i32 0, !dbg !189
  %463 = mul i32 %s, %smax337, !dbg !189
  %464 = add i32 0, %463, !dbg !189
  %465 = mul i32 -1, %smax337, !dbg !189
  %466 = add i32 0, %465, !dbg !189
  %467 = mul i32 1, %smax337, !dbg !189
  %468 = add i32 0, %467, !dbg !189
  %469 = icmp sgt i32 %s, %468, !dbg !189
  %smax338 = select i1 %469, i32 %s, i32 %468, !dbg !189
  %470 = add i32 %smax338, %466, !dbg !189
  %471 = mul i32 %s, %470, !dbg !189
  %472 = add i32 %464, %471, !dbg !189
  %473 = mul i32 1, %468, !dbg !189
  %474 = add i32 %472, %473, !dbg !189
  %475 = sext i32 %474 to i64, !dbg !189
  %476 = mul i64 4, %475, !dbg !189
  %scevgep339 = getelementptr float, float* %b, i64 %475, !dbg !189
  %477 = mul i32 %s, %468, !dbg !189
  %478 = add i32 %468, %477, !dbg !189
  %479 = sext i32 %478 to i64, !dbg !189
  %480 = mul i64 4, %479, !dbg !189
  %scevgep340 = getelementptr float, float* %b, i64 %479, !dbg !189
  %481 = icmp ugt float* %scevgep340, %scevgep339, !dbg !189
  %umax341 = select i1 %481, float* %scevgep340, float* %scevgep339, !dbg !189
  %482 = icmp ult float* %scevgep327, %scevgep326, !dbg !189
  %umin328 = select i1 %482, float* %scevgep327, float* %scevgep326, !dbg !189
  %483 = icmp sgt i32 %s, 0, !dbg !189
  %smax329 = select i1 %483, i32 %s, i32 0, !dbg !189
  %484 = mul i32 %s, %smax329, !dbg !189
  %485 = add i32 0, %484, !dbg !189
  %486 = mul i32 -1, %smax329, !dbg !189
  %487 = add i32 0, %486, !dbg !189
  %488 = mul i32 1, %smax329, !dbg !189
  %489 = add i32 0, %488, !dbg !189
  %490 = icmp sgt i32 %s, %489, !dbg !189
  %smax330 = select i1 %490, i32 %s, i32 %489, !dbg !189
  %491 = add i32 %smax330, %487, !dbg !189
  %492 = mul i32 %s, %491, !dbg !189
  %493 = add i32 %485, %492, !dbg !189
  %494 = mul i32 1, %489, !dbg !189
  %495 = add i32 %493, %494, !dbg !189
  %496 = sext i32 %495 to i64, !dbg !189
  %497 = mul i64 4, %496, !dbg !189
  %scevgep331 = getelementptr float, float* %b, i64 %496, !dbg !189
  %498 = mul i32 %s, %489, !dbg !189
  %499 = add i32 %489, %498, !dbg !189
  %500 = sext i32 %499 to i64, !dbg !189
  %501 = mul i64 4, %500, !dbg !189
  %scevgep332 = getelementptr float, float* %b, i64 %500, !dbg !189
  %502 = icmp ugt float* %scevgep332, %scevgep331, !dbg !189
  %umax333 = select i1 %502, float* %scevgep332, float* %scevgep331, !dbg !189
  %503 = icmp ult float* %scevgep291, %scevgep290, !dbg !189
  %umin292 = select i1 %503, float* %scevgep291, float* %scevgep290, !dbg !189
  %504 = icmp sgt i32 %s, 0, !dbg !189
  %smax293 = select i1 %504, i32 %s, i32 0, !dbg !189
  %505 = mul i32 %s, %smax293, !dbg !189
  %506 = add i32 0, %505, !dbg !189
  %507 = mul i32 -1, %smax293, !dbg !189
  %508 = add i32 0, %507, !dbg !189
  %509 = mul i32 1, %smax293, !dbg !189
  %510 = add i32 0, %509, !dbg !189
  %511 = icmp sgt i32 %s, %510, !dbg !189
  %smax294 = select i1 %511, i32 %s, i32 %510, !dbg !189
  %512 = add i32 %smax294, %508, !dbg !189
  %513 = mul i32 %s, %512, !dbg !189
  %514 = add i32 %506, %513, !dbg !189
  %515 = mul i32 1, %510, !dbg !189
  %516 = add i32 %514, %515, !dbg !189
  %517 = sext i32 %516 to i64, !dbg !189
  %518 = mul i64 4, %517, !dbg !189
  %scevgep295 = getelementptr float, float* %b, i64 %517, !dbg !189
  %519 = mul i32 %s, %510, !dbg !189
  %520 = add i32 %510, %519, !dbg !189
  %521 = sext i32 %520 to i64, !dbg !189
  %522 = mul i64 4, %521, !dbg !189
  %scevgep296 = getelementptr float, float* %b, i64 %521, !dbg !189
  %523 = icmp ugt float* %scevgep296, %scevgep295, !dbg !189
  %umax297 = select i1 %523, float* %scevgep296, float* %scevgep295, !dbg !189
  %cmp5 = icmp slt i32 %i.0, %k.0, !dbg !189
  br i1 %cmp5, label %for.body.6, label %for.end, !dbg !191

for.body.6:                                       ; preds = %for.cond.4
  %mul = mul nsw i32 %j.0, %s, !dbg !192
  %add = add nsw i32 %mul, %i.0, !dbg !194
  %idxprom = sext i32 %add to i64, !dbg !195
  %arrayidx = getelementptr inbounds float, float* %b, i64 %idxprom, !dbg !195
  %tmp = load float, float* %arrayidx, align 4, !dbg !195
  %mul7 = mul nsw i32 %i.0, %s, !dbg !196
  %add8 = add nsw i32 %mul7, %k.0, !dbg !197
  %idxprom9 = sext i32 %add8 to i64, !dbg !198
  %arrayidx10 = getelementptr inbounds float, float* %b, i64 %idxprom9, !dbg !198
  %tmp1 = load float, float* %arrayidx10, align 4, !dbg !198
  %mul11 = fmul float %tmp, %tmp1, !dbg !199
  %add12 = fadd float %sum.0, %mul11, !dbg !200
  br label %for.inc, !dbg !201

for.inc:                                          ; preds = %for.body.6
  %inc = add nsw i32 %i.0, 1, !dbg !202
  br label %for.cond.4, !dbg !203

for.end:                                          ; preds = %for.cond.4
  %sum.0.lcssa = phi float [ %sum.0, %for.cond.4 ]
  %mul13 = mul nsw i32 %j.0, %s, !dbg !204
  %add14 = add nsw i32 %mul13, %k.0, !dbg !205
  %idxprom15 = sext i32 %add14 to i64, !dbg !206
  %arrayidx16 = getelementptr inbounds float, float* %a, i64 %idxprom15, !dbg !206
  %tmp2 = load float, float* %arrayidx16, align 4, !dbg !206
  %sub = fsub float %tmp2, %sum.0.lcssa, !dbg !207
  %mul17 = mul nsw i32 %j.0, %s, !dbg !208
  %add18 = add nsw i32 %mul17, %k.0, !dbg !209
  %idxprom19 = sext i32 %add18 to i64, !dbg !210
  %arrayidx20 = getelementptr inbounds float, float* %b, i64 %idxprom19, !dbg !210
  store float %sub, float* %arrayidx20, align 4, !dbg !211
  br label %for.inc.21, !dbg !212

for.inc.21:                                       ; preds = %for.end
  %inc22 = add nsw i32 %j.0, 1, !dbg !213
  br label %for.cond.1, !dbg !214

for.end.23:                                       ; preds = %for.cond.1
  %add24 = add nsw i32 %k.0, 1, !dbg !215
  br label %for.cond.25, !dbg !216

for.cond.25:                                      ; preds = %for.inc.57, %for.end.23
  %i.1 = phi i32 [ %add24, %for.end.23 ], [ %inc58, %for.inc.57 ]
  %524 = icmp sgt i32 %s, 0, !dbg !176
  %smax246 = select i1 %524, i32 %s, i32 0, !dbg !176
  %525 = mul i32 %28, %smax246, !dbg !176
  %526 = add i32 1, %525, !dbg !176
  %527 = mul i32 -1, %smax246, !dbg !176
  %528 = add i32 %29, %527, !dbg !176
  %529 = mul i32 1, %528, !dbg !176
  %530 = add i32 %526, %529, !dbg !176
  %531 = sext i32 %530 to i64, !dbg !176
  %532 = mul i64 4, %531, !dbg !176
  %scevgep247 = getelementptr float, float* %a, i64 %531, !dbg !176
  %533 = sext i32 %30 to i64, !dbg !176
  %534 = mul i64 4, %533, !dbg !176
  %scevgep249 = getelementptr float, float* %b, i64 %533, !dbg !176
  %535 = icmp ult float* %scevgep249, %scevgep248, !dbg !176
  %umin250 = select i1 %535, float* %scevgep249, float* %scevgep248, !dbg !176
  %536 = icmp ult float* %scevgep251, %umin250, !dbg !176
  %umin252 = select i1 %536, float* %scevgep251, float* %umin250, !dbg !176
  %537 = icmp ult float* %scevgep253, %umin252, !dbg !176
  %umin254 = select i1 %537, float* %scevgep253, float* %umin252, !dbg !176
  %538 = mul i32 %s, %smax246, !dbg !176
  %539 = add i32 0, %538, !dbg !176
  %540 = mul i32 1, %smax246, !dbg !176
  %541 = add i32 0, %540, !dbg !176
  %542 = mul i32 1, %541, !dbg !176
  %543 = add i32 %539, %542, !dbg !176
  %544 = sext i32 %543 to i64, !dbg !176
  %545 = mul i64 4, %544, !dbg !176
  %scevgep255 = getelementptr float, float* %b, i64 %544, !dbg !176
  %546 = mul i32 %28, %smax246, !dbg !176
  %547 = add i32 %28, %546, !dbg !176
  %548 = mul i32 %28, %528, !dbg !176
  %549 = add i32 %547, %548, !dbg !176
  %550 = sext i32 %549 to i64, !dbg !176
  %551 = mul i64 4, %550, !dbg !176
  %scevgep256 = getelementptr float, float* %b, i64 %550, !dbg !176
  %552 = icmp ugt float* %scevgep256, %scevgep255, !dbg !176
  %umax257 = select i1 %552, float* %scevgep256, float* %scevgep255, !dbg !176
  %553 = mul i32 %28, %smax246, !dbg !176
  %554 = add i32 0, %553, !dbg !176
  %555 = sext i32 %554 to i64, !dbg !176
  %556 = mul i64 4, %555, !dbg !176
  %scevgep258 = getelementptr float, float* %b, i64 %555, !dbg !176
  %557 = icmp ugt float* %scevgep258, %umax257, !dbg !176
  %umax259 = select i1 %557, float* %scevgep258, float* %umax257, !dbg !176
  %scevgep260 = getelementptr float, float* %b, i64 %531, !dbg !176
  %558 = icmp ugt float* %scevgep260, %umax259, !dbg !176
  %umax261 = select i1 %558, float* %scevgep260, float* %umax259, !dbg !176
  %559 = icmp sgt i32 %s, 0, !dbg !176
  %smax229 = select i1 %559, i32 %s, i32 0, !dbg !176
  %560 = mul i32 %25, %smax229, !dbg !176
  %561 = add i32 1, %560, !dbg !176
  %562 = mul i32 -1, %smax229, !dbg !176
  %563 = add i32 %26, %562, !dbg !176
  %564 = mul i32 1, %563, !dbg !176
  %565 = add i32 %561, %564, !dbg !176
  %566 = sext i32 %565 to i64, !dbg !176
  %567 = mul i64 4, %566, !dbg !176
  %scevgep230 = getelementptr float, float* %a, i64 %566, !dbg !176
  %568 = sext i32 %27 to i64, !dbg !176
  %569 = mul i64 4, %568, !dbg !176
  %scevgep232 = getelementptr float, float* %b, i64 %568, !dbg !176
  %570 = icmp ult float* %scevgep232, %scevgep231, !dbg !176
  %umin233 = select i1 %570, float* %scevgep232, float* %scevgep231, !dbg !176
  %571 = icmp ult float* %scevgep234, %umin233, !dbg !176
  %umin235 = select i1 %571, float* %scevgep234, float* %umin233, !dbg !176
  %572 = icmp ult float* %scevgep236, %umin235, !dbg !176
  %umin237 = select i1 %572, float* %scevgep236, float* %umin235, !dbg !176
  %573 = mul i32 %s, %smax229, !dbg !176
  %574 = add i32 0, %573, !dbg !176
  %575 = mul i32 1, %smax229, !dbg !176
  %576 = add i32 0, %575, !dbg !176
  %577 = mul i32 1, %576, !dbg !176
  %578 = add i32 %574, %577, !dbg !176
  %579 = sext i32 %578 to i64, !dbg !176
  %580 = mul i64 4, %579, !dbg !176
  %scevgep238 = getelementptr float, float* %b, i64 %579, !dbg !176
  %581 = mul i32 %25, %smax229, !dbg !176
  %582 = add i32 %25, %581, !dbg !176
  %583 = mul i32 %25, %563, !dbg !176
  %584 = add i32 %582, %583, !dbg !176
  %585 = sext i32 %584 to i64, !dbg !176
  %586 = mul i64 4, %585, !dbg !176
  %scevgep239 = getelementptr float, float* %b, i64 %585, !dbg !176
  %587 = icmp ugt float* %scevgep239, %scevgep238, !dbg !176
  %umax240 = select i1 %587, float* %scevgep239, float* %scevgep238, !dbg !176
  %588 = mul i32 %25, %smax229, !dbg !176
  %589 = add i32 0, %588, !dbg !176
  %590 = sext i32 %589 to i64, !dbg !176
  %591 = mul i64 4, %590, !dbg !176
  %scevgep241 = getelementptr float, float* %b, i64 %590, !dbg !176
  %592 = icmp ugt float* %scevgep241, %umax240, !dbg !176
  %umax242 = select i1 %592, float* %scevgep241, float* %umax240, !dbg !176
  %scevgep243 = getelementptr float, float* %b, i64 %566, !dbg !176
  %593 = icmp ugt float* %scevgep243, %umax242, !dbg !176
  %umax244 = select i1 %593, float* %scevgep243, float* %umax242, !dbg !176
  %594 = icmp sgt i32 %s, 0, !dbg !176
  %smax205 = select i1 %594, i32 %s, i32 0, !dbg !176
  %595 = mul i32 %19, %smax205, !dbg !176
  %596 = add i32 1, %595, !dbg !176
  %597 = mul i32 -1, %smax205, !dbg !176
  %598 = add i32 %20, %597, !dbg !176
  %599 = mul i32 1, %598, !dbg !176
  %600 = add i32 %596, %599, !dbg !176
  %601 = sext i32 %600 to i64, !dbg !176
  %602 = mul i64 4, %601, !dbg !176
  %scevgep206 = getelementptr float, float* %a, i64 %601, !dbg !176
  %603 = sext i32 %21 to i64, !dbg !176
  %604 = mul i64 4, %603, !dbg !176
  %scevgep208 = getelementptr float, float* %b, i64 %603, !dbg !176
  %605 = icmp ult float* %scevgep208, %scevgep207, !dbg !176
  %umin209 = select i1 %605, float* %scevgep208, float* %scevgep207, !dbg !176
  %606 = icmp ult float* %scevgep210, %umin209, !dbg !176
  %umin211 = select i1 %606, float* %scevgep210, float* %umin209, !dbg !176
  %607 = icmp ult float* %scevgep212, %umin211, !dbg !176
  %umin213 = select i1 %607, float* %scevgep212, float* %umin211, !dbg !176
  %608 = mul i32 %s, %smax205, !dbg !176
  %609 = add i32 0, %608, !dbg !176
  %610 = mul i32 1, %smax205, !dbg !176
  %611 = add i32 0, %610, !dbg !176
  %612 = mul i32 1, %611, !dbg !176
  %613 = add i32 %609, %612, !dbg !176
  %614 = sext i32 %613 to i64, !dbg !176
  %615 = mul i64 4, %614, !dbg !176
  %scevgep214 = getelementptr float, float* %b, i64 %614, !dbg !176
  %616 = mul i32 %19, %smax205, !dbg !176
  %617 = add i32 %19, %616, !dbg !176
  %618 = mul i32 %19, %598, !dbg !176
  %619 = add i32 %617, %618, !dbg !176
  %620 = sext i32 %619 to i64, !dbg !176
  %621 = mul i64 4, %620, !dbg !176
  %scevgep215 = getelementptr float, float* %b, i64 %620, !dbg !176
  %622 = icmp ugt float* %scevgep215, %scevgep214, !dbg !176
  %umax216 = select i1 %622, float* %scevgep215, float* %scevgep214, !dbg !176
  %623 = mul i32 %19, %smax205, !dbg !176
  %624 = add i32 0, %623, !dbg !176
  %625 = sext i32 %624 to i64, !dbg !176
  %626 = mul i64 4, %625, !dbg !176
  %scevgep217 = getelementptr float, float* %b, i64 %625, !dbg !176
  %627 = icmp ugt float* %scevgep217, %umax216, !dbg !176
  %umax218 = select i1 %627, float* %scevgep217, float* %umax216, !dbg !176
  %scevgep219 = getelementptr float, float* %b, i64 %601, !dbg !176
  %628 = icmp ugt float* %scevgep219, %umax218, !dbg !176
  %umax220 = select i1 %628, float* %scevgep219, float* %umax218, !dbg !176
  %629 = icmp sgt i32 %s, 0, !dbg !176
  %smax120 = select i1 %629, i32 %s, i32 0, !dbg !176
  %630 = mul i32 %10, %smax120, !dbg !176
  %631 = add i32 1, %630, !dbg !176
  %632 = mul i32 -1, %smax120, !dbg !176
  %633 = add i32 %11, %632, !dbg !176
  %634 = mul i32 1, %633, !dbg !176
  %635 = add i32 %631, %634, !dbg !176
  %636 = sext i32 %635 to i64, !dbg !176
  %637 = mul i64 4, %636, !dbg !176
  %scevgep121 = getelementptr float, float* %a, i64 %636, !dbg !176
  %638 = sext i32 %12 to i64, !dbg !176
  %639 = mul i64 4, %638, !dbg !176
  %scevgep123 = getelementptr float, float* %b, i64 %638, !dbg !176
  %640 = icmp ult float* %scevgep123, %scevgep122, !dbg !176
  %umin124 = select i1 %640, float* %scevgep123, float* %scevgep122, !dbg !176
  %641 = icmp ult float* %scevgep125, %umin124, !dbg !176
  %umin126 = select i1 %641, float* %scevgep125, float* %umin124, !dbg !176
  %642 = icmp ult float* %scevgep127, %umin126, !dbg !176
  %umin128 = select i1 %642, float* %scevgep127, float* %umin126, !dbg !176
  %643 = mul i32 %s, %smax120, !dbg !176
  %644 = add i32 0, %643, !dbg !176
  %645 = mul i32 1, %smax120, !dbg !176
  %646 = add i32 0, %645, !dbg !176
  %647 = mul i32 1, %646, !dbg !176
  %648 = add i32 %644, %647, !dbg !176
  %649 = sext i32 %648 to i64, !dbg !176
  %650 = mul i64 4, %649, !dbg !176
  %scevgep129 = getelementptr float, float* %b, i64 %649, !dbg !176
  %651 = mul i32 %10, %smax120, !dbg !176
  %652 = add i32 %10, %651, !dbg !176
  %653 = mul i32 %10, %633, !dbg !176
  %654 = add i32 %652, %653, !dbg !176
  %655 = sext i32 %654 to i64, !dbg !176
  %656 = mul i64 4, %655, !dbg !176
  %scevgep130 = getelementptr float, float* %b, i64 %655, !dbg !176
  %657 = icmp ugt float* %scevgep130, %scevgep129, !dbg !176
  %umax131 = select i1 %657, float* %scevgep130, float* %scevgep129, !dbg !176
  %658 = mul i32 %10, %smax120, !dbg !176
  %659 = add i32 0, %658, !dbg !176
  %660 = sext i32 %659 to i64, !dbg !176
  %661 = mul i64 4, %660, !dbg !176
  %scevgep132 = getelementptr float, float* %b, i64 %660, !dbg !176
  %662 = icmp ugt float* %scevgep132, %umax131, !dbg !176
  %umax133 = select i1 %662, float* %scevgep132, float* %umax131, !dbg !176
  %scevgep134 = getelementptr float, float* %b, i64 %636, !dbg !176
  %663 = icmp ugt float* %scevgep134, %umax133, !dbg !176
  %umax135 = select i1 %663, float* %scevgep134, float* %umax133, !dbg !176
  %cmp26 = icmp slt i32 %i.1, %s, !dbg !176
  br i1 %cmp26, label %for.body.27, label %for.end.59, !dbg !217

for.body.27:                                      ; preds = %for.cond.25
  br label %for.cond.28, !dbg !218

for.cond.28:                                      ; preds = %for.inc.41, %for.body.27
  %j.1 = phi i32 [ 0, %for.body.27 ], [ %inc42, %for.inc.41 ]
  %sum.1 = phi float [ 0.000000e+00, %for.body.27 ], [ %add40, %for.inc.41 ]
  %664 = sext i32 %34 to i64, !dbg !179
  %665 = mul i64 4, %664, !dbg !179
  %scevgep270 = getelementptr float, float* %b, i64 %664, !dbg !179
  %666 = icmp ult float* %scevgep270, %scevgep269, !dbg !179
  %umin271 = select i1 %666, float* %scevgep270, float* %scevgep269, !dbg !179
  %667 = icmp sgt i32 %s, 0, !dbg !179
  %smax272 = select i1 %667, i32 %s, i32 0, !dbg !179
  %668 = mul i32 %s, %smax272, !dbg !179
  %669 = add i32 0, %668, !dbg !179
  %670 = mul i32 1, %smax272, !dbg !179
  %671 = add i32 0, %670, !dbg !179
  %672 = mul i32 1, %671, !dbg !179
  %673 = add i32 %669, %672, !dbg !179
  %674 = sext i32 %673 to i64, !dbg !179
  %675 = mul i64 4, %674, !dbg !179
  %scevgep273 = getelementptr float, float* %b, i64 %674, !dbg !179
  %676 = mul i32 %35, %smax272, !dbg !179
  %677 = add i32 %35, %676, !dbg !179
  %678 = mul i32 -1, %smax272, !dbg !179
  %679 = add i32 %36, %678, !dbg !179
  %680 = mul i32 %35, %679, !dbg !179
  %681 = add i32 %677, %680, !dbg !179
  %682 = sext i32 %681 to i64, !dbg !179
  %683 = mul i64 4, %682, !dbg !179
  %scevgep274 = getelementptr float, float* %b, i64 %682, !dbg !179
  %684 = icmp ugt float* %scevgep274, %scevgep273, !dbg !179
  %umax275 = select i1 %684, float* %scevgep274, float* %scevgep273, !dbg !179
  %685 = sext i32 %31 to i64, !dbg !179
  %686 = mul i64 4, %685, !dbg !179
  %scevgep263 = getelementptr float, float* %b, i64 %685, !dbg !179
  %687 = icmp ult float* %scevgep263, %scevgep262, !dbg !179
  %umin264 = select i1 %687, float* %scevgep263, float* %scevgep262, !dbg !179
  %688 = icmp sgt i32 %s, 0, !dbg !179
  %smax265 = select i1 %688, i32 %s, i32 0, !dbg !179
  %689 = mul i32 %s, %smax265, !dbg !179
  %690 = add i32 0, %689, !dbg !179
  %691 = mul i32 1, %smax265, !dbg !179
  %692 = add i32 0, %691, !dbg !179
  %693 = mul i32 1, %692, !dbg !179
  %694 = add i32 %690, %693, !dbg !179
  %695 = sext i32 %694 to i64, !dbg !179
  %696 = mul i64 4, %695, !dbg !179
  %scevgep266 = getelementptr float, float* %b, i64 %695, !dbg !179
  %697 = mul i32 %32, %smax265, !dbg !179
  %698 = add i32 %32, %697, !dbg !179
  %699 = mul i32 -1, %smax265, !dbg !179
  %700 = add i32 %33, %699, !dbg !179
  %701 = mul i32 %32, %700, !dbg !179
  %702 = add i32 %698, %701, !dbg !179
  %703 = sext i32 %702 to i64, !dbg !179
  %704 = mul i64 4, %703, !dbg !179
  %scevgep267 = getelementptr float, float* %b, i64 %703, !dbg !179
  %705 = icmp ugt float* %scevgep267, %scevgep266, !dbg !179
  %umax268 = select i1 %705, float* %scevgep267, float* %scevgep266, !dbg !179
  %706 = sext i32 %22 to i64, !dbg !179
  %707 = mul i64 4, %706, !dbg !179
  %scevgep222 = getelementptr float, float* %b, i64 %706, !dbg !179
  %708 = icmp ult float* %scevgep222, %scevgep221, !dbg !179
  %umin223 = select i1 %708, float* %scevgep222, float* %scevgep221, !dbg !179
  %709 = icmp sgt i32 %s, 0, !dbg !179
  %smax224 = select i1 %709, i32 %s, i32 0, !dbg !179
  %710 = mul i32 %s, %smax224, !dbg !179
  %711 = add i32 0, %710, !dbg !179
  %712 = mul i32 1, %smax224, !dbg !179
  %713 = add i32 0, %712, !dbg !179
  %714 = mul i32 1, %713, !dbg !179
  %715 = add i32 %711, %714, !dbg !179
  %716 = sext i32 %715 to i64, !dbg !179
  %717 = mul i64 4, %716, !dbg !179
  %scevgep225 = getelementptr float, float* %b, i64 %716, !dbg !179
  %718 = mul i32 %23, %smax224, !dbg !179
  %719 = add i32 %23, %718, !dbg !179
  %720 = mul i32 -1, %smax224, !dbg !179
  %721 = add i32 %24, %720, !dbg !179
  %722 = mul i32 %23, %721, !dbg !179
  %723 = add i32 %719, %722, !dbg !179
  %724 = sext i32 %723 to i64, !dbg !179
  %725 = mul i64 4, %724, !dbg !179
  %scevgep226 = getelementptr float, float* %b, i64 %724, !dbg !179
  %726 = icmp ugt float* %scevgep226, %scevgep225, !dbg !179
  %umax227 = select i1 %726, float* %scevgep226, float* %scevgep225, !dbg !179
  %cmp29 = icmp slt i32 %j.1, %k.0, !dbg !179
  br i1 %cmp29, label %for.body.30, label %for.end.43, !dbg !219

for.body.30:                                      ; preds = %for.cond.28
  %mul31 = mul nsw i32 %k.0, %s, !dbg !220
  %add32 = add nsw i32 %mul31, %j.1, !dbg !222
  %idxprom33 = sext i32 %add32 to i64, !dbg !223
  %arrayidx34 = getelementptr inbounds float, float* %b, i64 %idxprom33, !dbg !223
  %tmp3 = load float, float* %arrayidx34, align 4, !dbg !223
  %mul35 = mul nsw i32 %i.1, %s, !dbg !224
  %add36 = add nsw i32 %mul35, %i.1, !dbg !225
  %idxprom37 = sext i32 %add36 to i64, !dbg !226
  %arrayidx38 = getelementptr inbounds float, float* %b, i64 %idxprom37, !dbg !226
  %tmp4 = load float, float* %arrayidx38, align 4, !dbg !226
  %mul39 = fmul float %tmp3, %tmp4, !dbg !227
  %add40 = fadd float %sum.1, %mul39, !dbg !228
  br label %for.inc.41, !dbg !229

for.inc.41:                                       ; preds = %for.body.30
  %inc42 = add nsw i32 %j.1, 1, !dbg !230
  br label %for.cond.28, !dbg !231

for.end.43:                                       ; preds = %for.cond.28
  %sum.1.lcssa = phi float [ %sum.1, %for.cond.28 ]
  %mul44 = mul nsw i32 %k.0, %s, !dbg !232
  %add45 = add nsw i32 %mul44, %i.1, !dbg !233
  %idxprom46 = sext i32 %add45 to i64, !dbg !234
  %arrayidx47 = getelementptr inbounds float, float* %a, i64 %idxprom46, !dbg !234
  %tmp5 = load float, float* %arrayidx47, align 4, !dbg !234
  %sub48 = fsub float %tmp5, %sum.1.lcssa, !dbg !235
  %mul49 = mul nsw i32 %k.0, %s, !dbg !236
  %add50 = add nsw i32 %mul49, %k.0, !dbg !237
  %idxprom51 = sext i32 %add50 to i64, !dbg !238
  %arrayidx52 = getelementptr inbounds float, float* %b, i64 %idxprom51, !dbg !238
  %tmp6 = load float, float* %arrayidx52, align 4, !dbg !238
  %div = fdiv float %sub48, %tmp6, !dbg !239
  %mul53 = mul nsw i32 %k.0, %s, !dbg !240
  %add54 = add nsw i32 %mul53, %i.1, !dbg !241
  %idxprom55 = sext i32 %add54 to i64, !dbg !242
  %arrayidx56 = getelementptr inbounds float, float* %b, i64 %idxprom55, !dbg !242
  store float %div, float* %arrayidx56, align 4, !dbg !243
  br label %for.inc.57, !dbg !244

for.inc.57:                                       ; preds = %for.end.43
  %inc58 = add nsw i32 %i.1, 1, !dbg !245
  br label %for.cond.25, !dbg !246

for.end.59:                                       ; preds = %for.cond.25
  br label %for.inc.60, !dbg !247

for.inc.60:                                       ; preds = %for.end.59
  %inc61 = add nsw i32 %k.0, 1, !dbg !248
  br label %for.cond, !dbg !249

for.end.62:                                       ; preds = %for.cond
  ret void, !dbg !250
}

; Function Attrs: nounwind uwtable
define void @Crout_CPU(i32 %s, float* %a, float* %b) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %k.0, i64 0, metadata !251, metadata !42), !dbg !252
  call void @llvm.dbg.value(metadata i32 %add24, i64 0, metadata !253, metadata !42), !dbg !254
  call void @llvm.dbg.value(metadata i32 %inc61, i64 0, metadata !255, metadata !42), !dbg !256
  call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !257, metadata !42), !dbg !258
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !251, metadata !42), !dbg !252
  call void @llvm.dbg.value(metadata i32 %inc58, i64 0, metadata !253, metadata !42), !dbg !254
  call void @llvm.dbg.value(metadata float %add40, i64 0, metadata !257, metadata !42), !dbg !258
  call void @llvm.dbg.value(metadata i32 %inc42, i64 0, metadata !251, metadata !42), !dbg !252
  call void @llvm.dbg.value(metadata float 0.000000e+00, i64 0, metadata !257, metadata !42), !dbg !258
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !253, metadata !42), !dbg !254
  call void @llvm.dbg.value(metadata i32 %inc22, i64 0, metadata !251, metadata !42), !dbg !252
  call void @llvm.dbg.value(metadata float %add12, i64 0, metadata !257, metadata !42), !dbg !258
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !253, metadata !42), !dbg !254
  call void @llvm.dbg.value(metadata i32 %s, i64 0, metadata !259, metadata !42), !dbg !260
  call void @llvm.dbg.value(metadata float* %a, i64 0, metadata !261, metadata !42), !dbg !262
  call void @llvm.dbg.value(metadata float* %b, i64 0, metadata !263, metadata !42), !dbg !264
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !255, metadata !42), !dbg !256
  %scevgep = getelementptr float, float* %a, i64 0, !dbg !265
  %scevgep7 = getelementptr float, float* %a, i64 1, !dbg !265
  %0 = add i32 %s, 1, !dbg !267
  %1 = add i32 %s, -1, !dbg !267
  %scevgep11 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep12 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep14 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep16 = getelementptr float, float* %b, i64 0, !dbg !265
  %2 = add i32 %s, 1, !dbg !267
  %scevgep20 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep22 = getelementptr float, float* %b, i64 1, !dbg !265
  %scevgep37 = getelementptr float, float* %a, i64 0, !dbg !265
  %scevgep38 = getelementptr float, float* %a, i64 1, !dbg !265
  %3 = add i32 %s, 1, !dbg !267
  %4 = add i32 %s, -1, !dbg !267
  %scevgep45 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep46 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep48 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep50 = getelementptr float, float* %b, i64 0, !dbg !265
  %5 = add i32 %s, 1, !dbg !267
  %scevgep54 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep56 = getelementptr float, float* %b, i64 1, !dbg !265
  %scevgep71 = getelementptr float, float* %a, i64 0, !dbg !265
  %6 = add i32 %s, 1, !dbg !269
  %scevgep75 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep76 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep78 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep85 = getelementptr float, float* %a, i64 0, !dbg !265
  %scevgep86 = getelementptr float, float* %a, i64 1, !dbg !265
  %7 = add i32 %s, 1, !dbg !267
  %8 = add i32 %s, -1, !dbg !267
  %scevgep93 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep94 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep96 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep98 = getelementptr float, float* %b, i64 0, !dbg !265
  %9 = add i32 %s, 1, !dbg !267
  %scevgep102 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep104 = getelementptr float, float* %b, i64 1, !dbg !265
  %scevgep119 = getelementptr float, float* %a, i64 1, !dbg !265
  %10 = add i32 %s, 1, !dbg !273
  %11 = add i32 %s, -1, !dbg !273
  %scevgep122 = getelementptr float, float* %b, i64 0, !dbg !265
  %12 = add i32 %s, 1, !dbg !273
  %scevgep125 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep127 = getelementptr float, float* %b, i64 1, !dbg !265
  %scevgep136 = getelementptr float, float* %a, i64 0, !dbg !265
  %scevgep137 = getelementptr float, float* %a, i64 1, !dbg !265
  %13 = add i32 %s, 1, !dbg !267
  %14 = add i32 %s, -1, !dbg !267
  %scevgep144 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep145 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep147 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep149 = getelementptr float, float* %b, i64 0, !dbg !265
  %15 = add i32 %s, 1, !dbg !267
  %scevgep153 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep155 = getelementptr float, float* %b, i64 1, !dbg !265
  %scevgep170 = getelementptr float, float* %a, i64 0, !dbg !265
  %scevgep171 = getelementptr float, float* %a, i64 1, !dbg !265
  %16 = add i32 %s, 1, !dbg !267
  %17 = add i32 %s, -1, !dbg !267
  %scevgep178 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep179 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep181 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep183 = getelementptr float, float* %b, i64 0, !dbg !265
  %18 = add i32 %s, 1, !dbg !267
  %scevgep187 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep189 = getelementptr float, float* %b, i64 1, !dbg !265
  %scevgep204 = getelementptr float, float* %a, i64 1, !dbg !265
  %19 = add i32 %s, 1, !dbg !273
  %20 = add i32 %s, -1, !dbg !273
  %scevgep207 = getelementptr float, float* %b, i64 0, !dbg !265
  %21 = add i32 %s, 1, !dbg !273
  %scevgep210 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep212 = getelementptr float, float* %b, i64 1, !dbg !265
  %scevgep221 = getelementptr float, float* %b, i64 0, !dbg !265
  %22 = add i32 %s, 1, !dbg !276
  %23 = add i32 %s, 1, !dbg !276
  %24 = add i32 %s, -1, !dbg !276
  %scevgep228 = getelementptr float, float* %a, i64 1, !dbg !265
  %25 = add i32 %s, 1, !dbg !273
  %26 = add i32 %s, -1, !dbg !273
  %scevgep231 = getelementptr float, float* %b, i64 0, !dbg !265
  %27 = add i32 %s, 1, !dbg !273
  %scevgep234 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep236 = getelementptr float, float* %b, i64 1, !dbg !265
  %scevgep245 = getelementptr float, float* %a, i64 1, !dbg !265
  %28 = add i32 %s, 1, !dbg !273
  %29 = add i32 %s, -1, !dbg !273
  %scevgep248 = getelementptr float, float* %b, i64 0, !dbg !265
  %30 = add i32 %s, 1, !dbg !273
  %scevgep251 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep253 = getelementptr float, float* %b, i64 1, !dbg !265
  %scevgep262 = getelementptr float, float* %b, i64 0, !dbg !265
  %31 = add i32 %s, 1, !dbg !276
  %32 = add i32 %s, 1, !dbg !276
  %33 = add i32 %s, -1, !dbg !276
  %scevgep269 = getelementptr float, float* %b, i64 0, !dbg !265
  %34 = add i32 %s, 1, !dbg !276
  %35 = add i32 %s, 1, !dbg !276
  %36 = add i32 %s, -1, !dbg !276
  %scevgep276 = getelementptr float, float* %a, i64 0, !dbg !265
  %37 = add i32 %s, 1, !dbg !269
  %scevgep280 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep281 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep283 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep290 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep291 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep298 = getelementptr float, float* %a, i64 0, !dbg !265
  %38 = add i32 %s, 1, !dbg !269
  %scevgep302 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep303 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep305 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep312 = getelementptr float, float* %a, i64 0, !dbg !265
  %39 = add i32 %s, 1, !dbg !269
  %scevgep316 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep317 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep319 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep326 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep327 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep334 = getelementptr float, float* %b, i64 0, !dbg !265
  %scevgep335 = getelementptr float, float* %b, i64 0, !dbg !265
  br label %for.cond, !dbg !265

for.cond:                                         ; preds = %for.inc.60, %entry
  %k.0 = phi i32 [ 0, %entry ], [ %inc61, %for.inc.60 ]
  %40 = icmp ult float* %scevgep171, %scevgep170, !dbg !267
  %umin172 = select i1 %40, float* %scevgep171, float* %scevgep170, !dbg !267
  %41 = icmp sgt i32 %s, 0, !dbg !267
  %smax173 = select i1 %41, i32 %s, i32 0, !dbg !267
  %42 = mul i32 %16, %smax173, !dbg !267
  %43 = add i32 0, %42, !dbg !267
  %44 = mul i32 -1, %smax173, !dbg !267
  %45 = add i32 0, %44, !dbg !267
  %46 = mul i32 1, %smax173, !dbg !267
  %47 = add i32 0, %46, !dbg !267
  %48 = icmp sgt i32 %s, %47, !dbg !267
  %smax174 = select i1 %48, i32 %s, i32 %47, !dbg !267
  %49 = add i32 %smax174, %45, !dbg !267
  %50 = mul i32 %s, %49, !dbg !267
  %51 = add i32 %43, %50, !dbg !267
  %52 = sext i32 %51 to i64, !dbg !267
  %53 = mul i64 4, %52, !dbg !267
  %scevgep175 = getelementptr float, float* %a, i64 %52, !dbg !267
  %54 = mul i32 %16, %smax173, !dbg !267
  %55 = add i32 1, %54, !dbg !267
  %56 = mul i32 -1, %smax173, !dbg !267
  %57 = add i32 %17, %56, !dbg !267
  %58 = mul i32 1, %57, !dbg !267
  %59 = add i32 %55, %58, !dbg !267
  %60 = sext i32 %59 to i64, !dbg !267
  %61 = mul i64 4, %60, !dbg !267
  %scevgep176 = getelementptr float, float* %a, i64 %60, !dbg !267
  %62 = icmp ugt float* %scevgep176, %scevgep175, !dbg !267
  %umax177 = select i1 %62, float* %scevgep176, float* %scevgep175, !dbg !267
  %63 = icmp ult float* %scevgep179, %scevgep178, !dbg !267
  %umin180 = select i1 %63, float* %scevgep179, float* %scevgep178, !dbg !267
  %64 = icmp ult float* %scevgep181, %umin180, !dbg !267
  %umin182 = select i1 %64, float* %scevgep181, float* %umin180, !dbg !267
  %65 = icmp ult float* %scevgep183, %umin182, !dbg !267
  %umin184 = select i1 %65, float* %scevgep183, float* %umin182, !dbg !267
  %66 = sext i32 %18 to i64, !dbg !267
  %67 = mul i64 4, %66, !dbg !267
  %scevgep185 = getelementptr float, float* %b, i64 %66, !dbg !267
  %68 = icmp ult float* %scevgep185, %umin184, !dbg !267
  %umin186 = select i1 %68, float* %scevgep185, float* %umin184, !dbg !267
  %69 = icmp ult float* %scevgep187, %umin186, !dbg !267
  %umin188 = select i1 %69, float* %scevgep187, float* %umin186, !dbg !267
  %70 = icmp ult float* %scevgep189, %umin188, !dbg !267
  %umin190 = select i1 %70, float* %scevgep189, float* %umin188, !dbg !267
  %71 = mul i32 %s, %smax173, !dbg !267
  %72 = add i32 0, %71, !dbg !267
  %73 = mul i32 %s, %49, !dbg !267
  %74 = add i32 %72, %73, !dbg !267
  %75 = mul i32 1, %47, !dbg !267
  %76 = add i32 %74, %75, !dbg !267
  %77 = sext i32 %76 to i64, !dbg !267
  %78 = mul i64 4, %77, !dbg !267
  %scevgep191 = getelementptr float, float* %b, i64 %77, !dbg !267
  %79 = mul i32 %s, %47, !dbg !267
  %80 = add i32 %47, %79, !dbg !267
  %81 = sext i32 %80 to i64, !dbg !267
  %82 = mul i64 4, %81, !dbg !267
  %scevgep192 = getelementptr float, float* %b, i64 %81, !dbg !267
  %83 = icmp ugt float* %scevgep192, %scevgep191, !dbg !267
  %umax193 = select i1 %83, float* %scevgep192, float* %scevgep191, !dbg !267
  %scevgep194 = getelementptr float, float* %b, i64 %52, !dbg !267
  %84 = icmp ugt float* %scevgep194, %umax193, !dbg !267
  %umax195 = select i1 %84, float* %scevgep194, float* %umax193, !dbg !267
  %85 = mul i32 1, %47, !dbg !267
  %86 = add i32 %72, %85, !dbg !267
  %87 = sext i32 %86 to i64, !dbg !267
  %88 = mul i64 4, %87, !dbg !267
  %scevgep196 = getelementptr float, float* %b, i64 %87, !dbg !267
  %89 = icmp ugt float* %scevgep196, %umax195, !dbg !267
  %umax197 = select i1 %89, float* %scevgep196, float* %umax195, !dbg !267
  %90 = mul i32 %16, %smax173, !dbg !267
  %91 = add i32 %16, %90, !dbg !267
  %92 = mul i32 %16, %57, !dbg !267
  %93 = add i32 %91, %92, !dbg !267
  %94 = sext i32 %93 to i64, !dbg !267
  %95 = mul i64 4, %94, !dbg !267
  %scevgep198 = getelementptr float, float* %b, i64 %94, !dbg !267
  %96 = icmp ugt float* %scevgep198, %umax197, !dbg !267
  %umax199 = select i1 %96, float* %scevgep198, float* %umax197, !dbg !267
  %97 = sext i32 %43 to i64, !dbg !267
  %98 = mul i64 4, %97, !dbg !267
  %scevgep200 = getelementptr float, float* %b, i64 %97, !dbg !267
  %99 = icmp ugt float* %scevgep200, %umax199, !dbg !267
  %umax201 = select i1 %99, float* %scevgep200, float* %umax199, !dbg !267
  %scevgep202 = getelementptr float, float* %b, i64 %60, !dbg !267
  %100 = icmp ugt float* %scevgep202, %umax201, !dbg !267
  %umax203 = select i1 %100, float* %scevgep202, float* %umax201, !dbg !267
  %101 = icmp ult float* %scevgep137, %scevgep136, !dbg !267
  %umin138 = select i1 %101, float* %scevgep137, float* %scevgep136, !dbg !267
  %102 = icmp sgt i32 %s, 0, !dbg !267
  %smax139 = select i1 %102, i32 %s, i32 0, !dbg !267
  %103 = mul i32 %13, %smax139, !dbg !267
  %104 = add i32 0, %103, !dbg !267
  %105 = mul i32 -1, %smax139, !dbg !267
  %106 = add i32 0, %105, !dbg !267
  %107 = mul i32 1, %smax139, !dbg !267
  %108 = add i32 0, %107, !dbg !267
  %109 = icmp sgt i32 %s, %108, !dbg !267
  %smax140 = select i1 %109, i32 %s, i32 %108, !dbg !267
  %110 = add i32 %smax140, %106, !dbg !267
  %111 = mul i32 %s, %110, !dbg !267
  %112 = add i32 %104, %111, !dbg !267
  %113 = sext i32 %112 to i64, !dbg !267
  %114 = mul i64 4, %113, !dbg !267
  %scevgep141 = getelementptr float, float* %a, i64 %113, !dbg !267
  %115 = mul i32 %13, %smax139, !dbg !267
  %116 = add i32 1, %115, !dbg !267
  %117 = mul i32 -1, %smax139, !dbg !267
  %118 = add i32 %14, %117, !dbg !267
  %119 = mul i32 1, %118, !dbg !267
  %120 = add i32 %116, %119, !dbg !267
  %121 = sext i32 %120 to i64, !dbg !267
  %122 = mul i64 4, %121, !dbg !267
  %scevgep142 = getelementptr float, float* %a, i64 %121, !dbg !267
  %123 = icmp ugt float* %scevgep142, %scevgep141, !dbg !267
  %umax143 = select i1 %123, float* %scevgep142, float* %scevgep141, !dbg !267
  %124 = icmp ult float* %scevgep145, %scevgep144, !dbg !267
  %umin146 = select i1 %124, float* %scevgep145, float* %scevgep144, !dbg !267
  %125 = icmp ult float* %scevgep147, %umin146, !dbg !267
  %umin148 = select i1 %125, float* %scevgep147, float* %umin146, !dbg !267
  %126 = icmp ult float* %scevgep149, %umin148, !dbg !267
  %umin150 = select i1 %126, float* %scevgep149, float* %umin148, !dbg !267
  %127 = sext i32 %15 to i64, !dbg !267
  %128 = mul i64 4, %127, !dbg !267
  %scevgep151 = getelementptr float, float* %b, i64 %127, !dbg !267
  %129 = icmp ult float* %scevgep151, %umin150, !dbg !267
  %umin152 = select i1 %129, float* %scevgep151, float* %umin150, !dbg !267
  %130 = icmp ult float* %scevgep153, %umin152, !dbg !267
  %umin154 = select i1 %130, float* %scevgep153, float* %umin152, !dbg !267
  %131 = icmp ult float* %scevgep155, %umin154, !dbg !267
  %umin156 = select i1 %131, float* %scevgep155, float* %umin154, !dbg !267
  %132 = mul i32 %s, %smax139, !dbg !267
  %133 = add i32 0, %132, !dbg !267
  %134 = mul i32 %s, %110, !dbg !267
  %135 = add i32 %133, %134, !dbg !267
  %136 = mul i32 1, %108, !dbg !267
  %137 = add i32 %135, %136, !dbg !267
  %138 = sext i32 %137 to i64, !dbg !267
  %139 = mul i64 4, %138, !dbg !267
  %scevgep157 = getelementptr float, float* %b, i64 %138, !dbg !267
  %140 = mul i32 %s, %108, !dbg !267
  %141 = add i32 %108, %140, !dbg !267
  %142 = sext i32 %141 to i64, !dbg !267
  %143 = mul i64 4, %142, !dbg !267
  %scevgep158 = getelementptr float, float* %b, i64 %142, !dbg !267
  %144 = icmp ugt float* %scevgep158, %scevgep157, !dbg !267
  %umax159 = select i1 %144, float* %scevgep158, float* %scevgep157, !dbg !267
  %scevgep160 = getelementptr float, float* %b, i64 %113, !dbg !267
  %145 = icmp ugt float* %scevgep160, %umax159, !dbg !267
  %umax161 = select i1 %145, float* %scevgep160, float* %umax159, !dbg !267
  %146 = mul i32 1, %108, !dbg !267
  %147 = add i32 %133, %146, !dbg !267
  %148 = sext i32 %147 to i64, !dbg !267
  %149 = mul i64 4, %148, !dbg !267
  %scevgep162 = getelementptr float, float* %b, i64 %148, !dbg !267
  %150 = icmp ugt float* %scevgep162, %umax161, !dbg !267
  %umax163 = select i1 %150, float* %scevgep162, float* %umax161, !dbg !267
  %151 = mul i32 %13, %smax139, !dbg !267
  %152 = add i32 %13, %151, !dbg !267
  %153 = mul i32 %13, %118, !dbg !267
  %154 = add i32 %152, %153, !dbg !267
  %155 = sext i32 %154 to i64, !dbg !267
  %156 = mul i64 4, %155, !dbg !267
  %scevgep164 = getelementptr float, float* %b, i64 %155, !dbg !267
  %157 = icmp ugt float* %scevgep164, %umax163, !dbg !267
  %umax165 = select i1 %157, float* %scevgep164, float* %umax163, !dbg !267
  %158 = sext i32 %104 to i64, !dbg !267
  %159 = mul i64 4, %158, !dbg !267
  %scevgep166 = getelementptr float, float* %b, i64 %158, !dbg !267
  %160 = icmp ugt float* %scevgep166, %umax165, !dbg !267
  %umax167 = select i1 %160, float* %scevgep166, float* %umax165, !dbg !267
  %scevgep168 = getelementptr float, float* %b, i64 %121, !dbg !267
  %161 = icmp ugt float* %scevgep168, %umax167, !dbg !267
  %umax169 = select i1 %161, float* %scevgep168, float* %umax167, !dbg !267
  %162 = icmp ult float* %scevgep86, %scevgep85, !dbg !267
  %umin87 = select i1 %162, float* %scevgep86, float* %scevgep85, !dbg !267
  %163 = icmp sgt i32 %s, 0, !dbg !267
  %smax88 = select i1 %163, i32 %s, i32 0, !dbg !267
  %164 = mul i32 %7, %smax88, !dbg !267
  %165 = add i32 0, %164, !dbg !267
  %166 = mul i32 -1, %smax88, !dbg !267
  %167 = add i32 0, %166, !dbg !267
  %168 = mul i32 1, %smax88, !dbg !267
  %169 = add i32 0, %168, !dbg !267
  %170 = icmp sgt i32 %s, %169, !dbg !267
  %smax89 = select i1 %170, i32 %s, i32 %169, !dbg !267
  %171 = add i32 %smax89, %167, !dbg !267
  %172 = mul i32 %s, %171, !dbg !267
  %173 = add i32 %165, %172, !dbg !267
  %174 = sext i32 %173 to i64, !dbg !267
  %175 = mul i64 4, %174, !dbg !267
  %scevgep90 = getelementptr float, float* %a, i64 %174, !dbg !267
  %176 = mul i32 %7, %smax88, !dbg !267
  %177 = add i32 1, %176, !dbg !267
  %178 = mul i32 -1, %smax88, !dbg !267
  %179 = add i32 %8, %178, !dbg !267
  %180 = mul i32 1, %179, !dbg !267
  %181 = add i32 %177, %180, !dbg !267
  %182 = sext i32 %181 to i64, !dbg !267
  %183 = mul i64 4, %182, !dbg !267
  %scevgep91 = getelementptr float, float* %a, i64 %182, !dbg !267
  %184 = icmp ugt float* %scevgep91, %scevgep90, !dbg !267
  %umax92 = select i1 %184, float* %scevgep91, float* %scevgep90, !dbg !267
  %185 = icmp ult float* %scevgep94, %scevgep93, !dbg !267
  %umin95 = select i1 %185, float* %scevgep94, float* %scevgep93, !dbg !267
  %186 = icmp ult float* %scevgep96, %umin95, !dbg !267
  %umin97 = select i1 %186, float* %scevgep96, float* %umin95, !dbg !267
  %187 = icmp ult float* %scevgep98, %umin97, !dbg !267
  %umin99 = select i1 %187, float* %scevgep98, float* %umin97, !dbg !267
  %188 = sext i32 %9 to i64, !dbg !267
  %189 = mul i64 4, %188, !dbg !267
  %scevgep100 = getelementptr float, float* %b, i64 %188, !dbg !267
  %190 = icmp ult float* %scevgep100, %umin99, !dbg !267
  %umin101 = select i1 %190, float* %scevgep100, float* %umin99, !dbg !267
  %191 = icmp ult float* %scevgep102, %umin101, !dbg !267
  %umin103 = select i1 %191, float* %scevgep102, float* %umin101, !dbg !267
  %192 = icmp ult float* %scevgep104, %umin103, !dbg !267
  %umin105 = select i1 %192, float* %scevgep104, float* %umin103, !dbg !267
  %193 = mul i32 %s, %smax88, !dbg !267
  %194 = add i32 0, %193, !dbg !267
  %195 = mul i32 %s, %171, !dbg !267
  %196 = add i32 %194, %195, !dbg !267
  %197 = mul i32 1, %169, !dbg !267
  %198 = add i32 %196, %197, !dbg !267
  %199 = sext i32 %198 to i64, !dbg !267
  %200 = mul i64 4, %199, !dbg !267
  %scevgep106 = getelementptr float, float* %b, i64 %199, !dbg !267
  %201 = mul i32 %s, %169, !dbg !267
  %202 = add i32 %169, %201, !dbg !267
  %203 = sext i32 %202 to i64, !dbg !267
  %204 = mul i64 4, %203, !dbg !267
  %scevgep107 = getelementptr float, float* %b, i64 %203, !dbg !267
  %205 = icmp ugt float* %scevgep107, %scevgep106, !dbg !267
  %umax108 = select i1 %205, float* %scevgep107, float* %scevgep106, !dbg !267
  %scevgep109 = getelementptr float, float* %b, i64 %174, !dbg !267
  %206 = icmp ugt float* %scevgep109, %umax108, !dbg !267
  %umax110 = select i1 %206, float* %scevgep109, float* %umax108, !dbg !267
  %207 = mul i32 1, %169, !dbg !267
  %208 = add i32 %194, %207, !dbg !267
  %209 = sext i32 %208 to i64, !dbg !267
  %210 = mul i64 4, %209, !dbg !267
  %scevgep111 = getelementptr float, float* %b, i64 %209, !dbg !267
  %211 = icmp ugt float* %scevgep111, %umax110, !dbg !267
  %umax112 = select i1 %211, float* %scevgep111, float* %umax110, !dbg !267
  %212 = mul i32 %7, %smax88, !dbg !267
  %213 = add i32 %7, %212, !dbg !267
  %214 = mul i32 %7, %179, !dbg !267
  %215 = add i32 %213, %214, !dbg !267
  %216 = sext i32 %215 to i64, !dbg !267
  %217 = mul i64 4, %216, !dbg !267
  %scevgep113 = getelementptr float, float* %b, i64 %216, !dbg !267
  %218 = icmp ugt float* %scevgep113, %umax112, !dbg !267
  %umax114 = select i1 %218, float* %scevgep113, float* %umax112, !dbg !267
  %219 = sext i32 %165 to i64, !dbg !267
  %220 = mul i64 4, %219, !dbg !267
  %scevgep115 = getelementptr float, float* %b, i64 %219, !dbg !267
  %221 = icmp ugt float* %scevgep115, %umax114, !dbg !267
  %umax116 = select i1 %221, float* %scevgep115, float* %umax114, !dbg !267
  %scevgep117 = getelementptr float, float* %b, i64 %182, !dbg !267
  %222 = icmp ugt float* %scevgep117, %umax116, !dbg !267
  %umax118 = select i1 %222, float* %scevgep117, float* %umax116, !dbg !267
  %223 = icmp ult float* %scevgep38, %scevgep37, !dbg !267
  %umin39 = select i1 %223, float* %scevgep38, float* %scevgep37, !dbg !267
  %224 = icmp sgt i32 %s, 0, !dbg !267
  %smax40 = select i1 %224, i32 %s, i32 0, !dbg !267
  %225 = mul i32 %3, %smax40, !dbg !267
  %226 = add i32 0, %225, !dbg !267
  %227 = mul i32 -1, %smax40, !dbg !267
  %228 = add i32 0, %227, !dbg !267
  %229 = mul i32 1, %smax40, !dbg !267
  %230 = add i32 0, %229, !dbg !267
  %231 = icmp sgt i32 %s, %230, !dbg !267
  %smax41 = select i1 %231, i32 %s, i32 %230, !dbg !267
  %232 = add i32 %smax41, %228, !dbg !267
  %233 = mul i32 %s, %232, !dbg !267
  %234 = add i32 %226, %233, !dbg !267
  %235 = sext i32 %234 to i64, !dbg !267
  %236 = mul i64 4, %235, !dbg !267
  %scevgep42 = getelementptr float, float* %a, i64 %235, !dbg !267
  %237 = mul i32 %3, %smax40, !dbg !267
  %238 = add i32 1, %237, !dbg !267
  %239 = mul i32 -1, %smax40, !dbg !267
  %240 = add i32 %4, %239, !dbg !267
  %241 = mul i32 1, %240, !dbg !267
  %242 = add i32 %238, %241, !dbg !267
  %243 = sext i32 %242 to i64, !dbg !267
  %244 = mul i64 4, %243, !dbg !267
  %scevgep43 = getelementptr float, float* %a, i64 %243, !dbg !267
  %245 = icmp ugt float* %scevgep43, %scevgep42, !dbg !267
  %umax44 = select i1 %245, float* %scevgep43, float* %scevgep42, !dbg !267
  %246 = icmp ult float* %scevgep46, %scevgep45, !dbg !267
  %umin47 = select i1 %246, float* %scevgep46, float* %scevgep45, !dbg !267
  %247 = icmp ult float* %scevgep48, %umin47, !dbg !267
  %umin49 = select i1 %247, float* %scevgep48, float* %umin47, !dbg !267
  %248 = icmp ult float* %scevgep50, %umin49, !dbg !267
  %umin51 = select i1 %248, float* %scevgep50, float* %umin49, !dbg !267
  %249 = sext i32 %5 to i64, !dbg !267
  %250 = mul i64 4, %249, !dbg !267
  %scevgep52 = getelementptr float, float* %b, i64 %249, !dbg !267
  %251 = icmp ult float* %scevgep52, %umin51, !dbg !267
  %umin53 = select i1 %251, float* %scevgep52, float* %umin51, !dbg !267
  %252 = icmp ult float* %scevgep54, %umin53, !dbg !267
  %umin55 = select i1 %252, float* %scevgep54, float* %umin53, !dbg !267
  %253 = icmp ult float* %scevgep56, %umin55, !dbg !267
  %umin57 = select i1 %253, float* %scevgep56, float* %umin55, !dbg !267
  %254 = mul i32 %s, %smax40, !dbg !267
  %255 = add i32 0, %254, !dbg !267
  %256 = mul i32 %s, %232, !dbg !267
  %257 = add i32 %255, %256, !dbg !267
  %258 = mul i32 1, %230, !dbg !267
  %259 = add i32 %257, %258, !dbg !267
  %260 = sext i32 %259 to i64, !dbg !267
  %261 = mul i64 4, %260, !dbg !267
  %scevgep58 = getelementptr float, float* %b, i64 %260, !dbg !267
  %262 = mul i32 %s, %230, !dbg !267
  %263 = add i32 %230, %262, !dbg !267
  %264 = sext i32 %263 to i64, !dbg !267
  %265 = mul i64 4, %264, !dbg !267
  %scevgep59 = getelementptr float, float* %b, i64 %264, !dbg !267
  %266 = icmp ugt float* %scevgep59, %scevgep58, !dbg !267
  %umax60 = select i1 %266, float* %scevgep59, float* %scevgep58, !dbg !267
  %scevgep61 = getelementptr float, float* %b, i64 %235, !dbg !267
  %267 = icmp ugt float* %scevgep61, %umax60, !dbg !267
  %umax62 = select i1 %267, float* %scevgep61, float* %umax60, !dbg !267
  %268 = mul i32 1, %230, !dbg !267
  %269 = add i32 %255, %268, !dbg !267
  %270 = sext i32 %269 to i64, !dbg !267
  %271 = mul i64 4, %270, !dbg !267
  %scevgep63 = getelementptr float, float* %b, i64 %270, !dbg !267
  %272 = icmp ugt float* %scevgep63, %umax62, !dbg !267
  %umax64 = select i1 %272, float* %scevgep63, float* %umax62, !dbg !267
  %273 = mul i32 %3, %smax40, !dbg !267
  %274 = add i32 %3, %273, !dbg !267
  %275 = mul i32 %3, %240, !dbg !267
  %276 = add i32 %274, %275, !dbg !267
  %277 = sext i32 %276 to i64, !dbg !267
  %278 = mul i64 4, %277, !dbg !267
  %scevgep65 = getelementptr float, float* %b, i64 %277, !dbg !267
  %279 = icmp ugt float* %scevgep65, %umax64, !dbg !267
  %umax66 = select i1 %279, float* %scevgep65, float* %umax64, !dbg !267
  %280 = sext i32 %226 to i64, !dbg !267
  %281 = mul i64 4, %280, !dbg !267
  %scevgep67 = getelementptr float, float* %b, i64 %280, !dbg !267
  %282 = icmp ugt float* %scevgep67, %umax66, !dbg !267
  %umax68 = select i1 %282, float* %scevgep67, float* %umax66, !dbg !267
  %scevgep69 = getelementptr float, float* %b, i64 %243, !dbg !267
  %283 = icmp ugt float* %scevgep69, %umax68, !dbg !267
  %umax70 = select i1 %283, float* %scevgep69, float* %umax68, !dbg !267
  %284 = icmp ult float* %scevgep7, %scevgep, !dbg !267
  %umin = select i1 %284, float* %scevgep7, float* %scevgep, !dbg !267
  %285 = icmp sgt i32 %s, 0, !dbg !267
  %smax = select i1 %285, i32 %s, i32 0, !dbg !267
  %286 = mul i32 %0, %smax, !dbg !267
  %287 = add i32 0, %286, !dbg !267
  %288 = mul i32 -1, %smax, !dbg !267
  %289 = add i32 0, %288, !dbg !267
  %290 = mul i32 1, %smax, !dbg !267
  %291 = add i32 0, %290, !dbg !267
  %292 = icmp sgt i32 %s, %291, !dbg !267
  %smax8 = select i1 %292, i32 %s, i32 %291, !dbg !267
  %293 = add i32 %smax8, %289, !dbg !267
  %294 = mul i32 %s, %293, !dbg !267
  %295 = add i32 %287, %294, !dbg !267
  %296 = sext i32 %295 to i64, !dbg !267
  %297 = mul i64 4, %296, !dbg !267
  %scevgep9 = getelementptr float, float* %a, i64 %296, !dbg !267
  %298 = mul i32 %0, %smax, !dbg !267
  %299 = add i32 1, %298, !dbg !267
  %300 = mul i32 -1, %smax, !dbg !267
  %301 = add i32 %1, %300, !dbg !267
  %302 = mul i32 1, %301, !dbg !267
  %303 = add i32 %299, %302, !dbg !267
  %304 = sext i32 %303 to i64, !dbg !267
  %305 = mul i64 4, %304, !dbg !267
  %scevgep10 = getelementptr float, float* %a, i64 %304, !dbg !267
  %306 = icmp ugt float* %scevgep10, %scevgep9, !dbg !267
  %umax = select i1 %306, float* %scevgep10, float* %scevgep9, !dbg !267
  %307 = icmp ult float* %scevgep12, %scevgep11, !dbg !267
  %umin13 = select i1 %307, float* %scevgep12, float* %scevgep11, !dbg !267
  %308 = icmp ult float* %scevgep14, %umin13, !dbg !267
  %umin15 = select i1 %308, float* %scevgep14, float* %umin13, !dbg !267
  %309 = icmp ult float* %scevgep16, %umin15, !dbg !267
  %umin17 = select i1 %309, float* %scevgep16, float* %umin15, !dbg !267
  %310 = sext i32 %2 to i64, !dbg !267
  %311 = mul i64 4, %310, !dbg !267
  %scevgep18 = getelementptr float, float* %b, i64 %310, !dbg !267
  %312 = icmp ult float* %scevgep18, %umin17, !dbg !267
  %umin19 = select i1 %312, float* %scevgep18, float* %umin17, !dbg !267
  %313 = icmp ult float* %scevgep20, %umin19, !dbg !267
  %umin21 = select i1 %313, float* %scevgep20, float* %umin19, !dbg !267
  %314 = icmp ult float* %scevgep22, %umin21, !dbg !267
  %umin23 = select i1 %314, float* %scevgep22, float* %umin21, !dbg !267
  %315 = mul i32 %s, %smax, !dbg !267
  %316 = add i32 0, %315, !dbg !267
  %317 = mul i32 %s, %293, !dbg !267
  %318 = add i32 %316, %317, !dbg !267
  %319 = mul i32 1, %291, !dbg !267
  %320 = add i32 %318, %319, !dbg !267
  %321 = sext i32 %320 to i64, !dbg !267
  %322 = mul i64 4, %321, !dbg !267
  %scevgep24 = getelementptr float, float* %b, i64 %321, !dbg !267
  %323 = mul i32 %s, %291, !dbg !267
  %324 = add i32 %291, %323, !dbg !267
  %325 = sext i32 %324 to i64, !dbg !267
  %326 = mul i64 4, %325, !dbg !267
  %scevgep25 = getelementptr float, float* %b, i64 %325, !dbg !267
  %327 = icmp ugt float* %scevgep25, %scevgep24, !dbg !267
  %umax26 = select i1 %327, float* %scevgep25, float* %scevgep24, !dbg !267
  %scevgep27 = getelementptr float, float* %b, i64 %296, !dbg !267
  %328 = icmp ugt float* %scevgep27, %umax26, !dbg !267
  %umax28 = select i1 %328, float* %scevgep27, float* %umax26, !dbg !267
  %329 = mul i32 1, %291, !dbg !267
  %330 = add i32 %316, %329, !dbg !267
  %331 = sext i32 %330 to i64, !dbg !267
  %332 = mul i64 4, %331, !dbg !267
  %scevgep29 = getelementptr float, float* %b, i64 %331, !dbg !267
  %333 = icmp ugt float* %scevgep29, %umax28, !dbg !267
  %umax30 = select i1 %333, float* %scevgep29, float* %umax28, !dbg !267
  %334 = mul i32 %0, %smax, !dbg !267
  %335 = add i32 %0, %334, !dbg !267
  %336 = mul i32 %0, %301, !dbg !267
  %337 = add i32 %335, %336, !dbg !267
  %338 = sext i32 %337 to i64, !dbg !267
  %339 = mul i64 4, %338, !dbg !267
  %scevgep31 = getelementptr float, float* %b, i64 %338, !dbg !267
  %340 = icmp ugt float* %scevgep31, %umax30, !dbg !267
  %umax32 = select i1 %340, float* %scevgep31, float* %umax30, !dbg !267
  %341 = sext i32 %287 to i64, !dbg !267
  %342 = mul i64 4, %341, !dbg !267
  %scevgep33 = getelementptr float, float* %b, i64 %341, !dbg !267
  %343 = icmp ugt float* %scevgep33, %umax32, !dbg !267
  %umax34 = select i1 %343, float* %scevgep33, float* %umax32, !dbg !267
  %scevgep35 = getelementptr float, float* %b, i64 %304, !dbg !267
  %344 = icmp ugt float* %scevgep35, %umax34, !dbg !267
  %umax36 = select i1 %344, float* %scevgep35, float* %umax34, !dbg !267
  %cmp = icmp slt i32 %k.0, %s, !dbg !267
  br i1 %cmp, label %for.body, label %for.end.62, !dbg !280

for.body:                                         ; preds = %for.cond
  br label %for.cond.1, !dbg !281

for.cond.1:                                       ; preds = %for.inc.21, %for.body
  %j.0 = phi i32 [ %k.0, %for.body ], [ %inc22, %for.inc.21 ]
  %345 = icmp sgt i32 %s, 0, !dbg !269
  %smax313 = select i1 %345, i32 %s, i32 0, !dbg !269
  %346 = mul i32 %39, %smax313, !dbg !269
  %347 = add i32 0, %346, !dbg !269
  %348 = mul i32 -1, %smax313, !dbg !269
  %349 = add i32 0, %348, !dbg !269
  %350 = mul i32 1, %smax313, !dbg !269
  %351 = add i32 0, %350, !dbg !269
  %352 = icmp sgt i32 %s, %351, !dbg !269
  %smax314 = select i1 %352, i32 %s, i32 %351, !dbg !269
  %353 = add i32 %smax314, %349, !dbg !269
  %354 = mul i32 %s, %353, !dbg !269
  %355 = add i32 %347, %354, !dbg !269
  %356 = sext i32 %355 to i64, !dbg !269
  %357 = mul i64 4, %356, !dbg !269
  %scevgep315 = getelementptr float, float* %a, i64 %356, !dbg !269
  %358 = icmp ult float* %scevgep317, %scevgep316, !dbg !269
  %umin318 = select i1 %358, float* %scevgep317, float* %scevgep316, !dbg !269
  %359 = icmp ult float* %scevgep319, %umin318, !dbg !269
  %umin320 = select i1 %359, float* %scevgep319, float* %umin318, !dbg !269
  %360 = mul i32 %s, %smax313, !dbg !269
  %361 = add i32 0, %360, !dbg !269
  %362 = mul i32 %s, %353, !dbg !269
  %363 = add i32 %361, %362, !dbg !269
  %364 = mul i32 1, %351, !dbg !269
  %365 = add i32 %363, %364, !dbg !269
  %366 = sext i32 %365 to i64, !dbg !269
  %367 = mul i64 4, %366, !dbg !269
  %scevgep321 = getelementptr float, float* %b, i64 %366, !dbg !269
  %368 = mul i32 %s, %351, !dbg !269
  %369 = add i32 %351, %368, !dbg !269
  %370 = sext i32 %369 to i64, !dbg !269
  %371 = mul i64 4, %370, !dbg !269
  %scevgep322 = getelementptr float, float* %b, i64 %370, !dbg !269
  %372 = icmp ugt float* %scevgep322, %scevgep321, !dbg !269
  %umax323 = select i1 %372, float* %scevgep322, float* %scevgep321, !dbg !269
  %scevgep324 = getelementptr float, float* %b, i64 %356, !dbg !269
  %373 = icmp ugt float* %scevgep324, %umax323, !dbg !269
  %umax325 = select i1 %373, float* %scevgep324, float* %umax323, !dbg !269
  %374 = icmp sgt i32 %s, 0, !dbg !269
  %smax299 = select i1 %374, i32 %s, i32 0, !dbg !269
  %375 = mul i32 %38, %smax299, !dbg !269
  %376 = add i32 0, %375, !dbg !269
  %377 = mul i32 -1, %smax299, !dbg !269
  %378 = add i32 0, %377, !dbg !269
  %379 = mul i32 1, %smax299, !dbg !269
  %380 = add i32 0, %379, !dbg !269
  %381 = icmp sgt i32 %s, %380, !dbg !269
  %smax300 = select i1 %381, i32 %s, i32 %380, !dbg !269
  %382 = add i32 %smax300, %378, !dbg !269
  %383 = mul i32 %s, %382, !dbg !269
  %384 = add i32 %376, %383, !dbg !269
  %385 = sext i32 %384 to i64, !dbg !269
  %386 = mul i64 4, %385, !dbg !269
  %scevgep301 = getelementptr float, float* %a, i64 %385, !dbg !269
  %387 = icmp ult float* %scevgep303, %scevgep302, !dbg !269
  %umin304 = select i1 %387, float* %scevgep303, float* %scevgep302, !dbg !269
  %388 = icmp ult float* %scevgep305, %umin304, !dbg !269
  %umin306 = select i1 %388, float* %scevgep305, float* %umin304, !dbg !269
  %389 = mul i32 %s, %smax299, !dbg !269
  %390 = add i32 0, %389, !dbg !269
  %391 = mul i32 %s, %382, !dbg !269
  %392 = add i32 %390, %391, !dbg !269
  %393 = mul i32 1, %380, !dbg !269
  %394 = add i32 %392, %393, !dbg !269
  %395 = sext i32 %394 to i64, !dbg !269
  %396 = mul i64 4, %395, !dbg !269
  %scevgep307 = getelementptr float, float* %b, i64 %395, !dbg !269
  %397 = mul i32 %s, %380, !dbg !269
  %398 = add i32 %380, %397, !dbg !269
  %399 = sext i32 %398 to i64, !dbg !269
  %400 = mul i64 4, %399, !dbg !269
  %scevgep308 = getelementptr float, float* %b, i64 %399, !dbg !269
  %401 = icmp ugt float* %scevgep308, %scevgep307, !dbg !269
  %umax309 = select i1 %401, float* %scevgep308, float* %scevgep307, !dbg !269
  %scevgep310 = getelementptr float, float* %b, i64 %385, !dbg !269
  %402 = icmp ugt float* %scevgep310, %umax309, !dbg !269
  %umax311 = select i1 %402, float* %scevgep310, float* %umax309, !dbg !269
  %403 = icmp sgt i32 %s, 0, !dbg !269
  %smax277 = select i1 %403, i32 %s, i32 0, !dbg !269
  %404 = mul i32 %37, %smax277, !dbg !269
  %405 = add i32 0, %404, !dbg !269
  %406 = mul i32 -1, %smax277, !dbg !269
  %407 = add i32 0, %406, !dbg !269
  %408 = mul i32 1, %smax277, !dbg !269
  %409 = add i32 0, %408, !dbg !269
  %410 = icmp sgt i32 %s, %409, !dbg !269
  %smax278 = select i1 %410, i32 %s, i32 %409, !dbg !269
  %411 = add i32 %smax278, %407, !dbg !269
  %412 = mul i32 %s, %411, !dbg !269
  %413 = add i32 %405, %412, !dbg !269
  %414 = sext i32 %413 to i64, !dbg !269
  %415 = mul i64 4, %414, !dbg !269
  %scevgep279 = getelementptr float, float* %a, i64 %414, !dbg !269
  %416 = icmp ult float* %scevgep281, %scevgep280, !dbg !269
  %umin282 = select i1 %416, float* %scevgep281, float* %scevgep280, !dbg !269
  %417 = icmp ult float* %scevgep283, %umin282, !dbg !269
  %umin284 = select i1 %417, float* %scevgep283, float* %umin282, !dbg !269
  %418 = mul i32 %s, %smax277, !dbg !269
  %419 = add i32 0, %418, !dbg !269
  %420 = mul i32 %s, %411, !dbg !269
  %421 = add i32 %419, %420, !dbg !269
  %422 = mul i32 1, %409, !dbg !269
  %423 = add i32 %421, %422, !dbg !269
  %424 = sext i32 %423 to i64, !dbg !269
  %425 = mul i64 4, %424, !dbg !269
  %scevgep285 = getelementptr float, float* %b, i64 %424, !dbg !269
  %426 = mul i32 %s, %409, !dbg !269
  %427 = add i32 %409, %426, !dbg !269
  %428 = sext i32 %427 to i64, !dbg !269
  %429 = mul i64 4, %428, !dbg !269
  %scevgep286 = getelementptr float, float* %b, i64 %428, !dbg !269
  %430 = icmp ugt float* %scevgep286, %scevgep285, !dbg !269
  %umax287 = select i1 %430, float* %scevgep286, float* %scevgep285, !dbg !269
  %scevgep288 = getelementptr float, float* %b, i64 %414, !dbg !269
  %431 = icmp ugt float* %scevgep288, %umax287, !dbg !269
  %umax289 = select i1 %431, float* %scevgep288, float* %umax287, !dbg !269
  %432 = icmp sgt i32 %s, 0, !dbg !269
  %smax72 = select i1 %432, i32 %s, i32 0, !dbg !269
  %433 = mul i32 %6, %smax72, !dbg !269
  %434 = add i32 0, %433, !dbg !269
  %435 = mul i32 -1, %smax72, !dbg !269
  %436 = add i32 0, %435, !dbg !269
  %437 = mul i32 1, %smax72, !dbg !269
  %438 = add i32 0, %437, !dbg !269
  %439 = icmp sgt i32 %s, %438, !dbg !269
  %smax73 = select i1 %439, i32 %s, i32 %438, !dbg !269
  %440 = add i32 %smax73, %436, !dbg !269
  %441 = mul i32 %s, %440, !dbg !269
  %442 = add i32 %434, %441, !dbg !269
  %443 = sext i32 %442 to i64, !dbg !269
  %444 = mul i64 4, %443, !dbg !269
  %scevgep74 = getelementptr float, float* %a, i64 %443, !dbg !269
  %445 = icmp ult float* %scevgep76, %scevgep75, !dbg !269
  %umin77 = select i1 %445, float* %scevgep76, float* %scevgep75, !dbg !269
  %446 = icmp ult float* %scevgep78, %umin77, !dbg !269
  %umin79 = select i1 %446, float* %scevgep78, float* %umin77, !dbg !269
  %447 = mul i32 %s, %smax72, !dbg !269
  %448 = add i32 0, %447, !dbg !269
  %449 = mul i32 %s, %440, !dbg !269
  %450 = add i32 %448, %449, !dbg !269
  %451 = mul i32 1, %438, !dbg !269
  %452 = add i32 %450, %451, !dbg !269
  %453 = sext i32 %452 to i64, !dbg !269
  %454 = mul i64 4, %453, !dbg !269
  %scevgep80 = getelementptr float, float* %b, i64 %453, !dbg !269
  %455 = mul i32 %s, %438, !dbg !269
  %456 = add i32 %438, %455, !dbg !269
  %457 = sext i32 %456 to i64, !dbg !269
  %458 = mul i64 4, %457, !dbg !269
  %scevgep81 = getelementptr float, float* %b, i64 %457, !dbg !269
  %459 = icmp ugt float* %scevgep81, %scevgep80, !dbg !269
  %umax82 = select i1 %459, float* %scevgep81, float* %scevgep80, !dbg !269
  %scevgep83 = getelementptr float, float* %b, i64 %443, !dbg !269
  %460 = icmp ugt float* %scevgep83, %umax82, !dbg !269
  %umax84 = select i1 %460, float* %scevgep83, float* %umax82, !dbg !269
  %cmp2 = icmp slt i32 %j.0, %s, !dbg !269
  br i1 %cmp2, label %for.body.3, label %for.end.23, !dbg !282

for.body.3:                                       ; preds = %for.cond.1
  br label %for.cond.4, !dbg !283

for.cond.4:                                       ; preds = %for.inc, %for.body.3
  %i.0 = phi i32 [ 0, %for.body.3 ], [ %inc, %for.inc ]
  %sum.0 = phi float [ 0.000000e+00, %for.body.3 ], [ %add12, %for.inc ]
  %461 = icmp ult float* %scevgep335, %scevgep334, !dbg !286
  %umin336 = select i1 %461, float* %scevgep335, float* %scevgep334, !dbg !286
  %462 = icmp sgt i32 %s, 0, !dbg !286
  %smax337 = select i1 %462, i32 %s, i32 0, !dbg !286
  %463 = mul i32 %s, %smax337, !dbg !286
  %464 = add i32 0, %463, !dbg !286
  %465 = mul i32 -1, %smax337, !dbg !286
  %466 = add i32 0, %465, !dbg !286
  %467 = mul i32 1, %smax337, !dbg !286
  %468 = add i32 0, %467, !dbg !286
  %469 = icmp sgt i32 %s, %468, !dbg !286
  %smax338 = select i1 %469, i32 %s, i32 %468, !dbg !286
  %470 = add i32 %smax338, %466, !dbg !286
  %471 = mul i32 %s, %470, !dbg !286
  %472 = add i32 %464, %471, !dbg !286
  %473 = mul i32 1, %468, !dbg !286
  %474 = add i32 %472, %473, !dbg !286
  %475 = sext i32 %474 to i64, !dbg !286
  %476 = mul i64 4, %475, !dbg !286
  %scevgep339 = getelementptr float, float* %b, i64 %475, !dbg !286
  %477 = mul i32 %s, %468, !dbg !286
  %478 = add i32 %468, %477, !dbg !286
  %479 = sext i32 %478 to i64, !dbg !286
  %480 = mul i64 4, %479, !dbg !286
  %scevgep340 = getelementptr float, float* %b, i64 %479, !dbg !286
  %481 = icmp ugt float* %scevgep340, %scevgep339, !dbg !286
  %umax341 = select i1 %481, float* %scevgep340, float* %scevgep339, !dbg !286
  %482 = icmp ult float* %scevgep327, %scevgep326, !dbg !286
  %umin328 = select i1 %482, float* %scevgep327, float* %scevgep326, !dbg !286
  %483 = icmp sgt i32 %s, 0, !dbg !286
  %smax329 = select i1 %483, i32 %s, i32 0, !dbg !286
  %484 = mul i32 %s, %smax329, !dbg !286
  %485 = add i32 0, %484, !dbg !286
  %486 = mul i32 -1, %smax329, !dbg !286
  %487 = add i32 0, %486, !dbg !286
  %488 = mul i32 1, %smax329, !dbg !286
  %489 = add i32 0, %488, !dbg !286
  %490 = icmp sgt i32 %s, %489, !dbg !286
  %smax330 = select i1 %490, i32 %s, i32 %489, !dbg !286
  %491 = add i32 %smax330, %487, !dbg !286
  %492 = mul i32 %s, %491, !dbg !286
  %493 = add i32 %485, %492, !dbg !286
  %494 = mul i32 1, %489, !dbg !286
  %495 = add i32 %493, %494, !dbg !286
  %496 = sext i32 %495 to i64, !dbg !286
  %497 = mul i64 4, %496, !dbg !286
  %scevgep331 = getelementptr float, float* %b, i64 %496, !dbg !286
  %498 = mul i32 %s, %489, !dbg !286
  %499 = add i32 %489, %498, !dbg !286
  %500 = sext i32 %499 to i64, !dbg !286
  %501 = mul i64 4, %500, !dbg !286
  %scevgep332 = getelementptr float, float* %b, i64 %500, !dbg !286
  %502 = icmp ugt float* %scevgep332, %scevgep331, !dbg !286
  %umax333 = select i1 %502, float* %scevgep332, float* %scevgep331, !dbg !286
  %503 = icmp ult float* %scevgep291, %scevgep290, !dbg !286
  %umin292 = select i1 %503, float* %scevgep291, float* %scevgep290, !dbg !286
  %504 = icmp sgt i32 %s, 0, !dbg !286
  %smax293 = select i1 %504, i32 %s, i32 0, !dbg !286
  %505 = mul i32 %s, %smax293, !dbg !286
  %506 = add i32 0, %505, !dbg !286
  %507 = mul i32 -1, %smax293, !dbg !286
  %508 = add i32 0, %507, !dbg !286
  %509 = mul i32 1, %smax293, !dbg !286
  %510 = add i32 0, %509, !dbg !286
  %511 = icmp sgt i32 %s, %510, !dbg !286
  %smax294 = select i1 %511, i32 %s, i32 %510, !dbg !286
  %512 = add i32 %smax294, %508, !dbg !286
  %513 = mul i32 %s, %512, !dbg !286
  %514 = add i32 %506, %513, !dbg !286
  %515 = mul i32 1, %510, !dbg !286
  %516 = add i32 %514, %515, !dbg !286
  %517 = sext i32 %516 to i64, !dbg !286
  %518 = mul i64 4, %517, !dbg !286
  %scevgep295 = getelementptr float, float* %b, i64 %517, !dbg !286
  %519 = mul i32 %s, %510, !dbg !286
  %520 = add i32 %510, %519, !dbg !286
  %521 = sext i32 %520 to i64, !dbg !286
  %522 = mul i64 4, %521, !dbg !286
  %scevgep296 = getelementptr float, float* %b, i64 %521, !dbg !286
  %523 = icmp ugt float* %scevgep296, %scevgep295, !dbg !286
  %umax297 = select i1 %523, float* %scevgep296, float* %scevgep295, !dbg !286
  %cmp5 = icmp slt i32 %i.0, %k.0, !dbg !286
  br i1 %cmp5, label %for.body.6, label %for.end, !dbg !288

for.body.6:                                       ; preds = %for.cond.4
  %mul = mul nsw i32 %j.0, %s, !dbg !289
  %add = add nsw i32 %mul, %i.0, !dbg !291
  %idxprom = sext i32 %add to i64, !dbg !292
  %arrayidx = getelementptr inbounds float, float* %b, i64 %idxprom, !dbg !292
  %tmp = load float, float* %arrayidx, align 4, !dbg !292
  %mul7 = mul nsw i32 %i.0, %s, !dbg !293
  %add8 = add nsw i32 %mul7, %k.0, !dbg !294
  %idxprom9 = sext i32 %add8 to i64, !dbg !295
  %arrayidx10 = getelementptr inbounds float, float* %b, i64 %idxprom9, !dbg !295
  %tmp1 = load float, float* %arrayidx10, align 4, !dbg !295
  %mul11 = fmul float %tmp, %tmp1, !dbg !296
  %add12 = fadd float %sum.0, %mul11, !dbg !297
  br label %for.inc, !dbg !298

for.inc:                                          ; preds = %for.body.6
  %inc = add nsw i32 %i.0, 1, !dbg !299
  br label %for.cond.4, !dbg !300

for.end:                                          ; preds = %for.cond.4
  %sum.0.lcssa = phi float [ %sum.0, %for.cond.4 ]
  %mul13 = mul nsw i32 %j.0, %s, !dbg !301
  %add14 = add nsw i32 %mul13, %k.0, !dbg !302
  %idxprom15 = sext i32 %add14 to i64, !dbg !303
  %arrayidx16 = getelementptr inbounds float, float* %a, i64 %idxprom15, !dbg !303
  %tmp2 = load float, float* %arrayidx16, align 4, !dbg !303
  %sub = fsub float %tmp2, %sum.0.lcssa, !dbg !304
  %mul17 = mul nsw i32 %j.0, %s, !dbg !305
  %add18 = add nsw i32 %mul17, %k.0, !dbg !306
  %idxprom19 = sext i32 %add18 to i64, !dbg !307
  %arrayidx20 = getelementptr inbounds float, float* %b, i64 %idxprom19, !dbg !307
  store float %sub, float* %arrayidx20, align 4, !dbg !308
  br label %for.inc.21, !dbg !309

for.inc.21:                                       ; preds = %for.end
  %inc22 = add nsw i32 %j.0, 1, !dbg !310
  br label %for.cond.1, !dbg !311

for.end.23:                                       ; preds = %for.cond.1
  %add24 = add nsw i32 %k.0, 1, !dbg !312
  br label %for.cond.25, !dbg !313

for.cond.25:                                      ; preds = %for.inc.57, %for.end.23
  %i.1 = phi i32 [ %add24, %for.end.23 ], [ %inc58, %for.inc.57 ]
  %524 = icmp sgt i32 %s, 0, !dbg !273
  %smax246 = select i1 %524, i32 %s, i32 0, !dbg !273
  %525 = mul i32 %28, %smax246, !dbg !273
  %526 = add i32 1, %525, !dbg !273
  %527 = mul i32 -1, %smax246, !dbg !273
  %528 = add i32 %29, %527, !dbg !273
  %529 = mul i32 1, %528, !dbg !273
  %530 = add i32 %526, %529, !dbg !273
  %531 = sext i32 %530 to i64, !dbg !273
  %532 = mul i64 4, %531, !dbg !273
  %scevgep247 = getelementptr float, float* %a, i64 %531, !dbg !273
  %533 = sext i32 %30 to i64, !dbg !273
  %534 = mul i64 4, %533, !dbg !273
  %scevgep249 = getelementptr float, float* %b, i64 %533, !dbg !273
  %535 = icmp ult float* %scevgep249, %scevgep248, !dbg !273
  %umin250 = select i1 %535, float* %scevgep249, float* %scevgep248, !dbg !273
  %536 = icmp ult float* %scevgep251, %umin250, !dbg !273
  %umin252 = select i1 %536, float* %scevgep251, float* %umin250, !dbg !273
  %537 = icmp ult float* %scevgep253, %umin252, !dbg !273
  %umin254 = select i1 %537, float* %scevgep253, float* %umin252, !dbg !273
  %538 = mul i32 %s, %smax246, !dbg !273
  %539 = add i32 0, %538, !dbg !273
  %540 = mul i32 1, %smax246, !dbg !273
  %541 = add i32 0, %540, !dbg !273
  %542 = mul i32 1, %541, !dbg !273
  %543 = add i32 %539, %542, !dbg !273
  %544 = sext i32 %543 to i64, !dbg !273
  %545 = mul i64 4, %544, !dbg !273
  %scevgep255 = getelementptr float, float* %b, i64 %544, !dbg !273
  %546 = mul i32 %28, %smax246, !dbg !273
  %547 = add i32 %28, %546, !dbg !273
  %548 = mul i32 %28, %528, !dbg !273
  %549 = add i32 %547, %548, !dbg !273
  %550 = sext i32 %549 to i64, !dbg !273
  %551 = mul i64 4, %550, !dbg !273
  %scevgep256 = getelementptr float, float* %b, i64 %550, !dbg !273
  %552 = icmp ugt float* %scevgep256, %scevgep255, !dbg !273
  %umax257 = select i1 %552, float* %scevgep256, float* %scevgep255, !dbg !273
  %553 = mul i32 %28, %smax246, !dbg !273
  %554 = add i32 0, %553, !dbg !273
  %555 = sext i32 %554 to i64, !dbg !273
  %556 = mul i64 4, %555, !dbg !273
  %scevgep258 = getelementptr float, float* %b, i64 %555, !dbg !273
  %557 = icmp ugt float* %scevgep258, %umax257, !dbg !273
  %umax259 = select i1 %557, float* %scevgep258, float* %umax257, !dbg !273
  %scevgep260 = getelementptr float, float* %b, i64 %531, !dbg !273
  %558 = icmp ugt float* %scevgep260, %umax259, !dbg !273
  %umax261 = select i1 %558, float* %scevgep260, float* %umax259, !dbg !273
  %559 = icmp sgt i32 %s, 0, !dbg !273
  %smax229 = select i1 %559, i32 %s, i32 0, !dbg !273
  %560 = mul i32 %25, %smax229, !dbg !273
  %561 = add i32 1, %560, !dbg !273
  %562 = mul i32 -1, %smax229, !dbg !273
  %563 = add i32 %26, %562, !dbg !273
  %564 = mul i32 1, %563, !dbg !273
  %565 = add i32 %561, %564, !dbg !273
  %566 = sext i32 %565 to i64, !dbg !273
  %567 = mul i64 4, %566, !dbg !273
  %scevgep230 = getelementptr float, float* %a, i64 %566, !dbg !273
  %568 = sext i32 %27 to i64, !dbg !273
  %569 = mul i64 4, %568, !dbg !273
  %scevgep232 = getelementptr float, float* %b, i64 %568, !dbg !273
  %570 = icmp ult float* %scevgep232, %scevgep231, !dbg !273
  %umin233 = select i1 %570, float* %scevgep232, float* %scevgep231, !dbg !273
  %571 = icmp ult float* %scevgep234, %umin233, !dbg !273
  %umin235 = select i1 %571, float* %scevgep234, float* %umin233, !dbg !273
  %572 = icmp ult float* %scevgep236, %umin235, !dbg !273
  %umin237 = select i1 %572, float* %scevgep236, float* %umin235, !dbg !273
  %573 = mul i32 %s, %smax229, !dbg !273
  %574 = add i32 0, %573, !dbg !273
  %575 = mul i32 1, %smax229, !dbg !273
  %576 = add i32 0, %575, !dbg !273
  %577 = mul i32 1, %576, !dbg !273
  %578 = add i32 %574, %577, !dbg !273
  %579 = sext i32 %578 to i64, !dbg !273
  %580 = mul i64 4, %579, !dbg !273
  %scevgep238 = getelementptr float, float* %b, i64 %579, !dbg !273
  %581 = mul i32 %25, %smax229, !dbg !273
  %582 = add i32 %25, %581, !dbg !273
  %583 = mul i32 %25, %563, !dbg !273
  %584 = add i32 %582, %583, !dbg !273
  %585 = sext i32 %584 to i64, !dbg !273
  %586 = mul i64 4, %585, !dbg !273
  %scevgep239 = getelementptr float, float* %b, i64 %585, !dbg !273
  %587 = icmp ugt float* %scevgep239, %scevgep238, !dbg !273
  %umax240 = select i1 %587, float* %scevgep239, float* %scevgep238, !dbg !273
  %588 = mul i32 %25, %smax229, !dbg !273
  %589 = add i32 0, %588, !dbg !273
  %590 = sext i32 %589 to i64, !dbg !273
  %591 = mul i64 4, %590, !dbg !273
  %scevgep241 = getelementptr float, float* %b, i64 %590, !dbg !273
  %592 = icmp ugt float* %scevgep241, %umax240, !dbg !273
  %umax242 = select i1 %592, float* %scevgep241, float* %umax240, !dbg !273
  %scevgep243 = getelementptr float, float* %b, i64 %566, !dbg !273
  %593 = icmp ugt float* %scevgep243, %umax242, !dbg !273
  %umax244 = select i1 %593, float* %scevgep243, float* %umax242, !dbg !273
  %594 = icmp sgt i32 %s, 0, !dbg !273
  %smax205 = select i1 %594, i32 %s, i32 0, !dbg !273
  %595 = mul i32 %19, %smax205, !dbg !273
  %596 = add i32 1, %595, !dbg !273
  %597 = mul i32 -1, %smax205, !dbg !273
  %598 = add i32 %20, %597, !dbg !273
  %599 = mul i32 1, %598, !dbg !273
  %600 = add i32 %596, %599, !dbg !273
  %601 = sext i32 %600 to i64, !dbg !273
  %602 = mul i64 4, %601, !dbg !273
  %scevgep206 = getelementptr float, float* %a, i64 %601, !dbg !273
  %603 = sext i32 %21 to i64, !dbg !273
  %604 = mul i64 4, %603, !dbg !273
  %scevgep208 = getelementptr float, float* %b, i64 %603, !dbg !273
  %605 = icmp ult float* %scevgep208, %scevgep207, !dbg !273
  %umin209 = select i1 %605, float* %scevgep208, float* %scevgep207, !dbg !273
  %606 = icmp ult float* %scevgep210, %umin209, !dbg !273
  %umin211 = select i1 %606, float* %scevgep210, float* %umin209, !dbg !273
  %607 = icmp ult float* %scevgep212, %umin211, !dbg !273
  %umin213 = select i1 %607, float* %scevgep212, float* %umin211, !dbg !273
  %608 = mul i32 %s, %smax205, !dbg !273
  %609 = add i32 0, %608, !dbg !273
  %610 = mul i32 1, %smax205, !dbg !273
  %611 = add i32 0, %610, !dbg !273
  %612 = mul i32 1, %611, !dbg !273
  %613 = add i32 %609, %612, !dbg !273
  %614 = sext i32 %613 to i64, !dbg !273
  %615 = mul i64 4, %614, !dbg !273
  %scevgep214 = getelementptr float, float* %b, i64 %614, !dbg !273
  %616 = mul i32 %19, %smax205, !dbg !273
  %617 = add i32 %19, %616, !dbg !273
  %618 = mul i32 %19, %598, !dbg !273
  %619 = add i32 %617, %618, !dbg !273
  %620 = sext i32 %619 to i64, !dbg !273
  %621 = mul i64 4, %620, !dbg !273
  %scevgep215 = getelementptr float, float* %b, i64 %620, !dbg !273
  %622 = icmp ugt float* %scevgep215, %scevgep214, !dbg !273
  %umax216 = select i1 %622, float* %scevgep215, float* %scevgep214, !dbg !273
  %623 = mul i32 %19, %smax205, !dbg !273
  %624 = add i32 0, %623, !dbg !273
  %625 = sext i32 %624 to i64, !dbg !273
  %626 = mul i64 4, %625, !dbg !273
  %scevgep217 = getelementptr float, float* %b, i64 %625, !dbg !273
  %627 = icmp ugt float* %scevgep217, %umax216, !dbg !273
  %umax218 = select i1 %627, float* %scevgep217, float* %umax216, !dbg !273
  %scevgep219 = getelementptr float, float* %b, i64 %601, !dbg !273
  %628 = icmp ugt float* %scevgep219, %umax218, !dbg !273
  %umax220 = select i1 %628, float* %scevgep219, float* %umax218, !dbg !273
  %629 = icmp sgt i32 %s, 0, !dbg !273
  %smax120 = select i1 %629, i32 %s, i32 0, !dbg !273
  %630 = mul i32 %10, %smax120, !dbg !273
  %631 = add i32 1, %630, !dbg !273
  %632 = mul i32 -1, %smax120, !dbg !273
  %633 = add i32 %11, %632, !dbg !273
  %634 = mul i32 1, %633, !dbg !273
  %635 = add i32 %631, %634, !dbg !273
  %636 = sext i32 %635 to i64, !dbg !273
  %637 = mul i64 4, %636, !dbg !273
  %scevgep121 = getelementptr float, float* %a, i64 %636, !dbg !273
  %638 = sext i32 %12 to i64, !dbg !273
  %639 = mul i64 4, %638, !dbg !273
  %scevgep123 = getelementptr float, float* %b, i64 %638, !dbg !273
  %640 = icmp ult float* %scevgep123, %scevgep122, !dbg !273
  %umin124 = select i1 %640, float* %scevgep123, float* %scevgep122, !dbg !273
  %641 = icmp ult float* %scevgep125, %umin124, !dbg !273
  %umin126 = select i1 %641, float* %scevgep125, float* %umin124, !dbg !273
  %642 = icmp ult float* %scevgep127, %umin126, !dbg !273
  %umin128 = select i1 %642, float* %scevgep127, float* %umin126, !dbg !273
  %643 = mul i32 %s, %smax120, !dbg !273
  %644 = add i32 0, %643, !dbg !273
  %645 = mul i32 1, %smax120, !dbg !273
  %646 = add i32 0, %645, !dbg !273
  %647 = mul i32 1, %646, !dbg !273
  %648 = add i32 %644, %647, !dbg !273
  %649 = sext i32 %648 to i64, !dbg !273
  %650 = mul i64 4, %649, !dbg !273
  %scevgep129 = getelementptr float, float* %b, i64 %649, !dbg !273
  %651 = mul i32 %10, %smax120, !dbg !273
  %652 = add i32 %10, %651, !dbg !273
  %653 = mul i32 %10, %633, !dbg !273
  %654 = add i32 %652, %653, !dbg !273
  %655 = sext i32 %654 to i64, !dbg !273
  %656 = mul i64 4, %655, !dbg !273
  %scevgep130 = getelementptr float, float* %b, i64 %655, !dbg !273
  %657 = icmp ugt float* %scevgep130, %scevgep129, !dbg !273
  %umax131 = select i1 %657, float* %scevgep130, float* %scevgep129, !dbg !273
  %658 = mul i32 %10, %smax120, !dbg !273
  %659 = add i32 0, %658, !dbg !273
  %660 = sext i32 %659 to i64, !dbg !273
  %661 = mul i64 4, %660, !dbg !273
  %scevgep132 = getelementptr float, float* %b, i64 %660, !dbg !273
  %662 = icmp ugt float* %scevgep132, %umax131, !dbg !273
  %umax133 = select i1 %662, float* %scevgep132, float* %umax131, !dbg !273
  %scevgep134 = getelementptr float, float* %b, i64 %636, !dbg !273
  %663 = icmp ugt float* %scevgep134, %umax133, !dbg !273
  %umax135 = select i1 %663, float* %scevgep134, float* %umax133, !dbg !273
  %cmp26 = icmp slt i32 %i.1, %s, !dbg !273
  br i1 %cmp26, label %for.body.27, label %for.end.59, !dbg !314

for.body.27:                                      ; preds = %for.cond.25
  br label %for.cond.28, !dbg !315

for.cond.28:                                      ; preds = %for.inc.41, %for.body.27
  %j.1 = phi i32 [ 0, %for.body.27 ], [ %inc42, %for.inc.41 ]
  %sum.1 = phi float [ 0.000000e+00, %for.body.27 ], [ %add40, %for.inc.41 ]
  %664 = sext i32 %34 to i64, !dbg !276
  %665 = mul i64 4, %664, !dbg !276
  %scevgep270 = getelementptr float, float* %b, i64 %664, !dbg !276
  %666 = icmp ult float* %scevgep270, %scevgep269, !dbg !276
  %umin271 = select i1 %666, float* %scevgep270, float* %scevgep269, !dbg !276
  %667 = icmp sgt i32 %s, 0, !dbg !276
  %smax272 = select i1 %667, i32 %s, i32 0, !dbg !276
  %668 = mul i32 %s, %smax272, !dbg !276
  %669 = add i32 0, %668, !dbg !276
  %670 = mul i32 1, %smax272, !dbg !276
  %671 = add i32 0, %670, !dbg !276
  %672 = mul i32 1, %671, !dbg !276
  %673 = add i32 %669, %672, !dbg !276
  %674 = sext i32 %673 to i64, !dbg !276
  %675 = mul i64 4, %674, !dbg !276
  %scevgep273 = getelementptr float, float* %b, i64 %674, !dbg !276
  %676 = mul i32 %35, %smax272, !dbg !276
  %677 = add i32 %35, %676, !dbg !276
  %678 = mul i32 -1, %smax272, !dbg !276
  %679 = add i32 %36, %678, !dbg !276
  %680 = mul i32 %35, %679, !dbg !276
  %681 = add i32 %677, %680, !dbg !276
  %682 = sext i32 %681 to i64, !dbg !276
  %683 = mul i64 4, %682, !dbg !276
  %scevgep274 = getelementptr float, float* %b, i64 %682, !dbg !276
  %684 = icmp ugt float* %scevgep274, %scevgep273, !dbg !276
  %umax275 = select i1 %684, float* %scevgep274, float* %scevgep273, !dbg !276
  %685 = sext i32 %31 to i64, !dbg !276
  %686 = mul i64 4, %685, !dbg !276
  %scevgep263 = getelementptr float, float* %b, i64 %685, !dbg !276
  %687 = icmp ult float* %scevgep263, %scevgep262, !dbg !276
  %umin264 = select i1 %687, float* %scevgep263, float* %scevgep262, !dbg !276
  %688 = icmp sgt i32 %s, 0, !dbg !276
  %smax265 = select i1 %688, i32 %s, i32 0, !dbg !276
  %689 = mul i32 %s, %smax265, !dbg !276
  %690 = add i32 0, %689, !dbg !276
  %691 = mul i32 1, %smax265, !dbg !276
  %692 = add i32 0, %691, !dbg !276
  %693 = mul i32 1, %692, !dbg !276
  %694 = add i32 %690, %693, !dbg !276
  %695 = sext i32 %694 to i64, !dbg !276
  %696 = mul i64 4, %695, !dbg !276
  %scevgep266 = getelementptr float, float* %b, i64 %695, !dbg !276
  %697 = mul i32 %32, %smax265, !dbg !276
  %698 = add i32 %32, %697, !dbg !276
  %699 = mul i32 -1, %smax265, !dbg !276
  %700 = add i32 %33, %699, !dbg !276
  %701 = mul i32 %32, %700, !dbg !276
  %702 = add i32 %698, %701, !dbg !276
  %703 = sext i32 %702 to i64, !dbg !276
  %704 = mul i64 4, %703, !dbg !276
  %scevgep267 = getelementptr float, float* %b, i64 %703, !dbg !276
  %705 = icmp ugt float* %scevgep267, %scevgep266, !dbg !276
  %umax268 = select i1 %705, float* %scevgep267, float* %scevgep266, !dbg !276
  %706 = sext i32 %22 to i64, !dbg !276
  %707 = mul i64 4, %706, !dbg !276
  %scevgep222 = getelementptr float, float* %b, i64 %706, !dbg !276
  %708 = icmp ult float* %scevgep222, %scevgep221, !dbg !276
  %umin223 = select i1 %708, float* %scevgep222, float* %scevgep221, !dbg !276
  %709 = icmp sgt i32 %s, 0, !dbg !276
  %smax224 = select i1 %709, i32 %s, i32 0, !dbg !276
  %710 = mul i32 %s, %smax224, !dbg !276
  %711 = add i32 0, %710, !dbg !276
  %712 = mul i32 1, %smax224, !dbg !276
  %713 = add i32 0, %712, !dbg !276
  %714 = mul i32 1, %713, !dbg !276
  %715 = add i32 %711, %714, !dbg !276
  %716 = sext i32 %715 to i64, !dbg !276
  %717 = mul i64 4, %716, !dbg !276
  %scevgep225 = getelementptr float, float* %b, i64 %716, !dbg !276
  %718 = mul i32 %23, %smax224, !dbg !276
  %719 = add i32 %23, %718, !dbg !276
  %720 = mul i32 -1, %smax224, !dbg !276
  %721 = add i32 %24, %720, !dbg !276
  %722 = mul i32 %23, %721, !dbg !276
  %723 = add i32 %719, %722, !dbg !276
  %724 = sext i32 %723 to i64, !dbg !276
  %725 = mul i64 4, %724, !dbg !276
  %scevgep226 = getelementptr float, float* %b, i64 %724, !dbg !276
  %726 = icmp ugt float* %scevgep226, %scevgep225, !dbg !276
  %umax227 = select i1 %726, float* %scevgep226, float* %scevgep225, !dbg !276
  %cmp29 = icmp slt i32 %j.1, %k.0, !dbg !276
  br i1 %cmp29, label %for.body.30, label %for.end.43, !dbg !316

for.body.30:                                      ; preds = %for.cond.28
  %mul31 = mul nsw i32 %k.0, %s, !dbg !317
  %add32 = add nsw i32 %mul31, %j.1, !dbg !319
  %idxprom33 = sext i32 %add32 to i64, !dbg !320
  %arrayidx34 = getelementptr inbounds float, float* %b, i64 %idxprom33, !dbg !320
  %tmp3 = load float, float* %arrayidx34, align 4, !dbg !320
  %mul35 = mul nsw i32 %i.1, %s, !dbg !321
  %add36 = add nsw i32 %mul35, %i.1, !dbg !322
  %idxprom37 = sext i32 %add36 to i64, !dbg !323
  %arrayidx38 = getelementptr inbounds float, float* %b, i64 %idxprom37, !dbg !323
  %tmp4 = load float, float* %arrayidx38, align 4, !dbg !323
  %mul39 = fmul float %tmp3, %tmp4, !dbg !324
  %add40 = fadd float %sum.1, %mul39, !dbg !325
  br label %for.inc.41, !dbg !326

for.inc.41:                                       ; preds = %for.body.30
  %inc42 = add nsw i32 %j.1, 1, !dbg !327
  br label %for.cond.28, !dbg !328

for.end.43:                                       ; preds = %for.cond.28
  %sum.1.lcssa = phi float [ %sum.1, %for.cond.28 ]
  %mul44 = mul nsw i32 %k.0, %s, !dbg !329
  %add45 = add nsw i32 %mul44, %i.1, !dbg !330
  %idxprom46 = sext i32 %add45 to i64, !dbg !331
  %arrayidx47 = getelementptr inbounds float, float* %a, i64 %idxprom46, !dbg !331
  %tmp5 = load float, float* %arrayidx47, align 4, !dbg !331
  %sub48 = fsub float %tmp5, %sum.1.lcssa, !dbg !332
  %mul49 = mul nsw i32 %k.0, %s, !dbg !333
  %add50 = add nsw i32 %mul49, %k.0, !dbg !334
  %idxprom51 = sext i32 %add50 to i64, !dbg !335
  %arrayidx52 = getelementptr inbounds float, float* %b, i64 %idxprom51, !dbg !335
  %tmp6 = load float, float* %arrayidx52, align 4, !dbg !335
  %div = fdiv float %sub48, %tmp6, !dbg !336
  %mul53 = mul nsw i32 %k.0, %s, !dbg !337
  %add54 = add nsw i32 %mul53, %i.1, !dbg !338
  %idxprom55 = sext i32 %add54 to i64, !dbg !339
  %arrayidx56 = getelementptr inbounds float, float* %b, i64 %idxprom55, !dbg !339
  store float %div, float* %arrayidx56, align 4, !dbg !340
  br label %for.inc.57, !dbg !341

for.inc.57:                                       ; preds = %for.end.43
  %inc58 = add nsw i32 %i.1, 1, !dbg !342
  br label %for.cond.25, !dbg !343

for.end.59:                                       ; preds = %for.cond.25
  br label %for.inc.60, !dbg !344

for.inc.60:                                       ; preds = %for.end.59
  %inc61 = add nsw i32 %k.0, 1, !dbg !345
  br label %for.cond, !dbg !346

for.end.62:                                       ; preds = %for.cond
  ret void, !dbg !347
}

; Function Attrs: nounwind uwtable
define void @compareResults(float* %b_cpu, float* %b_gpu) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !348, metadata !42), !dbg !349
  call void @llvm.dbg.value(metadata i32 %inc14, i64 0, metadata !350, metadata !42), !dbg !351
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !352, metadata !42), !dbg !353
  call void @llvm.dbg.value(metadata i32 %inc12, i64 0, metadata !348, metadata !42), !dbg !349
  call void @llvm.dbg.value(metadata float* %b_cpu, i64 0, metadata !354, metadata !42), !dbg !355
  call void @llvm.dbg.value(metadata float* %b_gpu, i64 0, metadata !356, metadata !42), !dbg !357
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !352, metadata !42), !dbg !353
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !350, metadata !42), !dbg !351
  %b_gpu3 = ptrtoint float* %b_gpu to i64
  %b_cpu2 = ptrtoint float* %b_cpu to i64
  %0 = ptrtoint float* undef to i64
  %1 = ptrtoint float* undef to i64
  %2 = ptrtoint float* undef to i64
  %3 = ptrtoint float* undef to i64
  %4 = ptrtoint float* undef to i64
  %5 = ptrtoint float* undef to i64
  %6 = ptrtoint float* undef to i64
  %7 = ptrtoint float* undef to i64
  %8 = ptrtoint float* undef to i64
  %9 = ptrtoint float* undef to i64
  %10 = ptrtoint float* undef to i64
  %11 = ptrtoint float* undef to i64
  %12 = ptrtoint float* undef to i64
  %13 = ptrtoint float* undef to i64
  %14 = ptrtoint float* undef to i64
  %15 = ptrtoint float* undef to i64
  %16 = add i64 %b_cpu2, 1000000, !dbg !358
  %17 = add i64 %16, 2000, !dbg !358
  %18 = add i64 %b_gpu3, 1000000, !dbg !358
  %19 = add i64 %18, 2000, !dbg !358
  %20 = add i64 %b_cpu2, 1000000, !dbg !358
  %21 = add i64 %20, 2000, !dbg !358
  %22 = add i64 %b_gpu3, 1000000, !dbg !358
  %23 = add i64 %22, 2000, !dbg !358
  %24 = add i64 %b_cpu2, 1000000, !dbg !361
  %25 = add i64 %24, 2000, !dbg !361
  %26 = add i64 %b_gpu3, 1000000, !dbg !361
  %27 = add i64 %26, 2000, !dbg !361
  %28 = add i64 %b_cpu2, 1000000, !dbg !358
  %29 = add i64 %28, 2000, !dbg !358
  %30 = add i64 %b_gpu3, 1000000, !dbg !358
  %31 = add i64 %30, 2000, !dbg !358
  %32 = add i64 %b_cpu2, 1000000, !dbg !358
  %33 = add i64 %32, 2000, !dbg !358
  %34 = add i64 %b_gpu3, 1000000, !dbg !358
  %35 = add i64 %34, 2000, !dbg !358
  %36 = add i64 %b_cpu2, 1000000, !dbg !365
  %37 = add i64 %36, 2000, !dbg !365
  %38 = add i64 %b_gpu3, 1000000, !dbg !365
  %39 = add i64 %38, 2000, !dbg !365
  %40 = add i64 %b_cpu2, 1000000, !dbg !365
  %41 = add i64 %40, 2000, !dbg !365
  %42 = add i64 %b_gpu3, 1000000, !dbg !365
  %43 = add i64 %42, 2000, !dbg !365
  %44 = add i64 %b_cpu2, 1000000, !dbg !361
  %45 = add i64 %44, 2000, !dbg !361
  %46 = add i64 %b_gpu3, 1000000, !dbg !361
  %47 = add i64 %46, 2000, !dbg !361
  %48 = add i64 %b_cpu2, 1000000, !dbg !361
  %49 = add i64 %48, 2000, !dbg !361
  %50 = add i64 %b_gpu3, 1000000, !dbg !361
  %51 = add i64 %50, 2000, !dbg !361
  br label %for.cond, !dbg !368

for.cond:                                         ; preds = %for.inc.13, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc14, %for.inc.13 ]
  %fail.0 = phi i32 [ 0, %entry ], [ %fail.1.lcssa, %for.inc.13 ]
  %cmp = icmp slt i32 %i.0, 500, !dbg !358
  br i1 %cmp, label %for.body, label %for.end.15, !dbg !369

for.body:                                         ; preds = %for.cond
  br label %for.cond.1, !dbg !370

for.cond.1:                                       ; preds = %for.inc, %for.body
  %j.0 = phi i32 [ 0, %for.body ], [ %inc12, %for.inc ]
  %fail.1 = phi i32 [ %fail.0, %for.body ], [ %fail.2, %for.inc ]
  %cmp2 = icmp slt i32 %j.0, 500, !dbg !361
  br i1 %cmp2, label %for.body.3, label %for.end, !dbg !371

for.body.3:                                       ; preds = %for.cond.1
  %mul = mul nsw i32 %i.0, 500, !dbg !365
  %add = add nsw i32 %mul, %j.0, !dbg !372
  %idxprom = sext i32 %add to i64, !dbg !373
  %arrayidx = getelementptr inbounds float, float* %b_cpu, i64 %idxprom, !dbg !373
  %tmp = load float, float* %arrayidx, align 4, !dbg !373
  %conv = fpext float %tmp to double, !dbg !373
  %mul4 = mul nsw i32 %i.0, 500, !dbg !374
  %add5 = add nsw i32 %mul4, %j.0, !dbg !375
  %idxprom6 = sext i32 %add5 to i64, !dbg !376
  %arrayidx7 = getelementptr inbounds float, float* %b_gpu, i64 %idxprom6, !dbg !376
  %tmp1 = load float, float* %arrayidx7, align 4, !dbg !376
  %conv8 = fpext float %tmp1 to double, !dbg !376
  %call = call float @percentDiff(double %conv, double %conv8), !dbg !377
  %conv9 = fpext float %call to double, !dbg !377
  %cmp10 = fcmp ogt double %conv9, 5.000000e-02, !dbg !378
  br i1 %cmp10, label %if.then, label %if.end, !dbg !379

if.then:                                          ; preds = %for.body.3
  %inc = add nsw i32 %fail.1, 1, !dbg !380
  br label %if.end, !dbg !382

if.end:                                           ; preds = %if.then, %for.body.3
  %fail.2 = phi i32 [ %inc, %if.then ], [ %fail.1, %for.body.3 ]
  br label %for.inc, !dbg !383

for.inc:                                          ; preds = %if.end
  %inc12 = add nsw i32 %j.0, 1, !dbg !384
  br label %for.cond.1, !dbg !385

for.end:                                          ; preds = %for.cond.1
  %fail.1.lcssa = phi i32 [ %fail.1, %for.cond.1 ]
  br label %for.inc.13, !dbg !386

for.inc.13:                                       ; preds = %for.end
  %inc14 = add nsw i32 %i.0, 1, !dbg !387
  br label %for.cond, !dbg !388

for.end.15:                                       ; preds = %for.cond
  %fail.0.lcssa = phi i32 [ %fail.0, %for.cond ]
  %call16 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i32 0, i32 0), double 5.000000e-02, i32 %fail.0.lcssa), !dbg !389
  ret void, !dbg !390
}

; Function Attrs: nounwind uwtable
define i32 @main(i32 %argc, i8** %argv) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %add, i64 0, metadata !391, metadata !42), !dbg !392
  call void @llvm.dbg.value(metadata i32 %argc, i64 0, metadata !393, metadata !42), !dbg !394
  call void @llvm.dbg.value(metadata i8** %argv, i64 0, metadata !395, metadata !42), !dbg !396
  %call = call noalias i8* @malloc(i64 1000000) #4, !dbg !397
  %tmp = bitcast i8* %call to float*, !dbg !398
  call void @llvm.dbg.value(metadata float* %tmp, i64 0, metadata !399, metadata !42), !dbg !400
  %call1 = call noalias i8* @malloc(i64 1000000) #4, !dbg !401
  %tmp1 = bitcast i8* %call1 to float*, !dbg !402
  call void @llvm.dbg.value(metadata float* %tmp1, i64 0, metadata !403, metadata !42), !dbg !404
  %call2 = call noalias i8* @malloc(i64 1000000) #4, !dbg !405
  %tmp2 = bitcast i8* %call2 to float*, !dbg !406
  call void @llvm.dbg.value(metadata float* %tmp2, i64 0, metadata !407, metadata !42), !dbg !408
  %tmp3 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !409
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i32 0, i32 0)), !dbg !410
  %call4 = call double @rtclock(), !dbg !411
  call void @llvm.dbg.value(metadata double %call4, i64 0, metadata !412, metadata !42), !dbg !413
  call void @llvm.dbg.value(metadata i32 2, i64 0, metadata !391, metadata !42), !dbg !392
  br label %for.cond, !dbg !414

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 2, %entry ], [ %add, %for.inc ]
  %cmp = icmp slt i32 %i.0, 500, !dbg !416
  br i1 %cmp, label %for.body, label %for.end, !dbg !418

for.body:                                         ; preds = %for.cond
  call void @init(i32 %i.0, float* %tmp, float* %tmp2), !dbg !419
  call void @Crout_GPU(i32 %i.0, float* %tmp, float* %tmp2), !dbg !421
  br label %for.inc, !dbg !422

for.inc:                                          ; preds = %for.body
  %add = add nsw i32 %i.0, 2, !dbg !423
  br label %for.cond, !dbg !424

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 %add12, i64 0, metadata !391, metadata !42), !dbg !392
  %call5 = call double @rtclock(), !dbg !425
  call void @llvm.dbg.value(metadata double %call5, i64 0, metadata !426, metadata !42), !dbg !427
  %tmp4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !428
  %sub = fsub double %call5, %call4, !dbg !429
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i32 0, i32 0), double %sub), !dbg !430
  %call7 = call double @rtclock(), !dbg !431
  call void @llvm.dbg.value(metadata double %call7, i64 0, metadata !412, metadata !42), !dbg !413
  call void @llvm.dbg.value(metadata i32 2, i64 0, metadata !391, metadata !42), !dbg !392
  br label %for.cond.8, !dbg !432

for.cond.8:                                       ; preds = %for.inc.11, %for.end
  %i.1 = phi i32 [ 2, %for.end ], [ %add12, %for.inc.11 ]
  %cmp9 = icmp slt i32 %i.1, 500, !dbg !434
  br i1 %cmp9, label %for.body.10, label %for.end.13, !dbg !436

for.body.10:                                      ; preds = %for.cond.8
  call void @init(i32 %i.1, float* %tmp, float* %tmp1), !dbg !437
  call void @Crout_CPU(i32 %i.1, float* %tmp, float* %tmp1), !dbg !439
  br label %for.inc.11, !dbg !440

for.inc.11:                                       ; preds = %for.body.10
  %add12 = add nsw i32 %i.1, 2, !dbg !441
  br label %for.cond.8, !dbg !442

for.end.13:                                       ; preds = %for.cond.8
  %call14 = call double @rtclock(), !dbg !443
  call void @llvm.dbg.value(metadata double %call14, i64 0, metadata !426, metadata !42), !dbg !427
  %tmp5 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !444
  %sub15 = fsub double %call14, %call7, !dbg !445
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %tmp5, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i32 0, i32 0), double %sub15), !dbg !446
  call void @compareResults(float* %tmp1, float* %tmp2), !dbg !447
  %tmp6 = bitcast float* %tmp to i8*, !dbg !448
  call void @free(i8* %tmp6) #4, !dbg !449
  %tmp7 = bitcast float* %tmp1 to i8*, !dbg !450
  call void @free(i8* %tmp7) #4, !dbg !451
  %tmp8 = bitcast float* %tmp2 to i8*, !dbg !452
  call void @free(i8* %tmp8) #4, !dbg !453
  ret i32 0, !dbg !454
}

; Function Attrs: nounwind
declare noalias i8* @malloc(i64) #2

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

; Function Attrs: nounwind
declare void @free(i8*) #2

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!33, !34}
!llvm.ident = !{!35}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !6)
!1 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/UniBench/benchmarks//mgBench/lu-decomposition/src/lu-decomposition_gpu.c", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!2 = !{}
!3 = !{!4, !5}
!4 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!5 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4, size: 64, align: 64)
!6 = !{!7, !12, !15, !18, !22, !23, !24, !27}
!7 = !DISubprogram(name: "rtclock", scope: !8, file: !8, line: 7, type: !9, isLocal: false, isDefinition: true, scopeLine: 8, isOptimized: false, function: double ()* @rtclock, variables: !2)
!8 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/UniBench/benchmarks//mgBench/lu-decomposition/src/../../common/mgbenchUtilFunctions.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!9 = !DISubroutineType(types: !10)
!10 = !{!11}
!11 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!12 = !DISubprogram(name: "absVal", scope: !8, file: !8, line: 18, type: !13, isLocal: false, isDefinition: true, scopeLine: 19, flags: DIFlagPrototyped, isOptimized: false, function: float (float)* @absVal, variables: !2)
!13 = !DISubroutineType(types: !14)
!14 = !{!4, !4}
!15 = !DISubprogram(name: "percentDiff", scope: !8, file: !8, line: 32, type: !16, isLocal: false, isDefinition: true, scopeLine: 33, flags: DIFlagPrototyped, isOptimized: false, function: float (double, double)* @percentDiff, variables: !2)
!16 = !DISubroutineType(types: !17)
!17 = !{!4, !11, !11}
!18 = !DISubprogram(name: "init", scope: !1, file: !1, line: 33, type: !19, isLocal: false, isDefinition: true, scopeLine: 33, flags: DIFlagPrototyped, isOptimized: false, function: void (i32, float*, float*)* @init, variables: !2)
!19 = !DISubroutineType(types: !20)
!20 = !{null, !21, !5, !5}
!21 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!22 = !DISubprogram(name: "Crout_GPU", scope: !1, file: !1, line: 48, type: !19, isLocal: false, isDefinition: true, scopeLine: 48, flags: DIFlagPrototyped, isOptimized: false, function: void (i32, float*, float*)* @Crout_GPU, variables: !2)
!23 = !DISubprogram(name: "Crout_CPU", scope: !1, file: !1, line: 80, type: !19, isLocal: false, isDefinition: true, scopeLine: 80, flags: DIFlagPrototyped, isOptimized: false, function: void (i32, float*, float*)* @Crout_CPU, variables: !2)
!24 = !DISubprogram(name: "compareResults", scope: !1, file: !1, line: 107, type: !25, isLocal: false, isDefinition: true, scopeLine: 108, flags: DIFlagPrototyped, isOptimized: false, function: void (float*, float*)* @compareResults, variables: !2)
!25 = !DISubroutineType(types: !26)
!26 = !{null, !5, !5}
!27 = !DISubprogram(name: "main", scope: !1, file: !1, line: 127, type: !28, isLocal: false, isDefinition: true, scopeLine: 128, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i8**)* @main, variables: !2)
!28 = !DISubroutineType(types: !29)
!29 = !{!21, !21, !30}
!30 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !31, size: 64, align: 64)
!31 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !32, size: 64, align: 64)
!32 = !DIBasicType(name: "char", size: 8, align: 8, encoding: DW_ATE_signed_char)
!33 = !{i32 2, !"Dwarf Version", i32 4}
!34 = !{i32 2, !"Debug Info Version", i32 3}
!35 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!36 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Tzp", scope: !7, file: !8, line: 9, type: !37)
!37 = !DICompositeType(tag: DW_TAG_structure_type, name: "timezone", file: !38, line: 57, size: 64, align: 32, elements: !39)
!38 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/time.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!39 = !{!40, !41}
!40 = !DIDerivedType(tag: DW_TAG_member, name: "tz_minuteswest", scope: !37, file: !38, line: 59, baseType: !21, size: 32, align: 32)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "tz_dsttime", scope: !37, file: !38, line: 60, baseType: !21, size: 32, align: 32, offset: 32)
!42 = !DIExpression()
!43 = !DILocation(line: 9, column: 21, scope: !7)
!44 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Tp", scope: !7, file: !8, line: 10, type: !45)
!45 = !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !46, line: 31, size: 128, align: 64, elements: !47)
!46 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!47 = !{!48, !52}
!48 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !45, file: !46, line: 33, baseType: !49, size: 64, align: 64)
!49 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !50, line: 149, baseType: !51)
!50 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!51 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !45, file: !46, line: 34, baseType: !53, size: 64, align: 64, offset: 64)
!53 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !50, line: 151, baseType: !51)
!54 = !DILocation(line: 10, column: 20, scope: !7)
!55 = !DILocation(line: 12, column: 12, scope: !7)
!56 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stat", scope: !7, file: !8, line: 11, type: !21)
!57 = !DILocation(line: 11, column: 9, scope: !7)
!58 = !DILocation(line: 13, column: 14, scope: !59)
!59 = distinct !DILexicalBlock(scope: !7, file: !8, line: 13, column: 9)
!60 = !DILocation(line: 13, column: 9, scope: !7)
!61 = !DILocation(line: 13, column: 20, scope: !59)
!62 = !DILocation(line: 14, column: 15, scope: !7)
!63 = !DILocation(line: 14, column: 12, scope: !7)
!64 = !DILocation(line: 14, column: 27, scope: !7)
!65 = !DILocation(line: 14, column: 24, scope: !7)
!66 = !DILocation(line: 14, column: 34, scope: !7)
!67 = !DILocation(line: 14, column: 22, scope: !7)
!68 = !DILocation(line: 14, column: 5, scope: !7)
!69 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !12, file: !8, line: 18, type: !4)
!70 = !DILocation(line: 18, column: 20, scope: !12)
!71 = !DILocation(line: 20, column: 7, scope: !72)
!72 = distinct !DILexicalBlock(scope: !12, file: !8, line: 20, column: 5)
!73 = !DILocation(line: 20, column: 5, scope: !12)
!74 = !DILocation(line: 22, column: 13, scope: !75)
!75 = distinct !DILexicalBlock(scope: !72, file: !8, line: 21, column: 2)
!76 = !DILocation(line: 22, column: 3, scope: !75)
!77 = !DILocation(line: 26, column: 3, scope: !78)
!78 = distinct !DILexicalBlock(scope: !72, file: !8, line: 25, column: 2)
!79 = !DILocation(line: 28, column: 1, scope: !12)
!80 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val1", arg: 1, scope: !15, file: !8, line: 32, type: !11)
!81 = !DILocation(line: 32, column: 26, scope: !15)
!82 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val2", arg: 2, scope: !15, file: !8, line: 32, type: !11)
!83 = !DILocation(line: 32, column: 39, scope: !15)
!84 = !DILocation(line: 34, column: 14, scope: !85)
!85 = distinct !DILexicalBlock(scope: !15, file: !8, line: 34, column: 6)
!86 = !DILocation(line: 34, column: 7, scope: !85)
!87 = !DILocation(line: 34, column: 20, scope: !85)
!88 = !DILocation(line: 34, column: 28, scope: !85)
!89 = !DILocation(line: 34, column: 39, scope: !90)
!90 = !DILexicalBlockFile(scope: !85, file: !8, discriminator: 1)
!91 = !DILocation(line: 34, column: 32, scope: !85)
!92 = !DILocation(line: 34, column: 45, scope: !85)
!93 = !DILocation(line: 34, column: 6, scope: !15)
!94 = !DILocation(line: 36, column: 3, scope: !95)
!95 = distinct !DILexicalBlock(scope: !85, file: !8, line: 35, column: 2)
!96 = !DILocation(line: 41, column: 43, scope: !97)
!97 = distinct !DILexicalBlock(scope: !85, file: !8, line: 40, column: 2)
!98 = !DILocation(line: 41, column: 38, scope: !97)
!99 = !DILocation(line: 41, column: 31, scope: !97)
!100 = !DILocation(line: 41, column: 65, scope: !97)
!101 = !DILocation(line: 41, column: 60, scope: !97)
!102 = !DILocation(line: 41, column: 53, scope: !97)
!103 = !DILocation(line: 41, column: 51, scope: !97)
!104 = !DILocation(line: 41, column: 24, scope: !97)
!105 = !DILocation(line: 41, column: 21, scope: !97)
!106 = !DILocation(line: 41, column: 7, scope: !97)
!107 = !DILocation(line: 43, column: 1, scope: !15)
!108 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !18, file: !1, line: 34, type: !21)
!109 = !DILocation(line: 34, column: 12, scope: !18)
!110 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !18, file: !1, line: 34, type: !21)
!111 = !DILocation(line: 34, column: 9, scope: !18)
!112 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 1, scope: !18, file: !1, line: 33, type: !21)
!113 = !DILocation(line: 33, column: 15, scope: !18)
!114 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !18, file: !1, line: 33, type: !5)
!115 = !DILocation(line: 33, column: 25, scope: !18)
!116 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !18, file: !1, line: 33, type: !5)
!117 = !DILocation(line: 33, column: 35, scope: !18)
!118 = !DILocation(line: 35, column: 11, scope: !18)
!119 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "q", scope: !18, file: !1, line: 34, type: !21)
!120 = !DILocation(line: 34, column: 14, scope: !18)
!121 = !DILocation(line: 36, column: 10, scope: !122)
!122 = distinct !DILexicalBlock(scope: !18, file: !1, line: 36, column: 5)
!123 = !DILocation(line: 36, column: 19, scope: !124)
!124 = distinct !DILexicalBlock(scope: !122, file: !1, line: 36, column: 5)
!125 = !DILocation(line: 38, column: 23, scope: !126)
!126 = distinct !DILexicalBlock(scope: !127, file: !1, line: 38, column: 9)
!127 = distinct !DILexicalBlock(scope: !128, file: !1, line: 38, column: 9)
!128 = distinct !DILexicalBlock(scope: !124, file: !1, line: 37, column: 5)
!129 = !DILocation(line: 36, column: 5, scope: !122)
!130 = !DILocation(line: 38, column: 14, scope: !127)
!131 = !DILocation(line: 38, column: 9, scope: !127)
!132 = !DILocation(line: 40, column: 41, scope: !133)
!133 = distinct !DILexicalBlock(scope: !126, file: !1, line: 39, column: 9)
!134 = !DILocation(line: 40, column: 47, scope: !133)
!135 = !DILocation(line: 40, column: 44, scope: !133)
!136 = !DILocation(line: 40, column: 37, scope: !133)
!137 = !DILocation(line: 40, column: 28, scope: !133)
!138 = !DILocation(line: 40, column: 17, scope: !133)
!139 = !DILocation(line: 40, column: 21, scope: !133)
!140 = !DILocation(line: 40, column: 13, scope: !133)
!141 = !DILocation(line: 40, column: 26, scope: !133)
!142 = !DILocation(line: 41, column: 17, scope: !133)
!143 = !DILocation(line: 41, column: 21, scope: !133)
!144 = !DILocation(line: 41, column: 13, scope: !133)
!145 = !DILocation(line: 41, column: 26, scope: !133)
!146 = !DILocation(line: 42, column: 9, scope: !133)
!147 = !DILocation(line: 38, column: 28, scope: !126)
!148 = !DILocation(line: 38, column: 9, scope: !126)
!149 = !DILocation(line: 43, column: 5, scope: !128)
!150 = !DILocation(line: 36, column: 24, scope: !124)
!151 = !DILocation(line: 36, column: 5, scope: !124)
!152 = !DILocation(line: 44, column: 1, scope: !18)
!153 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !22, file: !1, line: 49, type: !21)
!154 = !DILocation(line: 49, column: 11, scope: !22)
!155 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sum", scope: !22, file: !1, line: 50, type: !4)
!156 = !DILocation(line: 50, column: 11, scope: !22)
!157 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !22, file: !1, line: 49, type: !21)
!158 = !DILocation(line: 49, column: 13, scope: !22)
!159 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !22, file: !1, line: 49, type: !21)
!160 = !DILocation(line: 49, column: 9, scope: !22)
!161 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 1, scope: !22, file: !1, line: 48, type: !21)
!162 = !DILocation(line: 48, column: 20, scope: !22)
!163 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !22, file: !1, line: 48, type: !5)
!164 = !DILocation(line: 48, column: 30, scope: !22)
!165 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !22, file: !1, line: 48, type: !5)
!166 = !DILocation(line: 48, column: 40, scope: !22)
!167 = !DILocation(line: 56, column: 13, scope: !168)
!168 = distinct !DILexicalBlock(scope: !169, file: !1, line: 56, column: 9)
!169 = distinct !DILexicalBlock(scope: !22, file: !1, line: 54, column: 5)
!170 = !DILocation(line: 56, column: 18, scope: !171)
!171 = distinct !DILexicalBlock(scope: !168, file: !1, line: 56, column: 9)
!172 = !DILocation(line: 58, column: 22, scope: !173)
!173 = distinct !DILexicalBlock(scope: !174, file: !1, line: 58, column: 13)
!174 = distinct !DILexicalBlock(scope: !175, file: !1, line: 58, column: 13)
!175 = distinct !DILexicalBlock(scope: !171, file: !1, line: 57, column: 9)
!176 = !DILocation(line: 67, column: 24, scope: !177)
!177 = distinct !DILexicalBlock(scope: !178, file: !1, line: 67, column: 13)
!178 = distinct !DILexicalBlock(scope: !175, file: !1, line: 67, column: 13)
!179 = !DILocation(line: 70, column: 26, scope: !180)
!180 = distinct !DILexicalBlock(scope: !181, file: !1, line: 70, column: 17)
!181 = distinct !DILexicalBlock(scope: !182, file: !1, line: 70, column: 17)
!182 = distinct !DILexicalBlock(scope: !177, file: !1, line: 68, column: 13)
!183 = !DILocation(line: 56, column: 9, scope: !168)
!184 = !DILocation(line: 58, column: 17, scope: !174)
!185 = !DILocation(line: 58, column: 13, scope: !174)
!186 = !DILocation(line: 61, column: 21, scope: !187)
!187 = distinct !DILexicalBlock(scope: !188, file: !1, line: 61, column: 17)
!188 = distinct !DILexicalBlock(scope: !173, file: !1, line: 59, column: 13)
!189 = !DILocation(line: 61, column: 26, scope: !190)
!190 = distinct !DILexicalBlock(scope: !187, file: !1, line: 61, column: 17)
!191 = !DILocation(line: 61, column: 17, scope: !187)
!192 = !DILocation(line: 63, column: 29, scope: !193)
!193 = distinct !DILexicalBlock(scope: !190, file: !1, line: 62, column: 17)
!194 = !DILocation(line: 63, column: 31, scope: !193)
!195 = !DILocation(line: 63, column: 26, scope: !193)
!196 = !DILocation(line: 63, column: 38, scope: !193)
!197 = !DILocation(line: 63, column: 40, scope: !193)
!198 = !DILocation(line: 63, column: 35, scope: !193)
!199 = !DILocation(line: 63, column: 34, scope: !193)
!200 = !DILocation(line: 63, column: 24, scope: !193)
!201 = !DILocation(line: 64, column: 17, scope: !193)
!202 = !DILocation(line: 61, column: 29, scope: !190)
!203 = !DILocation(line: 61, column: 17, scope: !190)
!204 = !DILocation(line: 65, column: 30, scope: !188)
!205 = !DILocation(line: 65, column: 32, scope: !188)
!206 = !DILocation(line: 65, column: 27, scope: !188)
!207 = !DILocation(line: 65, column: 35, scope: !188)
!208 = !DILocation(line: 65, column: 20, scope: !188)
!209 = !DILocation(line: 65, column: 22, scope: !188)
!210 = !DILocation(line: 65, column: 17, scope: !188)
!211 = !DILocation(line: 65, column: 25, scope: !188)
!212 = !DILocation(line: 66, column: 13, scope: !188)
!213 = !DILocation(line: 58, column: 25, scope: !173)
!214 = !DILocation(line: 58, column: 13, scope: !173)
!215 = !DILocation(line: 67, column: 20, scope: !178)
!216 = !DILocation(line: 67, column: 17, scope: !178)
!217 = !DILocation(line: 67, column: 13, scope: !178)
!218 = !DILocation(line: 70, column: 21, scope: !181)
!219 = !DILocation(line: 70, column: 17, scope: !181)
!220 = !DILocation(line: 72, column: 29, scope: !221)
!221 = distinct !DILexicalBlock(scope: !180, file: !1, line: 71, column: 17)
!222 = !DILocation(line: 72, column: 31, scope: !221)
!223 = !DILocation(line: 72, column: 26, scope: !221)
!224 = !DILocation(line: 72, column: 38, scope: !221)
!225 = !DILocation(line: 72, column: 40, scope: !221)
!226 = !DILocation(line: 72, column: 35, scope: !221)
!227 = !DILocation(line: 72, column: 34, scope: !221)
!228 = !DILocation(line: 72, column: 24, scope: !221)
!229 = !DILocation(line: 73, column: 17, scope: !221)
!230 = !DILocation(line: 70, column: 29, scope: !180)
!231 = !DILocation(line: 70, column: 17, scope: !180)
!232 = !DILocation(line: 74, column: 30, scope: !182)
!233 = !DILocation(line: 74, column: 32, scope: !182)
!234 = !DILocation(line: 74, column: 27, scope: !182)
!235 = !DILocation(line: 74, column: 35, scope: !182)
!236 = !DILocation(line: 74, column: 44, scope: !182)
!237 = !DILocation(line: 74, column: 46, scope: !182)
!238 = !DILocation(line: 74, column: 41, scope: !182)
!239 = !DILocation(line: 74, column: 40, scope: !182)
!240 = !DILocation(line: 74, column: 20, scope: !182)
!241 = !DILocation(line: 74, column: 22, scope: !182)
!242 = !DILocation(line: 74, column: 17, scope: !182)
!243 = !DILocation(line: 74, column: 25, scope: !182)
!244 = !DILocation(line: 75, column: 13, scope: !182)
!245 = !DILocation(line: 67, column: 27, scope: !177)
!246 = !DILocation(line: 67, column: 13, scope: !177)
!247 = !DILocation(line: 76, column: 9, scope: !175)
!248 = !DILocation(line: 56, column: 21, scope: !171)
!249 = !DILocation(line: 56, column: 9, scope: !171)
!250 = !DILocation(line: 78, column: 1, scope: !22)
!251 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !23, file: !1, line: 81, type: !21)
!252 = !DILocation(line: 81, column: 11, scope: !23)
!253 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !23, file: !1, line: 81, type: !21)
!254 = !DILocation(line: 81, column: 13, scope: !23)
!255 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !23, file: !1, line: 81, type: !21)
!256 = !DILocation(line: 81, column: 9, scope: !23)
!257 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "sum", scope: !23, file: !1, line: 82, type: !4)
!258 = !DILocation(line: 82, column: 11, scope: !23)
!259 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "s", arg: 1, scope: !23, file: !1, line: 80, type: !21)
!260 = !DILocation(line: 80, column: 20, scope: !23)
!261 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 2, scope: !23, file: !1, line: 80, type: !5)
!262 = !DILocation(line: 80, column: 30, scope: !23)
!263 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b", arg: 3, scope: !23, file: !1, line: 80, type: !5)
!264 = !DILocation(line: 80, column: 40, scope: !23)
!265 = !DILocation(line: 84, column: 9, scope: !266)
!266 = distinct !DILexicalBlock(scope: !23, file: !1, line: 84, column: 5)
!267 = !DILocation(line: 84, column: 14, scope: !268)
!268 = distinct !DILexicalBlock(scope: !266, file: !1, line: 84, column: 5)
!269 = !DILocation(line: 86, column: 18, scope: !270)
!270 = distinct !DILexicalBlock(scope: !271, file: !1, line: 86, column: 9)
!271 = distinct !DILexicalBlock(scope: !272, file: !1, line: 86, column: 9)
!272 = distinct !DILexicalBlock(scope: !268, file: !1, line: 85, column: 5)
!273 = !DILocation(line: 95, column: 20, scope: !274)
!274 = distinct !DILexicalBlock(scope: !275, file: !1, line: 95, column: 9)
!275 = distinct !DILexicalBlock(scope: !272, file: !1, line: 95, column: 9)
!276 = !DILocation(line: 98, column: 22, scope: !277)
!277 = distinct !DILexicalBlock(scope: !278, file: !1, line: 98, column: 13)
!278 = distinct !DILexicalBlock(scope: !279, file: !1, line: 98, column: 13)
!279 = distinct !DILexicalBlock(scope: !274, file: !1, line: 96, column: 9)
!280 = !DILocation(line: 84, column: 5, scope: !266)
!281 = !DILocation(line: 86, column: 13, scope: !271)
!282 = !DILocation(line: 86, column: 9, scope: !271)
!283 = !DILocation(line: 89, column: 17, scope: !284)
!284 = distinct !DILexicalBlock(scope: !285, file: !1, line: 89, column: 13)
!285 = distinct !DILexicalBlock(scope: !270, file: !1, line: 87, column: 9)
!286 = !DILocation(line: 89, column: 22, scope: !287)
!287 = distinct !DILexicalBlock(scope: !284, file: !1, line: 89, column: 13)
!288 = !DILocation(line: 89, column: 13, scope: !284)
!289 = !DILocation(line: 91, column: 25, scope: !290)
!290 = distinct !DILexicalBlock(scope: !287, file: !1, line: 90, column: 13)
!291 = !DILocation(line: 91, column: 27, scope: !290)
!292 = !DILocation(line: 91, column: 22, scope: !290)
!293 = !DILocation(line: 91, column: 34, scope: !290)
!294 = !DILocation(line: 91, column: 36, scope: !290)
!295 = !DILocation(line: 91, column: 31, scope: !290)
!296 = !DILocation(line: 91, column: 30, scope: !290)
!297 = !DILocation(line: 91, column: 20, scope: !290)
!298 = !DILocation(line: 92, column: 13, scope: !290)
!299 = !DILocation(line: 89, column: 25, scope: !287)
!300 = !DILocation(line: 89, column: 13, scope: !287)
!301 = !DILocation(line: 93, column: 26, scope: !285)
!302 = !DILocation(line: 93, column: 28, scope: !285)
!303 = !DILocation(line: 93, column: 23, scope: !285)
!304 = !DILocation(line: 93, column: 31, scope: !285)
!305 = !DILocation(line: 93, column: 16, scope: !285)
!306 = !DILocation(line: 93, column: 18, scope: !285)
!307 = !DILocation(line: 93, column: 13, scope: !285)
!308 = !DILocation(line: 93, column: 21, scope: !285)
!309 = !DILocation(line: 94, column: 9, scope: !285)
!310 = !DILocation(line: 86, column: 21, scope: !270)
!311 = !DILocation(line: 86, column: 9, scope: !270)
!312 = !DILocation(line: 95, column: 16, scope: !275)
!313 = !DILocation(line: 95, column: 13, scope: !275)
!314 = !DILocation(line: 95, column: 9, scope: !275)
!315 = !DILocation(line: 98, column: 17, scope: !278)
!316 = !DILocation(line: 98, column: 13, scope: !278)
!317 = !DILocation(line: 100, column: 25, scope: !318)
!318 = distinct !DILexicalBlock(scope: !277, file: !1, line: 99, column: 13)
!319 = !DILocation(line: 100, column: 27, scope: !318)
!320 = !DILocation(line: 100, column: 22, scope: !318)
!321 = !DILocation(line: 100, column: 34, scope: !318)
!322 = !DILocation(line: 100, column: 36, scope: !318)
!323 = !DILocation(line: 100, column: 31, scope: !318)
!324 = !DILocation(line: 100, column: 30, scope: !318)
!325 = !DILocation(line: 100, column: 20, scope: !318)
!326 = !DILocation(line: 101, column: 13, scope: !318)
!327 = !DILocation(line: 98, column: 25, scope: !277)
!328 = !DILocation(line: 98, column: 13, scope: !277)
!329 = !DILocation(line: 102, column: 26, scope: !279)
!330 = !DILocation(line: 102, column: 28, scope: !279)
!331 = !DILocation(line: 102, column: 23, scope: !279)
!332 = !DILocation(line: 102, column: 31, scope: !279)
!333 = !DILocation(line: 102, column: 40, scope: !279)
!334 = !DILocation(line: 102, column: 42, scope: !279)
!335 = !DILocation(line: 102, column: 37, scope: !279)
!336 = !DILocation(line: 102, column: 36, scope: !279)
!337 = !DILocation(line: 102, column: 16, scope: !279)
!338 = !DILocation(line: 102, column: 18, scope: !279)
!339 = !DILocation(line: 102, column: 13, scope: !279)
!340 = !DILocation(line: 102, column: 21, scope: !279)
!341 = !DILocation(line: 103, column: 9, scope: !279)
!342 = !DILocation(line: 95, column: 23, scope: !274)
!343 = !DILocation(line: 95, column: 9, scope: !274)
!344 = !DILocation(line: 104, column: 5, scope: !272)
!345 = !DILocation(line: 84, column: 17, scope: !268)
!346 = !DILocation(line: 84, column: 5, scope: !268)
!347 = !DILocation(line: 105, column: 1, scope: !23)
!348 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !24, file: !1, line: 109, type: !21)
!349 = !DILocation(line: 109, column: 10, scope: !24)
!350 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !24, file: !1, line: 109, type: !21)
!351 = !DILocation(line: 109, column: 7, scope: !24)
!352 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fail", scope: !24, file: !1, line: 109, type: !21)
!353 = !DILocation(line: 109, column: 13, scope: !24)
!354 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b_cpu", arg: 1, scope: !24, file: !1, line: 107, type: !5)
!355 = !DILocation(line: 107, column: 28, scope: !24)
!356 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "b_gpu", arg: 2, scope: !24, file: !1, line: 107, type: !5)
!357 = !DILocation(line: 107, column: 42, scope: !24)
!358 = !DILocation(line: 112, column: 15, scope: !359)
!359 = distinct !DILexicalBlock(scope: !360, file: !1, line: 112, column: 3)
!360 = distinct !DILexicalBlock(scope: !24, file: !1, line: 112, column: 3)
!361 = !DILocation(line: 114, column: 19, scope: !362)
!362 = distinct !DILexicalBlock(scope: !363, file: !1, line: 114, column: 7)
!363 = distinct !DILexicalBlock(scope: !364, file: !1, line: 114, column: 7)
!364 = distinct !DILexicalBlock(scope: !359, file: !1, line: 113, column: 5)
!365 = !DILocation(line: 116, column: 27, scope: !366)
!366 = distinct !DILexicalBlock(scope: !367, file: !1, line: 116, column: 8)
!367 = distinct !DILexicalBlock(scope: !362, file: !1, line: 115, column: 2)
!368 = !DILocation(line: 112, column: 8, scope: !360)
!369 = !DILocation(line: 112, column: 3, scope: !360)
!370 = !DILocation(line: 114, column: 12, scope: !363)
!371 = !DILocation(line: 114, column: 7, scope: !363)
!372 = !DILocation(line: 116, column: 33, scope: !366)
!373 = !DILocation(line: 116, column: 20, scope: !366)
!374 = !DILocation(line: 116, column: 46, scope: !366)
!375 = !DILocation(line: 116, column: 52, scope: !366)
!376 = !DILocation(line: 116, column: 39, scope: !366)
!377 = !DILocation(line: 116, column: 8, scope: !366)
!378 = !DILocation(line: 116, column: 58, scope: !366)
!379 = !DILocation(line: 116, column: 8, scope: !367)
!380 = !DILocation(line: 118, column: 12, scope: !381)
!381 = distinct !DILexicalBlock(scope: !366, file: !1, line: 117, column: 6)
!382 = !DILocation(line: 119, column: 6, scope: !381)
!383 = !DILocation(line: 120, column: 2, scope: !367)
!384 = !DILocation(line: 114, column: 28, scope: !362)
!385 = !DILocation(line: 114, column: 7, scope: !362)
!386 = !DILocation(line: 121, column: 5, scope: !364)
!387 = !DILocation(line: 112, column: 24, scope: !359)
!388 = !DILocation(line: 112, column: 3, scope: !359)
!389 = !DILocation(line: 124, column: 3, scope: !24)
!390 = !DILocation(line: 125, column: 1, scope: !24)
!391 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !27, file: !1, line: 130, type: !21)
!392 = !DILocation(line: 130, column: 9, scope: !27)
!393 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !27, file: !1, line: 127, type: !21)
!394 = !DILocation(line: 127, column: 14, scope: !27)
!395 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argv", arg: 2, scope: !27, file: !1, line: 127, type: !30)
!396 = !DILocation(line: 127, column: 26, scope: !27)
!397 = !DILocation(line: 133, column: 19, scope: !27)
!398 = !DILocation(line: 133, column: 9, scope: !27)
!399 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "a", scope: !27, file: !1, line: 132, type: !5)
!400 = !DILocation(line: 132, column: 12, scope: !27)
!401 = !DILocation(line: 134, column: 23, scope: !27)
!402 = !DILocation(line: 134, column: 13, scope: !27)
!403 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b_cpu", scope: !27, file: !1, line: 132, type: !5)
!404 = !DILocation(line: 132, column: 16, scope: !27)
!405 = !DILocation(line: 135, column: 23, scope: !27)
!406 = !DILocation(line: 135, column: 13, scope: !27)
!407 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "b_gpu", scope: !27, file: !1, line: 132, type: !5)
!408 = !DILocation(line: 132, column: 24, scope: !27)
!409 = !DILocation(line: 137, column: 13, scope: !27)
!410 = !DILocation(line: 137, column: 5, scope: !27)
!411 = !DILocation(line: 139, column: 15, scope: !27)
!412 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_start", scope: !27, file: !1, line: 129, type: !11)
!413 = !DILocation(line: 129, column: 12, scope: !27)
!414 = !DILocation(line: 140, column: 9, scope: !415)
!415 = distinct !DILexicalBlock(scope: !27, file: !1, line: 140, column: 5)
!416 = !DILocation(line: 140, column: 14, scope: !417)
!417 = distinct !DILexicalBlock(scope: !415, file: !1, line: 140, column: 5)
!418 = !DILocation(line: 140, column: 5, scope: !415)
!419 = !DILocation(line: 142, column: 9, scope: !420)
!420 = distinct !DILexicalBlock(scope: !417, file: !1, line: 141, column: 5)
!421 = !DILocation(line: 143, column: 9, scope: !420)
!422 = !DILocation(line: 144, column: 5, scope: !420)
!423 = !DILocation(line: 140, column: 21, scope: !417)
!424 = !DILocation(line: 140, column: 5, scope: !417)
!425 = !DILocation(line: 145, column: 13, scope: !27)
!426 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_end", scope: !27, file: !1, line: 129, type: !11)
!427 = !DILocation(line: 129, column: 21, scope: !27)
!428 = !DILocation(line: 146, column: 13, scope: !27)
!429 = !DILocation(line: 146, column: 53, scope: !27)
!430 = !DILocation(line: 146, column: 5, scope: !27)
!431 = !DILocation(line: 148, column: 15, scope: !27)
!432 = !DILocation(line: 149, column: 9, scope: !433)
!433 = distinct !DILexicalBlock(scope: !27, file: !1, line: 149, column: 5)
!434 = !DILocation(line: 149, column: 14, scope: !435)
!435 = distinct !DILexicalBlock(scope: !433, file: !1, line: 149, column: 5)
!436 = !DILocation(line: 149, column: 5, scope: !433)
!437 = !DILocation(line: 151, column: 9, scope: !438)
!438 = distinct !DILexicalBlock(scope: !435, file: !1, line: 150, column: 5)
!439 = !DILocation(line: 152, column: 9, scope: !438)
!440 = !DILocation(line: 153, column: 5, scope: !438)
!441 = !DILocation(line: 149, column: 21, scope: !435)
!442 = !DILocation(line: 149, column: 5, scope: !435)
!443 = !DILocation(line: 154, column: 13, scope: !27)
!444 = !DILocation(line: 155, column: 13, scope: !27)
!445 = !DILocation(line: 155, column: 53, scope: !27)
!446 = !DILocation(line: 155, column: 5, scope: !27)
!447 = !DILocation(line: 157, column: 5, scope: !27)
!448 = !DILocation(line: 159, column: 10, scope: !27)
!449 = !DILocation(line: 159, column: 5, scope: !27)
!450 = !DILocation(line: 160, column: 10, scope: !27)
!451 = !DILocation(line: 160, column: 5, scope: !27)
!452 = !DILocation(line: 161, column: 10, scope: !27)
!453 = !DILocation(line: 161, column: 5, scope: !27)
!454 = !DILocation(line: 163, column: 5, scope: !27)
