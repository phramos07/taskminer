# Makefile.in generated by automake 1.14.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
DIST_COMMON = $(srcdir)/../common/common.am $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am $(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/test-driver
bin_PROGRAMS = dpotrf_seq$(EXEEXT) dpotrf_taskdep$(EXEEXT) \
	dgetrf_seq$(EXEEXT) dgetrf_taskdep$(EXEEXT) \
	dgeqrf_seq$(EXEEXT) dgeqrf_taskdep$(EXEEXT)
subdir = plasma
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libplasma_par_a_AR = $(AR) $(ARFLAGS)
libplasma_par_a_LIBADD =
am_libplasma_par_a_OBJECTS =
libplasma_par_a_OBJECTS = $(am_libplasma_par_a_OBJECTS)
libplasma_seq_a_AR = $(AR) $(ARFLAGS)
libplasma_seq_a_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = src/libplasma_seq_a-auxiliary.$(OBJEXT) \
	src/libplasma_seq_a-core_dgeqrt.$(OBJEXT) \
	src/libplasma_seq_a-core_dgetrf_rectil.$(OBJEXT) \
	src/libplasma_seq_a-core_dlaswp.$(OBJEXT) \
	src/libplasma_seq_a-core_dormqr.$(OBJEXT) \
	src/libplasma_seq_a-core_dpamm.$(OBJEXT) \
	src/libplasma_seq_a-core_dparfb.$(OBJEXT) \
	src/libplasma_seq_a-core_dplgsy.$(OBJEXT) \
	src/libplasma_seq_a-core_dplrnt.$(OBJEXT) \
	src/libplasma_seq_a-core_dtsmqr.$(OBJEXT) \
	src/libplasma_seq_a-core_dtsqrt.$(OBJEXT) \
	src/libplasma_seq_a-dauxiliary.$(OBJEXT) \
	src/libplasma_seq_a-descriptor.$(OBJEXT) \
	src/libplasma_seq_a-dgeqrs.$(OBJEXT) \
	src/libplasma_seq_a-dgetrs.$(OBJEXT) \
	src/libplasma_seq_a-dpotrs.$(OBJEXT) \
	src/libplasma_seq_a-global.$(OBJEXT) \
	src/libplasma_seq_a-pdgeqrf.$(OBJEXT) \
	src/libplasma_seq_a-pdgetrf_rectil.$(OBJEXT) \
	src/libplasma_seq_a-pdlaswp.$(OBJEXT) \
	src/libplasma_seq_a-pdormqr.$(OBJEXT) \
	src/libplasma_seq_a-pdplgsy.$(OBJEXT) \
	src/libplasma_seq_a-pdpltmg.$(OBJEXT) \
	src/libplasma_seq_a-pdpotrf.$(OBJEXT) \
	src/libplasma_seq_a-pdtile.$(OBJEXT) \
	src/libplasma_seq_a-pdtrsm.$(OBJEXT) \
	src/libplasma_seq_a-workspace.$(OBJEXT)
am__objects_2 = libplasma_seq_a-main.$(OBJEXT)
am__objects_3 =
am__objects_4 = $(am__objects_3)
am__objects_5 = $(am__objects_1) $(am__objects_2) $(am__objects_4)
am_libplasma_seq_a_OBJECTS = $(am__objects_5)
libplasma_seq_a_OBJECTS = $(am_libplasma_seq_a_OBJECTS)
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_dgeqrf_seq_OBJECTS = src/dgeqrf_seq-time_dgeqrf-task.$(OBJEXT)
dgeqrf_seq_OBJECTS = $(am_dgeqrf_seq_OBJECTS)
am__DEPENDENCIES_1 =
dgeqrf_seq_DEPENDENCIES = libplasma-seq.a $(am__DEPENDENCIES_1)
dgeqrf_seq_LINK = $(CCLD) $(dgeqrf_seq_CFLAGS) $(CFLAGS) \
	$(dgeqrf_seq_LDFLAGS) $(LDFLAGS) -o $@
am__objects_6 = src/dgeqrf_taskdep-auxiliary.$(OBJEXT) \
	src/dgeqrf_taskdep-core_dgeqrt.$(OBJEXT) \
	src/dgeqrf_taskdep-core_dgetrf_rectil.$(OBJEXT) \
	src/dgeqrf_taskdep-core_dlaswp.$(OBJEXT) \
	src/dgeqrf_taskdep-core_dormqr.$(OBJEXT) \
	src/dgeqrf_taskdep-core_dpamm.$(OBJEXT) \
	src/dgeqrf_taskdep-core_dparfb.$(OBJEXT) \
	src/dgeqrf_taskdep-core_dplgsy.$(OBJEXT) \
	src/dgeqrf_taskdep-core_dplrnt.$(OBJEXT) \
	src/dgeqrf_taskdep-core_dtsmqr.$(OBJEXT) \
	src/dgeqrf_taskdep-core_dtsqrt.$(OBJEXT) \
	src/dgeqrf_taskdep-dauxiliary.$(OBJEXT) \
	src/dgeqrf_taskdep-descriptor.$(OBJEXT) \
	src/dgeqrf_taskdep-dgeqrs.$(OBJEXT) \
	src/dgeqrf_taskdep-dgetrs.$(OBJEXT) \
	src/dgeqrf_taskdep-dpotrs.$(OBJEXT) \
	src/dgeqrf_taskdep-global.$(OBJEXT) \
	src/dgeqrf_taskdep-pdgeqrf.$(OBJEXT) \
	src/dgeqrf_taskdep-pdgetrf_rectil.$(OBJEXT) \
	src/dgeqrf_taskdep-pdlaswp.$(OBJEXT) \
	src/dgeqrf_taskdep-pdormqr.$(OBJEXT) \
	src/dgeqrf_taskdep-pdplgsy.$(OBJEXT) \
	src/dgeqrf_taskdep-pdpltmg.$(OBJEXT) \
	src/dgeqrf_taskdep-pdpotrf.$(OBJEXT) \
	src/dgeqrf_taskdep-pdtile.$(OBJEXT) \
	src/dgeqrf_taskdep-pdtrsm.$(OBJEXT) \
	src/dgeqrf_taskdep-workspace.$(OBJEXT)
am__objects_7 = dgeqrf_taskdep-main.$(OBJEXT)
am__objects_8 = $(am__objects_6) $(am__objects_7) $(am__objects_4)
am_dgeqrf_taskdep_OBJECTS =  \
	src/dgeqrf_taskdep-time_dgeqrf-task.$(OBJEXT) $(am__objects_8)
dgeqrf_taskdep_OBJECTS = $(am_dgeqrf_taskdep_OBJECTS)
dgeqrf_taskdep_DEPENDENCIES = libplasma-par.a $(am__DEPENDENCIES_1)
dgeqrf_taskdep_LINK = $(CCLD) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) \
	$(dgeqrf_taskdep_LDFLAGS) $(LDFLAGS) -o $@
am_dgetrf_seq_OBJECTS = src/dgetrf_seq-time_dgetrf-task.$(OBJEXT)
dgetrf_seq_OBJECTS = $(am_dgetrf_seq_OBJECTS)
dgetrf_seq_DEPENDENCIES = libplasma-seq.a $(am__DEPENDENCIES_1)
dgetrf_seq_LINK = $(CCLD) $(dgetrf_seq_CFLAGS) $(CFLAGS) \
	$(dgetrf_seq_LDFLAGS) $(LDFLAGS) -o $@
am__objects_9 = src/dgetrf_taskdep-auxiliary.$(OBJEXT) \
	src/dgetrf_taskdep-core_dgeqrt.$(OBJEXT) \
	src/dgetrf_taskdep-core_dgetrf_rectil.$(OBJEXT) \
	src/dgetrf_taskdep-core_dlaswp.$(OBJEXT) \
	src/dgetrf_taskdep-core_dormqr.$(OBJEXT) \
	src/dgetrf_taskdep-core_dpamm.$(OBJEXT) \
	src/dgetrf_taskdep-core_dparfb.$(OBJEXT) \
	src/dgetrf_taskdep-core_dplgsy.$(OBJEXT) \
	src/dgetrf_taskdep-core_dplrnt.$(OBJEXT) \
	src/dgetrf_taskdep-core_dtsmqr.$(OBJEXT) \
	src/dgetrf_taskdep-core_dtsqrt.$(OBJEXT) \
	src/dgetrf_taskdep-dauxiliary.$(OBJEXT) \
	src/dgetrf_taskdep-descriptor.$(OBJEXT) \
	src/dgetrf_taskdep-dgeqrs.$(OBJEXT) \
	src/dgetrf_taskdep-dgetrs.$(OBJEXT) \
	src/dgetrf_taskdep-dpotrs.$(OBJEXT) \
	src/dgetrf_taskdep-global.$(OBJEXT) \
	src/dgetrf_taskdep-pdgeqrf.$(OBJEXT) \
	src/dgetrf_taskdep-pdgetrf_rectil.$(OBJEXT) \
	src/dgetrf_taskdep-pdlaswp.$(OBJEXT) \
	src/dgetrf_taskdep-pdormqr.$(OBJEXT) \
	src/dgetrf_taskdep-pdplgsy.$(OBJEXT) \
	src/dgetrf_taskdep-pdpltmg.$(OBJEXT) \
	src/dgetrf_taskdep-pdpotrf.$(OBJEXT) \
	src/dgetrf_taskdep-pdtile.$(OBJEXT) \
	src/dgetrf_taskdep-pdtrsm.$(OBJEXT) \
	src/dgetrf_taskdep-workspace.$(OBJEXT)
am__objects_10 = dgetrf_taskdep-main.$(OBJEXT)
am__objects_11 = $(am__objects_9) $(am__objects_10) $(am__objects_4)
am_dgetrf_taskdep_OBJECTS =  \
	src/dgetrf_taskdep-time_dgetrf-task.$(OBJEXT) \
	$(am__objects_11)
dgetrf_taskdep_OBJECTS = $(am_dgetrf_taskdep_OBJECTS)
dgetrf_taskdep_DEPENDENCIES = libplasma-par.a $(am__DEPENDENCIES_1)
dgetrf_taskdep_LINK = $(CCLD) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) \
	$(dgetrf_taskdep_LDFLAGS) $(LDFLAGS) -o $@
am_dpotrf_seq_OBJECTS = src/dpotrf_seq-time_dpotrf-task.$(OBJEXT)
dpotrf_seq_OBJECTS = $(am_dpotrf_seq_OBJECTS)
dpotrf_seq_DEPENDENCIES = libplasma-seq.a $(am__DEPENDENCIES_1)
dpotrf_seq_LINK = $(CCLD) $(dpotrf_seq_CFLAGS) $(CFLAGS) \
	$(dpotrf_seq_LDFLAGS) $(LDFLAGS) -o $@
am__objects_12 = src/dpotrf_taskdep-auxiliary.$(OBJEXT) \
	src/dpotrf_taskdep-core_dgeqrt.$(OBJEXT) \
	src/dpotrf_taskdep-core_dgetrf_rectil.$(OBJEXT) \
	src/dpotrf_taskdep-core_dlaswp.$(OBJEXT) \
	src/dpotrf_taskdep-core_dormqr.$(OBJEXT) \
	src/dpotrf_taskdep-core_dpamm.$(OBJEXT) \
	src/dpotrf_taskdep-core_dparfb.$(OBJEXT) \
	src/dpotrf_taskdep-core_dplgsy.$(OBJEXT) \
	src/dpotrf_taskdep-core_dplrnt.$(OBJEXT) \
	src/dpotrf_taskdep-core_dtsmqr.$(OBJEXT) \
	src/dpotrf_taskdep-core_dtsqrt.$(OBJEXT) \
	src/dpotrf_taskdep-dauxiliary.$(OBJEXT) \
	src/dpotrf_taskdep-descriptor.$(OBJEXT) \
	src/dpotrf_taskdep-dgeqrs.$(OBJEXT) \
	src/dpotrf_taskdep-dgetrs.$(OBJEXT) \
	src/dpotrf_taskdep-dpotrs.$(OBJEXT) \
	src/dpotrf_taskdep-global.$(OBJEXT) \
	src/dpotrf_taskdep-pdgeqrf.$(OBJEXT) \
	src/dpotrf_taskdep-pdgetrf_rectil.$(OBJEXT) \
	src/dpotrf_taskdep-pdlaswp.$(OBJEXT) \
	src/dpotrf_taskdep-pdormqr.$(OBJEXT) \
	src/dpotrf_taskdep-pdplgsy.$(OBJEXT) \
	src/dpotrf_taskdep-pdpltmg.$(OBJEXT) \
	src/dpotrf_taskdep-pdpotrf.$(OBJEXT) \
	src/dpotrf_taskdep-pdtile.$(OBJEXT) \
	src/dpotrf_taskdep-pdtrsm.$(OBJEXT) \
	src/dpotrf_taskdep-workspace.$(OBJEXT)
am__objects_13 = dpotrf_taskdep-main.$(OBJEXT)
am__objects_14 = $(am__objects_12) $(am__objects_13) $(am__objects_4)
am_dpotrf_taskdep_OBJECTS =  \
	src/dpotrf_taskdep-time_dpotrf-task.$(OBJEXT) \
	$(am__objects_14)
dpotrf_taskdep_OBJECTS = $(am_dpotrf_taskdep_OBJECTS)
dpotrf_taskdep_DEPENDENCIES = libplasma-par.a $(am__DEPENDENCIES_1)
dpotrf_taskdep_LINK = $(CCLD) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) \
	$(dpotrf_taskdep_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libplasma_par_a_SOURCES) $(libplasma_seq_a_SOURCES) \
	$(dgeqrf_seq_SOURCES) $(dgeqrf_taskdep_SOURCES) \
	$(dgetrf_seq_SOURCES) $(dgetrf_taskdep_SOURCES) \
	$(dpotrf_seq_SOURCES) $(dpotrf_taskdep_SOURCES)
DIST_SOURCES = $(libplasma_par_a_SOURCES) $(libplasma_seq_a_SOURCES) \
	$(dgeqrf_seq_SOURCES) $(dgeqrf_taskdep_SOURCES) \
	$(dgetrf_seq_SOURCES) $(dgetrf_taskdep_SOURCES) \
	$(dpotrf_seq_SOURCES) $(dpotrf_taskdep_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
I_PLASMA = @I_PLASMA@
LDFLAGS = @LDFLAGS@
LD_PLASMA = @LD_PLASMA@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
OBJEXT = @OBJEXT@
OPENMP_CFLAGS = @OPENMP_CFLAGS@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PLASMA_comLIBS = @PLASMA_comLIBS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
COMMON_SRCS = main.c
COMMON_HDRS = $(top_srcdir)/common/main.h $(top_srcdir)/common/timer.h
COMMON_comCFLAGS = -I$(top_srcdir)/common
COMMON_seqCFLAGS = -D_POSIX_C_SOURCE=199309L
COMMON_parCFLAGS = $(OPENMP_CFLAGS) -D_POSIX_C_SOURCE=199309L
COMMON_parLDFLAGS = $(OPENMP_LDFLAGS)
BUILT_SOURCES = main.c
CLEANFILES = $(check_SCRIPTS)
EXTRA_DIST = $(top_srcdir)/common/main.c
check_SCRIPTS = check_dgetrf_seq.sh\
				check_dgetrf_taskdep.sh\
				check_dgeqrf_seq.sh\
				check_dgeqrf_taskdep.sh\
				check_dpotrf_seq.sh\
				check_dpotrf_taskdep.sh

TESTS = $(check_SCRIPTS)

# Get all source files from ./src except the one called time_xxx
plasma_SRCS = \
	src/auxiliary.c 		\
	src/core_dgeqrt.c		\
	src/core_dgetrf_rectil.c	\
	src/core_dlaswp.c 		\
	src/core_dormqr.c 		\
	src/core_dpamm.c 		\
	src/core_dparfb.c 		\
	src/core_dplgsy.c		\
	src/core_dplrnt.c		\
	src/core_dtsmqr.c 		\
	src/core_dtsqrt.c		\
	src/dauxiliary.c		\
	src/descriptor.c		\
	src/dgeqrs.c 			\
	src/dgetrs.c 			\
	src/dpotrs.c			\
	src/global.c			\
	src/pdgeqrf.c 			\
	src/pdgetrf_rectil.c 		\
	src/pdlaswp.c 			\
	src/pdormqr.c			\
	src/pdplgsy.c			\
	src/pdpltmg.c			\
	src/pdpotrf.c			\
	src/pdtile.c 			\
	src/pdtrsm.c 			\
	src/workspace.c

plasma_common_HDRS = include/common.h\
					 include/auxiliary.h\
					 include/compute_d.h\
					 include/core_blas.h\
					 include/core_dblas.h\
					 include/dauxiliary.h\
					 include/descriptor.h\
					 include/flops.h\
					 include/plasma.h\
					 include/plasma_d.h\
					 include/plasmatypes.h\
					 include/random.h\
					 include/tile.h\
					 include/timing.h\
					 include/workspace.h\
					 src/timing.inc\
					 $(COMMON_HDRS)

plasma_common_SRCS = $(plasma_SRCS) $(COMMON_SRCS) $(plasma_common_HDRS)
plasma_comLIBS = @PLASMA_comLIBS@ @LD_PLASMA@
noinst_LIBRARIES = libplasma-seq.a libplasma-par.a
libplasma_seq_a_SOURCES = $(plasma_common_SRCS)
libplasma_par_a_SOURCES = 
dpotrf_seq_SOURCES = src/time_dpotrf-task.c
dpotrf_taskdep_SOURCES = src/time_dpotrf-task.c $(plasma_common_SRCS)
dgetrf_seq_SOURCES = src/time_dgetrf-task.c
dgetrf_taskdep_SOURCES = src/time_dgetrf-task.c $(plasma_common_SRCS)
dgeqrf_seq_SOURCES = src/time_dgeqrf-task.c
dgeqrf_taskdep_SOURCES = src/time_dgeqrf-task.c $(plasma_common_SRCS)
dpotrf_seq_LDADD = libplasma-seq.a $(plasma_comLIBS)
dpotrf_taskdep_LDADD = libplasma-par.a $(plasma_comLIBS)
dgetrf_seq_LDADD = libplasma-seq.a $(plasma_comLIBS)
dgetrf_taskdep_LDADD = libplasma-par.a $(plasma_comLIBS)
dgeqrf_seq_LDADD = libplasma-seq.a $(plasma_comLIBS)
dgeqrf_taskdep_LDADD = libplasma-par.a $(plasma_comLIBS)
plasma_comCFLAGS = -I$(srcdir)/include $(COMMON_comCFLAGS) \
		-DADD_ -DMSIZE -DBSIZE -DGFLOPS @I_PLASMA@

plasma_seqCFLAGS = $(plasma_comCFLAGS) $(COMMON_seqCFLAGS)
plasma_parCFLAGS = $(plasma_comCFLAGS) $(COMMON_parCFLAGS)
libplasma_seq_a_CFLAGS = $(plasma_seqCFLAGS)
libplasma_par_a_CFLAGS = $(plasma_parCFLAGS)
dpotrf_seq_CFLAGS = $(plasma_seqCFLAGS)
dpotrf_taskdep_CFLAGS = $(plasma_parCFLAGS)
dgetrf_seq_CFLAGS = $(plasma_seqCFLAGS)
dgetrf_taskdep_CFLAGS = $(plasma_parCFLAGS)
dgeqrf_seq_CFLAGS = $(plasma_seqCFLAGS) -DIBSIZE
dgeqrf_taskdep_CFLAGS = $(plasma_parCFLAGS) -DIBSIZE
plasma_comLDFLAGS = $(COMMON_comLDFLAGS)
plasma_seqLDFLAGS = $(plasma_comLDFLAGS) $(COMMON_seqLDFLAGS)
plasma_parLDFLAGS = $(plasma_comLDFLAGS) $(COMMON_parLDFLAGS)
dpotrf_seq_LDFLAGS = $(plasma_seqLDFLAGS)
dpotrf_taskdep_LDFLAGS = $(plasma_parLDFLAGS)
dgetrf_seq_LDFLAGS = $(plasma_seqLDFLAGS)
dgetrf_taskdep_LDFLAGS = $(plasma_parLDFLAGS)
dgeqrf_seq_LDFLAGS = $(plasma_seqLDFLAGS)
dgeqrf_taskdep_LDFLAGS = $(plasma_parLDFLAGS)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/../common/common.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign plasma/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign plasma/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/../common/common.am:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

libplasma-par.a: $(libplasma_par_a_OBJECTS) $(libplasma_par_a_DEPENDENCIES) $(EXTRA_libplasma_par_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libplasma-par.a
	$(AM_V_AR)$(libplasma_par_a_AR) libplasma-par.a $(libplasma_par_a_OBJECTS) $(libplasma_par_a_LIBADD)
	$(AM_V_at)$(RANLIB) libplasma-par.a
src/$(am__dirstamp):
	@$(MKDIR_P) src
	@: > src/$(am__dirstamp)
src/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/$(DEPDIR)
	@: > src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-auxiliary.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-core_dgeqrt.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-core_dgetrf_rectil.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-core_dlaswp.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-core_dormqr.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-core_dpamm.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-core_dparfb.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-core_dplgsy.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-core_dplrnt.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-core_dtsmqr.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-core_dtsqrt.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-dauxiliary.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-descriptor.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-dgeqrs.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-dgetrs.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-dpotrs.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-global.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-pdgeqrf.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-pdgetrf_rectil.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-pdlaswp.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-pdormqr.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-pdplgsy.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-pdpltmg.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-pdpotrf.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-pdtile.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-pdtrsm.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/libplasma_seq_a-workspace.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

libplasma-seq.a: $(libplasma_seq_a_OBJECTS) $(libplasma_seq_a_DEPENDENCIES) $(EXTRA_libplasma_seq_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libplasma-seq.a
	$(AM_V_AR)$(libplasma_seq_a_AR) libplasma-seq.a $(libplasma_seq_a_OBJECTS) $(libplasma_seq_a_LIBADD)
	$(AM_V_at)$(RANLIB) libplasma-seq.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
src/dgeqrf_seq-time_dgeqrf-task.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

dgeqrf_seq$(EXEEXT): $(dgeqrf_seq_OBJECTS) $(dgeqrf_seq_DEPENDENCIES) $(EXTRA_dgeqrf_seq_DEPENDENCIES) 
	@rm -f dgeqrf_seq$(EXEEXT)
	$(AM_V_CCLD)$(dgeqrf_seq_LINK) $(dgeqrf_seq_OBJECTS) $(dgeqrf_seq_LDADD) $(LIBS)
src/dgeqrf_taskdep-time_dgeqrf-task.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-auxiliary.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-core_dgeqrt.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-core_dgetrf_rectil.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-core_dlaswp.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-core_dormqr.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-core_dpamm.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-core_dparfb.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-core_dplgsy.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-core_dplrnt.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-core_dtsmqr.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-core_dtsqrt.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-dauxiliary.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-descriptor.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-dgeqrs.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-dgetrs.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-dpotrs.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-global.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-pdgeqrf.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-pdgetrf_rectil.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-pdlaswp.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-pdormqr.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-pdplgsy.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-pdpltmg.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-pdpotrf.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-pdtile.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-pdtrsm.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgeqrf_taskdep-workspace.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

dgeqrf_taskdep$(EXEEXT): $(dgeqrf_taskdep_OBJECTS) $(dgeqrf_taskdep_DEPENDENCIES) $(EXTRA_dgeqrf_taskdep_DEPENDENCIES) 
	@rm -f dgeqrf_taskdep$(EXEEXT)
	$(AM_V_CCLD)$(dgeqrf_taskdep_LINK) $(dgeqrf_taskdep_OBJECTS) $(dgeqrf_taskdep_LDADD) $(LIBS)
src/dgetrf_seq-time_dgetrf-task.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

dgetrf_seq$(EXEEXT): $(dgetrf_seq_OBJECTS) $(dgetrf_seq_DEPENDENCIES) $(EXTRA_dgetrf_seq_DEPENDENCIES) 
	@rm -f dgetrf_seq$(EXEEXT)
	$(AM_V_CCLD)$(dgetrf_seq_LINK) $(dgetrf_seq_OBJECTS) $(dgetrf_seq_LDADD) $(LIBS)
src/dgetrf_taskdep-time_dgetrf-task.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-auxiliary.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-core_dgeqrt.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-core_dgetrf_rectil.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-core_dlaswp.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-core_dormqr.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-core_dpamm.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-core_dparfb.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-core_dplgsy.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-core_dplrnt.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-core_dtsmqr.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-core_dtsqrt.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-dauxiliary.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-descriptor.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-dgeqrs.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-dgetrs.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-dpotrs.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-global.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-pdgeqrf.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-pdgetrf_rectil.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-pdlaswp.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-pdormqr.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-pdplgsy.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-pdpltmg.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-pdpotrf.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-pdtile.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-pdtrsm.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dgetrf_taskdep-workspace.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

dgetrf_taskdep$(EXEEXT): $(dgetrf_taskdep_OBJECTS) $(dgetrf_taskdep_DEPENDENCIES) $(EXTRA_dgetrf_taskdep_DEPENDENCIES) 
	@rm -f dgetrf_taskdep$(EXEEXT)
	$(AM_V_CCLD)$(dgetrf_taskdep_LINK) $(dgetrf_taskdep_OBJECTS) $(dgetrf_taskdep_LDADD) $(LIBS)
src/dpotrf_seq-time_dpotrf-task.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

dpotrf_seq$(EXEEXT): $(dpotrf_seq_OBJECTS) $(dpotrf_seq_DEPENDENCIES) $(EXTRA_dpotrf_seq_DEPENDENCIES) 
	@rm -f dpotrf_seq$(EXEEXT)
	$(AM_V_CCLD)$(dpotrf_seq_LINK) $(dpotrf_seq_OBJECTS) $(dpotrf_seq_LDADD) $(LIBS)
src/dpotrf_taskdep-time_dpotrf-task.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-auxiliary.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-core_dgeqrt.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-core_dgetrf_rectil.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-core_dlaswp.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-core_dormqr.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-core_dpamm.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-core_dparfb.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-core_dplgsy.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-core_dplrnt.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-core_dtsmqr.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-core_dtsqrt.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-dauxiliary.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-descriptor.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-dgeqrs.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-dgetrs.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-dpotrs.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-global.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-pdgeqrf.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-pdgetrf_rectil.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-pdlaswp.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-pdormqr.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-pdplgsy.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-pdpltmg.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-pdpotrf.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-pdtile.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-pdtrsm.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)
src/dpotrf_taskdep-workspace.$(OBJEXT): src/$(am__dirstamp) \
	src/$(DEPDIR)/$(am__dirstamp)

dpotrf_taskdep$(EXEEXT): $(dpotrf_taskdep_OBJECTS) $(dpotrf_taskdep_DEPENDENCIES) $(EXTRA_dpotrf_taskdep_DEPENDENCIES) 
	@rm -f dpotrf_taskdep$(EXEEXT)
	$(AM_V_CCLD)$(dpotrf_taskdep_LINK) $(dpotrf_taskdep_OBJECTS) $(dpotrf_taskdep_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f src/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dgeqrf_taskdep-main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dgetrf_taskdep-main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dpotrf_taskdep-main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libplasma_seq_a-main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_seq-time_dgeqrf-task.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-auxiliary.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-core_dgeqrt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-core_dgetrf_rectil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-core_dlaswp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-core_dormqr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-core_dpamm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-core_dparfb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-core_dplgsy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-core_dplrnt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-core_dtsmqr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-core_dtsqrt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-dauxiliary.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-descriptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-dgeqrs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-dgetrs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-dpotrs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-global.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-pdgeqrf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-pdgetrf_rectil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-pdlaswp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-pdormqr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-pdplgsy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-pdpltmg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-pdpotrf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-pdtile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-pdtrsm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-time_dgeqrf-task.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgeqrf_taskdep-workspace.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_seq-time_dgetrf-task.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-auxiliary.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-core_dgeqrt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-core_dgetrf_rectil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-core_dlaswp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-core_dormqr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-core_dpamm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-core_dparfb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-core_dplgsy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-core_dplrnt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-core_dtsmqr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-core_dtsqrt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-dauxiliary.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-descriptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-dgeqrs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-dgetrs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-dpotrs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-global.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-pdgeqrf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-pdgetrf_rectil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-pdlaswp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-pdormqr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-pdplgsy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-pdpltmg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-pdpotrf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-pdtile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-pdtrsm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-time_dgetrf-task.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dgetrf_taskdep-workspace.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_seq-time_dpotrf-task.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-auxiliary.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-core_dgeqrt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-core_dgetrf_rectil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-core_dlaswp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-core_dormqr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-core_dpamm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-core_dparfb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-core_dplgsy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-core_dplrnt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-core_dtsmqr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-core_dtsqrt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-dauxiliary.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-descriptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-dgeqrs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-dgetrs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-dpotrs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-global.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-pdgeqrf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-pdgetrf_rectil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-pdlaswp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-pdormqr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-pdplgsy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-pdpltmg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-pdpotrf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-pdtile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-pdtrsm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-time_dpotrf-task.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/dpotrf_taskdep-workspace.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-auxiliary.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-core_dgeqrt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-core_dgetrf_rectil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-core_dlaswp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-core_dormqr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-core_dpamm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-core_dparfb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-core_dplgsy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-core_dplrnt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-core_dtsmqr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-core_dtsqrt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-dauxiliary.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-descriptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-dgeqrs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-dgetrs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-dpotrs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-global.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-pdgeqrf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-pdgetrf_rectil.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-pdlaswp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-pdormqr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-pdplgsy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-pdpltmg.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-pdpotrf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-pdtile.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-pdtrsm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/$(DEPDIR)/libplasma_seq_a-workspace.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

src/libplasma_seq_a-auxiliary.o: src/auxiliary.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-auxiliary.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-auxiliary.Tpo -c -o src/libplasma_seq_a-auxiliary.o `test -f 'src/auxiliary.c' || echo '$(srcdir)/'`src/auxiliary.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-auxiliary.Tpo src/$(DEPDIR)/libplasma_seq_a-auxiliary.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/auxiliary.c' object='src/libplasma_seq_a-auxiliary.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-auxiliary.o `test -f 'src/auxiliary.c' || echo '$(srcdir)/'`src/auxiliary.c

src/libplasma_seq_a-auxiliary.obj: src/auxiliary.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-auxiliary.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-auxiliary.Tpo -c -o src/libplasma_seq_a-auxiliary.obj `if test -f 'src/auxiliary.c'; then $(CYGPATH_W) 'src/auxiliary.c'; else $(CYGPATH_W) '$(srcdir)/src/auxiliary.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-auxiliary.Tpo src/$(DEPDIR)/libplasma_seq_a-auxiliary.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/auxiliary.c' object='src/libplasma_seq_a-auxiliary.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-auxiliary.obj `if test -f 'src/auxiliary.c'; then $(CYGPATH_W) 'src/auxiliary.c'; else $(CYGPATH_W) '$(srcdir)/src/auxiliary.c'; fi`

src/libplasma_seq_a-core_dgeqrt.o: src/core_dgeqrt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-core_dgeqrt.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-core_dgeqrt.Tpo -c -o src/libplasma_seq_a-core_dgeqrt.o `test -f 'src/core_dgeqrt.c' || echo '$(srcdir)/'`src/core_dgeqrt.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-core_dgeqrt.Tpo src/$(DEPDIR)/libplasma_seq_a-core_dgeqrt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dgeqrt.c' object='src/libplasma_seq_a-core_dgeqrt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-core_dgeqrt.o `test -f 'src/core_dgeqrt.c' || echo '$(srcdir)/'`src/core_dgeqrt.c

src/libplasma_seq_a-core_dgeqrt.obj: src/core_dgeqrt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-core_dgeqrt.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-core_dgeqrt.Tpo -c -o src/libplasma_seq_a-core_dgeqrt.obj `if test -f 'src/core_dgeqrt.c'; then $(CYGPATH_W) 'src/core_dgeqrt.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dgeqrt.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-core_dgeqrt.Tpo src/$(DEPDIR)/libplasma_seq_a-core_dgeqrt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dgeqrt.c' object='src/libplasma_seq_a-core_dgeqrt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-core_dgeqrt.obj `if test -f 'src/core_dgeqrt.c'; then $(CYGPATH_W) 'src/core_dgeqrt.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dgeqrt.c'; fi`

src/libplasma_seq_a-core_dgetrf_rectil.o: src/core_dgetrf_rectil.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-core_dgetrf_rectil.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-core_dgetrf_rectil.Tpo -c -o src/libplasma_seq_a-core_dgetrf_rectil.o `test -f 'src/core_dgetrf_rectil.c' || echo '$(srcdir)/'`src/core_dgetrf_rectil.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-core_dgetrf_rectil.Tpo src/$(DEPDIR)/libplasma_seq_a-core_dgetrf_rectil.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dgetrf_rectil.c' object='src/libplasma_seq_a-core_dgetrf_rectil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-core_dgetrf_rectil.o `test -f 'src/core_dgetrf_rectil.c' || echo '$(srcdir)/'`src/core_dgetrf_rectil.c

src/libplasma_seq_a-core_dgetrf_rectil.obj: src/core_dgetrf_rectil.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-core_dgetrf_rectil.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-core_dgetrf_rectil.Tpo -c -o src/libplasma_seq_a-core_dgetrf_rectil.obj `if test -f 'src/core_dgetrf_rectil.c'; then $(CYGPATH_W) 'src/core_dgetrf_rectil.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dgetrf_rectil.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-core_dgetrf_rectil.Tpo src/$(DEPDIR)/libplasma_seq_a-core_dgetrf_rectil.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dgetrf_rectil.c' object='src/libplasma_seq_a-core_dgetrf_rectil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-core_dgetrf_rectil.obj `if test -f 'src/core_dgetrf_rectil.c'; then $(CYGPATH_W) 'src/core_dgetrf_rectil.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dgetrf_rectil.c'; fi`

src/libplasma_seq_a-core_dlaswp.o: src/core_dlaswp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-core_dlaswp.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-core_dlaswp.Tpo -c -o src/libplasma_seq_a-core_dlaswp.o `test -f 'src/core_dlaswp.c' || echo '$(srcdir)/'`src/core_dlaswp.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-core_dlaswp.Tpo src/$(DEPDIR)/libplasma_seq_a-core_dlaswp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dlaswp.c' object='src/libplasma_seq_a-core_dlaswp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-core_dlaswp.o `test -f 'src/core_dlaswp.c' || echo '$(srcdir)/'`src/core_dlaswp.c

src/libplasma_seq_a-core_dlaswp.obj: src/core_dlaswp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-core_dlaswp.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-core_dlaswp.Tpo -c -o src/libplasma_seq_a-core_dlaswp.obj `if test -f 'src/core_dlaswp.c'; then $(CYGPATH_W) 'src/core_dlaswp.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dlaswp.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-core_dlaswp.Tpo src/$(DEPDIR)/libplasma_seq_a-core_dlaswp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dlaswp.c' object='src/libplasma_seq_a-core_dlaswp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-core_dlaswp.obj `if test -f 'src/core_dlaswp.c'; then $(CYGPATH_W) 'src/core_dlaswp.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dlaswp.c'; fi`

src/libplasma_seq_a-core_dormqr.o: src/core_dormqr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-core_dormqr.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-core_dormqr.Tpo -c -o src/libplasma_seq_a-core_dormqr.o `test -f 'src/core_dormqr.c' || echo '$(srcdir)/'`src/core_dormqr.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-core_dormqr.Tpo src/$(DEPDIR)/libplasma_seq_a-core_dormqr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dormqr.c' object='src/libplasma_seq_a-core_dormqr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-core_dormqr.o `test -f 'src/core_dormqr.c' || echo '$(srcdir)/'`src/core_dormqr.c

src/libplasma_seq_a-core_dormqr.obj: src/core_dormqr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-core_dormqr.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-core_dormqr.Tpo -c -o src/libplasma_seq_a-core_dormqr.obj `if test -f 'src/core_dormqr.c'; then $(CYGPATH_W) 'src/core_dormqr.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dormqr.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-core_dormqr.Tpo src/$(DEPDIR)/libplasma_seq_a-core_dormqr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dormqr.c' object='src/libplasma_seq_a-core_dormqr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-core_dormqr.obj `if test -f 'src/core_dormqr.c'; then $(CYGPATH_W) 'src/core_dormqr.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dormqr.c'; fi`

src/libplasma_seq_a-core_dpamm.o: src/core_dpamm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-core_dpamm.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-core_dpamm.Tpo -c -o src/libplasma_seq_a-core_dpamm.o `test -f 'src/core_dpamm.c' || echo '$(srcdir)/'`src/core_dpamm.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-core_dpamm.Tpo src/$(DEPDIR)/libplasma_seq_a-core_dpamm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dpamm.c' object='src/libplasma_seq_a-core_dpamm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-core_dpamm.o `test -f 'src/core_dpamm.c' || echo '$(srcdir)/'`src/core_dpamm.c

src/libplasma_seq_a-core_dpamm.obj: src/core_dpamm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-core_dpamm.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-core_dpamm.Tpo -c -o src/libplasma_seq_a-core_dpamm.obj `if test -f 'src/core_dpamm.c'; then $(CYGPATH_W) 'src/core_dpamm.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dpamm.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-core_dpamm.Tpo src/$(DEPDIR)/libplasma_seq_a-core_dpamm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dpamm.c' object='src/libplasma_seq_a-core_dpamm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-core_dpamm.obj `if test -f 'src/core_dpamm.c'; then $(CYGPATH_W) 'src/core_dpamm.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dpamm.c'; fi`

src/libplasma_seq_a-core_dparfb.o: src/core_dparfb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-core_dparfb.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-core_dparfb.Tpo -c -o src/libplasma_seq_a-core_dparfb.o `test -f 'src/core_dparfb.c' || echo '$(srcdir)/'`src/core_dparfb.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-core_dparfb.Tpo src/$(DEPDIR)/libplasma_seq_a-core_dparfb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dparfb.c' object='src/libplasma_seq_a-core_dparfb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-core_dparfb.o `test -f 'src/core_dparfb.c' || echo '$(srcdir)/'`src/core_dparfb.c

src/libplasma_seq_a-core_dparfb.obj: src/core_dparfb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-core_dparfb.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-core_dparfb.Tpo -c -o src/libplasma_seq_a-core_dparfb.obj `if test -f 'src/core_dparfb.c'; then $(CYGPATH_W) 'src/core_dparfb.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dparfb.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-core_dparfb.Tpo src/$(DEPDIR)/libplasma_seq_a-core_dparfb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dparfb.c' object='src/libplasma_seq_a-core_dparfb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-core_dparfb.obj `if test -f 'src/core_dparfb.c'; then $(CYGPATH_W) 'src/core_dparfb.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dparfb.c'; fi`

src/libplasma_seq_a-core_dplgsy.o: src/core_dplgsy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-core_dplgsy.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-core_dplgsy.Tpo -c -o src/libplasma_seq_a-core_dplgsy.o `test -f 'src/core_dplgsy.c' || echo '$(srcdir)/'`src/core_dplgsy.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-core_dplgsy.Tpo src/$(DEPDIR)/libplasma_seq_a-core_dplgsy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dplgsy.c' object='src/libplasma_seq_a-core_dplgsy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-core_dplgsy.o `test -f 'src/core_dplgsy.c' || echo '$(srcdir)/'`src/core_dplgsy.c

src/libplasma_seq_a-core_dplgsy.obj: src/core_dplgsy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-core_dplgsy.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-core_dplgsy.Tpo -c -o src/libplasma_seq_a-core_dplgsy.obj `if test -f 'src/core_dplgsy.c'; then $(CYGPATH_W) 'src/core_dplgsy.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dplgsy.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-core_dplgsy.Tpo src/$(DEPDIR)/libplasma_seq_a-core_dplgsy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dplgsy.c' object='src/libplasma_seq_a-core_dplgsy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-core_dplgsy.obj `if test -f 'src/core_dplgsy.c'; then $(CYGPATH_W) 'src/core_dplgsy.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dplgsy.c'; fi`

src/libplasma_seq_a-core_dplrnt.o: src/core_dplrnt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-core_dplrnt.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-core_dplrnt.Tpo -c -o src/libplasma_seq_a-core_dplrnt.o `test -f 'src/core_dplrnt.c' || echo '$(srcdir)/'`src/core_dplrnt.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-core_dplrnt.Tpo src/$(DEPDIR)/libplasma_seq_a-core_dplrnt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dplrnt.c' object='src/libplasma_seq_a-core_dplrnt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-core_dplrnt.o `test -f 'src/core_dplrnt.c' || echo '$(srcdir)/'`src/core_dplrnt.c

src/libplasma_seq_a-core_dplrnt.obj: src/core_dplrnt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-core_dplrnt.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-core_dplrnt.Tpo -c -o src/libplasma_seq_a-core_dplrnt.obj `if test -f 'src/core_dplrnt.c'; then $(CYGPATH_W) 'src/core_dplrnt.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dplrnt.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-core_dplrnt.Tpo src/$(DEPDIR)/libplasma_seq_a-core_dplrnt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dplrnt.c' object='src/libplasma_seq_a-core_dplrnt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-core_dplrnt.obj `if test -f 'src/core_dplrnt.c'; then $(CYGPATH_W) 'src/core_dplrnt.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dplrnt.c'; fi`

src/libplasma_seq_a-core_dtsmqr.o: src/core_dtsmqr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-core_dtsmqr.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-core_dtsmqr.Tpo -c -o src/libplasma_seq_a-core_dtsmqr.o `test -f 'src/core_dtsmqr.c' || echo '$(srcdir)/'`src/core_dtsmqr.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-core_dtsmqr.Tpo src/$(DEPDIR)/libplasma_seq_a-core_dtsmqr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dtsmqr.c' object='src/libplasma_seq_a-core_dtsmqr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-core_dtsmqr.o `test -f 'src/core_dtsmqr.c' || echo '$(srcdir)/'`src/core_dtsmqr.c

src/libplasma_seq_a-core_dtsmqr.obj: src/core_dtsmqr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-core_dtsmqr.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-core_dtsmqr.Tpo -c -o src/libplasma_seq_a-core_dtsmqr.obj `if test -f 'src/core_dtsmqr.c'; then $(CYGPATH_W) 'src/core_dtsmqr.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dtsmqr.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-core_dtsmqr.Tpo src/$(DEPDIR)/libplasma_seq_a-core_dtsmqr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dtsmqr.c' object='src/libplasma_seq_a-core_dtsmqr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-core_dtsmqr.obj `if test -f 'src/core_dtsmqr.c'; then $(CYGPATH_W) 'src/core_dtsmqr.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dtsmqr.c'; fi`

src/libplasma_seq_a-core_dtsqrt.o: src/core_dtsqrt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-core_dtsqrt.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-core_dtsqrt.Tpo -c -o src/libplasma_seq_a-core_dtsqrt.o `test -f 'src/core_dtsqrt.c' || echo '$(srcdir)/'`src/core_dtsqrt.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-core_dtsqrt.Tpo src/$(DEPDIR)/libplasma_seq_a-core_dtsqrt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dtsqrt.c' object='src/libplasma_seq_a-core_dtsqrt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-core_dtsqrt.o `test -f 'src/core_dtsqrt.c' || echo '$(srcdir)/'`src/core_dtsqrt.c

src/libplasma_seq_a-core_dtsqrt.obj: src/core_dtsqrt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-core_dtsqrt.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-core_dtsqrt.Tpo -c -o src/libplasma_seq_a-core_dtsqrt.obj `if test -f 'src/core_dtsqrt.c'; then $(CYGPATH_W) 'src/core_dtsqrt.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dtsqrt.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-core_dtsqrt.Tpo src/$(DEPDIR)/libplasma_seq_a-core_dtsqrt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dtsqrt.c' object='src/libplasma_seq_a-core_dtsqrt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-core_dtsqrt.obj `if test -f 'src/core_dtsqrt.c'; then $(CYGPATH_W) 'src/core_dtsqrt.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dtsqrt.c'; fi`

src/libplasma_seq_a-dauxiliary.o: src/dauxiliary.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-dauxiliary.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-dauxiliary.Tpo -c -o src/libplasma_seq_a-dauxiliary.o `test -f 'src/dauxiliary.c' || echo '$(srcdir)/'`src/dauxiliary.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-dauxiliary.Tpo src/$(DEPDIR)/libplasma_seq_a-dauxiliary.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dauxiliary.c' object='src/libplasma_seq_a-dauxiliary.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-dauxiliary.o `test -f 'src/dauxiliary.c' || echo '$(srcdir)/'`src/dauxiliary.c

src/libplasma_seq_a-dauxiliary.obj: src/dauxiliary.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-dauxiliary.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-dauxiliary.Tpo -c -o src/libplasma_seq_a-dauxiliary.obj `if test -f 'src/dauxiliary.c'; then $(CYGPATH_W) 'src/dauxiliary.c'; else $(CYGPATH_W) '$(srcdir)/src/dauxiliary.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-dauxiliary.Tpo src/$(DEPDIR)/libplasma_seq_a-dauxiliary.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dauxiliary.c' object='src/libplasma_seq_a-dauxiliary.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-dauxiliary.obj `if test -f 'src/dauxiliary.c'; then $(CYGPATH_W) 'src/dauxiliary.c'; else $(CYGPATH_W) '$(srcdir)/src/dauxiliary.c'; fi`

src/libplasma_seq_a-descriptor.o: src/descriptor.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-descriptor.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-descriptor.Tpo -c -o src/libplasma_seq_a-descriptor.o `test -f 'src/descriptor.c' || echo '$(srcdir)/'`src/descriptor.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-descriptor.Tpo src/$(DEPDIR)/libplasma_seq_a-descriptor.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/descriptor.c' object='src/libplasma_seq_a-descriptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-descriptor.o `test -f 'src/descriptor.c' || echo '$(srcdir)/'`src/descriptor.c

src/libplasma_seq_a-descriptor.obj: src/descriptor.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-descriptor.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-descriptor.Tpo -c -o src/libplasma_seq_a-descriptor.obj `if test -f 'src/descriptor.c'; then $(CYGPATH_W) 'src/descriptor.c'; else $(CYGPATH_W) '$(srcdir)/src/descriptor.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-descriptor.Tpo src/$(DEPDIR)/libplasma_seq_a-descriptor.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/descriptor.c' object='src/libplasma_seq_a-descriptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-descriptor.obj `if test -f 'src/descriptor.c'; then $(CYGPATH_W) 'src/descriptor.c'; else $(CYGPATH_W) '$(srcdir)/src/descriptor.c'; fi`

src/libplasma_seq_a-dgeqrs.o: src/dgeqrs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-dgeqrs.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-dgeqrs.Tpo -c -o src/libplasma_seq_a-dgeqrs.o `test -f 'src/dgeqrs.c' || echo '$(srcdir)/'`src/dgeqrs.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-dgeqrs.Tpo src/$(DEPDIR)/libplasma_seq_a-dgeqrs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dgeqrs.c' object='src/libplasma_seq_a-dgeqrs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-dgeqrs.o `test -f 'src/dgeqrs.c' || echo '$(srcdir)/'`src/dgeqrs.c

src/libplasma_seq_a-dgeqrs.obj: src/dgeqrs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-dgeqrs.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-dgeqrs.Tpo -c -o src/libplasma_seq_a-dgeqrs.obj `if test -f 'src/dgeqrs.c'; then $(CYGPATH_W) 'src/dgeqrs.c'; else $(CYGPATH_W) '$(srcdir)/src/dgeqrs.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-dgeqrs.Tpo src/$(DEPDIR)/libplasma_seq_a-dgeqrs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dgeqrs.c' object='src/libplasma_seq_a-dgeqrs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-dgeqrs.obj `if test -f 'src/dgeqrs.c'; then $(CYGPATH_W) 'src/dgeqrs.c'; else $(CYGPATH_W) '$(srcdir)/src/dgeqrs.c'; fi`

src/libplasma_seq_a-dgetrs.o: src/dgetrs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-dgetrs.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-dgetrs.Tpo -c -o src/libplasma_seq_a-dgetrs.o `test -f 'src/dgetrs.c' || echo '$(srcdir)/'`src/dgetrs.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-dgetrs.Tpo src/$(DEPDIR)/libplasma_seq_a-dgetrs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dgetrs.c' object='src/libplasma_seq_a-dgetrs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-dgetrs.o `test -f 'src/dgetrs.c' || echo '$(srcdir)/'`src/dgetrs.c

src/libplasma_seq_a-dgetrs.obj: src/dgetrs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-dgetrs.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-dgetrs.Tpo -c -o src/libplasma_seq_a-dgetrs.obj `if test -f 'src/dgetrs.c'; then $(CYGPATH_W) 'src/dgetrs.c'; else $(CYGPATH_W) '$(srcdir)/src/dgetrs.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-dgetrs.Tpo src/$(DEPDIR)/libplasma_seq_a-dgetrs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dgetrs.c' object='src/libplasma_seq_a-dgetrs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-dgetrs.obj `if test -f 'src/dgetrs.c'; then $(CYGPATH_W) 'src/dgetrs.c'; else $(CYGPATH_W) '$(srcdir)/src/dgetrs.c'; fi`

src/libplasma_seq_a-dpotrs.o: src/dpotrs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-dpotrs.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-dpotrs.Tpo -c -o src/libplasma_seq_a-dpotrs.o `test -f 'src/dpotrs.c' || echo '$(srcdir)/'`src/dpotrs.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-dpotrs.Tpo src/$(DEPDIR)/libplasma_seq_a-dpotrs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dpotrs.c' object='src/libplasma_seq_a-dpotrs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-dpotrs.o `test -f 'src/dpotrs.c' || echo '$(srcdir)/'`src/dpotrs.c

src/libplasma_seq_a-dpotrs.obj: src/dpotrs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-dpotrs.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-dpotrs.Tpo -c -o src/libplasma_seq_a-dpotrs.obj `if test -f 'src/dpotrs.c'; then $(CYGPATH_W) 'src/dpotrs.c'; else $(CYGPATH_W) '$(srcdir)/src/dpotrs.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-dpotrs.Tpo src/$(DEPDIR)/libplasma_seq_a-dpotrs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dpotrs.c' object='src/libplasma_seq_a-dpotrs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-dpotrs.obj `if test -f 'src/dpotrs.c'; then $(CYGPATH_W) 'src/dpotrs.c'; else $(CYGPATH_W) '$(srcdir)/src/dpotrs.c'; fi`

src/libplasma_seq_a-global.o: src/global.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-global.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-global.Tpo -c -o src/libplasma_seq_a-global.o `test -f 'src/global.c' || echo '$(srcdir)/'`src/global.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-global.Tpo src/$(DEPDIR)/libplasma_seq_a-global.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/global.c' object='src/libplasma_seq_a-global.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-global.o `test -f 'src/global.c' || echo '$(srcdir)/'`src/global.c

src/libplasma_seq_a-global.obj: src/global.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-global.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-global.Tpo -c -o src/libplasma_seq_a-global.obj `if test -f 'src/global.c'; then $(CYGPATH_W) 'src/global.c'; else $(CYGPATH_W) '$(srcdir)/src/global.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-global.Tpo src/$(DEPDIR)/libplasma_seq_a-global.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/global.c' object='src/libplasma_seq_a-global.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-global.obj `if test -f 'src/global.c'; then $(CYGPATH_W) 'src/global.c'; else $(CYGPATH_W) '$(srcdir)/src/global.c'; fi`

src/libplasma_seq_a-pdgeqrf.o: src/pdgeqrf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-pdgeqrf.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-pdgeqrf.Tpo -c -o src/libplasma_seq_a-pdgeqrf.o `test -f 'src/pdgeqrf.c' || echo '$(srcdir)/'`src/pdgeqrf.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-pdgeqrf.Tpo src/$(DEPDIR)/libplasma_seq_a-pdgeqrf.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdgeqrf.c' object='src/libplasma_seq_a-pdgeqrf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-pdgeqrf.o `test -f 'src/pdgeqrf.c' || echo '$(srcdir)/'`src/pdgeqrf.c

src/libplasma_seq_a-pdgeqrf.obj: src/pdgeqrf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-pdgeqrf.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-pdgeqrf.Tpo -c -o src/libplasma_seq_a-pdgeqrf.obj `if test -f 'src/pdgeqrf.c'; then $(CYGPATH_W) 'src/pdgeqrf.c'; else $(CYGPATH_W) '$(srcdir)/src/pdgeqrf.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-pdgeqrf.Tpo src/$(DEPDIR)/libplasma_seq_a-pdgeqrf.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdgeqrf.c' object='src/libplasma_seq_a-pdgeqrf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-pdgeqrf.obj `if test -f 'src/pdgeqrf.c'; then $(CYGPATH_W) 'src/pdgeqrf.c'; else $(CYGPATH_W) '$(srcdir)/src/pdgeqrf.c'; fi`

src/libplasma_seq_a-pdgetrf_rectil.o: src/pdgetrf_rectil.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-pdgetrf_rectil.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-pdgetrf_rectil.Tpo -c -o src/libplasma_seq_a-pdgetrf_rectil.o `test -f 'src/pdgetrf_rectil.c' || echo '$(srcdir)/'`src/pdgetrf_rectil.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-pdgetrf_rectil.Tpo src/$(DEPDIR)/libplasma_seq_a-pdgetrf_rectil.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdgetrf_rectil.c' object='src/libplasma_seq_a-pdgetrf_rectil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-pdgetrf_rectil.o `test -f 'src/pdgetrf_rectil.c' || echo '$(srcdir)/'`src/pdgetrf_rectil.c

src/libplasma_seq_a-pdgetrf_rectil.obj: src/pdgetrf_rectil.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-pdgetrf_rectil.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-pdgetrf_rectil.Tpo -c -o src/libplasma_seq_a-pdgetrf_rectil.obj `if test -f 'src/pdgetrf_rectil.c'; then $(CYGPATH_W) 'src/pdgetrf_rectil.c'; else $(CYGPATH_W) '$(srcdir)/src/pdgetrf_rectil.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-pdgetrf_rectil.Tpo src/$(DEPDIR)/libplasma_seq_a-pdgetrf_rectil.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdgetrf_rectil.c' object='src/libplasma_seq_a-pdgetrf_rectil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-pdgetrf_rectil.obj `if test -f 'src/pdgetrf_rectil.c'; then $(CYGPATH_W) 'src/pdgetrf_rectil.c'; else $(CYGPATH_W) '$(srcdir)/src/pdgetrf_rectil.c'; fi`

src/libplasma_seq_a-pdlaswp.o: src/pdlaswp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-pdlaswp.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-pdlaswp.Tpo -c -o src/libplasma_seq_a-pdlaswp.o `test -f 'src/pdlaswp.c' || echo '$(srcdir)/'`src/pdlaswp.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-pdlaswp.Tpo src/$(DEPDIR)/libplasma_seq_a-pdlaswp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdlaswp.c' object='src/libplasma_seq_a-pdlaswp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-pdlaswp.o `test -f 'src/pdlaswp.c' || echo '$(srcdir)/'`src/pdlaswp.c

src/libplasma_seq_a-pdlaswp.obj: src/pdlaswp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-pdlaswp.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-pdlaswp.Tpo -c -o src/libplasma_seq_a-pdlaswp.obj `if test -f 'src/pdlaswp.c'; then $(CYGPATH_W) 'src/pdlaswp.c'; else $(CYGPATH_W) '$(srcdir)/src/pdlaswp.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-pdlaswp.Tpo src/$(DEPDIR)/libplasma_seq_a-pdlaswp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdlaswp.c' object='src/libplasma_seq_a-pdlaswp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-pdlaswp.obj `if test -f 'src/pdlaswp.c'; then $(CYGPATH_W) 'src/pdlaswp.c'; else $(CYGPATH_W) '$(srcdir)/src/pdlaswp.c'; fi`

src/libplasma_seq_a-pdormqr.o: src/pdormqr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-pdormqr.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-pdormqr.Tpo -c -o src/libplasma_seq_a-pdormqr.o `test -f 'src/pdormqr.c' || echo '$(srcdir)/'`src/pdormqr.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-pdormqr.Tpo src/$(DEPDIR)/libplasma_seq_a-pdormqr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdormqr.c' object='src/libplasma_seq_a-pdormqr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-pdormqr.o `test -f 'src/pdormqr.c' || echo '$(srcdir)/'`src/pdormqr.c

src/libplasma_seq_a-pdormqr.obj: src/pdormqr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-pdormqr.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-pdormqr.Tpo -c -o src/libplasma_seq_a-pdormqr.obj `if test -f 'src/pdormqr.c'; then $(CYGPATH_W) 'src/pdormqr.c'; else $(CYGPATH_W) '$(srcdir)/src/pdormqr.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-pdormqr.Tpo src/$(DEPDIR)/libplasma_seq_a-pdormqr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdormqr.c' object='src/libplasma_seq_a-pdormqr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-pdormqr.obj `if test -f 'src/pdormqr.c'; then $(CYGPATH_W) 'src/pdormqr.c'; else $(CYGPATH_W) '$(srcdir)/src/pdormqr.c'; fi`

src/libplasma_seq_a-pdplgsy.o: src/pdplgsy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-pdplgsy.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-pdplgsy.Tpo -c -o src/libplasma_seq_a-pdplgsy.o `test -f 'src/pdplgsy.c' || echo '$(srcdir)/'`src/pdplgsy.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-pdplgsy.Tpo src/$(DEPDIR)/libplasma_seq_a-pdplgsy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdplgsy.c' object='src/libplasma_seq_a-pdplgsy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-pdplgsy.o `test -f 'src/pdplgsy.c' || echo '$(srcdir)/'`src/pdplgsy.c

src/libplasma_seq_a-pdplgsy.obj: src/pdplgsy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-pdplgsy.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-pdplgsy.Tpo -c -o src/libplasma_seq_a-pdplgsy.obj `if test -f 'src/pdplgsy.c'; then $(CYGPATH_W) 'src/pdplgsy.c'; else $(CYGPATH_W) '$(srcdir)/src/pdplgsy.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-pdplgsy.Tpo src/$(DEPDIR)/libplasma_seq_a-pdplgsy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdplgsy.c' object='src/libplasma_seq_a-pdplgsy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-pdplgsy.obj `if test -f 'src/pdplgsy.c'; then $(CYGPATH_W) 'src/pdplgsy.c'; else $(CYGPATH_W) '$(srcdir)/src/pdplgsy.c'; fi`

src/libplasma_seq_a-pdpltmg.o: src/pdpltmg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-pdpltmg.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-pdpltmg.Tpo -c -o src/libplasma_seq_a-pdpltmg.o `test -f 'src/pdpltmg.c' || echo '$(srcdir)/'`src/pdpltmg.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-pdpltmg.Tpo src/$(DEPDIR)/libplasma_seq_a-pdpltmg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdpltmg.c' object='src/libplasma_seq_a-pdpltmg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-pdpltmg.o `test -f 'src/pdpltmg.c' || echo '$(srcdir)/'`src/pdpltmg.c

src/libplasma_seq_a-pdpltmg.obj: src/pdpltmg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-pdpltmg.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-pdpltmg.Tpo -c -o src/libplasma_seq_a-pdpltmg.obj `if test -f 'src/pdpltmg.c'; then $(CYGPATH_W) 'src/pdpltmg.c'; else $(CYGPATH_W) '$(srcdir)/src/pdpltmg.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-pdpltmg.Tpo src/$(DEPDIR)/libplasma_seq_a-pdpltmg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdpltmg.c' object='src/libplasma_seq_a-pdpltmg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-pdpltmg.obj `if test -f 'src/pdpltmg.c'; then $(CYGPATH_W) 'src/pdpltmg.c'; else $(CYGPATH_W) '$(srcdir)/src/pdpltmg.c'; fi`

src/libplasma_seq_a-pdpotrf.o: src/pdpotrf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-pdpotrf.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-pdpotrf.Tpo -c -o src/libplasma_seq_a-pdpotrf.o `test -f 'src/pdpotrf.c' || echo '$(srcdir)/'`src/pdpotrf.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-pdpotrf.Tpo src/$(DEPDIR)/libplasma_seq_a-pdpotrf.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdpotrf.c' object='src/libplasma_seq_a-pdpotrf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-pdpotrf.o `test -f 'src/pdpotrf.c' || echo '$(srcdir)/'`src/pdpotrf.c

src/libplasma_seq_a-pdpotrf.obj: src/pdpotrf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-pdpotrf.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-pdpotrf.Tpo -c -o src/libplasma_seq_a-pdpotrf.obj `if test -f 'src/pdpotrf.c'; then $(CYGPATH_W) 'src/pdpotrf.c'; else $(CYGPATH_W) '$(srcdir)/src/pdpotrf.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-pdpotrf.Tpo src/$(DEPDIR)/libplasma_seq_a-pdpotrf.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdpotrf.c' object='src/libplasma_seq_a-pdpotrf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-pdpotrf.obj `if test -f 'src/pdpotrf.c'; then $(CYGPATH_W) 'src/pdpotrf.c'; else $(CYGPATH_W) '$(srcdir)/src/pdpotrf.c'; fi`

src/libplasma_seq_a-pdtile.o: src/pdtile.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-pdtile.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-pdtile.Tpo -c -o src/libplasma_seq_a-pdtile.o `test -f 'src/pdtile.c' || echo '$(srcdir)/'`src/pdtile.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-pdtile.Tpo src/$(DEPDIR)/libplasma_seq_a-pdtile.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdtile.c' object='src/libplasma_seq_a-pdtile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-pdtile.o `test -f 'src/pdtile.c' || echo '$(srcdir)/'`src/pdtile.c

src/libplasma_seq_a-pdtile.obj: src/pdtile.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-pdtile.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-pdtile.Tpo -c -o src/libplasma_seq_a-pdtile.obj `if test -f 'src/pdtile.c'; then $(CYGPATH_W) 'src/pdtile.c'; else $(CYGPATH_W) '$(srcdir)/src/pdtile.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-pdtile.Tpo src/$(DEPDIR)/libplasma_seq_a-pdtile.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdtile.c' object='src/libplasma_seq_a-pdtile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-pdtile.obj `if test -f 'src/pdtile.c'; then $(CYGPATH_W) 'src/pdtile.c'; else $(CYGPATH_W) '$(srcdir)/src/pdtile.c'; fi`

src/libplasma_seq_a-pdtrsm.o: src/pdtrsm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-pdtrsm.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-pdtrsm.Tpo -c -o src/libplasma_seq_a-pdtrsm.o `test -f 'src/pdtrsm.c' || echo '$(srcdir)/'`src/pdtrsm.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-pdtrsm.Tpo src/$(DEPDIR)/libplasma_seq_a-pdtrsm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdtrsm.c' object='src/libplasma_seq_a-pdtrsm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-pdtrsm.o `test -f 'src/pdtrsm.c' || echo '$(srcdir)/'`src/pdtrsm.c

src/libplasma_seq_a-pdtrsm.obj: src/pdtrsm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-pdtrsm.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-pdtrsm.Tpo -c -o src/libplasma_seq_a-pdtrsm.obj `if test -f 'src/pdtrsm.c'; then $(CYGPATH_W) 'src/pdtrsm.c'; else $(CYGPATH_W) '$(srcdir)/src/pdtrsm.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-pdtrsm.Tpo src/$(DEPDIR)/libplasma_seq_a-pdtrsm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdtrsm.c' object='src/libplasma_seq_a-pdtrsm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-pdtrsm.obj `if test -f 'src/pdtrsm.c'; then $(CYGPATH_W) 'src/pdtrsm.c'; else $(CYGPATH_W) '$(srcdir)/src/pdtrsm.c'; fi`

src/libplasma_seq_a-workspace.o: src/workspace.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-workspace.o -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-workspace.Tpo -c -o src/libplasma_seq_a-workspace.o `test -f 'src/workspace.c' || echo '$(srcdir)/'`src/workspace.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-workspace.Tpo src/$(DEPDIR)/libplasma_seq_a-workspace.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/workspace.c' object='src/libplasma_seq_a-workspace.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-workspace.o `test -f 'src/workspace.c' || echo '$(srcdir)/'`src/workspace.c

src/libplasma_seq_a-workspace.obj: src/workspace.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT src/libplasma_seq_a-workspace.obj -MD -MP -MF src/$(DEPDIR)/libplasma_seq_a-workspace.Tpo -c -o src/libplasma_seq_a-workspace.obj `if test -f 'src/workspace.c'; then $(CYGPATH_W) 'src/workspace.c'; else $(CYGPATH_W) '$(srcdir)/src/workspace.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/libplasma_seq_a-workspace.Tpo src/$(DEPDIR)/libplasma_seq_a-workspace.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/workspace.c' object='src/libplasma_seq_a-workspace.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o src/libplasma_seq_a-workspace.obj `if test -f 'src/workspace.c'; then $(CYGPATH_W) 'src/workspace.c'; else $(CYGPATH_W) '$(srcdir)/src/workspace.c'; fi`

libplasma_seq_a-main.o: main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT libplasma_seq_a-main.o -MD -MP -MF $(DEPDIR)/libplasma_seq_a-main.Tpo -c -o libplasma_seq_a-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libplasma_seq_a-main.Tpo $(DEPDIR)/libplasma_seq_a-main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='main.c' object='libplasma_seq_a-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o libplasma_seq_a-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

libplasma_seq_a-main.obj: main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -MT libplasma_seq_a-main.obj -MD -MP -MF $(DEPDIR)/libplasma_seq_a-main.Tpo -c -o libplasma_seq_a-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libplasma_seq_a-main.Tpo $(DEPDIR)/libplasma_seq_a-main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='main.c' object='libplasma_seq_a-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libplasma_seq_a_CFLAGS) $(CFLAGS) -c -o libplasma_seq_a-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

src/dgeqrf_seq-time_dgeqrf-task.o: src/time_dgeqrf-task.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_seq_CFLAGS) $(CFLAGS) -MT src/dgeqrf_seq-time_dgeqrf-task.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_seq-time_dgeqrf-task.Tpo -c -o src/dgeqrf_seq-time_dgeqrf-task.o `test -f 'src/time_dgeqrf-task.c' || echo '$(srcdir)/'`src/time_dgeqrf-task.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_seq-time_dgeqrf-task.Tpo src/$(DEPDIR)/dgeqrf_seq-time_dgeqrf-task.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/time_dgeqrf-task.c' object='src/dgeqrf_seq-time_dgeqrf-task.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_seq_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_seq-time_dgeqrf-task.o `test -f 'src/time_dgeqrf-task.c' || echo '$(srcdir)/'`src/time_dgeqrf-task.c

src/dgeqrf_seq-time_dgeqrf-task.obj: src/time_dgeqrf-task.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_seq_CFLAGS) $(CFLAGS) -MT src/dgeqrf_seq-time_dgeqrf-task.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_seq-time_dgeqrf-task.Tpo -c -o src/dgeqrf_seq-time_dgeqrf-task.obj `if test -f 'src/time_dgeqrf-task.c'; then $(CYGPATH_W) 'src/time_dgeqrf-task.c'; else $(CYGPATH_W) '$(srcdir)/src/time_dgeqrf-task.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_seq-time_dgeqrf-task.Tpo src/$(DEPDIR)/dgeqrf_seq-time_dgeqrf-task.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/time_dgeqrf-task.c' object='src/dgeqrf_seq-time_dgeqrf-task.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_seq_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_seq-time_dgeqrf-task.obj `if test -f 'src/time_dgeqrf-task.c'; then $(CYGPATH_W) 'src/time_dgeqrf-task.c'; else $(CYGPATH_W) '$(srcdir)/src/time_dgeqrf-task.c'; fi`

src/dgeqrf_taskdep-time_dgeqrf-task.o: src/time_dgeqrf-task.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-time_dgeqrf-task.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-time_dgeqrf-task.Tpo -c -o src/dgeqrf_taskdep-time_dgeqrf-task.o `test -f 'src/time_dgeqrf-task.c' || echo '$(srcdir)/'`src/time_dgeqrf-task.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-time_dgeqrf-task.Tpo src/$(DEPDIR)/dgeqrf_taskdep-time_dgeqrf-task.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/time_dgeqrf-task.c' object='src/dgeqrf_taskdep-time_dgeqrf-task.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-time_dgeqrf-task.o `test -f 'src/time_dgeqrf-task.c' || echo '$(srcdir)/'`src/time_dgeqrf-task.c

src/dgeqrf_taskdep-time_dgeqrf-task.obj: src/time_dgeqrf-task.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-time_dgeqrf-task.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-time_dgeqrf-task.Tpo -c -o src/dgeqrf_taskdep-time_dgeqrf-task.obj `if test -f 'src/time_dgeqrf-task.c'; then $(CYGPATH_W) 'src/time_dgeqrf-task.c'; else $(CYGPATH_W) '$(srcdir)/src/time_dgeqrf-task.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-time_dgeqrf-task.Tpo src/$(DEPDIR)/dgeqrf_taskdep-time_dgeqrf-task.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/time_dgeqrf-task.c' object='src/dgeqrf_taskdep-time_dgeqrf-task.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-time_dgeqrf-task.obj `if test -f 'src/time_dgeqrf-task.c'; then $(CYGPATH_W) 'src/time_dgeqrf-task.c'; else $(CYGPATH_W) '$(srcdir)/src/time_dgeqrf-task.c'; fi`

src/dgeqrf_taskdep-auxiliary.o: src/auxiliary.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-auxiliary.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-auxiliary.Tpo -c -o src/dgeqrf_taskdep-auxiliary.o `test -f 'src/auxiliary.c' || echo '$(srcdir)/'`src/auxiliary.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-auxiliary.Tpo src/$(DEPDIR)/dgeqrf_taskdep-auxiliary.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/auxiliary.c' object='src/dgeqrf_taskdep-auxiliary.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-auxiliary.o `test -f 'src/auxiliary.c' || echo '$(srcdir)/'`src/auxiliary.c

src/dgeqrf_taskdep-auxiliary.obj: src/auxiliary.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-auxiliary.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-auxiliary.Tpo -c -o src/dgeqrf_taskdep-auxiliary.obj `if test -f 'src/auxiliary.c'; then $(CYGPATH_W) 'src/auxiliary.c'; else $(CYGPATH_W) '$(srcdir)/src/auxiliary.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-auxiliary.Tpo src/$(DEPDIR)/dgeqrf_taskdep-auxiliary.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/auxiliary.c' object='src/dgeqrf_taskdep-auxiliary.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-auxiliary.obj `if test -f 'src/auxiliary.c'; then $(CYGPATH_W) 'src/auxiliary.c'; else $(CYGPATH_W) '$(srcdir)/src/auxiliary.c'; fi`

src/dgeqrf_taskdep-core_dgeqrt.o: src/core_dgeqrt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-core_dgeqrt.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-core_dgeqrt.Tpo -c -o src/dgeqrf_taskdep-core_dgeqrt.o `test -f 'src/core_dgeqrt.c' || echo '$(srcdir)/'`src/core_dgeqrt.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-core_dgeqrt.Tpo src/$(DEPDIR)/dgeqrf_taskdep-core_dgeqrt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dgeqrt.c' object='src/dgeqrf_taskdep-core_dgeqrt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-core_dgeqrt.o `test -f 'src/core_dgeqrt.c' || echo '$(srcdir)/'`src/core_dgeqrt.c

src/dgeqrf_taskdep-core_dgeqrt.obj: src/core_dgeqrt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-core_dgeqrt.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-core_dgeqrt.Tpo -c -o src/dgeqrf_taskdep-core_dgeqrt.obj `if test -f 'src/core_dgeqrt.c'; then $(CYGPATH_W) 'src/core_dgeqrt.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dgeqrt.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-core_dgeqrt.Tpo src/$(DEPDIR)/dgeqrf_taskdep-core_dgeqrt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dgeqrt.c' object='src/dgeqrf_taskdep-core_dgeqrt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-core_dgeqrt.obj `if test -f 'src/core_dgeqrt.c'; then $(CYGPATH_W) 'src/core_dgeqrt.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dgeqrt.c'; fi`

src/dgeqrf_taskdep-core_dgetrf_rectil.o: src/core_dgetrf_rectil.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-core_dgetrf_rectil.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-core_dgetrf_rectil.Tpo -c -o src/dgeqrf_taskdep-core_dgetrf_rectil.o `test -f 'src/core_dgetrf_rectil.c' || echo '$(srcdir)/'`src/core_dgetrf_rectil.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-core_dgetrf_rectil.Tpo src/$(DEPDIR)/dgeqrf_taskdep-core_dgetrf_rectil.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dgetrf_rectil.c' object='src/dgeqrf_taskdep-core_dgetrf_rectil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-core_dgetrf_rectil.o `test -f 'src/core_dgetrf_rectil.c' || echo '$(srcdir)/'`src/core_dgetrf_rectil.c

src/dgeqrf_taskdep-core_dgetrf_rectil.obj: src/core_dgetrf_rectil.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-core_dgetrf_rectil.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-core_dgetrf_rectil.Tpo -c -o src/dgeqrf_taskdep-core_dgetrf_rectil.obj `if test -f 'src/core_dgetrf_rectil.c'; then $(CYGPATH_W) 'src/core_dgetrf_rectil.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dgetrf_rectil.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-core_dgetrf_rectil.Tpo src/$(DEPDIR)/dgeqrf_taskdep-core_dgetrf_rectil.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dgetrf_rectil.c' object='src/dgeqrf_taskdep-core_dgetrf_rectil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-core_dgetrf_rectil.obj `if test -f 'src/core_dgetrf_rectil.c'; then $(CYGPATH_W) 'src/core_dgetrf_rectil.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dgetrf_rectil.c'; fi`

src/dgeqrf_taskdep-core_dlaswp.o: src/core_dlaswp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-core_dlaswp.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-core_dlaswp.Tpo -c -o src/dgeqrf_taskdep-core_dlaswp.o `test -f 'src/core_dlaswp.c' || echo '$(srcdir)/'`src/core_dlaswp.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-core_dlaswp.Tpo src/$(DEPDIR)/dgeqrf_taskdep-core_dlaswp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dlaswp.c' object='src/dgeqrf_taskdep-core_dlaswp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-core_dlaswp.o `test -f 'src/core_dlaswp.c' || echo '$(srcdir)/'`src/core_dlaswp.c

src/dgeqrf_taskdep-core_dlaswp.obj: src/core_dlaswp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-core_dlaswp.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-core_dlaswp.Tpo -c -o src/dgeqrf_taskdep-core_dlaswp.obj `if test -f 'src/core_dlaswp.c'; then $(CYGPATH_W) 'src/core_dlaswp.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dlaswp.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-core_dlaswp.Tpo src/$(DEPDIR)/dgeqrf_taskdep-core_dlaswp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dlaswp.c' object='src/dgeqrf_taskdep-core_dlaswp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-core_dlaswp.obj `if test -f 'src/core_dlaswp.c'; then $(CYGPATH_W) 'src/core_dlaswp.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dlaswp.c'; fi`

src/dgeqrf_taskdep-core_dormqr.o: src/core_dormqr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-core_dormqr.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-core_dormqr.Tpo -c -o src/dgeqrf_taskdep-core_dormqr.o `test -f 'src/core_dormqr.c' || echo '$(srcdir)/'`src/core_dormqr.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-core_dormqr.Tpo src/$(DEPDIR)/dgeqrf_taskdep-core_dormqr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dormqr.c' object='src/dgeqrf_taskdep-core_dormqr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-core_dormqr.o `test -f 'src/core_dormqr.c' || echo '$(srcdir)/'`src/core_dormqr.c

src/dgeqrf_taskdep-core_dormqr.obj: src/core_dormqr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-core_dormqr.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-core_dormqr.Tpo -c -o src/dgeqrf_taskdep-core_dormqr.obj `if test -f 'src/core_dormqr.c'; then $(CYGPATH_W) 'src/core_dormqr.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dormqr.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-core_dormqr.Tpo src/$(DEPDIR)/dgeqrf_taskdep-core_dormqr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dormqr.c' object='src/dgeqrf_taskdep-core_dormqr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-core_dormqr.obj `if test -f 'src/core_dormqr.c'; then $(CYGPATH_W) 'src/core_dormqr.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dormqr.c'; fi`

src/dgeqrf_taskdep-core_dpamm.o: src/core_dpamm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-core_dpamm.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-core_dpamm.Tpo -c -o src/dgeqrf_taskdep-core_dpamm.o `test -f 'src/core_dpamm.c' || echo '$(srcdir)/'`src/core_dpamm.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-core_dpamm.Tpo src/$(DEPDIR)/dgeqrf_taskdep-core_dpamm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dpamm.c' object='src/dgeqrf_taskdep-core_dpamm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-core_dpamm.o `test -f 'src/core_dpamm.c' || echo '$(srcdir)/'`src/core_dpamm.c

src/dgeqrf_taskdep-core_dpamm.obj: src/core_dpamm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-core_dpamm.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-core_dpamm.Tpo -c -o src/dgeqrf_taskdep-core_dpamm.obj `if test -f 'src/core_dpamm.c'; then $(CYGPATH_W) 'src/core_dpamm.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dpamm.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-core_dpamm.Tpo src/$(DEPDIR)/dgeqrf_taskdep-core_dpamm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dpamm.c' object='src/dgeqrf_taskdep-core_dpamm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-core_dpamm.obj `if test -f 'src/core_dpamm.c'; then $(CYGPATH_W) 'src/core_dpamm.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dpamm.c'; fi`

src/dgeqrf_taskdep-core_dparfb.o: src/core_dparfb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-core_dparfb.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-core_dparfb.Tpo -c -o src/dgeqrf_taskdep-core_dparfb.o `test -f 'src/core_dparfb.c' || echo '$(srcdir)/'`src/core_dparfb.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-core_dparfb.Tpo src/$(DEPDIR)/dgeqrf_taskdep-core_dparfb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dparfb.c' object='src/dgeqrf_taskdep-core_dparfb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-core_dparfb.o `test -f 'src/core_dparfb.c' || echo '$(srcdir)/'`src/core_dparfb.c

src/dgeqrf_taskdep-core_dparfb.obj: src/core_dparfb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-core_dparfb.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-core_dparfb.Tpo -c -o src/dgeqrf_taskdep-core_dparfb.obj `if test -f 'src/core_dparfb.c'; then $(CYGPATH_W) 'src/core_dparfb.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dparfb.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-core_dparfb.Tpo src/$(DEPDIR)/dgeqrf_taskdep-core_dparfb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dparfb.c' object='src/dgeqrf_taskdep-core_dparfb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-core_dparfb.obj `if test -f 'src/core_dparfb.c'; then $(CYGPATH_W) 'src/core_dparfb.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dparfb.c'; fi`

src/dgeqrf_taskdep-core_dplgsy.o: src/core_dplgsy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-core_dplgsy.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-core_dplgsy.Tpo -c -o src/dgeqrf_taskdep-core_dplgsy.o `test -f 'src/core_dplgsy.c' || echo '$(srcdir)/'`src/core_dplgsy.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-core_dplgsy.Tpo src/$(DEPDIR)/dgeqrf_taskdep-core_dplgsy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dplgsy.c' object='src/dgeqrf_taskdep-core_dplgsy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-core_dplgsy.o `test -f 'src/core_dplgsy.c' || echo '$(srcdir)/'`src/core_dplgsy.c

src/dgeqrf_taskdep-core_dplgsy.obj: src/core_dplgsy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-core_dplgsy.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-core_dplgsy.Tpo -c -o src/dgeqrf_taskdep-core_dplgsy.obj `if test -f 'src/core_dplgsy.c'; then $(CYGPATH_W) 'src/core_dplgsy.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dplgsy.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-core_dplgsy.Tpo src/$(DEPDIR)/dgeqrf_taskdep-core_dplgsy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dplgsy.c' object='src/dgeqrf_taskdep-core_dplgsy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-core_dplgsy.obj `if test -f 'src/core_dplgsy.c'; then $(CYGPATH_W) 'src/core_dplgsy.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dplgsy.c'; fi`

src/dgeqrf_taskdep-core_dplrnt.o: src/core_dplrnt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-core_dplrnt.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-core_dplrnt.Tpo -c -o src/dgeqrf_taskdep-core_dplrnt.o `test -f 'src/core_dplrnt.c' || echo '$(srcdir)/'`src/core_dplrnt.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-core_dplrnt.Tpo src/$(DEPDIR)/dgeqrf_taskdep-core_dplrnt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dplrnt.c' object='src/dgeqrf_taskdep-core_dplrnt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-core_dplrnt.o `test -f 'src/core_dplrnt.c' || echo '$(srcdir)/'`src/core_dplrnt.c

src/dgeqrf_taskdep-core_dplrnt.obj: src/core_dplrnt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-core_dplrnt.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-core_dplrnt.Tpo -c -o src/dgeqrf_taskdep-core_dplrnt.obj `if test -f 'src/core_dplrnt.c'; then $(CYGPATH_W) 'src/core_dplrnt.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dplrnt.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-core_dplrnt.Tpo src/$(DEPDIR)/dgeqrf_taskdep-core_dplrnt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dplrnt.c' object='src/dgeqrf_taskdep-core_dplrnt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-core_dplrnt.obj `if test -f 'src/core_dplrnt.c'; then $(CYGPATH_W) 'src/core_dplrnt.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dplrnt.c'; fi`

src/dgeqrf_taskdep-core_dtsmqr.o: src/core_dtsmqr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-core_dtsmqr.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-core_dtsmqr.Tpo -c -o src/dgeqrf_taskdep-core_dtsmqr.o `test -f 'src/core_dtsmqr.c' || echo '$(srcdir)/'`src/core_dtsmqr.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-core_dtsmqr.Tpo src/$(DEPDIR)/dgeqrf_taskdep-core_dtsmqr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dtsmqr.c' object='src/dgeqrf_taskdep-core_dtsmqr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-core_dtsmqr.o `test -f 'src/core_dtsmqr.c' || echo '$(srcdir)/'`src/core_dtsmqr.c

src/dgeqrf_taskdep-core_dtsmqr.obj: src/core_dtsmqr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-core_dtsmqr.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-core_dtsmqr.Tpo -c -o src/dgeqrf_taskdep-core_dtsmqr.obj `if test -f 'src/core_dtsmqr.c'; then $(CYGPATH_W) 'src/core_dtsmqr.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dtsmqr.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-core_dtsmqr.Tpo src/$(DEPDIR)/dgeqrf_taskdep-core_dtsmqr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dtsmqr.c' object='src/dgeqrf_taskdep-core_dtsmqr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-core_dtsmqr.obj `if test -f 'src/core_dtsmqr.c'; then $(CYGPATH_W) 'src/core_dtsmqr.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dtsmqr.c'; fi`

src/dgeqrf_taskdep-core_dtsqrt.o: src/core_dtsqrt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-core_dtsqrt.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-core_dtsqrt.Tpo -c -o src/dgeqrf_taskdep-core_dtsqrt.o `test -f 'src/core_dtsqrt.c' || echo '$(srcdir)/'`src/core_dtsqrt.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-core_dtsqrt.Tpo src/$(DEPDIR)/dgeqrf_taskdep-core_dtsqrt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dtsqrt.c' object='src/dgeqrf_taskdep-core_dtsqrt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-core_dtsqrt.o `test -f 'src/core_dtsqrt.c' || echo '$(srcdir)/'`src/core_dtsqrt.c

src/dgeqrf_taskdep-core_dtsqrt.obj: src/core_dtsqrt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-core_dtsqrt.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-core_dtsqrt.Tpo -c -o src/dgeqrf_taskdep-core_dtsqrt.obj `if test -f 'src/core_dtsqrt.c'; then $(CYGPATH_W) 'src/core_dtsqrt.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dtsqrt.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-core_dtsqrt.Tpo src/$(DEPDIR)/dgeqrf_taskdep-core_dtsqrt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dtsqrt.c' object='src/dgeqrf_taskdep-core_dtsqrt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-core_dtsqrt.obj `if test -f 'src/core_dtsqrt.c'; then $(CYGPATH_W) 'src/core_dtsqrt.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dtsqrt.c'; fi`

src/dgeqrf_taskdep-dauxiliary.o: src/dauxiliary.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-dauxiliary.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-dauxiliary.Tpo -c -o src/dgeqrf_taskdep-dauxiliary.o `test -f 'src/dauxiliary.c' || echo '$(srcdir)/'`src/dauxiliary.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-dauxiliary.Tpo src/$(DEPDIR)/dgeqrf_taskdep-dauxiliary.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dauxiliary.c' object='src/dgeqrf_taskdep-dauxiliary.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-dauxiliary.o `test -f 'src/dauxiliary.c' || echo '$(srcdir)/'`src/dauxiliary.c

src/dgeqrf_taskdep-dauxiliary.obj: src/dauxiliary.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-dauxiliary.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-dauxiliary.Tpo -c -o src/dgeqrf_taskdep-dauxiliary.obj `if test -f 'src/dauxiliary.c'; then $(CYGPATH_W) 'src/dauxiliary.c'; else $(CYGPATH_W) '$(srcdir)/src/dauxiliary.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-dauxiliary.Tpo src/$(DEPDIR)/dgeqrf_taskdep-dauxiliary.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dauxiliary.c' object='src/dgeqrf_taskdep-dauxiliary.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-dauxiliary.obj `if test -f 'src/dauxiliary.c'; then $(CYGPATH_W) 'src/dauxiliary.c'; else $(CYGPATH_W) '$(srcdir)/src/dauxiliary.c'; fi`

src/dgeqrf_taskdep-descriptor.o: src/descriptor.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-descriptor.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-descriptor.Tpo -c -o src/dgeqrf_taskdep-descriptor.o `test -f 'src/descriptor.c' || echo '$(srcdir)/'`src/descriptor.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-descriptor.Tpo src/$(DEPDIR)/dgeqrf_taskdep-descriptor.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/descriptor.c' object='src/dgeqrf_taskdep-descriptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-descriptor.o `test -f 'src/descriptor.c' || echo '$(srcdir)/'`src/descriptor.c

src/dgeqrf_taskdep-descriptor.obj: src/descriptor.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-descriptor.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-descriptor.Tpo -c -o src/dgeqrf_taskdep-descriptor.obj `if test -f 'src/descriptor.c'; then $(CYGPATH_W) 'src/descriptor.c'; else $(CYGPATH_W) '$(srcdir)/src/descriptor.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-descriptor.Tpo src/$(DEPDIR)/dgeqrf_taskdep-descriptor.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/descriptor.c' object='src/dgeqrf_taskdep-descriptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-descriptor.obj `if test -f 'src/descriptor.c'; then $(CYGPATH_W) 'src/descriptor.c'; else $(CYGPATH_W) '$(srcdir)/src/descriptor.c'; fi`

src/dgeqrf_taskdep-dgeqrs.o: src/dgeqrs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-dgeqrs.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-dgeqrs.Tpo -c -o src/dgeqrf_taskdep-dgeqrs.o `test -f 'src/dgeqrs.c' || echo '$(srcdir)/'`src/dgeqrs.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-dgeqrs.Tpo src/$(DEPDIR)/dgeqrf_taskdep-dgeqrs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dgeqrs.c' object='src/dgeqrf_taskdep-dgeqrs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-dgeqrs.o `test -f 'src/dgeqrs.c' || echo '$(srcdir)/'`src/dgeqrs.c

src/dgeqrf_taskdep-dgeqrs.obj: src/dgeqrs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-dgeqrs.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-dgeqrs.Tpo -c -o src/dgeqrf_taskdep-dgeqrs.obj `if test -f 'src/dgeqrs.c'; then $(CYGPATH_W) 'src/dgeqrs.c'; else $(CYGPATH_W) '$(srcdir)/src/dgeqrs.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-dgeqrs.Tpo src/$(DEPDIR)/dgeqrf_taskdep-dgeqrs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dgeqrs.c' object='src/dgeqrf_taskdep-dgeqrs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-dgeqrs.obj `if test -f 'src/dgeqrs.c'; then $(CYGPATH_W) 'src/dgeqrs.c'; else $(CYGPATH_W) '$(srcdir)/src/dgeqrs.c'; fi`

src/dgeqrf_taskdep-dgetrs.o: src/dgetrs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-dgetrs.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-dgetrs.Tpo -c -o src/dgeqrf_taskdep-dgetrs.o `test -f 'src/dgetrs.c' || echo '$(srcdir)/'`src/dgetrs.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-dgetrs.Tpo src/$(DEPDIR)/dgeqrf_taskdep-dgetrs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dgetrs.c' object='src/dgeqrf_taskdep-dgetrs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-dgetrs.o `test -f 'src/dgetrs.c' || echo '$(srcdir)/'`src/dgetrs.c

src/dgeqrf_taskdep-dgetrs.obj: src/dgetrs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-dgetrs.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-dgetrs.Tpo -c -o src/dgeqrf_taskdep-dgetrs.obj `if test -f 'src/dgetrs.c'; then $(CYGPATH_W) 'src/dgetrs.c'; else $(CYGPATH_W) '$(srcdir)/src/dgetrs.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-dgetrs.Tpo src/$(DEPDIR)/dgeqrf_taskdep-dgetrs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dgetrs.c' object='src/dgeqrf_taskdep-dgetrs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-dgetrs.obj `if test -f 'src/dgetrs.c'; then $(CYGPATH_W) 'src/dgetrs.c'; else $(CYGPATH_W) '$(srcdir)/src/dgetrs.c'; fi`

src/dgeqrf_taskdep-dpotrs.o: src/dpotrs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-dpotrs.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-dpotrs.Tpo -c -o src/dgeqrf_taskdep-dpotrs.o `test -f 'src/dpotrs.c' || echo '$(srcdir)/'`src/dpotrs.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-dpotrs.Tpo src/$(DEPDIR)/dgeqrf_taskdep-dpotrs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dpotrs.c' object='src/dgeqrf_taskdep-dpotrs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-dpotrs.o `test -f 'src/dpotrs.c' || echo '$(srcdir)/'`src/dpotrs.c

src/dgeqrf_taskdep-dpotrs.obj: src/dpotrs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-dpotrs.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-dpotrs.Tpo -c -o src/dgeqrf_taskdep-dpotrs.obj `if test -f 'src/dpotrs.c'; then $(CYGPATH_W) 'src/dpotrs.c'; else $(CYGPATH_W) '$(srcdir)/src/dpotrs.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-dpotrs.Tpo src/$(DEPDIR)/dgeqrf_taskdep-dpotrs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dpotrs.c' object='src/dgeqrf_taskdep-dpotrs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-dpotrs.obj `if test -f 'src/dpotrs.c'; then $(CYGPATH_W) 'src/dpotrs.c'; else $(CYGPATH_W) '$(srcdir)/src/dpotrs.c'; fi`

src/dgeqrf_taskdep-global.o: src/global.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-global.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-global.Tpo -c -o src/dgeqrf_taskdep-global.o `test -f 'src/global.c' || echo '$(srcdir)/'`src/global.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-global.Tpo src/$(DEPDIR)/dgeqrf_taskdep-global.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/global.c' object='src/dgeqrf_taskdep-global.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-global.o `test -f 'src/global.c' || echo '$(srcdir)/'`src/global.c

src/dgeqrf_taskdep-global.obj: src/global.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-global.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-global.Tpo -c -o src/dgeqrf_taskdep-global.obj `if test -f 'src/global.c'; then $(CYGPATH_W) 'src/global.c'; else $(CYGPATH_W) '$(srcdir)/src/global.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-global.Tpo src/$(DEPDIR)/dgeqrf_taskdep-global.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/global.c' object='src/dgeqrf_taskdep-global.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-global.obj `if test -f 'src/global.c'; then $(CYGPATH_W) 'src/global.c'; else $(CYGPATH_W) '$(srcdir)/src/global.c'; fi`

src/dgeqrf_taskdep-pdgeqrf.o: src/pdgeqrf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-pdgeqrf.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-pdgeqrf.Tpo -c -o src/dgeqrf_taskdep-pdgeqrf.o `test -f 'src/pdgeqrf.c' || echo '$(srcdir)/'`src/pdgeqrf.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-pdgeqrf.Tpo src/$(DEPDIR)/dgeqrf_taskdep-pdgeqrf.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdgeqrf.c' object='src/dgeqrf_taskdep-pdgeqrf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-pdgeqrf.o `test -f 'src/pdgeqrf.c' || echo '$(srcdir)/'`src/pdgeqrf.c

src/dgeqrf_taskdep-pdgeqrf.obj: src/pdgeqrf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-pdgeqrf.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-pdgeqrf.Tpo -c -o src/dgeqrf_taskdep-pdgeqrf.obj `if test -f 'src/pdgeqrf.c'; then $(CYGPATH_W) 'src/pdgeqrf.c'; else $(CYGPATH_W) '$(srcdir)/src/pdgeqrf.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-pdgeqrf.Tpo src/$(DEPDIR)/dgeqrf_taskdep-pdgeqrf.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdgeqrf.c' object='src/dgeqrf_taskdep-pdgeqrf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-pdgeqrf.obj `if test -f 'src/pdgeqrf.c'; then $(CYGPATH_W) 'src/pdgeqrf.c'; else $(CYGPATH_W) '$(srcdir)/src/pdgeqrf.c'; fi`

src/dgeqrf_taskdep-pdgetrf_rectil.o: src/pdgetrf_rectil.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-pdgetrf_rectil.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-pdgetrf_rectil.Tpo -c -o src/dgeqrf_taskdep-pdgetrf_rectil.o `test -f 'src/pdgetrf_rectil.c' || echo '$(srcdir)/'`src/pdgetrf_rectil.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-pdgetrf_rectil.Tpo src/$(DEPDIR)/dgeqrf_taskdep-pdgetrf_rectil.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdgetrf_rectil.c' object='src/dgeqrf_taskdep-pdgetrf_rectil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-pdgetrf_rectil.o `test -f 'src/pdgetrf_rectil.c' || echo '$(srcdir)/'`src/pdgetrf_rectil.c

src/dgeqrf_taskdep-pdgetrf_rectil.obj: src/pdgetrf_rectil.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-pdgetrf_rectil.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-pdgetrf_rectil.Tpo -c -o src/dgeqrf_taskdep-pdgetrf_rectil.obj `if test -f 'src/pdgetrf_rectil.c'; then $(CYGPATH_W) 'src/pdgetrf_rectil.c'; else $(CYGPATH_W) '$(srcdir)/src/pdgetrf_rectil.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-pdgetrf_rectil.Tpo src/$(DEPDIR)/dgeqrf_taskdep-pdgetrf_rectil.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdgetrf_rectil.c' object='src/dgeqrf_taskdep-pdgetrf_rectil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-pdgetrf_rectil.obj `if test -f 'src/pdgetrf_rectil.c'; then $(CYGPATH_W) 'src/pdgetrf_rectil.c'; else $(CYGPATH_W) '$(srcdir)/src/pdgetrf_rectil.c'; fi`

src/dgeqrf_taskdep-pdlaswp.o: src/pdlaswp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-pdlaswp.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-pdlaswp.Tpo -c -o src/dgeqrf_taskdep-pdlaswp.o `test -f 'src/pdlaswp.c' || echo '$(srcdir)/'`src/pdlaswp.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-pdlaswp.Tpo src/$(DEPDIR)/dgeqrf_taskdep-pdlaswp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdlaswp.c' object='src/dgeqrf_taskdep-pdlaswp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-pdlaswp.o `test -f 'src/pdlaswp.c' || echo '$(srcdir)/'`src/pdlaswp.c

src/dgeqrf_taskdep-pdlaswp.obj: src/pdlaswp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-pdlaswp.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-pdlaswp.Tpo -c -o src/dgeqrf_taskdep-pdlaswp.obj `if test -f 'src/pdlaswp.c'; then $(CYGPATH_W) 'src/pdlaswp.c'; else $(CYGPATH_W) '$(srcdir)/src/pdlaswp.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-pdlaswp.Tpo src/$(DEPDIR)/dgeqrf_taskdep-pdlaswp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdlaswp.c' object='src/dgeqrf_taskdep-pdlaswp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-pdlaswp.obj `if test -f 'src/pdlaswp.c'; then $(CYGPATH_W) 'src/pdlaswp.c'; else $(CYGPATH_W) '$(srcdir)/src/pdlaswp.c'; fi`

src/dgeqrf_taskdep-pdormqr.o: src/pdormqr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-pdormqr.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-pdormqr.Tpo -c -o src/dgeqrf_taskdep-pdormqr.o `test -f 'src/pdormqr.c' || echo '$(srcdir)/'`src/pdormqr.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-pdormqr.Tpo src/$(DEPDIR)/dgeqrf_taskdep-pdormqr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdormqr.c' object='src/dgeqrf_taskdep-pdormqr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-pdormqr.o `test -f 'src/pdormqr.c' || echo '$(srcdir)/'`src/pdormqr.c

src/dgeqrf_taskdep-pdormqr.obj: src/pdormqr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-pdormqr.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-pdormqr.Tpo -c -o src/dgeqrf_taskdep-pdormqr.obj `if test -f 'src/pdormqr.c'; then $(CYGPATH_W) 'src/pdormqr.c'; else $(CYGPATH_W) '$(srcdir)/src/pdormqr.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-pdormqr.Tpo src/$(DEPDIR)/dgeqrf_taskdep-pdormqr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdormqr.c' object='src/dgeqrf_taskdep-pdormqr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-pdormqr.obj `if test -f 'src/pdormqr.c'; then $(CYGPATH_W) 'src/pdormqr.c'; else $(CYGPATH_W) '$(srcdir)/src/pdormqr.c'; fi`

src/dgeqrf_taskdep-pdplgsy.o: src/pdplgsy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-pdplgsy.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-pdplgsy.Tpo -c -o src/dgeqrf_taskdep-pdplgsy.o `test -f 'src/pdplgsy.c' || echo '$(srcdir)/'`src/pdplgsy.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-pdplgsy.Tpo src/$(DEPDIR)/dgeqrf_taskdep-pdplgsy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdplgsy.c' object='src/dgeqrf_taskdep-pdplgsy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-pdplgsy.o `test -f 'src/pdplgsy.c' || echo '$(srcdir)/'`src/pdplgsy.c

src/dgeqrf_taskdep-pdplgsy.obj: src/pdplgsy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-pdplgsy.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-pdplgsy.Tpo -c -o src/dgeqrf_taskdep-pdplgsy.obj `if test -f 'src/pdplgsy.c'; then $(CYGPATH_W) 'src/pdplgsy.c'; else $(CYGPATH_W) '$(srcdir)/src/pdplgsy.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-pdplgsy.Tpo src/$(DEPDIR)/dgeqrf_taskdep-pdplgsy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdplgsy.c' object='src/dgeqrf_taskdep-pdplgsy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-pdplgsy.obj `if test -f 'src/pdplgsy.c'; then $(CYGPATH_W) 'src/pdplgsy.c'; else $(CYGPATH_W) '$(srcdir)/src/pdplgsy.c'; fi`

src/dgeqrf_taskdep-pdpltmg.o: src/pdpltmg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-pdpltmg.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-pdpltmg.Tpo -c -o src/dgeqrf_taskdep-pdpltmg.o `test -f 'src/pdpltmg.c' || echo '$(srcdir)/'`src/pdpltmg.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-pdpltmg.Tpo src/$(DEPDIR)/dgeqrf_taskdep-pdpltmg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdpltmg.c' object='src/dgeqrf_taskdep-pdpltmg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-pdpltmg.o `test -f 'src/pdpltmg.c' || echo '$(srcdir)/'`src/pdpltmg.c

src/dgeqrf_taskdep-pdpltmg.obj: src/pdpltmg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-pdpltmg.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-pdpltmg.Tpo -c -o src/dgeqrf_taskdep-pdpltmg.obj `if test -f 'src/pdpltmg.c'; then $(CYGPATH_W) 'src/pdpltmg.c'; else $(CYGPATH_W) '$(srcdir)/src/pdpltmg.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-pdpltmg.Tpo src/$(DEPDIR)/dgeqrf_taskdep-pdpltmg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdpltmg.c' object='src/dgeqrf_taskdep-pdpltmg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-pdpltmg.obj `if test -f 'src/pdpltmg.c'; then $(CYGPATH_W) 'src/pdpltmg.c'; else $(CYGPATH_W) '$(srcdir)/src/pdpltmg.c'; fi`

src/dgeqrf_taskdep-pdpotrf.o: src/pdpotrf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-pdpotrf.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-pdpotrf.Tpo -c -o src/dgeqrf_taskdep-pdpotrf.o `test -f 'src/pdpotrf.c' || echo '$(srcdir)/'`src/pdpotrf.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-pdpotrf.Tpo src/$(DEPDIR)/dgeqrf_taskdep-pdpotrf.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdpotrf.c' object='src/dgeqrf_taskdep-pdpotrf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-pdpotrf.o `test -f 'src/pdpotrf.c' || echo '$(srcdir)/'`src/pdpotrf.c

src/dgeqrf_taskdep-pdpotrf.obj: src/pdpotrf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-pdpotrf.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-pdpotrf.Tpo -c -o src/dgeqrf_taskdep-pdpotrf.obj `if test -f 'src/pdpotrf.c'; then $(CYGPATH_W) 'src/pdpotrf.c'; else $(CYGPATH_W) '$(srcdir)/src/pdpotrf.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-pdpotrf.Tpo src/$(DEPDIR)/dgeqrf_taskdep-pdpotrf.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdpotrf.c' object='src/dgeqrf_taskdep-pdpotrf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-pdpotrf.obj `if test -f 'src/pdpotrf.c'; then $(CYGPATH_W) 'src/pdpotrf.c'; else $(CYGPATH_W) '$(srcdir)/src/pdpotrf.c'; fi`

src/dgeqrf_taskdep-pdtile.o: src/pdtile.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-pdtile.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-pdtile.Tpo -c -o src/dgeqrf_taskdep-pdtile.o `test -f 'src/pdtile.c' || echo '$(srcdir)/'`src/pdtile.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-pdtile.Tpo src/$(DEPDIR)/dgeqrf_taskdep-pdtile.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdtile.c' object='src/dgeqrf_taskdep-pdtile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-pdtile.o `test -f 'src/pdtile.c' || echo '$(srcdir)/'`src/pdtile.c

src/dgeqrf_taskdep-pdtile.obj: src/pdtile.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-pdtile.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-pdtile.Tpo -c -o src/dgeqrf_taskdep-pdtile.obj `if test -f 'src/pdtile.c'; then $(CYGPATH_W) 'src/pdtile.c'; else $(CYGPATH_W) '$(srcdir)/src/pdtile.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-pdtile.Tpo src/$(DEPDIR)/dgeqrf_taskdep-pdtile.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdtile.c' object='src/dgeqrf_taskdep-pdtile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-pdtile.obj `if test -f 'src/pdtile.c'; then $(CYGPATH_W) 'src/pdtile.c'; else $(CYGPATH_W) '$(srcdir)/src/pdtile.c'; fi`

src/dgeqrf_taskdep-pdtrsm.o: src/pdtrsm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-pdtrsm.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-pdtrsm.Tpo -c -o src/dgeqrf_taskdep-pdtrsm.o `test -f 'src/pdtrsm.c' || echo '$(srcdir)/'`src/pdtrsm.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-pdtrsm.Tpo src/$(DEPDIR)/dgeqrf_taskdep-pdtrsm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdtrsm.c' object='src/dgeqrf_taskdep-pdtrsm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-pdtrsm.o `test -f 'src/pdtrsm.c' || echo '$(srcdir)/'`src/pdtrsm.c

src/dgeqrf_taskdep-pdtrsm.obj: src/pdtrsm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-pdtrsm.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-pdtrsm.Tpo -c -o src/dgeqrf_taskdep-pdtrsm.obj `if test -f 'src/pdtrsm.c'; then $(CYGPATH_W) 'src/pdtrsm.c'; else $(CYGPATH_W) '$(srcdir)/src/pdtrsm.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-pdtrsm.Tpo src/$(DEPDIR)/dgeqrf_taskdep-pdtrsm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdtrsm.c' object='src/dgeqrf_taskdep-pdtrsm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-pdtrsm.obj `if test -f 'src/pdtrsm.c'; then $(CYGPATH_W) 'src/pdtrsm.c'; else $(CYGPATH_W) '$(srcdir)/src/pdtrsm.c'; fi`

src/dgeqrf_taskdep-workspace.o: src/workspace.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-workspace.o -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-workspace.Tpo -c -o src/dgeqrf_taskdep-workspace.o `test -f 'src/workspace.c' || echo '$(srcdir)/'`src/workspace.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-workspace.Tpo src/$(DEPDIR)/dgeqrf_taskdep-workspace.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/workspace.c' object='src/dgeqrf_taskdep-workspace.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-workspace.o `test -f 'src/workspace.c' || echo '$(srcdir)/'`src/workspace.c

src/dgeqrf_taskdep-workspace.obj: src/workspace.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgeqrf_taskdep-workspace.obj -MD -MP -MF src/$(DEPDIR)/dgeqrf_taskdep-workspace.Tpo -c -o src/dgeqrf_taskdep-workspace.obj `if test -f 'src/workspace.c'; then $(CYGPATH_W) 'src/workspace.c'; else $(CYGPATH_W) '$(srcdir)/src/workspace.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgeqrf_taskdep-workspace.Tpo src/$(DEPDIR)/dgeqrf_taskdep-workspace.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/workspace.c' object='src/dgeqrf_taskdep-workspace.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgeqrf_taskdep-workspace.obj `if test -f 'src/workspace.c'; then $(CYGPATH_W) 'src/workspace.c'; else $(CYGPATH_W) '$(srcdir)/src/workspace.c'; fi`

dgeqrf_taskdep-main.o: main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT dgeqrf_taskdep-main.o -MD -MP -MF $(DEPDIR)/dgeqrf_taskdep-main.Tpo -c -o dgeqrf_taskdep-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dgeqrf_taskdep-main.Tpo $(DEPDIR)/dgeqrf_taskdep-main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='main.c' object='dgeqrf_taskdep-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o dgeqrf_taskdep-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

dgeqrf_taskdep-main.obj: main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -MT dgeqrf_taskdep-main.obj -MD -MP -MF $(DEPDIR)/dgeqrf_taskdep-main.Tpo -c -o dgeqrf_taskdep-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dgeqrf_taskdep-main.Tpo $(DEPDIR)/dgeqrf_taskdep-main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='main.c' object='dgeqrf_taskdep-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgeqrf_taskdep_CFLAGS) $(CFLAGS) -c -o dgeqrf_taskdep-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

src/dgetrf_seq-time_dgetrf-task.o: src/time_dgetrf-task.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_seq_CFLAGS) $(CFLAGS) -MT src/dgetrf_seq-time_dgetrf-task.o -MD -MP -MF src/$(DEPDIR)/dgetrf_seq-time_dgetrf-task.Tpo -c -o src/dgetrf_seq-time_dgetrf-task.o `test -f 'src/time_dgetrf-task.c' || echo '$(srcdir)/'`src/time_dgetrf-task.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_seq-time_dgetrf-task.Tpo src/$(DEPDIR)/dgetrf_seq-time_dgetrf-task.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/time_dgetrf-task.c' object='src/dgetrf_seq-time_dgetrf-task.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_seq_CFLAGS) $(CFLAGS) -c -o src/dgetrf_seq-time_dgetrf-task.o `test -f 'src/time_dgetrf-task.c' || echo '$(srcdir)/'`src/time_dgetrf-task.c

src/dgetrf_seq-time_dgetrf-task.obj: src/time_dgetrf-task.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_seq_CFLAGS) $(CFLAGS) -MT src/dgetrf_seq-time_dgetrf-task.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_seq-time_dgetrf-task.Tpo -c -o src/dgetrf_seq-time_dgetrf-task.obj `if test -f 'src/time_dgetrf-task.c'; then $(CYGPATH_W) 'src/time_dgetrf-task.c'; else $(CYGPATH_W) '$(srcdir)/src/time_dgetrf-task.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_seq-time_dgetrf-task.Tpo src/$(DEPDIR)/dgetrf_seq-time_dgetrf-task.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/time_dgetrf-task.c' object='src/dgetrf_seq-time_dgetrf-task.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_seq_CFLAGS) $(CFLAGS) -c -o src/dgetrf_seq-time_dgetrf-task.obj `if test -f 'src/time_dgetrf-task.c'; then $(CYGPATH_W) 'src/time_dgetrf-task.c'; else $(CYGPATH_W) '$(srcdir)/src/time_dgetrf-task.c'; fi`

src/dgetrf_taskdep-time_dgetrf-task.o: src/time_dgetrf-task.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-time_dgetrf-task.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-time_dgetrf-task.Tpo -c -o src/dgetrf_taskdep-time_dgetrf-task.o `test -f 'src/time_dgetrf-task.c' || echo '$(srcdir)/'`src/time_dgetrf-task.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-time_dgetrf-task.Tpo src/$(DEPDIR)/dgetrf_taskdep-time_dgetrf-task.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/time_dgetrf-task.c' object='src/dgetrf_taskdep-time_dgetrf-task.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-time_dgetrf-task.o `test -f 'src/time_dgetrf-task.c' || echo '$(srcdir)/'`src/time_dgetrf-task.c

src/dgetrf_taskdep-time_dgetrf-task.obj: src/time_dgetrf-task.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-time_dgetrf-task.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-time_dgetrf-task.Tpo -c -o src/dgetrf_taskdep-time_dgetrf-task.obj `if test -f 'src/time_dgetrf-task.c'; then $(CYGPATH_W) 'src/time_dgetrf-task.c'; else $(CYGPATH_W) '$(srcdir)/src/time_dgetrf-task.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-time_dgetrf-task.Tpo src/$(DEPDIR)/dgetrf_taskdep-time_dgetrf-task.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/time_dgetrf-task.c' object='src/dgetrf_taskdep-time_dgetrf-task.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-time_dgetrf-task.obj `if test -f 'src/time_dgetrf-task.c'; then $(CYGPATH_W) 'src/time_dgetrf-task.c'; else $(CYGPATH_W) '$(srcdir)/src/time_dgetrf-task.c'; fi`

src/dgetrf_taskdep-auxiliary.o: src/auxiliary.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-auxiliary.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-auxiliary.Tpo -c -o src/dgetrf_taskdep-auxiliary.o `test -f 'src/auxiliary.c' || echo '$(srcdir)/'`src/auxiliary.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-auxiliary.Tpo src/$(DEPDIR)/dgetrf_taskdep-auxiliary.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/auxiliary.c' object='src/dgetrf_taskdep-auxiliary.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-auxiliary.o `test -f 'src/auxiliary.c' || echo '$(srcdir)/'`src/auxiliary.c

src/dgetrf_taskdep-auxiliary.obj: src/auxiliary.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-auxiliary.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-auxiliary.Tpo -c -o src/dgetrf_taskdep-auxiliary.obj `if test -f 'src/auxiliary.c'; then $(CYGPATH_W) 'src/auxiliary.c'; else $(CYGPATH_W) '$(srcdir)/src/auxiliary.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-auxiliary.Tpo src/$(DEPDIR)/dgetrf_taskdep-auxiliary.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/auxiliary.c' object='src/dgetrf_taskdep-auxiliary.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-auxiliary.obj `if test -f 'src/auxiliary.c'; then $(CYGPATH_W) 'src/auxiliary.c'; else $(CYGPATH_W) '$(srcdir)/src/auxiliary.c'; fi`

src/dgetrf_taskdep-core_dgeqrt.o: src/core_dgeqrt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-core_dgeqrt.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-core_dgeqrt.Tpo -c -o src/dgetrf_taskdep-core_dgeqrt.o `test -f 'src/core_dgeqrt.c' || echo '$(srcdir)/'`src/core_dgeqrt.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-core_dgeqrt.Tpo src/$(DEPDIR)/dgetrf_taskdep-core_dgeqrt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dgeqrt.c' object='src/dgetrf_taskdep-core_dgeqrt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-core_dgeqrt.o `test -f 'src/core_dgeqrt.c' || echo '$(srcdir)/'`src/core_dgeqrt.c

src/dgetrf_taskdep-core_dgeqrt.obj: src/core_dgeqrt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-core_dgeqrt.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-core_dgeqrt.Tpo -c -o src/dgetrf_taskdep-core_dgeqrt.obj `if test -f 'src/core_dgeqrt.c'; then $(CYGPATH_W) 'src/core_dgeqrt.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dgeqrt.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-core_dgeqrt.Tpo src/$(DEPDIR)/dgetrf_taskdep-core_dgeqrt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dgeqrt.c' object='src/dgetrf_taskdep-core_dgeqrt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-core_dgeqrt.obj `if test -f 'src/core_dgeqrt.c'; then $(CYGPATH_W) 'src/core_dgeqrt.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dgeqrt.c'; fi`

src/dgetrf_taskdep-core_dgetrf_rectil.o: src/core_dgetrf_rectil.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-core_dgetrf_rectil.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-core_dgetrf_rectil.Tpo -c -o src/dgetrf_taskdep-core_dgetrf_rectil.o `test -f 'src/core_dgetrf_rectil.c' || echo '$(srcdir)/'`src/core_dgetrf_rectil.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-core_dgetrf_rectil.Tpo src/$(DEPDIR)/dgetrf_taskdep-core_dgetrf_rectil.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dgetrf_rectil.c' object='src/dgetrf_taskdep-core_dgetrf_rectil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-core_dgetrf_rectil.o `test -f 'src/core_dgetrf_rectil.c' || echo '$(srcdir)/'`src/core_dgetrf_rectil.c

src/dgetrf_taskdep-core_dgetrf_rectil.obj: src/core_dgetrf_rectil.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-core_dgetrf_rectil.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-core_dgetrf_rectil.Tpo -c -o src/dgetrf_taskdep-core_dgetrf_rectil.obj `if test -f 'src/core_dgetrf_rectil.c'; then $(CYGPATH_W) 'src/core_dgetrf_rectil.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dgetrf_rectil.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-core_dgetrf_rectil.Tpo src/$(DEPDIR)/dgetrf_taskdep-core_dgetrf_rectil.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dgetrf_rectil.c' object='src/dgetrf_taskdep-core_dgetrf_rectil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-core_dgetrf_rectil.obj `if test -f 'src/core_dgetrf_rectil.c'; then $(CYGPATH_W) 'src/core_dgetrf_rectil.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dgetrf_rectil.c'; fi`

src/dgetrf_taskdep-core_dlaswp.o: src/core_dlaswp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-core_dlaswp.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-core_dlaswp.Tpo -c -o src/dgetrf_taskdep-core_dlaswp.o `test -f 'src/core_dlaswp.c' || echo '$(srcdir)/'`src/core_dlaswp.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-core_dlaswp.Tpo src/$(DEPDIR)/dgetrf_taskdep-core_dlaswp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dlaswp.c' object='src/dgetrf_taskdep-core_dlaswp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-core_dlaswp.o `test -f 'src/core_dlaswp.c' || echo '$(srcdir)/'`src/core_dlaswp.c

src/dgetrf_taskdep-core_dlaswp.obj: src/core_dlaswp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-core_dlaswp.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-core_dlaswp.Tpo -c -o src/dgetrf_taskdep-core_dlaswp.obj `if test -f 'src/core_dlaswp.c'; then $(CYGPATH_W) 'src/core_dlaswp.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dlaswp.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-core_dlaswp.Tpo src/$(DEPDIR)/dgetrf_taskdep-core_dlaswp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dlaswp.c' object='src/dgetrf_taskdep-core_dlaswp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-core_dlaswp.obj `if test -f 'src/core_dlaswp.c'; then $(CYGPATH_W) 'src/core_dlaswp.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dlaswp.c'; fi`

src/dgetrf_taskdep-core_dormqr.o: src/core_dormqr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-core_dormqr.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-core_dormqr.Tpo -c -o src/dgetrf_taskdep-core_dormqr.o `test -f 'src/core_dormqr.c' || echo '$(srcdir)/'`src/core_dormqr.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-core_dormqr.Tpo src/$(DEPDIR)/dgetrf_taskdep-core_dormqr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dormqr.c' object='src/dgetrf_taskdep-core_dormqr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-core_dormqr.o `test -f 'src/core_dormqr.c' || echo '$(srcdir)/'`src/core_dormqr.c

src/dgetrf_taskdep-core_dormqr.obj: src/core_dormqr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-core_dormqr.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-core_dormqr.Tpo -c -o src/dgetrf_taskdep-core_dormqr.obj `if test -f 'src/core_dormqr.c'; then $(CYGPATH_W) 'src/core_dormqr.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dormqr.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-core_dormqr.Tpo src/$(DEPDIR)/dgetrf_taskdep-core_dormqr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dormqr.c' object='src/dgetrf_taskdep-core_dormqr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-core_dormqr.obj `if test -f 'src/core_dormqr.c'; then $(CYGPATH_W) 'src/core_dormqr.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dormqr.c'; fi`

src/dgetrf_taskdep-core_dpamm.o: src/core_dpamm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-core_dpamm.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-core_dpamm.Tpo -c -o src/dgetrf_taskdep-core_dpamm.o `test -f 'src/core_dpamm.c' || echo '$(srcdir)/'`src/core_dpamm.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-core_dpamm.Tpo src/$(DEPDIR)/dgetrf_taskdep-core_dpamm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dpamm.c' object='src/dgetrf_taskdep-core_dpamm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-core_dpamm.o `test -f 'src/core_dpamm.c' || echo '$(srcdir)/'`src/core_dpamm.c

src/dgetrf_taskdep-core_dpamm.obj: src/core_dpamm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-core_dpamm.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-core_dpamm.Tpo -c -o src/dgetrf_taskdep-core_dpamm.obj `if test -f 'src/core_dpamm.c'; then $(CYGPATH_W) 'src/core_dpamm.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dpamm.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-core_dpamm.Tpo src/$(DEPDIR)/dgetrf_taskdep-core_dpamm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dpamm.c' object='src/dgetrf_taskdep-core_dpamm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-core_dpamm.obj `if test -f 'src/core_dpamm.c'; then $(CYGPATH_W) 'src/core_dpamm.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dpamm.c'; fi`

src/dgetrf_taskdep-core_dparfb.o: src/core_dparfb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-core_dparfb.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-core_dparfb.Tpo -c -o src/dgetrf_taskdep-core_dparfb.o `test -f 'src/core_dparfb.c' || echo '$(srcdir)/'`src/core_dparfb.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-core_dparfb.Tpo src/$(DEPDIR)/dgetrf_taskdep-core_dparfb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dparfb.c' object='src/dgetrf_taskdep-core_dparfb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-core_dparfb.o `test -f 'src/core_dparfb.c' || echo '$(srcdir)/'`src/core_dparfb.c

src/dgetrf_taskdep-core_dparfb.obj: src/core_dparfb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-core_dparfb.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-core_dparfb.Tpo -c -o src/dgetrf_taskdep-core_dparfb.obj `if test -f 'src/core_dparfb.c'; then $(CYGPATH_W) 'src/core_dparfb.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dparfb.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-core_dparfb.Tpo src/$(DEPDIR)/dgetrf_taskdep-core_dparfb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dparfb.c' object='src/dgetrf_taskdep-core_dparfb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-core_dparfb.obj `if test -f 'src/core_dparfb.c'; then $(CYGPATH_W) 'src/core_dparfb.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dparfb.c'; fi`

src/dgetrf_taskdep-core_dplgsy.o: src/core_dplgsy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-core_dplgsy.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-core_dplgsy.Tpo -c -o src/dgetrf_taskdep-core_dplgsy.o `test -f 'src/core_dplgsy.c' || echo '$(srcdir)/'`src/core_dplgsy.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-core_dplgsy.Tpo src/$(DEPDIR)/dgetrf_taskdep-core_dplgsy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dplgsy.c' object='src/dgetrf_taskdep-core_dplgsy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-core_dplgsy.o `test -f 'src/core_dplgsy.c' || echo '$(srcdir)/'`src/core_dplgsy.c

src/dgetrf_taskdep-core_dplgsy.obj: src/core_dplgsy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-core_dplgsy.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-core_dplgsy.Tpo -c -o src/dgetrf_taskdep-core_dplgsy.obj `if test -f 'src/core_dplgsy.c'; then $(CYGPATH_W) 'src/core_dplgsy.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dplgsy.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-core_dplgsy.Tpo src/$(DEPDIR)/dgetrf_taskdep-core_dplgsy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dplgsy.c' object='src/dgetrf_taskdep-core_dplgsy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-core_dplgsy.obj `if test -f 'src/core_dplgsy.c'; then $(CYGPATH_W) 'src/core_dplgsy.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dplgsy.c'; fi`

src/dgetrf_taskdep-core_dplrnt.o: src/core_dplrnt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-core_dplrnt.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-core_dplrnt.Tpo -c -o src/dgetrf_taskdep-core_dplrnt.o `test -f 'src/core_dplrnt.c' || echo '$(srcdir)/'`src/core_dplrnt.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-core_dplrnt.Tpo src/$(DEPDIR)/dgetrf_taskdep-core_dplrnt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dplrnt.c' object='src/dgetrf_taskdep-core_dplrnt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-core_dplrnt.o `test -f 'src/core_dplrnt.c' || echo '$(srcdir)/'`src/core_dplrnt.c

src/dgetrf_taskdep-core_dplrnt.obj: src/core_dplrnt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-core_dplrnt.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-core_dplrnt.Tpo -c -o src/dgetrf_taskdep-core_dplrnt.obj `if test -f 'src/core_dplrnt.c'; then $(CYGPATH_W) 'src/core_dplrnt.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dplrnt.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-core_dplrnt.Tpo src/$(DEPDIR)/dgetrf_taskdep-core_dplrnt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dplrnt.c' object='src/dgetrf_taskdep-core_dplrnt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-core_dplrnt.obj `if test -f 'src/core_dplrnt.c'; then $(CYGPATH_W) 'src/core_dplrnt.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dplrnt.c'; fi`

src/dgetrf_taskdep-core_dtsmqr.o: src/core_dtsmqr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-core_dtsmqr.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-core_dtsmqr.Tpo -c -o src/dgetrf_taskdep-core_dtsmqr.o `test -f 'src/core_dtsmqr.c' || echo '$(srcdir)/'`src/core_dtsmqr.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-core_dtsmqr.Tpo src/$(DEPDIR)/dgetrf_taskdep-core_dtsmqr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dtsmqr.c' object='src/dgetrf_taskdep-core_dtsmqr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-core_dtsmqr.o `test -f 'src/core_dtsmqr.c' || echo '$(srcdir)/'`src/core_dtsmqr.c

src/dgetrf_taskdep-core_dtsmqr.obj: src/core_dtsmqr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-core_dtsmqr.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-core_dtsmqr.Tpo -c -o src/dgetrf_taskdep-core_dtsmqr.obj `if test -f 'src/core_dtsmqr.c'; then $(CYGPATH_W) 'src/core_dtsmqr.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dtsmqr.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-core_dtsmqr.Tpo src/$(DEPDIR)/dgetrf_taskdep-core_dtsmqr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dtsmqr.c' object='src/dgetrf_taskdep-core_dtsmqr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-core_dtsmqr.obj `if test -f 'src/core_dtsmqr.c'; then $(CYGPATH_W) 'src/core_dtsmqr.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dtsmqr.c'; fi`

src/dgetrf_taskdep-core_dtsqrt.o: src/core_dtsqrt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-core_dtsqrt.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-core_dtsqrt.Tpo -c -o src/dgetrf_taskdep-core_dtsqrt.o `test -f 'src/core_dtsqrt.c' || echo '$(srcdir)/'`src/core_dtsqrt.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-core_dtsqrt.Tpo src/$(DEPDIR)/dgetrf_taskdep-core_dtsqrt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dtsqrt.c' object='src/dgetrf_taskdep-core_dtsqrt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-core_dtsqrt.o `test -f 'src/core_dtsqrt.c' || echo '$(srcdir)/'`src/core_dtsqrt.c

src/dgetrf_taskdep-core_dtsqrt.obj: src/core_dtsqrt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-core_dtsqrt.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-core_dtsqrt.Tpo -c -o src/dgetrf_taskdep-core_dtsqrt.obj `if test -f 'src/core_dtsqrt.c'; then $(CYGPATH_W) 'src/core_dtsqrt.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dtsqrt.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-core_dtsqrt.Tpo src/$(DEPDIR)/dgetrf_taskdep-core_dtsqrt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dtsqrt.c' object='src/dgetrf_taskdep-core_dtsqrt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-core_dtsqrt.obj `if test -f 'src/core_dtsqrt.c'; then $(CYGPATH_W) 'src/core_dtsqrt.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dtsqrt.c'; fi`

src/dgetrf_taskdep-dauxiliary.o: src/dauxiliary.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-dauxiliary.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-dauxiliary.Tpo -c -o src/dgetrf_taskdep-dauxiliary.o `test -f 'src/dauxiliary.c' || echo '$(srcdir)/'`src/dauxiliary.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-dauxiliary.Tpo src/$(DEPDIR)/dgetrf_taskdep-dauxiliary.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dauxiliary.c' object='src/dgetrf_taskdep-dauxiliary.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-dauxiliary.o `test -f 'src/dauxiliary.c' || echo '$(srcdir)/'`src/dauxiliary.c

src/dgetrf_taskdep-dauxiliary.obj: src/dauxiliary.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-dauxiliary.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-dauxiliary.Tpo -c -o src/dgetrf_taskdep-dauxiliary.obj `if test -f 'src/dauxiliary.c'; then $(CYGPATH_W) 'src/dauxiliary.c'; else $(CYGPATH_W) '$(srcdir)/src/dauxiliary.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-dauxiliary.Tpo src/$(DEPDIR)/dgetrf_taskdep-dauxiliary.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dauxiliary.c' object='src/dgetrf_taskdep-dauxiliary.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-dauxiliary.obj `if test -f 'src/dauxiliary.c'; then $(CYGPATH_W) 'src/dauxiliary.c'; else $(CYGPATH_W) '$(srcdir)/src/dauxiliary.c'; fi`

src/dgetrf_taskdep-descriptor.o: src/descriptor.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-descriptor.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-descriptor.Tpo -c -o src/dgetrf_taskdep-descriptor.o `test -f 'src/descriptor.c' || echo '$(srcdir)/'`src/descriptor.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-descriptor.Tpo src/$(DEPDIR)/dgetrf_taskdep-descriptor.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/descriptor.c' object='src/dgetrf_taskdep-descriptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-descriptor.o `test -f 'src/descriptor.c' || echo '$(srcdir)/'`src/descriptor.c

src/dgetrf_taskdep-descriptor.obj: src/descriptor.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-descriptor.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-descriptor.Tpo -c -o src/dgetrf_taskdep-descriptor.obj `if test -f 'src/descriptor.c'; then $(CYGPATH_W) 'src/descriptor.c'; else $(CYGPATH_W) '$(srcdir)/src/descriptor.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-descriptor.Tpo src/$(DEPDIR)/dgetrf_taskdep-descriptor.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/descriptor.c' object='src/dgetrf_taskdep-descriptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-descriptor.obj `if test -f 'src/descriptor.c'; then $(CYGPATH_W) 'src/descriptor.c'; else $(CYGPATH_W) '$(srcdir)/src/descriptor.c'; fi`

src/dgetrf_taskdep-dgeqrs.o: src/dgeqrs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-dgeqrs.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-dgeqrs.Tpo -c -o src/dgetrf_taskdep-dgeqrs.o `test -f 'src/dgeqrs.c' || echo '$(srcdir)/'`src/dgeqrs.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-dgeqrs.Tpo src/$(DEPDIR)/dgetrf_taskdep-dgeqrs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dgeqrs.c' object='src/dgetrf_taskdep-dgeqrs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-dgeqrs.o `test -f 'src/dgeqrs.c' || echo '$(srcdir)/'`src/dgeqrs.c

src/dgetrf_taskdep-dgeqrs.obj: src/dgeqrs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-dgeqrs.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-dgeqrs.Tpo -c -o src/dgetrf_taskdep-dgeqrs.obj `if test -f 'src/dgeqrs.c'; then $(CYGPATH_W) 'src/dgeqrs.c'; else $(CYGPATH_W) '$(srcdir)/src/dgeqrs.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-dgeqrs.Tpo src/$(DEPDIR)/dgetrf_taskdep-dgeqrs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dgeqrs.c' object='src/dgetrf_taskdep-dgeqrs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-dgeqrs.obj `if test -f 'src/dgeqrs.c'; then $(CYGPATH_W) 'src/dgeqrs.c'; else $(CYGPATH_W) '$(srcdir)/src/dgeqrs.c'; fi`

src/dgetrf_taskdep-dgetrs.o: src/dgetrs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-dgetrs.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-dgetrs.Tpo -c -o src/dgetrf_taskdep-dgetrs.o `test -f 'src/dgetrs.c' || echo '$(srcdir)/'`src/dgetrs.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-dgetrs.Tpo src/$(DEPDIR)/dgetrf_taskdep-dgetrs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dgetrs.c' object='src/dgetrf_taskdep-dgetrs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-dgetrs.o `test -f 'src/dgetrs.c' || echo '$(srcdir)/'`src/dgetrs.c

src/dgetrf_taskdep-dgetrs.obj: src/dgetrs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-dgetrs.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-dgetrs.Tpo -c -o src/dgetrf_taskdep-dgetrs.obj `if test -f 'src/dgetrs.c'; then $(CYGPATH_W) 'src/dgetrs.c'; else $(CYGPATH_W) '$(srcdir)/src/dgetrs.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-dgetrs.Tpo src/$(DEPDIR)/dgetrf_taskdep-dgetrs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dgetrs.c' object='src/dgetrf_taskdep-dgetrs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-dgetrs.obj `if test -f 'src/dgetrs.c'; then $(CYGPATH_W) 'src/dgetrs.c'; else $(CYGPATH_W) '$(srcdir)/src/dgetrs.c'; fi`

src/dgetrf_taskdep-dpotrs.o: src/dpotrs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-dpotrs.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-dpotrs.Tpo -c -o src/dgetrf_taskdep-dpotrs.o `test -f 'src/dpotrs.c' || echo '$(srcdir)/'`src/dpotrs.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-dpotrs.Tpo src/$(DEPDIR)/dgetrf_taskdep-dpotrs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dpotrs.c' object='src/dgetrf_taskdep-dpotrs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-dpotrs.o `test -f 'src/dpotrs.c' || echo '$(srcdir)/'`src/dpotrs.c

src/dgetrf_taskdep-dpotrs.obj: src/dpotrs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-dpotrs.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-dpotrs.Tpo -c -o src/dgetrf_taskdep-dpotrs.obj `if test -f 'src/dpotrs.c'; then $(CYGPATH_W) 'src/dpotrs.c'; else $(CYGPATH_W) '$(srcdir)/src/dpotrs.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-dpotrs.Tpo src/$(DEPDIR)/dgetrf_taskdep-dpotrs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dpotrs.c' object='src/dgetrf_taskdep-dpotrs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-dpotrs.obj `if test -f 'src/dpotrs.c'; then $(CYGPATH_W) 'src/dpotrs.c'; else $(CYGPATH_W) '$(srcdir)/src/dpotrs.c'; fi`

src/dgetrf_taskdep-global.o: src/global.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-global.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-global.Tpo -c -o src/dgetrf_taskdep-global.o `test -f 'src/global.c' || echo '$(srcdir)/'`src/global.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-global.Tpo src/$(DEPDIR)/dgetrf_taskdep-global.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/global.c' object='src/dgetrf_taskdep-global.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-global.o `test -f 'src/global.c' || echo '$(srcdir)/'`src/global.c

src/dgetrf_taskdep-global.obj: src/global.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-global.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-global.Tpo -c -o src/dgetrf_taskdep-global.obj `if test -f 'src/global.c'; then $(CYGPATH_W) 'src/global.c'; else $(CYGPATH_W) '$(srcdir)/src/global.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-global.Tpo src/$(DEPDIR)/dgetrf_taskdep-global.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/global.c' object='src/dgetrf_taskdep-global.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-global.obj `if test -f 'src/global.c'; then $(CYGPATH_W) 'src/global.c'; else $(CYGPATH_W) '$(srcdir)/src/global.c'; fi`

src/dgetrf_taskdep-pdgeqrf.o: src/pdgeqrf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-pdgeqrf.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-pdgeqrf.Tpo -c -o src/dgetrf_taskdep-pdgeqrf.o `test -f 'src/pdgeqrf.c' || echo '$(srcdir)/'`src/pdgeqrf.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-pdgeqrf.Tpo src/$(DEPDIR)/dgetrf_taskdep-pdgeqrf.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdgeqrf.c' object='src/dgetrf_taskdep-pdgeqrf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-pdgeqrf.o `test -f 'src/pdgeqrf.c' || echo '$(srcdir)/'`src/pdgeqrf.c

src/dgetrf_taskdep-pdgeqrf.obj: src/pdgeqrf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-pdgeqrf.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-pdgeqrf.Tpo -c -o src/dgetrf_taskdep-pdgeqrf.obj `if test -f 'src/pdgeqrf.c'; then $(CYGPATH_W) 'src/pdgeqrf.c'; else $(CYGPATH_W) '$(srcdir)/src/pdgeqrf.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-pdgeqrf.Tpo src/$(DEPDIR)/dgetrf_taskdep-pdgeqrf.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdgeqrf.c' object='src/dgetrf_taskdep-pdgeqrf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-pdgeqrf.obj `if test -f 'src/pdgeqrf.c'; then $(CYGPATH_W) 'src/pdgeqrf.c'; else $(CYGPATH_W) '$(srcdir)/src/pdgeqrf.c'; fi`

src/dgetrf_taskdep-pdgetrf_rectil.o: src/pdgetrf_rectil.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-pdgetrf_rectil.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-pdgetrf_rectil.Tpo -c -o src/dgetrf_taskdep-pdgetrf_rectil.o `test -f 'src/pdgetrf_rectil.c' || echo '$(srcdir)/'`src/pdgetrf_rectil.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-pdgetrf_rectil.Tpo src/$(DEPDIR)/dgetrf_taskdep-pdgetrf_rectil.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdgetrf_rectil.c' object='src/dgetrf_taskdep-pdgetrf_rectil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-pdgetrf_rectil.o `test -f 'src/pdgetrf_rectil.c' || echo '$(srcdir)/'`src/pdgetrf_rectil.c

src/dgetrf_taskdep-pdgetrf_rectil.obj: src/pdgetrf_rectil.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-pdgetrf_rectil.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-pdgetrf_rectil.Tpo -c -o src/dgetrf_taskdep-pdgetrf_rectil.obj `if test -f 'src/pdgetrf_rectil.c'; then $(CYGPATH_W) 'src/pdgetrf_rectil.c'; else $(CYGPATH_W) '$(srcdir)/src/pdgetrf_rectil.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-pdgetrf_rectil.Tpo src/$(DEPDIR)/dgetrf_taskdep-pdgetrf_rectil.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdgetrf_rectil.c' object='src/dgetrf_taskdep-pdgetrf_rectil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-pdgetrf_rectil.obj `if test -f 'src/pdgetrf_rectil.c'; then $(CYGPATH_W) 'src/pdgetrf_rectil.c'; else $(CYGPATH_W) '$(srcdir)/src/pdgetrf_rectil.c'; fi`

src/dgetrf_taskdep-pdlaswp.o: src/pdlaswp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-pdlaswp.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-pdlaswp.Tpo -c -o src/dgetrf_taskdep-pdlaswp.o `test -f 'src/pdlaswp.c' || echo '$(srcdir)/'`src/pdlaswp.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-pdlaswp.Tpo src/$(DEPDIR)/dgetrf_taskdep-pdlaswp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdlaswp.c' object='src/dgetrf_taskdep-pdlaswp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-pdlaswp.o `test -f 'src/pdlaswp.c' || echo '$(srcdir)/'`src/pdlaswp.c

src/dgetrf_taskdep-pdlaswp.obj: src/pdlaswp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-pdlaswp.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-pdlaswp.Tpo -c -o src/dgetrf_taskdep-pdlaswp.obj `if test -f 'src/pdlaswp.c'; then $(CYGPATH_W) 'src/pdlaswp.c'; else $(CYGPATH_W) '$(srcdir)/src/pdlaswp.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-pdlaswp.Tpo src/$(DEPDIR)/dgetrf_taskdep-pdlaswp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdlaswp.c' object='src/dgetrf_taskdep-pdlaswp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-pdlaswp.obj `if test -f 'src/pdlaswp.c'; then $(CYGPATH_W) 'src/pdlaswp.c'; else $(CYGPATH_W) '$(srcdir)/src/pdlaswp.c'; fi`

src/dgetrf_taskdep-pdormqr.o: src/pdormqr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-pdormqr.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-pdormqr.Tpo -c -o src/dgetrf_taskdep-pdormqr.o `test -f 'src/pdormqr.c' || echo '$(srcdir)/'`src/pdormqr.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-pdormqr.Tpo src/$(DEPDIR)/dgetrf_taskdep-pdormqr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdormqr.c' object='src/dgetrf_taskdep-pdormqr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-pdormqr.o `test -f 'src/pdormqr.c' || echo '$(srcdir)/'`src/pdormqr.c

src/dgetrf_taskdep-pdormqr.obj: src/pdormqr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-pdormqr.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-pdormqr.Tpo -c -o src/dgetrf_taskdep-pdormqr.obj `if test -f 'src/pdormqr.c'; then $(CYGPATH_W) 'src/pdormqr.c'; else $(CYGPATH_W) '$(srcdir)/src/pdormqr.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-pdormqr.Tpo src/$(DEPDIR)/dgetrf_taskdep-pdormqr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdormqr.c' object='src/dgetrf_taskdep-pdormqr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-pdormqr.obj `if test -f 'src/pdormqr.c'; then $(CYGPATH_W) 'src/pdormqr.c'; else $(CYGPATH_W) '$(srcdir)/src/pdormqr.c'; fi`

src/dgetrf_taskdep-pdplgsy.o: src/pdplgsy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-pdplgsy.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-pdplgsy.Tpo -c -o src/dgetrf_taskdep-pdplgsy.o `test -f 'src/pdplgsy.c' || echo '$(srcdir)/'`src/pdplgsy.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-pdplgsy.Tpo src/$(DEPDIR)/dgetrf_taskdep-pdplgsy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdplgsy.c' object='src/dgetrf_taskdep-pdplgsy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-pdplgsy.o `test -f 'src/pdplgsy.c' || echo '$(srcdir)/'`src/pdplgsy.c

src/dgetrf_taskdep-pdplgsy.obj: src/pdplgsy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-pdplgsy.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-pdplgsy.Tpo -c -o src/dgetrf_taskdep-pdplgsy.obj `if test -f 'src/pdplgsy.c'; then $(CYGPATH_W) 'src/pdplgsy.c'; else $(CYGPATH_W) '$(srcdir)/src/pdplgsy.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-pdplgsy.Tpo src/$(DEPDIR)/dgetrf_taskdep-pdplgsy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdplgsy.c' object='src/dgetrf_taskdep-pdplgsy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-pdplgsy.obj `if test -f 'src/pdplgsy.c'; then $(CYGPATH_W) 'src/pdplgsy.c'; else $(CYGPATH_W) '$(srcdir)/src/pdplgsy.c'; fi`

src/dgetrf_taskdep-pdpltmg.o: src/pdpltmg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-pdpltmg.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-pdpltmg.Tpo -c -o src/dgetrf_taskdep-pdpltmg.o `test -f 'src/pdpltmg.c' || echo '$(srcdir)/'`src/pdpltmg.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-pdpltmg.Tpo src/$(DEPDIR)/dgetrf_taskdep-pdpltmg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdpltmg.c' object='src/dgetrf_taskdep-pdpltmg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-pdpltmg.o `test -f 'src/pdpltmg.c' || echo '$(srcdir)/'`src/pdpltmg.c

src/dgetrf_taskdep-pdpltmg.obj: src/pdpltmg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-pdpltmg.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-pdpltmg.Tpo -c -o src/dgetrf_taskdep-pdpltmg.obj `if test -f 'src/pdpltmg.c'; then $(CYGPATH_W) 'src/pdpltmg.c'; else $(CYGPATH_W) '$(srcdir)/src/pdpltmg.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-pdpltmg.Tpo src/$(DEPDIR)/dgetrf_taskdep-pdpltmg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdpltmg.c' object='src/dgetrf_taskdep-pdpltmg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-pdpltmg.obj `if test -f 'src/pdpltmg.c'; then $(CYGPATH_W) 'src/pdpltmg.c'; else $(CYGPATH_W) '$(srcdir)/src/pdpltmg.c'; fi`

src/dgetrf_taskdep-pdpotrf.o: src/pdpotrf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-pdpotrf.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-pdpotrf.Tpo -c -o src/dgetrf_taskdep-pdpotrf.o `test -f 'src/pdpotrf.c' || echo '$(srcdir)/'`src/pdpotrf.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-pdpotrf.Tpo src/$(DEPDIR)/dgetrf_taskdep-pdpotrf.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdpotrf.c' object='src/dgetrf_taskdep-pdpotrf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-pdpotrf.o `test -f 'src/pdpotrf.c' || echo '$(srcdir)/'`src/pdpotrf.c

src/dgetrf_taskdep-pdpotrf.obj: src/pdpotrf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-pdpotrf.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-pdpotrf.Tpo -c -o src/dgetrf_taskdep-pdpotrf.obj `if test -f 'src/pdpotrf.c'; then $(CYGPATH_W) 'src/pdpotrf.c'; else $(CYGPATH_W) '$(srcdir)/src/pdpotrf.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-pdpotrf.Tpo src/$(DEPDIR)/dgetrf_taskdep-pdpotrf.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdpotrf.c' object='src/dgetrf_taskdep-pdpotrf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-pdpotrf.obj `if test -f 'src/pdpotrf.c'; then $(CYGPATH_W) 'src/pdpotrf.c'; else $(CYGPATH_W) '$(srcdir)/src/pdpotrf.c'; fi`

src/dgetrf_taskdep-pdtile.o: src/pdtile.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-pdtile.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-pdtile.Tpo -c -o src/dgetrf_taskdep-pdtile.o `test -f 'src/pdtile.c' || echo '$(srcdir)/'`src/pdtile.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-pdtile.Tpo src/$(DEPDIR)/dgetrf_taskdep-pdtile.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdtile.c' object='src/dgetrf_taskdep-pdtile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-pdtile.o `test -f 'src/pdtile.c' || echo '$(srcdir)/'`src/pdtile.c

src/dgetrf_taskdep-pdtile.obj: src/pdtile.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-pdtile.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-pdtile.Tpo -c -o src/dgetrf_taskdep-pdtile.obj `if test -f 'src/pdtile.c'; then $(CYGPATH_W) 'src/pdtile.c'; else $(CYGPATH_W) '$(srcdir)/src/pdtile.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-pdtile.Tpo src/$(DEPDIR)/dgetrf_taskdep-pdtile.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdtile.c' object='src/dgetrf_taskdep-pdtile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-pdtile.obj `if test -f 'src/pdtile.c'; then $(CYGPATH_W) 'src/pdtile.c'; else $(CYGPATH_W) '$(srcdir)/src/pdtile.c'; fi`

src/dgetrf_taskdep-pdtrsm.o: src/pdtrsm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-pdtrsm.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-pdtrsm.Tpo -c -o src/dgetrf_taskdep-pdtrsm.o `test -f 'src/pdtrsm.c' || echo '$(srcdir)/'`src/pdtrsm.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-pdtrsm.Tpo src/$(DEPDIR)/dgetrf_taskdep-pdtrsm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdtrsm.c' object='src/dgetrf_taskdep-pdtrsm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-pdtrsm.o `test -f 'src/pdtrsm.c' || echo '$(srcdir)/'`src/pdtrsm.c

src/dgetrf_taskdep-pdtrsm.obj: src/pdtrsm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-pdtrsm.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-pdtrsm.Tpo -c -o src/dgetrf_taskdep-pdtrsm.obj `if test -f 'src/pdtrsm.c'; then $(CYGPATH_W) 'src/pdtrsm.c'; else $(CYGPATH_W) '$(srcdir)/src/pdtrsm.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-pdtrsm.Tpo src/$(DEPDIR)/dgetrf_taskdep-pdtrsm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdtrsm.c' object='src/dgetrf_taskdep-pdtrsm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-pdtrsm.obj `if test -f 'src/pdtrsm.c'; then $(CYGPATH_W) 'src/pdtrsm.c'; else $(CYGPATH_W) '$(srcdir)/src/pdtrsm.c'; fi`

src/dgetrf_taskdep-workspace.o: src/workspace.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-workspace.o -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-workspace.Tpo -c -o src/dgetrf_taskdep-workspace.o `test -f 'src/workspace.c' || echo '$(srcdir)/'`src/workspace.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-workspace.Tpo src/$(DEPDIR)/dgetrf_taskdep-workspace.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/workspace.c' object='src/dgetrf_taskdep-workspace.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-workspace.o `test -f 'src/workspace.c' || echo '$(srcdir)/'`src/workspace.c

src/dgetrf_taskdep-workspace.obj: src/workspace.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dgetrf_taskdep-workspace.obj -MD -MP -MF src/$(DEPDIR)/dgetrf_taskdep-workspace.Tpo -c -o src/dgetrf_taskdep-workspace.obj `if test -f 'src/workspace.c'; then $(CYGPATH_W) 'src/workspace.c'; else $(CYGPATH_W) '$(srcdir)/src/workspace.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dgetrf_taskdep-workspace.Tpo src/$(DEPDIR)/dgetrf_taskdep-workspace.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/workspace.c' object='src/dgetrf_taskdep-workspace.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dgetrf_taskdep-workspace.obj `if test -f 'src/workspace.c'; then $(CYGPATH_W) 'src/workspace.c'; else $(CYGPATH_W) '$(srcdir)/src/workspace.c'; fi`

dgetrf_taskdep-main.o: main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT dgetrf_taskdep-main.o -MD -MP -MF $(DEPDIR)/dgetrf_taskdep-main.Tpo -c -o dgetrf_taskdep-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dgetrf_taskdep-main.Tpo $(DEPDIR)/dgetrf_taskdep-main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='main.c' object='dgetrf_taskdep-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o dgetrf_taskdep-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

dgetrf_taskdep-main.obj: main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -MT dgetrf_taskdep-main.obj -MD -MP -MF $(DEPDIR)/dgetrf_taskdep-main.Tpo -c -o dgetrf_taskdep-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dgetrf_taskdep-main.Tpo $(DEPDIR)/dgetrf_taskdep-main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='main.c' object='dgetrf_taskdep-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dgetrf_taskdep_CFLAGS) $(CFLAGS) -c -o dgetrf_taskdep-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

src/dpotrf_seq-time_dpotrf-task.o: src/time_dpotrf-task.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_seq_CFLAGS) $(CFLAGS) -MT src/dpotrf_seq-time_dpotrf-task.o -MD -MP -MF src/$(DEPDIR)/dpotrf_seq-time_dpotrf-task.Tpo -c -o src/dpotrf_seq-time_dpotrf-task.o `test -f 'src/time_dpotrf-task.c' || echo '$(srcdir)/'`src/time_dpotrf-task.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_seq-time_dpotrf-task.Tpo src/$(DEPDIR)/dpotrf_seq-time_dpotrf-task.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/time_dpotrf-task.c' object='src/dpotrf_seq-time_dpotrf-task.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_seq_CFLAGS) $(CFLAGS) -c -o src/dpotrf_seq-time_dpotrf-task.o `test -f 'src/time_dpotrf-task.c' || echo '$(srcdir)/'`src/time_dpotrf-task.c

src/dpotrf_seq-time_dpotrf-task.obj: src/time_dpotrf-task.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_seq_CFLAGS) $(CFLAGS) -MT src/dpotrf_seq-time_dpotrf-task.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_seq-time_dpotrf-task.Tpo -c -o src/dpotrf_seq-time_dpotrf-task.obj `if test -f 'src/time_dpotrf-task.c'; then $(CYGPATH_W) 'src/time_dpotrf-task.c'; else $(CYGPATH_W) '$(srcdir)/src/time_dpotrf-task.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_seq-time_dpotrf-task.Tpo src/$(DEPDIR)/dpotrf_seq-time_dpotrf-task.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/time_dpotrf-task.c' object='src/dpotrf_seq-time_dpotrf-task.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_seq_CFLAGS) $(CFLAGS) -c -o src/dpotrf_seq-time_dpotrf-task.obj `if test -f 'src/time_dpotrf-task.c'; then $(CYGPATH_W) 'src/time_dpotrf-task.c'; else $(CYGPATH_W) '$(srcdir)/src/time_dpotrf-task.c'; fi`

src/dpotrf_taskdep-time_dpotrf-task.o: src/time_dpotrf-task.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-time_dpotrf-task.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-time_dpotrf-task.Tpo -c -o src/dpotrf_taskdep-time_dpotrf-task.o `test -f 'src/time_dpotrf-task.c' || echo '$(srcdir)/'`src/time_dpotrf-task.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-time_dpotrf-task.Tpo src/$(DEPDIR)/dpotrf_taskdep-time_dpotrf-task.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/time_dpotrf-task.c' object='src/dpotrf_taskdep-time_dpotrf-task.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-time_dpotrf-task.o `test -f 'src/time_dpotrf-task.c' || echo '$(srcdir)/'`src/time_dpotrf-task.c

src/dpotrf_taskdep-time_dpotrf-task.obj: src/time_dpotrf-task.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-time_dpotrf-task.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-time_dpotrf-task.Tpo -c -o src/dpotrf_taskdep-time_dpotrf-task.obj `if test -f 'src/time_dpotrf-task.c'; then $(CYGPATH_W) 'src/time_dpotrf-task.c'; else $(CYGPATH_W) '$(srcdir)/src/time_dpotrf-task.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-time_dpotrf-task.Tpo src/$(DEPDIR)/dpotrf_taskdep-time_dpotrf-task.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/time_dpotrf-task.c' object='src/dpotrf_taskdep-time_dpotrf-task.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-time_dpotrf-task.obj `if test -f 'src/time_dpotrf-task.c'; then $(CYGPATH_W) 'src/time_dpotrf-task.c'; else $(CYGPATH_W) '$(srcdir)/src/time_dpotrf-task.c'; fi`

src/dpotrf_taskdep-auxiliary.o: src/auxiliary.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-auxiliary.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-auxiliary.Tpo -c -o src/dpotrf_taskdep-auxiliary.o `test -f 'src/auxiliary.c' || echo '$(srcdir)/'`src/auxiliary.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-auxiliary.Tpo src/$(DEPDIR)/dpotrf_taskdep-auxiliary.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/auxiliary.c' object='src/dpotrf_taskdep-auxiliary.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-auxiliary.o `test -f 'src/auxiliary.c' || echo '$(srcdir)/'`src/auxiliary.c

src/dpotrf_taskdep-auxiliary.obj: src/auxiliary.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-auxiliary.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-auxiliary.Tpo -c -o src/dpotrf_taskdep-auxiliary.obj `if test -f 'src/auxiliary.c'; then $(CYGPATH_W) 'src/auxiliary.c'; else $(CYGPATH_W) '$(srcdir)/src/auxiliary.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-auxiliary.Tpo src/$(DEPDIR)/dpotrf_taskdep-auxiliary.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/auxiliary.c' object='src/dpotrf_taskdep-auxiliary.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-auxiliary.obj `if test -f 'src/auxiliary.c'; then $(CYGPATH_W) 'src/auxiliary.c'; else $(CYGPATH_W) '$(srcdir)/src/auxiliary.c'; fi`

src/dpotrf_taskdep-core_dgeqrt.o: src/core_dgeqrt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-core_dgeqrt.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-core_dgeqrt.Tpo -c -o src/dpotrf_taskdep-core_dgeqrt.o `test -f 'src/core_dgeqrt.c' || echo '$(srcdir)/'`src/core_dgeqrt.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-core_dgeqrt.Tpo src/$(DEPDIR)/dpotrf_taskdep-core_dgeqrt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dgeqrt.c' object='src/dpotrf_taskdep-core_dgeqrt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-core_dgeqrt.o `test -f 'src/core_dgeqrt.c' || echo '$(srcdir)/'`src/core_dgeqrt.c

src/dpotrf_taskdep-core_dgeqrt.obj: src/core_dgeqrt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-core_dgeqrt.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-core_dgeqrt.Tpo -c -o src/dpotrf_taskdep-core_dgeqrt.obj `if test -f 'src/core_dgeqrt.c'; then $(CYGPATH_W) 'src/core_dgeqrt.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dgeqrt.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-core_dgeqrt.Tpo src/$(DEPDIR)/dpotrf_taskdep-core_dgeqrt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dgeqrt.c' object='src/dpotrf_taskdep-core_dgeqrt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-core_dgeqrt.obj `if test -f 'src/core_dgeqrt.c'; then $(CYGPATH_W) 'src/core_dgeqrt.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dgeqrt.c'; fi`

src/dpotrf_taskdep-core_dgetrf_rectil.o: src/core_dgetrf_rectil.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-core_dgetrf_rectil.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-core_dgetrf_rectil.Tpo -c -o src/dpotrf_taskdep-core_dgetrf_rectil.o `test -f 'src/core_dgetrf_rectil.c' || echo '$(srcdir)/'`src/core_dgetrf_rectil.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-core_dgetrf_rectil.Tpo src/$(DEPDIR)/dpotrf_taskdep-core_dgetrf_rectil.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dgetrf_rectil.c' object='src/dpotrf_taskdep-core_dgetrf_rectil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-core_dgetrf_rectil.o `test -f 'src/core_dgetrf_rectil.c' || echo '$(srcdir)/'`src/core_dgetrf_rectil.c

src/dpotrf_taskdep-core_dgetrf_rectil.obj: src/core_dgetrf_rectil.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-core_dgetrf_rectil.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-core_dgetrf_rectil.Tpo -c -o src/dpotrf_taskdep-core_dgetrf_rectil.obj `if test -f 'src/core_dgetrf_rectil.c'; then $(CYGPATH_W) 'src/core_dgetrf_rectil.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dgetrf_rectil.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-core_dgetrf_rectil.Tpo src/$(DEPDIR)/dpotrf_taskdep-core_dgetrf_rectil.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dgetrf_rectil.c' object='src/dpotrf_taskdep-core_dgetrf_rectil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-core_dgetrf_rectil.obj `if test -f 'src/core_dgetrf_rectil.c'; then $(CYGPATH_W) 'src/core_dgetrf_rectil.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dgetrf_rectil.c'; fi`

src/dpotrf_taskdep-core_dlaswp.o: src/core_dlaswp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-core_dlaswp.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-core_dlaswp.Tpo -c -o src/dpotrf_taskdep-core_dlaswp.o `test -f 'src/core_dlaswp.c' || echo '$(srcdir)/'`src/core_dlaswp.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-core_dlaswp.Tpo src/$(DEPDIR)/dpotrf_taskdep-core_dlaswp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dlaswp.c' object='src/dpotrf_taskdep-core_dlaswp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-core_dlaswp.o `test -f 'src/core_dlaswp.c' || echo '$(srcdir)/'`src/core_dlaswp.c

src/dpotrf_taskdep-core_dlaswp.obj: src/core_dlaswp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-core_dlaswp.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-core_dlaswp.Tpo -c -o src/dpotrf_taskdep-core_dlaswp.obj `if test -f 'src/core_dlaswp.c'; then $(CYGPATH_W) 'src/core_dlaswp.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dlaswp.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-core_dlaswp.Tpo src/$(DEPDIR)/dpotrf_taskdep-core_dlaswp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dlaswp.c' object='src/dpotrf_taskdep-core_dlaswp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-core_dlaswp.obj `if test -f 'src/core_dlaswp.c'; then $(CYGPATH_W) 'src/core_dlaswp.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dlaswp.c'; fi`

src/dpotrf_taskdep-core_dormqr.o: src/core_dormqr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-core_dormqr.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-core_dormqr.Tpo -c -o src/dpotrf_taskdep-core_dormqr.o `test -f 'src/core_dormqr.c' || echo '$(srcdir)/'`src/core_dormqr.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-core_dormqr.Tpo src/$(DEPDIR)/dpotrf_taskdep-core_dormqr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dormqr.c' object='src/dpotrf_taskdep-core_dormqr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-core_dormqr.o `test -f 'src/core_dormqr.c' || echo '$(srcdir)/'`src/core_dormqr.c

src/dpotrf_taskdep-core_dormqr.obj: src/core_dormqr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-core_dormqr.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-core_dormqr.Tpo -c -o src/dpotrf_taskdep-core_dormqr.obj `if test -f 'src/core_dormqr.c'; then $(CYGPATH_W) 'src/core_dormqr.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dormqr.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-core_dormqr.Tpo src/$(DEPDIR)/dpotrf_taskdep-core_dormqr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dormqr.c' object='src/dpotrf_taskdep-core_dormqr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-core_dormqr.obj `if test -f 'src/core_dormqr.c'; then $(CYGPATH_W) 'src/core_dormqr.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dormqr.c'; fi`

src/dpotrf_taskdep-core_dpamm.o: src/core_dpamm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-core_dpamm.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-core_dpamm.Tpo -c -o src/dpotrf_taskdep-core_dpamm.o `test -f 'src/core_dpamm.c' || echo '$(srcdir)/'`src/core_dpamm.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-core_dpamm.Tpo src/$(DEPDIR)/dpotrf_taskdep-core_dpamm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dpamm.c' object='src/dpotrf_taskdep-core_dpamm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-core_dpamm.o `test -f 'src/core_dpamm.c' || echo '$(srcdir)/'`src/core_dpamm.c

src/dpotrf_taskdep-core_dpamm.obj: src/core_dpamm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-core_dpamm.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-core_dpamm.Tpo -c -o src/dpotrf_taskdep-core_dpamm.obj `if test -f 'src/core_dpamm.c'; then $(CYGPATH_W) 'src/core_dpamm.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dpamm.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-core_dpamm.Tpo src/$(DEPDIR)/dpotrf_taskdep-core_dpamm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dpamm.c' object='src/dpotrf_taskdep-core_dpamm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-core_dpamm.obj `if test -f 'src/core_dpamm.c'; then $(CYGPATH_W) 'src/core_dpamm.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dpamm.c'; fi`

src/dpotrf_taskdep-core_dparfb.o: src/core_dparfb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-core_dparfb.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-core_dparfb.Tpo -c -o src/dpotrf_taskdep-core_dparfb.o `test -f 'src/core_dparfb.c' || echo '$(srcdir)/'`src/core_dparfb.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-core_dparfb.Tpo src/$(DEPDIR)/dpotrf_taskdep-core_dparfb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dparfb.c' object='src/dpotrf_taskdep-core_dparfb.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-core_dparfb.o `test -f 'src/core_dparfb.c' || echo '$(srcdir)/'`src/core_dparfb.c

src/dpotrf_taskdep-core_dparfb.obj: src/core_dparfb.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-core_dparfb.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-core_dparfb.Tpo -c -o src/dpotrf_taskdep-core_dparfb.obj `if test -f 'src/core_dparfb.c'; then $(CYGPATH_W) 'src/core_dparfb.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dparfb.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-core_dparfb.Tpo src/$(DEPDIR)/dpotrf_taskdep-core_dparfb.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dparfb.c' object='src/dpotrf_taskdep-core_dparfb.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-core_dparfb.obj `if test -f 'src/core_dparfb.c'; then $(CYGPATH_W) 'src/core_dparfb.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dparfb.c'; fi`

src/dpotrf_taskdep-core_dplgsy.o: src/core_dplgsy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-core_dplgsy.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-core_dplgsy.Tpo -c -o src/dpotrf_taskdep-core_dplgsy.o `test -f 'src/core_dplgsy.c' || echo '$(srcdir)/'`src/core_dplgsy.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-core_dplgsy.Tpo src/$(DEPDIR)/dpotrf_taskdep-core_dplgsy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dplgsy.c' object='src/dpotrf_taskdep-core_dplgsy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-core_dplgsy.o `test -f 'src/core_dplgsy.c' || echo '$(srcdir)/'`src/core_dplgsy.c

src/dpotrf_taskdep-core_dplgsy.obj: src/core_dplgsy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-core_dplgsy.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-core_dplgsy.Tpo -c -o src/dpotrf_taskdep-core_dplgsy.obj `if test -f 'src/core_dplgsy.c'; then $(CYGPATH_W) 'src/core_dplgsy.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dplgsy.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-core_dplgsy.Tpo src/$(DEPDIR)/dpotrf_taskdep-core_dplgsy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dplgsy.c' object='src/dpotrf_taskdep-core_dplgsy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-core_dplgsy.obj `if test -f 'src/core_dplgsy.c'; then $(CYGPATH_W) 'src/core_dplgsy.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dplgsy.c'; fi`

src/dpotrf_taskdep-core_dplrnt.o: src/core_dplrnt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-core_dplrnt.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-core_dplrnt.Tpo -c -o src/dpotrf_taskdep-core_dplrnt.o `test -f 'src/core_dplrnt.c' || echo '$(srcdir)/'`src/core_dplrnt.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-core_dplrnt.Tpo src/$(DEPDIR)/dpotrf_taskdep-core_dplrnt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dplrnt.c' object='src/dpotrf_taskdep-core_dplrnt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-core_dplrnt.o `test -f 'src/core_dplrnt.c' || echo '$(srcdir)/'`src/core_dplrnt.c

src/dpotrf_taskdep-core_dplrnt.obj: src/core_dplrnt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-core_dplrnt.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-core_dplrnt.Tpo -c -o src/dpotrf_taskdep-core_dplrnt.obj `if test -f 'src/core_dplrnt.c'; then $(CYGPATH_W) 'src/core_dplrnt.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dplrnt.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-core_dplrnt.Tpo src/$(DEPDIR)/dpotrf_taskdep-core_dplrnt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dplrnt.c' object='src/dpotrf_taskdep-core_dplrnt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-core_dplrnt.obj `if test -f 'src/core_dplrnt.c'; then $(CYGPATH_W) 'src/core_dplrnt.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dplrnt.c'; fi`

src/dpotrf_taskdep-core_dtsmqr.o: src/core_dtsmqr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-core_dtsmqr.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-core_dtsmqr.Tpo -c -o src/dpotrf_taskdep-core_dtsmqr.o `test -f 'src/core_dtsmqr.c' || echo '$(srcdir)/'`src/core_dtsmqr.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-core_dtsmqr.Tpo src/$(DEPDIR)/dpotrf_taskdep-core_dtsmqr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dtsmqr.c' object='src/dpotrf_taskdep-core_dtsmqr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-core_dtsmqr.o `test -f 'src/core_dtsmqr.c' || echo '$(srcdir)/'`src/core_dtsmqr.c

src/dpotrf_taskdep-core_dtsmqr.obj: src/core_dtsmqr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-core_dtsmqr.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-core_dtsmqr.Tpo -c -o src/dpotrf_taskdep-core_dtsmqr.obj `if test -f 'src/core_dtsmqr.c'; then $(CYGPATH_W) 'src/core_dtsmqr.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dtsmqr.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-core_dtsmqr.Tpo src/$(DEPDIR)/dpotrf_taskdep-core_dtsmqr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dtsmqr.c' object='src/dpotrf_taskdep-core_dtsmqr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-core_dtsmqr.obj `if test -f 'src/core_dtsmqr.c'; then $(CYGPATH_W) 'src/core_dtsmqr.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dtsmqr.c'; fi`

src/dpotrf_taskdep-core_dtsqrt.o: src/core_dtsqrt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-core_dtsqrt.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-core_dtsqrt.Tpo -c -o src/dpotrf_taskdep-core_dtsqrt.o `test -f 'src/core_dtsqrt.c' || echo '$(srcdir)/'`src/core_dtsqrt.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-core_dtsqrt.Tpo src/$(DEPDIR)/dpotrf_taskdep-core_dtsqrt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dtsqrt.c' object='src/dpotrf_taskdep-core_dtsqrt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-core_dtsqrt.o `test -f 'src/core_dtsqrt.c' || echo '$(srcdir)/'`src/core_dtsqrt.c

src/dpotrf_taskdep-core_dtsqrt.obj: src/core_dtsqrt.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-core_dtsqrt.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-core_dtsqrt.Tpo -c -o src/dpotrf_taskdep-core_dtsqrt.obj `if test -f 'src/core_dtsqrt.c'; then $(CYGPATH_W) 'src/core_dtsqrt.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dtsqrt.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-core_dtsqrt.Tpo src/$(DEPDIR)/dpotrf_taskdep-core_dtsqrt.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/core_dtsqrt.c' object='src/dpotrf_taskdep-core_dtsqrt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-core_dtsqrt.obj `if test -f 'src/core_dtsqrt.c'; then $(CYGPATH_W) 'src/core_dtsqrt.c'; else $(CYGPATH_W) '$(srcdir)/src/core_dtsqrt.c'; fi`

src/dpotrf_taskdep-dauxiliary.o: src/dauxiliary.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-dauxiliary.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-dauxiliary.Tpo -c -o src/dpotrf_taskdep-dauxiliary.o `test -f 'src/dauxiliary.c' || echo '$(srcdir)/'`src/dauxiliary.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-dauxiliary.Tpo src/$(DEPDIR)/dpotrf_taskdep-dauxiliary.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dauxiliary.c' object='src/dpotrf_taskdep-dauxiliary.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-dauxiliary.o `test -f 'src/dauxiliary.c' || echo '$(srcdir)/'`src/dauxiliary.c

src/dpotrf_taskdep-dauxiliary.obj: src/dauxiliary.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-dauxiliary.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-dauxiliary.Tpo -c -o src/dpotrf_taskdep-dauxiliary.obj `if test -f 'src/dauxiliary.c'; then $(CYGPATH_W) 'src/dauxiliary.c'; else $(CYGPATH_W) '$(srcdir)/src/dauxiliary.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-dauxiliary.Tpo src/$(DEPDIR)/dpotrf_taskdep-dauxiliary.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dauxiliary.c' object='src/dpotrf_taskdep-dauxiliary.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-dauxiliary.obj `if test -f 'src/dauxiliary.c'; then $(CYGPATH_W) 'src/dauxiliary.c'; else $(CYGPATH_W) '$(srcdir)/src/dauxiliary.c'; fi`

src/dpotrf_taskdep-descriptor.o: src/descriptor.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-descriptor.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-descriptor.Tpo -c -o src/dpotrf_taskdep-descriptor.o `test -f 'src/descriptor.c' || echo '$(srcdir)/'`src/descriptor.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-descriptor.Tpo src/$(DEPDIR)/dpotrf_taskdep-descriptor.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/descriptor.c' object='src/dpotrf_taskdep-descriptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-descriptor.o `test -f 'src/descriptor.c' || echo '$(srcdir)/'`src/descriptor.c

src/dpotrf_taskdep-descriptor.obj: src/descriptor.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-descriptor.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-descriptor.Tpo -c -o src/dpotrf_taskdep-descriptor.obj `if test -f 'src/descriptor.c'; then $(CYGPATH_W) 'src/descriptor.c'; else $(CYGPATH_W) '$(srcdir)/src/descriptor.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-descriptor.Tpo src/$(DEPDIR)/dpotrf_taskdep-descriptor.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/descriptor.c' object='src/dpotrf_taskdep-descriptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-descriptor.obj `if test -f 'src/descriptor.c'; then $(CYGPATH_W) 'src/descriptor.c'; else $(CYGPATH_W) '$(srcdir)/src/descriptor.c'; fi`

src/dpotrf_taskdep-dgeqrs.o: src/dgeqrs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-dgeqrs.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-dgeqrs.Tpo -c -o src/dpotrf_taskdep-dgeqrs.o `test -f 'src/dgeqrs.c' || echo '$(srcdir)/'`src/dgeqrs.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-dgeqrs.Tpo src/$(DEPDIR)/dpotrf_taskdep-dgeqrs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dgeqrs.c' object='src/dpotrf_taskdep-dgeqrs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-dgeqrs.o `test -f 'src/dgeqrs.c' || echo '$(srcdir)/'`src/dgeqrs.c

src/dpotrf_taskdep-dgeqrs.obj: src/dgeqrs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-dgeqrs.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-dgeqrs.Tpo -c -o src/dpotrf_taskdep-dgeqrs.obj `if test -f 'src/dgeqrs.c'; then $(CYGPATH_W) 'src/dgeqrs.c'; else $(CYGPATH_W) '$(srcdir)/src/dgeqrs.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-dgeqrs.Tpo src/$(DEPDIR)/dpotrf_taskdep-dgeqrs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dgeqrs.c' object='src/dpotrf_taskdep-dgeqrs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-dgeqrs.obj `if test -f 'src/dgeqrs.c'; then $(CYGPATH_W) 'src/dgeqrs.c'; else $(CYGPATH_W) '$(srcdir)/src/dgeqrs.c'; fi`

src/dpotrf_taskdep-dgetrs.o: src/dgetrs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-dgetrs.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-dgetrs.Tpo -c -o src/dpotrf_taskdep-dgetrs.o `test -f 'src/dgetrs.c' || echo '$(srcdir)/'`src/dgetrs.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-dgetrs.Tpo src/$(DEPDIR)/dpotrf_taskdep-dgetrs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dgetrs.c' object='src/dpotrf_taskdep-dgetrs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-dgetrs.o `test -f 'src/dgetrs.c' || echo '$(srcdir)/'`src/dgetrs.c

src/dpotrf_taskdep-dgetrs.obj: src/dgetrs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-dgetrs.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-dgetrs.Tpo -c -o src/dpotrf_taskdep-dgetrs.obj `if test -f 'src/dgetrs.c'; then $(CYGPATH_W) 'src/dgetrs.c'; else $(CYGPATH_W) '$(srcdir)/src/dgetrs.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-dgetrs.Tpo src/$(DEPDIR)/dpotrf_taskdep-dgetrs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dgetrs.c' object='src/dpotrf_taskdep-dgetrs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-dgetrs.obj `if test -f 'src/dgetrs.c'; then $(CYGPATH_W) 'src/dgetrs.c'; else $(CYGPATH_W) '$(srcdir)/src/dgetrs.c'; fi`

src/dpotrf_taskdep-dpotrs.o: src/dpotrs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-dpotrs.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-dpotrs.Tpo -c -o src/dpotrf_taskdep-dpotrs.o `test -f 'src/dpotrs.c' || echo '$(srcdir)/'`src/dpotrs.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-dpotrs.Tpo src/$(DEPDIR)/dpotrf_taskdep-dpotrs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dpotrs.c' object='src/dpotrf_taskdep-dpotrs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-dpotrs.o `test -f 'src/dpotrs.c' || echo '$(srcdir)/'`src/dpotrs.c

src/dpotrf_taskdep-dpotrs.obj: src/dpotrs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-dpotrs.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-dpotrs.Tpo -c -o src/dpotrf_taskdep-dpotrs.obj `if test -f 'src/dpotrs.c'; then $(CYGPATH_W) 'src/dpotrs.c'; else $(CYGPATH_W) '$(srcdir)/src/dpotrs.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-dpotrs.Tpo src/$(DEPDIR)/dpotrf_taskdep-dpotrs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/dpotrs.c' object='src/dpotrf_taskdep-dpotrs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-dpotrs.obj `if test -f 'src/dpotrs.c'; then $(CYGPATH_W) 'src/dpotrs.c'; else $(CYGPATH_W) '$(srcdir)/src/dpotrs.c'; fi`

src/dpotrf_taskdep-global.o: src/global.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-global.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-global.Tpo -c -o src/dpotrf_taskdep-global.o `test -f 'src/global.c' || echo '$(srcdir)/'`src/global.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-global.Tpo src/$(DEPDIR)/dpotrf_taskdep-global.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/global.c' object='src/dpotrf_taskdep-global.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-global.o `test -f 'src/global.c' || echo '$(srcdir)/'`src/global.c

src/dpotrf_taskdep-global.obj: src/global.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-global.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-global.Tpo -c -o src/dpotrf_taskdep-global.obj `if test -f 'src/global.c'; then $(CYGPATH_W) 'src/global.c'; else $(CYGPATH_W) '$(srcdir)/src/global.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-global.Tpo src/$(DEPDIR)/dpotrf_taskdep-global.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/global.c' object='src/dpotrf_taskdep-global.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-global.obj `if test -f 'src/global.c'; then $(CYGPATH_W) 'src/global.c'; else $(CYGPATH_W) '$(srcdir)/src/global.c'; fi`

src/dpotrf_taskdep-pdgeqrf.o: src/pdgeqrf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-pdgeqrf.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-pdgeqrf.Tpo -c -o src/dpotrf_taskdep-pdgeqrf.o `test -f 'src/pdgeqrf.c' || echo '$(srcdir)/'`src/pdgeqrf.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-pdgeqrf.Tpo src/$(DEPDIR)/dpotrf_taskdep-pdgeqrf.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdgeqrf.c' object='src/dpotrf_taskdep-pdgeqrf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-pdgeqrf.o `test -f 'src/pdgeqrf.c' || echo '$(srcdir)/'`src/pdgeqrf.c

src/dpotrf_taskdep-pdgeqrf.obj: src/pdgeqrf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-pdgeqrf.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-pdgeqrf.Tpo -c -o src/dpotrf_taskdep-pdgeqrf.obj `if test -f 'src/pdgeqrf.c'; then $(CYGPATH_W) 'src/pdgeqrf.c'; else $(CYGPATH_W) '$(srcdir)/src/pdgeqrf.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-pdgeqrf.Tpo src/$(DEPDIR)/dpotrf_taskdep-pdgeqrf.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdgeqrf.c' object='src/dpotrf_taskdep-pdgeqrf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-pdgeqrf.obj `if test -f 'src/pdgeqrf.c'; then $(CYGPATH_W) 'src/pdgeqrf.c'; else $(CYGPATH_W) '$(srcdir)/src/pdgeqrf.c'; fi`

src/dpotrf_taskdep-pdgetrf_rectil.o: src/pdgetrf_rectil.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-pdgetrf_rectil.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-pdgetrf_rectil.Tpo -c -o src/dpotrf_taskdep-pdgetrf_rectil.o `test -f 'src/pdgetrf_rectil.c' || echo '$(srcdir)/'`src/pdgetrf_rectil.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-pdgetrf_rectil.Tpo src/$(DEPDIR)/dpotrf_taskdep-pdgetrf_rectil.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdgetrf_rectil.c' object='src/dpotrf_taskdep-pdgetrf_rectil.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-pdgetrf_rectil.o `test -f 'src/pdgetrf_rectil.c' || echo '$(srcdir)/'`src/pdgetrf_rectil.c

src/dpotrf_taskdep-pdgetrf_rectil.obj: src/pdgetrf_rectil.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-pdgetrf_rectil.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-pdgetrf_rectil.Tpo -c -o src/dpotrf_taskdep-pdgetrf_rectil.obj `if test -f 'src/pdgetrf_rectil.c'; then $(CYGPATH_W) 'src/pdgetrf_rectil.c'; else $(CYGPATH_W) '$(srcdir)/src/pdgetrf_rectil.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-pdgetrf_rectil.Tpo src/$(DEPDIR)/dpotrf_taskdep-pdgetrf_rectil.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdgetrf_rectil.c' object='src/dpotrf_taskdep-pdgetrf_rectil.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-pdgetrf_rectil.obj `if test -f 'src/pdgetrf_rectil.c'; then $(CYGPATH_W) 'src/pdgetrf_rectil.c'; else $(CYGPATH_W) '$(srcdir)/src/pdgetrf_rectil.c'; fi`

src/dpotrf_taskdep-pdlaswp.o: src/pdlaswp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-pdlaswp.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-pdlaswp.Tpo -c -o src/dpotrf_taskdep-pdlaswp.o `test -f 'src/pdlaswp.c' || echo '$(srcdir)/'`src/pdlaswp.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-pdlaswp.Tpo src/$(DEPDIR)/dpotrf_taskdep-pdlaswp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdlaswp.c' object='src/dpotrf_taskdep-pdlaswp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-pdlaswp.o `test -f 'src/pdlaswp.c' || echo '$(srcdir)/'`src/pdlaswp.c

src/dpotrf_taskdep-pdlaswp.obj: src/pdlaswp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-pdlaswp.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-pdlaswp.Tpo -c -o src/dpotrf_taskdep-pdlaswp.obj `if test -f 'src/pdlaswp.c'; then $(CYGPATH_W) 'src/pdlaswp.c'; else $(CYGPATH_W) '$(srcdir)/src/pdlaswp.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-pdlaswp.Tpo src/$(DEPDIR)/dpotrf_taskdep-pdlaswp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdlaswp.c' object='src/dpotrf_taskdep-pdlaswp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-pdlaswp.obj `if test -f 'src/pdlaswp.c'; then $(CYGPATH_W) 'src/pdlaswp.c'; else $(CYGPATH_W) '$(srcdir)/src/pdlaswp.c'; fi`

src/dpotrf_taskdep-pdormqr.o: src/pdormqr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-pdormqr.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-pdormqr.Tpo -c -o src/dpotrf_taskdep-pdormqr.o `test -f 'src/pdormqr.c' || echo '$(srcdir)/'`src/pdormqr.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-pdormqr.Tpo src/$(DEPDIR)/dpotrf_taskdep-pdormqr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdormqr.c' object='src/dpotrf_taskdep-pdormqr.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-pdormqr.o `test -f 'src/pdormqr.c' || echo '$(srcdir)/'`src/pdormqr.c

src/dpotrf_taskdep-pdormqr.obj: src/pdormqr.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-pdormqr.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-pdormqr.Tpo -c -o src/dpotrf_taskdep-pdormqr.obj `if test -f 'src/pdormqr.c'; then $(CYGPATH_W) 'src/pdormqr.c'; else $(CYGPATH_W) '$(srcdir)/src/pdormqr.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-pdormqr.Tpo src/$(DEPDIR)/dpotrf_taskdep-pdormqr.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdormqr.c' object='src/dpotrf_taskdep-pdormqr.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-pdormqr.obj `if test -f 'src/pdormqr.c'; then $(CYGPATH_W) 'src/pdormqr.c'; else $(CYGPATH_W) '$(srcdir)/src/pdormqr.c'; fi`

src/dpotrf_taskdep-pdplgsy.o: src/pdplgsy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-pdplgsy.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-pdplgsy.Tpo -c -o src/dpotrf_taskdep-pdplgsy.o `test -f 'src/pdplgsy.c' || echo '$(srcdir)/'`src/pdplgsy.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-pdplgsy.Tpo src/$(DEPDIR)/dpotrf_taskdep-pdplgsy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdplgsy.c' object='src/dpotrf_taskdep-pdplgsy.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-pdplgsy.o `test -f 'src/pdplgsy.c' || echo '$(srcdir)/'`src/pdplgsy.c

src/dpotrf_taskdep-pdplgsy.obj: src/pdplgsy.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-pdplgsy.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-pdplgsy.Tpo -c -o src/dpotrf_taskdep-pdplgsy.obj `if test -f 'src/pdplgsy.c'; then $(CYGPATH_W) 'src/pdplgsy.c'; else $(CYGPATH_W) '$(srcdir)/src/pdplgsy.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-pdplgsy.Tpo src/$(DEPDIR)/dpotrf_taskdep-pdplgsy.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdplgsy.c' object='src/dpotrf_taskdep-pdplgsy.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-pdplgsy.obj `if test -f 'src/pdplgsy.c'; then $(CYGPATH_W) 'src/pdplgsy.c'; else $(CYGPATH_W) '$(srcdir)/src/pdplgsy.c'; fi`

src/dpotrf_taskdep-pdpltmg.o: src/pdpltmg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-pdpltmg.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-pdpltmg.Tpo -c -o src/dpotrf_taskdep-pdpltmg.o `test -f 'src/pdpltmg.c' || echo '$(srcdir)/'`src/pdpltmg.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-pdpltmg.Tpo src/$(DEPDIR)/dpotrf_taskdep-pdpltmg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdpltmg.c' object='src/dpotrf_taskdep-pdpltmg.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-pdpltmg.o `test -f 'src/pdpltmg.c' || echo '$(srcdir)/'`src/pdpltmg.c

src/dpotrf_taskdep-pdpltmg.obj: src/pdpltmg.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-pdpltmg.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-pdpltmg.Tpo -c -o src/dpotrf_taskdep-pdpltmg.obj `if test -f 'src/pdpltmg.c'; then $(CYGPATH_W) 'src/pdpltmg.c'; else $(CYGPATH_W) '$(srcdir)/src/pdpltmg.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-pdpltmg.Tpo src/$(DEPDIR)/dpotrf_taskdep-pdpltmg.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdpltmg.c' object='src/dpotrf_taskdep-pdpltmg.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-pdpltmg.obj `if test -f 'src/pdpltmg.c'; then $(CYGPATH_W) 'src/pdpltmg.c'; else $(CYGPATH_W) '$(srcdir)/src/pdpltmg.c'; fi`

src/dpotrf_taskdep-pdpotrf.o: src/pdpotrf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-pdpotrf.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-pdpotrf.Tpo -c -o src/dpotrf_taskdep-pdpotrf.o `test -f 'src/pdpotrf.c' || echo '$(srcdir)/'`src/pdpotrf.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-pdpotrf.Tpo src/$(DEPDIR)/dpotrf_taskdep-pdpotrf.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdpotrf.c' object='src/dpotrf_taskdep-pdpotrf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-pdpotrf.o `test -f 'src/pdpotrf.c' || echo '$(srcdir)/'`src/pdpotrf.c

src/dpotrf_taskdep-pdpotrf.obj: src/pdpotrf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-pdpotrf.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-pdpotrf.Tpo -c -o src/dpotrf_taskdep-pdpotrf.obj `if test -f 'src/pdpotrf.c'; then $(CYGPATH_W) 'src/pdpotrf.c'; else $(CYGPATH_W) '$(srcdir)/src/pdpotrf.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-pdpotrf.Tpo src/$(DEPDIR)/dpotrf_taskdep-pdpotrf.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdpotrf.c' object='src/dpotrf_taskdep-pdpotrf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-pdpotrf.obj `if test -f 'src/pdpotrf.c'; then $(CYGPATH_W) 'src/pdpotrf.c'; else $(CYGPATH_W) '$(srcdir)/src/pdpotrf.c'; fi`

src/dpotrf_taskdep-pdtile.o: src/pdtile.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-pdtile.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-pdtile.Tpo -c -o src/dpotrf_taskdep-pdtile.o `test -f 'src/pdtile.c' || echo '$(srcdir)/'`src/pdtile.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-pdtile.Tpo src/$(DEPDIR)/dpotrf_taskdep-pdtile.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdtile.c' object='src/dpotrf_taskdep-pdtile.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-pdtile.o `test -f 'src/pdtile.c' || echo '$(srcdir)/'`src/pdtile.c

src/dpotrf_taskdep-pdtile.obj: src/pdtile.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-pdtile.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-pdtile.Tpo -c -o src/dpotrf_taskdep-pdtile.obj `if test -f 'src/pdtile.c'; then $(CYGPATH_W) 'src/pdtile.c'; else $(CYGPATH_W) '$(srcdir)/src/pdtile.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-pdtile.Tpo src/$(DEPDIR)/dpotrf_taskdep-pdtile.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdtile.c' object='src/dpotrf_taskdep-pdtile.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-pdtile.obj `if test -f 'src/pdtile.c'; then $(CYGPATH_W) 'src/pdtile.c'; else $(CYGPATH_W) '$(srcdir)/src/pdtile.c'; fi`

src/dpotrf_taskdep-pdtrsm.o: src/pdtrsm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-pdtrsm.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-pdtrsm.Tpo -c -o src/dpotrf_taskdep-pdtrsm.o `test -f 'src/pdtrsm.c' || echo '$(srcdir)/'`src/pdtrsm.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-pdtrsm.Tpo src/$(DEPDIR)/dpotrf_taskdep-pdtrsm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdtrsm.c' object='src/dpotrf_taskdep-pdtrsm.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-pdtrsm.o `test -f 'src/pdtrsm.c' || echo '$(srcdir)/'`src/pdtrsm.c

src/dpotrf_taskdep-pdtrsm.obj: src/pdtrsm.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-pdtrsm.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-pdtrsm.Tpo -c -o src/dpotrf_taskdep-pdtrsm.obj `if test -f 'src/pdtrsm.c'; then $(CYGPATH_W) 'src/pdtrsm.c'; else $(CYGPATH_W) '$(srcdir)/src/pdtrsm.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-pdtrsm.Tpo src/$(DEPDIR)/dpotrf_taskdep-pdtrsm.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pdtrsm.c' object='src/dpotrf_taskdep-pdtrsm.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-pdtrsm.obj `if test -f 'src/pdtrsm.c'; then $(CYGPATH_W) 'src/pdtrsm.c'; else $(CYGPATH_W) '$(srcdir)/src/pdtrsm.c'; fi`

src/dpotrf_taskdep-workspace.o: src/workspace.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-workspace.o -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-workspace.Tpo -c -o src/dpotrf_taskdep-workspace.o `test -f 'src/workspace.c' || echo '$(srcdir)/'`src/workspace.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-workspace.Tpo src/$(DEPDIR)/dpotrf_taskdep-workspace.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/workspace.c' object='src/dpotrf_taskdep-workspace.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-workspace.o `test -f 'src/workspace.c' || echo '$(srcdir)/'`src/workspace.c

src/dpotrf_taskdep-workspace.obj: src/workspace.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT src/dpotrf_taskdep-workspace.obj -MD -MP -MF src/$(DEPDIR)/dpotrf_taskdep-workspace.Tpo -c -o src/dpotrf_taskdep-workspace.obj `if test -f 'src/workspace.c'; then $(CYGPATH_W) 'src/workspace.c'; else $(CYGPATH_W) '$(srcdir)/src/workspace.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/$(DEPDIR)/dpotrf_taskdep-workspace.Tpo src/$(DEPDIR)/dpotrf_taskdep-workspace.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/workspace.c' object='src/dpotrf_taskdep-workspace.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o src/dpotrf_taskdep-workspace.obj `if test -f 'src/workspace.c'; then $(CYGPATH_W) 'src/workspace.c'; else $(CYGPATH_W) '$(srcdir)/src/workspace.c'; fi`

dpotrf_taskdep-main.o: main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT dpotrf_taskdep-main.o -MD -MP -MF $(DEPDIR)/dpotrf_taskdep-main.Tpo -c -o dpotrf_taskdep-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dpotrf_taskdep-main.Tpo $(DEPDIR)/dpotrf_taskdep-main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='main.c' object='dpotrf_taskdep-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o dpotrf_taskdep-main.o `test -f 'main.c' || echo '$(srcdir)/'`main.c

dpotrf_taskdep-main.obj: main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -MT dpotrf_taskdep-main.obj -MD -MP -MF $(DEPDIR)/dpotrf_taskdep-main.Tpo -c -o dpotrf_taskdep-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/dpotrf_taskdep-main.Tpo $(DEPDIR)/dpotrf_taskdep-main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='main.c' object='dpotrf_taskdep-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(dpotrf_taskdep_CFLAGS) $(CFLAGS) -c -o dpotrf_taskdep-main.obj `if test -f 'main.c'; then $(CYGPATH_W) 'main.c'; else $(CYGPATH_W) '$(srcdir)/main.c'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_SCRIPTS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
check_dgetrf_seq.sh.log: check_dgetrf_seq.sh
	@p='check_dgetrf_seq.sh'; \
	b='check_dgetrf_seq.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_dgetrf_taskdep.sh.log: check_dgetrf_taskdep.sh
	@p='check_dgetrf_taskdep.sh'; \
	b='check_dgetrf_taskdep.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_dgeqrf_seq.sh.log: check_dgeqrf_seq.sh
	@p='check_dgeqrf_seq.sh'; \
	b='check_dgeqrf_seq.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_dgeqrf_taskdep.sh.log: check_dgeqrf_taskdep.sh
	@p='check_dgeqrf_taskdep.sh'; \
	b='check_dgeqrf_taskdep.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_dpotrf_seq.sh.log: check_dpotrf_seq.sh
	@p='check_dpotrf_seq.sh'; \
	b='check_dpotrf_seq.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
check_dpotrf_taskdep.sh.log: check_dpotrf_taskdep.sh
	@p='check_dpotrf_taskdep.sh'; \
	b='check_dpotrf_taskdep.sh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_SCRIPTS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f src/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) src/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) src/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-binPROGRAMS clean-generic clean-noinstLIBRARIES \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am recheck tags tags-am \
	uninstall uninstall-am uninstall-binPROGRAMS

main.c: $(top_srcdir)/common/main.c
	cp "$<" "$@"

check_%.sh:
	@python -c "print './' + '$@'[6:-3] + ' -c'" > $@
	@chmod +x $@

run:
	sh ../run.sh -bench dpotrf -bench dgetrf -bench dgeqrf -rs 0 -n_dgetrf 2048 -b_dgetrf 128 -n_dpotrf 2048 -b_dpotrf 128 -n_dgeqrf 2048 -b_dgeqrf 128 -rt 10 -rtd 10 | tee -a $(OUT)
	sh ../run.sh -bench dpotrf -bench dgetrf -bench dgeqrf -rs 0 -n_dgetrf 4096 -b_dgetrf 128 -n_dpotrf 4096 -b_dpotrf 128 -n_dgeqrf 4096 -b_dgeqrf 128 -rt 10 -rtd 10 | tee -a $(OUT)
	sh ../run.sh -bench dpotrf -bench dgetrf -bench dgeqrf -rs 0 -n_dgetrf 8192 -b_dgetrf 224 -n_dpotrf 8192 -b_dpotrf 224 -n_dgeqrf 8192 -b_dgeqrf 224 -rt 10 -rtd 10 | tee -a $(OUT)

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
