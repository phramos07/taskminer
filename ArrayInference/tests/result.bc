; ModuleID = 'syrk_m.c'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct._IO_FILE*, i32 }
%struct.timezone = type { i32, i32 }
%struct.timeval = type { i64, i64 }

@.str = private unnamed_addr constant [35 x i8] c"Error return from gettimeofday: %d\00", align 1
@A = common global [1024 x [1024 x float]] zeroinitializer, align 16
@C = common global [1024 x [1024 x float]] zeroinitializer, align 16
@D = common global [1024 x [1024 x float]] zeroinitializer, align 16
@.str.1 = private unnamed_addr constant [74 x i8] c"Non-Matching CPU-GPU Outputs Beyond Error Threshold of %4.2f Percent: %d\0A\00", align 1
@stdout = external global %struct._IO_FILE*, align 8
@.str.2 = private unnamed_addr constant [22 x i8] c"GPU Runtime: %0.6lfs\0A\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"CPU Runtime: %0.6lfs\0A\00", align 1

; Function Attrs: nounwind uwtable
define double @rtclock() #0 {
entry:
  %Tzp = alloca %struct.timezone, align 4
  %Tp = alloca %struct.timeval, align 8
  call void @llvm.dbg.value(metadata %struct.timezone* %Tzp, i64 0, metadata !38, metadata !44), !dbg !45
  call void @llvm.dbg.value(metadata %struct.timeval* %Tp, i64 0, metadata !46, metadata !44), !dbg !56
  %call = call i32 @gettimeofday(%struct.timeval* nonnull %Tp, %struct.timezone* nonnull %Tzp) #4, !dbg !57
  call void @llvm.dbg.value(metadata i32 %call, i64 0, metadata !58, metadata !44), !dbg !59
  %cmp = icmp eq i32 %call, 0, !dbg !60
  br i1 %cmp, label %if.end, label %if.then, !dbg !62

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str, i64 0, i64 0), i32 %call) #4, !dbg !63
  br label %if.end, !dbg !63

if.end:                                           ; preds = %entry, %if.then
  %tv_sec = getelementptr inbounds %struct.timeval, %struct.timeval* %Tp, i64 0, i32 0, !dbg !65
  %0 = load i64, i64* %tv_sec, align 8, !dbg !65
  %conv = sitofp i64 %0 to double, !dbg !66
  %tv_usec = getelementptr inbounds %struct.timeval, %struct.timeval* %Tp, i64 0, i32 1, !dbg !67
  %1 = load i64, i64* %tv_usec, align 8, !dbg !67
  %conv2 = sitofp i64 %1 to double, !dbg !68
  %mul = fmul double %conv2, 1.000000e-06, !dbg !69
  %add = fadd double %conv, %mul, !dbg !70
  ret double %add, !dbg !71
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind
declare i32 @gettimeofday(%struct.timeval*, %struct.timezone*) #2

declare i32 @printf(i8*, ...) #3

; Function Attrs: nounwind uwtable
define float @absVal(float %a) #0 {
entry:
  call void @llvm.dbg.value(metadata float %a, i64 0, metadata !72, metadata !44), !dbg !73
  %cmp = fcmp olt float %a, 0.000000e+00, !dbg !74
  %mul = fsub float -0.000000e+00, %a, !dbg !76
  %retval.0 = select i1 %cmp, float %mul, float %a, !dbg !78
  ret float %retval.0, !dbg !79
}

; Function Attrs: nounwind uwtable
define float @percentDiff(double %val1, double %val2) #0 {
entry:
  call void @llvm.dbg.value(metadata double %val1, i64 0, metadata !80, metadata !44), !dbg !81
  call void @llvm.dbg.value(metadata double %val2, i64 0, metadata !82, metadata !44), !dbg !83
  %conv = fptrunc double %val1 to float, !dbg !84
  %call = call float @absVal(float %conv), !dbg !86
  %conv1 = fpext float %call to double, !dbg !86
  %cmp = fcmp olt double %conv1, 1.000000e-02, !dbg !87
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !88

land.lhs.true:                                    ; preds = %entry
  %conv3 = fptrunc double %val2 to float, !dbg !89
  %call4 = call float @absVal(float %conv3), !dbg !91
  %conv5 = fpext float %call4 to double, !dbg !91
  %cmp6 = fcmp olt double %conv5, 1.000000e-02, !dbg !92
  br i1 %cmp6, label %return, label %if.else, !dbg !93

if.else:                                          ; preds = %land.lhs.true, %entry
  %sub = fsub double %val1, %val2, !dbg !94
  %conv8 = fptrunc double %sub to float, !dbg !96
  %call9 = call float @absVal(float %conv8), !dbg !97
  %add = fadd double %val1, 0x3E45798EE0000000, !dbg !98
  %conv10 = fptrunc double %add to float, !dbg !99
  %call11 = call float @absVal(float %conv10), !dbg !100
  %div = fdiv float %call9, %call11, !dbg !101
  %call12 = call float @absVal(float %div), !dbg !102
  %mul = fmul float %call12, 1.000000e+02, !dbg !103
  br label %return, !dbg !104

return:                                           ; preds = %land.lhs.true, %if.else
  %retval.0 = phi float [ %mul, %if.else ], [ 0.000000e+00, %land.lhs.true ]
  ret float %retval.0, !dbg !105
}

; Function Attrs: nounwind uwtable
define void @init_arrays() #0 {
entry:
  br label %entry.entry.split.split_edge, !dbg !106

entry.entry.split.split_edge:                     ; preds = %entry
  br i1 and (i1 or (i1 icmp ule ([1024 x [1024 x float]]* inttoptr (i64 add (i64 ptrtoint ([1024 x [1024 x float]]* @C to i64), i64 4194304) to [1024 x [1024 x float]]*), [1024 x [1024 x float]]* @A), i1 icmp ule ([1024 x [1024 x float]]* inttoptr (i64 add (i64 ptrtoint ([1024 x [1024 x float]]* @A to i64), i64 4194304) to [1024 x [1024 x float]]*), [1024 x [1024 x float]]* @C)), i1 and (i1 or (i1 icmp ule ([1024 x [1024 x float]]* inttoptr (i64 add (i64 ptrtoint ([1024 x [1024 x float]]* @D to i64), i64 4194304) to [1024 x [1024 x float]]*), [1024 x [1024 x float]]* @A), i1 icmp ule ([1024 x [1024 x float]]* inttoptr (i64 add (i64 ptrtoint ([1024 x [1024 x float]]* @A to i64), i64 4194304) to [1024 x [1024 x float]]*), [1024 x [1024 x float]]* @D)), i1 or (i1 icmp ule ([1024 x [1024 x float]]* inttoptr (i64 add (i64 ptrtoint ([1024 x [1024 x float]]* @D to i64), i64 4194304) to [1024 x [1024 x float]]*), [1024 x [1024 x float]]* @C), i1 icmp ule ([1024 x [1024 x float]]* inttoptr (i64 add (i64 ptrtoint ([1024 x [1024 x float]]* @C to i64), i64 4194304) to [1024 x [1024 x float]]*), [1024 x [1024 x float]]* @D)))), label %entry.split, label %entry.split.clone, !dbg !107

entry.split.clone:                                ; preds = %entry.entry.split.split_edge
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !109, metadata !44), !dbg !106
  br label %for.cond.1.preheader.clone, !dbg !110

for.cond.1.preheader.clone:                       ; preds = %for.inc.30.clone, %entry.split.clone
  %i.035.clone = phi i32 [ 0, %entry.split.clone ], [ %inc31.clone, %for.inc.30.clone ]
  br label %for.body.3.clone, !dbg !112

for.body.3.clone:                                 ; preds = %for.body.3.clone, %for.cond.1.preheader.clone
  %j.033.clone = phi i32 [ 0, %for.cond.1.preheader.clone ], [ %inc.clone, %for.body.3.clone ]
  %conv.clone = sitofp i32 %i.035.clone to float, !dbg !116
  %conv4.clone = sitofp i32 %j.033.clone to float, !dbg !119
  %mul.clone = fmul float %conv.clone, %conv4.clone, !dbg !120
  %div.clone = fmul float %mul.clone, 9.765625e-04, !dbg !121
  %idxprom.clone = sext i32 %j.033.clone to i64, !dbg !122
  %idxprom5.clone = sext i32 %i.035.clone to i64, !dbg !122
  %arrayidx6.clone = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @A, i64 0, i64 %idxprom5.clone, i64 %idxprom.clone, !dbg !122
  store float %div.clone, float* %arrayidx6.clone, align 4, !dbg !123
  %inc.clone = add nsw i32 %j.033.clone, 1, !dbg !124
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !125, metadata !44), !dbg !126
  %cmp2.clone = icmp slt i32 %inc.clone, 1024, !dbg !127
  br i1 %cmp2.clone, label %for.body.3.clone, label %for.cond.7.preheader.clone, !dbg !112, !isParallel !128

for.cond.7.preheader.clone:                       ; preds = %for.body.3.clone
  br label %for.body.10.clone, !dbg !129

for.body.10.clone:                                ; preds = %for.body.10.clone, %for.cond.7.preheader.clone
  %j.134.clone = phi i32 [ 0, %for.cond.7.preheader.clone ], [ %inc28.clone, %for.body.10.clone ]
  %conv11.clone = sitofp i32 %i.035.clone to float, !dbg !131
  %conv12.clone = sitofp i32 %j.134.clone to float, !dbg !134
  %mul13.clone = fmul float %conv11.clone, %conv12.clone, !dbg !135
  %add.clone = fadd float %mul13.clone, 2.000000e+00, !dbg !136
  %div14.clone = fmul float %add.clone, 9.765625e-04, !dbg !137
  %idxprom15.clone = sext i32 %j.134.clone to i64, !dbg !138
  %idxprom16.clone = sext i32 %i.035.clone to i64, !dbg !138
  %arrayidx18.clone = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @C, i64 0, i64 %idxprom16.clone, i64 %idxprom15.clone, !dbg !138
  store float %div14.clone, float* %arrayidx18.clone, align 4, !dbg !139
  %idxprom19.clone = sext i32 %j.134.clone to i64, !dbg !140
  %idxprom20.clone = sext i32 %i.035.clone to i64, !dbg !140
  %arrayidx22.clone = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @C, i64 0, i64 %idxprom20.clone, i64 %idxprom19.clone, !dbg !140
  %0 = bitcast float* %arrayidx22.clone to i32*, !dbg !140
  %1 = load i32, i32* %0, align 4, !dbg !140
  %idxprom23.clone = sext i32 %j.134.clone to i64, !dbg !141
  %idxprom24.clone = sext i32 %i.035.clone to i64, !dbg !141
  %arrayidx26.clone = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @D, i64 0, i64 %idxprom24.clone, i64 %idxprom23.clone, !dbg !141
  %2 = bitcast float* %arrayidx26.clone to i32*, !dbg !142
  store i32 %1, i32* %2, align 4, !dbg !142
  %inc28.clone = add nsw i32 %j.134.clone, 1, !dbg !143
  call void @llvm.dbg.value(metadata i32 %inc28, i64 0, metadata !125, metadata !44), !dbg !126
  %cmp8.clone = icmp slt i32 %inc28.clone, 1024, !dbg !144
  br i1 %cmp8.clone, label %for.body.10.clone, label %for.inc.30.clone, !dbg !129

for.inc.30.clone:                                 ; preds = %for.body.10.clone
  %inc31.clone = add nsw i32 %i.035.clone, 1, !dbg !145
  call void @llvm.dbg.value(metadata i32 %inc31, i64 0, metadata !109, metadata !44), !dbg !106
  %cmp.clone = icmp slt i32 %inc31.clone, 1024, !dbg !146
  br i1 %cmp.clone, label %for.cond.1.preheader.clone, label %for.end.32.clone, !dbg !110

for.end.32.clone:                                 ; preds = %for.inc.30.clone
  br label %for.end.32.split, !dbg !147

entry.split:                                      ; preds = %entry.entry.split.split_edge
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !109, metadata !44), !dbg !106
  br label %for.cond.1.preheader, !dbg !110

for.cond.1.preheader:                             ; preds = %entry.split, %for.inc.30
  %i.035 = phi i32 [ 0, %entry.split ], [ %inc31, %for.inc.30 ]
  br label %for.body.3, !dbg !112

for.cond.7.preheader:                             ; preds = %for.body.3
  br label %for.body.10, !dbg !129

for.body.3:                                       ; preds = %for.cond.1.preheader, %for.body.3
  %j.033 = phi i32 [ 0, %for.cond.1.preheader ], [ %inc, %for.body.3 ]
  %conv = sitofp i32 %i.035 to float, !dbg !116
  %conv4 = sitofp i32 %j.033 to float, !dbg !119
  %mul = fmul float %conv, %conv4, !dbg !120
  %div = fmul float %mul, 9.765625e-04, !dbg !121
  %idxprom = sext i32 %j.033 to i64, !dbg !122
  %idxprom5 = sext i32 %i.035 to i64, !dbg !122
  %arrayidx6 = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @A, i64 0, i64 %idxprom5, i64 %idxprom, !dbg !122
  store float %div, float* %arrayidx6, align 4, !dbg !123, !alias.scope !148, !noalias !151
  %inc = add nsw i32 %j.033, 1, !dbg !124
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !125, metadata !44), !dbg !126
  %cmp2 = icmp slt i32 %inc, 1024, !dbg !127
  br i1 %cmp2, label %for.body.3, label %for.cond.7.preheader, !dbg !112, !isParallel !128

for.body.10:                                      ; preds = %for.cond.7.preheader, %for.body.10
  %j.134 = phi i32 [ 0, %for.cond.7.preheader ], [ %inc28, %for.body.10 ]
  %conv11 = sitofp i32 %i.035 to float, !dbg !131
  %conv12 = sitofp i32 %j.134 to float, !dbg !134
  %mul13 = fmul float %conv11, %conv12, !dbg !135
  %add = fadd float %mul13, 2.000000e+00, !dbg !136
  %div14 = fmul float %add, 9.765625e-04, !dbg !137
  %idxprom15 = sext i32 %j.134 to i64, !dbg !138
  %idxprom16 = sext i32 %i.035 to i64, !dbg !138
  %arrayidx18 = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @C, i64 0, i64 %idxprom16, i64 %idxprom15, !dbg !138
  store float %div14, float* %arrayidx18, align 4, !dbg !139, !alias.scope !154, !noalias !155
  %idxprom19 = sext i32 %j.134 to i64, !dbg !140
  %idxprom20 = sext i32 %i.035 to i64, !dbg !140
  %arrayidx22 = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @C, i64 0, i64 %idxprom20, i64 %idxprom19, !dbg !140
  %3 = bitcast float* %arrayidx22 to i32*, !dbg !140
  %4 = load i32, i32* %3, align 4, !dbg !140, !alias.scope !154, !noalias !155
  %idxprom23 = sext i32 %j.134 to i64, !dbg !141
  %idxprom24 = sext i32 %i.035 to i64, !dbg !141
  %arrayidx26 = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @D, i64 0, i64 %idxprom24, i64 %idxprom23, !dbg !141
  %5 = bitcast float* %arrayidx26 to i32*, !dbg !142
  store i32 %4, i32* %5, align 4, !dbg !142, !alias.scope !156, !noalias !157
  %inc28 = add nsw i32 %j.134, 1, !dbg !143
  call void @llvm.dbg.value(metadata i32 %inc28, i64 0, metadata !125, metadata !44), !dbg !126
  %cmp8 = icmp slt i32 %inc28, 1024, !dbg !144
  br i1 %cmp8, label %for.body.10, label %for.inc.30, !dbg !129

for.inc.30:                                       ; preds = %for.body.10
  %inc31 = add nsw i32 %i.035, 1, !dbg !145
  call void @llvm.dbg.value(metadata i32 %inc31, i64 0, metadata !109, metadata !44), !dbg !106
  %cmp = icmp slt i32 %inc31, 1024, !dbg !146
  br i1 %cmp, label %for.cond.1.preheader, label %for.end.32, !dbg !110

for.end.32:                                       ; preds = %for.inc.30
  br label %for.end.32.split, !dbg !147

for.end.32.split:                                 ; preds = %for.end.32.clone, %for.end.32
  ret void, !dbg !158
}

; Function Attrs: nounwind uwtable
define void @syrk() #0 {
entry:
  br label %entry.entry.split.split_edge, !dbg !160

entry.entry.split.split_edge:                     ; preds = %entry
  br i1 or (i1 icmp ule ([1024 x [1024 x float]]* inttoptr (i64 add (i64 ptrtoint ([1024 x [1024 x float]]* @C to i64), i64 4194304) to [1024 x [1024 x float]]*), [1024 x [1024 x float]]* @A), i1 icmp ule ([1024 x [1024 x float]]* inttoptr (i64 add (i64 ptrtoint ([1024 x [1024 x float]]* @A to i64), i64 4194304) to [1024 x [1024 x float]]*), [1024 x [1024 x float]]* @C)), label %entry.split, label %entry.split.clone, !dbg !161

entry.split.clone:                                ; preds = %entry.entry.split.split_edge
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !163, metadata !44), !dbg !160
  br label %for.cond.1.preheader.clone, !dbg !164

for.cond.1.preheader.clone:                       ; preds = %for.inc.6.clone, %entry.split.clone
  %i.045.clone = phi i32 [ 0, %entry.split.clone ], [ %inc7.clone, %for.inc.6.clone ]
  br label %for.body.3.clone, !dbg !166

for.body.3.clone:                                 ; preds = %for.body.3.clone, %for.cond.1.preheader.clone
  %j.044.clone = phi i32 [ 0, %for.cond.1.preheader.clone ], [ %inc.clone, %for.body.3.clone ]
  %idxprom.clone = sext i32 %j.044.clone to i64, !dbg !170
  %idxprom4.clone = sext i32 %i.045.clone to i64, !dbg !170
  %arrayidx5.clone = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @C, i64 0, i64 %idxprom4.clone, i64 %idxprom.clone, !dbg !170
  %0 = load float, float* %arrayidx5.clone, align 4, !dbg !173
  %mul.clone = fmul float %0, 4.546000e+03, !dbg !173
  store float %mul.clone, float* %arrayidx5.clone, align 4, !dbg !173
  %inc.clone = add nsw i32 %j.044.clone, 1, !dbg !174
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !175, metadata !44), !dbg !176
  %cmp2.clone = icmp slt i32 %inc.clone, 1024, !dbg !177
  br i1 %cmp2.clone, label %for.body.3.clone, label %for.inc.6.clone, !dbg !166

for.inc.6.clone:                                  ; preds = %for.body.3.clone
  %inc7.clone = add nsw i32 %i.045.clone, 1, !dbg !178
  call void @llvm.dbg.value(metadata i32 %inc7, i64 0, metadata !163, metadata !44), !dbg !160
  %cmp.clone = icmp slt i32 %inc7.clone, 1024, !dbg !179
  br i1 %cmp.clone, label %for.cond.1.preheader.clone, label %for.cond.9.preheader.clone, !dbg !164

for.cond.9.preheader.clone:                       ; preds = %for.inc.6.clone
  br label %for.cond.12.preheader.clone, !dbg !180

for.cond.12.preheader.clone:                      ; preds = %for.inc.38.clone, %for.cond.9.preheader.clone
  %i.143.clone = phi i32 [ 0, %for.cond.9.preheader.clone ], [ %inc39.clone, %for.inc.38.clone ]
  br label %for.cond.15.preheader.clone, !dbg !182

for.cond.15.preheader.clone:                      ; preds = %for.inc.35.clone, %for.cond.12.preheader.clone
  %j.142.clone = phi i32 [ 0, %for.cond.12.preheader.clone ], [ %inc36.clone, %for.inc.35.clone ]
  br label %for.body.17.clone, !dbg !186

for.body.17.clone:                                ; preds = %for.body.17.clone, %for.cond.15.preheader.clone
  %k.041.clone = phi i32 [ 0, %for.cond.15.preheader.clone ], [ %inc33.clone, %for.body.17.clone ]
  %idxprom18.clone = sext i32 %k.041.clone to i64, !dbg !190
  %idxprom19.clone = sext i32 %i.143.clone to i64, !dbg !190
  %arrayidx21.clone = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @A, i64 0, i64 %idxprom19.clone, i64 %idxprom18.clone, !dbg !190
  %1 = load float, float* %arrayidx21.clone, align 4, !dbg !190
  %mul22.clone = fmul float %1, 1.243500e+04, !dbg !193
  %idxprom23.clone = sext i32 %k.041.clone to i64, !dbg !194
  %idxprom24.clone = sext i32 %j.142.clone to i64, !dbg !194
  %arrayidx26.clone = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @A, i64 0, i64 %idxprom24.clone, i64 %idxprom23.clone, !dbg !194
  %2 = load float, float* %arrayidx26.clone, align 4, !dbg !194
  %mul27.clone = fmul float %mul22.clone, %2, !dbg !195
  %idxprom28.clone = sext i32 %j.142.clone to i64, !dbg !196
  %idxprom29.clone = sext i32 %i.143.clone to i64, !dbg !196
  %arrayidx31.clone = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @C, i64 0, i64 %idxprom29.clone, i64 %idxprom28.clone, !dbg !196
  %3 = load float, float* %arrayidx31.clone, align 4, !dbg !197
  %add.clone = fadd float %3, %mul27.clone, !dbg !197
  store float %add.clone, float* %arrayidx31.clone, align 4, !dbg !197
  %inc33.clone = add nsw i32 %k.041.clone, 1, !dbg !198
  call void @llvm.dbg.value(metadata i32 %inc33, i64 0, metadata !199, metadata !44), !dbg !200
  %cmp16.clone = icmp slt i32 %inc33.clone, 1024, !dbg !201
  br i1 %cmp16.clone, label %for.body.17.clone, label %for.inc.35.clone, !dbg !186

for.inc.35.clone:                                 ; preds = %for.body.17.clone
  %inc36.clone = add nsw i32 %j.142.clone, 1, !dbg !202
  call void @llvm.dbg.value(metadata i32 %inc36, i64 0, metadata !175, metadata !44), !dbg !176
  %cmp13.clone = icmp slt i32 %inc36.clone, 1024, !dbg !203
  br i1 %cmp13.clone, label %for.cond.15.preheader.clone, label %for.inc.38.clone, !dbg !182

for.inc.38.clone:                                 ; preds = %for.inc.35.clone
  %inc39.clone = add nsw i32 %i.143.clone, 1, !dbg !204
  call void @llvm.dbg.value(metadata i32 %inc39, i64 0, metadata !163, metadata !44), !dbg !160
  %cmp10.clone = icmp slt i32 %inc39.clone, 1024, !dbg !205
  br i1 %cmp10.clone, label %for.cond.12.preheader.clone, label %for.end.40.clone, !dbg !180

for.end.40.clone:                                 ; preds = %for.inc.38.clone
  br label %for.end.40.split, !dbg !206

entry.split:                                      ; preds = %entry.entry.split.split_edge
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !163, metadata !44), !dbg !160
  br label %for.cond.1.preheader, !dbg !164

for.cond.1.preheader:                             ; preds = %entry.split, %for.inc.6
  %i.045 = phi i32 [ 0, %entry.split ], [ %inc7, %for.inc.6 ]
  br label %for.body.3, !dbg !166

for.cond.9.preheader:                             ; preds = %for.inc.6
  br label %for.cond.12.preheader, !dbg !180

for.body.3:                                       ; preds = %for.cond.1.preheader, %for.body.3
  %j.044 = phi i32 [ 0, %for.cond.1.preheader ], [ %inc, %for.body.3 ]
  %idxprom = sext i32 %j.044 to i64, !dbg !170
  %idxprom4 = sext i32 %i.045 to i64, !dbg !170
  %arrayidx5 = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @C, i64 0, i64 %idxprom4, i64 %idxprom, !dbg !170
  %4 = load float, float* %arrayidx5, align 4, !dbg !173, !alias.scope !207, !noalias !209
  %mul = fmul float %4, 4.546000e+03, !dbg !173
  store float %mul, float* %arrayidx5, align 4, !dbg !173, !alias.scope !207, !noalias !209
  %inc = add nsw i32 %j.044, 1, !dbg !174
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !175, metadata !44), !dbg !176
  %cmp2 = icmp slt i32 %inc, 1024, !dbg !177
  br i1 %cmp2, label %for.body.3, label %for.inc.6, !dbg !166

for.inc.6:                                        ; preds = %for.body.3
  %inc7 = add nsw i32 %i.045, 1, !dbg !178
  call void @llvm.dbg.value(metadata i32 %inc7, i64 0, metadata !163, metadata !44), !dbg !160
  %cmp = icmp slt i32 %inc7, 1024, !dbg !179
  br i1 %cmp, label %for.cond.1.preheader, label %for.cond.9.preheader, !dbg !164

for.cond.12.preheader:                            ; preds = %for.cond.9.preheader, %for.inc.38
  %i.143 = phi i32 [ 0, %for.cond.9.preheader ], [ %inc39, %for.inc.38 ]
  br label %for.cond.15.preheader, !dbg !182

for.cond.15.preheader:                            ; preds = %for.cond.12.preheader, %for.inc.35
  %j.142 = phi i32 [ 0, %for.cond.12.preheader ], [ %inc36, %for.inc.35 ]
  br label %for.body.17, !dbg !186

for.body.17:                                      ; preds = %for.cond.15.preheader, %for.body.17
  %k.041 = phi i32 [ 0, %for.cond.15.preheader ], [ %inc33, %for.body.17 ]
  %idxprom18 = sext i32 %k.041 to i64, !dbg !190
  %idxprom19 = sext i32 %i.143 to i64, !dbg !190
  %arrayidx21 = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @A, i64 0, i64 %idxprom19, i64 %idxprom18, !dbg !190
  %5 = load float, float* %arrayidx21, align 4, !dbg !190, !alias.scope !209, !noalias !207
  %mul22 = fmul float %5, 1.243500e+04, !dbg !193
  %idxprom23 = sext i32 %k.041 to i64, !dbg !194
  %idxprom24 = sext i32 %j.142 to i64, !dbg !194
  %arrayidx26 = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @A, i64 0, i64 %idxprom24, i64 %idxprom23, !dbg !194
  %6 = load float, float* %arrayidx26, align 4, !dbg !194, !alias.scope !209, !noalias !207
  %mul27 = fmul float %mul22, %6, !dbg !195
  %idxprom28 = sext i32 %j.142 to i64, !dbg !196
  %idxprom29 = sext i32 %i.143 to i64, !dbg !196
  %arrayidx31 = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @C, i64 0, i64 %idxprom29, i64 %idxprom28, !dbg !196
  %7 = load float, float* %arrayidx31, align 4, !dbg !197, !alias.scope !207, !noalias !209
  %add = fadd float %7, %mul27, !dbg !197
  store float %add, float* %arrayidx31, align 4, !dbg !197, !alias.scope !207, !noalias !209
  %inc33 = add nsw i32 %k.041, 1, !dbg !198
  call void @llvm.dbg.value(metadata i32 %inc33, i64 0, metadata !199, metadata !44), !dbg !200
  %cmp16 = icmp slt i32 %inc33, 1024, !dbg !201
  br i1 %cmp16, label %for.body.17, label %for.inc.35, !dbg !186

for.inc.35:                                       ; preds = %for.body.17
  %inc36 = add nsw i32 %j.142, 1, !dbg !202
  call void @llvm.dbg.value(metadata i32 %inc36, i64 0, metadata !175, metadata !44), !dbg !176
  %cmp13 = icmp slt i32 %inc36, 1024, !dbg !203
  br i1 %cmp13, label %for.cond.15.preheader, label %for.inc.38, !dbg !182

for.inc.38:                                       ; preds = %for.inc.35
  %inc39 = add nsw i32 %i.143, 1, !dbg !204
  call void @llvm.dbg.value(metadata i32 %inc39, i64 0, metadata !163, metadata !44), !dbg !160
  %cmp10 = icmp slt i32 %inc39, 1024, !dbg !205
  br i1 %cmp10, label %for.cond.12.preheader, label %for.end.40, !dbg !180

for.end.40:                                       ; preds = %for.inc.38
  br label %for.end.40.split, !dbg !206

for.end.40.split:                                 ; preds = %for.end.40.clone, %for.end.40
  ret void, !dbg !211
}

; Function Attrs: nounwind uwtable
define void @compareResults() #0 {
entry:
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !213, metadata !44), !dbg !214
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !215, metadata !44), !dbg !216
  br label %for.cond.1.preheader, !dbg !217

for.cond.1.preheader:                             ; preds = %entry, %for.inc.15
  %i.022 = phi i32 [ 0, %entry ], [ %inc16, %for.inc.15 ]
  %fail.021 = phi i32 [ 0, %entry ], [ %fail.2.lcssa, %for.inc.15 ]
  br label %for.body.3, !dbg !219

for.body.3:                                       ; preds = %for.cond.1.preheader, %for.body.3
  %j.020 = phi i32 [ 0, %for.cond.1.preheader ], [ %inc14, %for.body.3 ]
  %fail.119 = phi i32 [ %fail.021, %for.cond.1.preheader ], [ %fail.2, %for.body.3 ]
  %idxprom = sext i32 %j.020 to i64, !dbg !223
  %idxprom4 = sext i32 %i.022 to i64, !dbg !223
  %arrayidx5 = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @C, i64 0, i64 %idxprom4, i64 %idxprom, !dbg !223
  %0 = load float, float* %arrayidx5, align 4, !dbg !223
  %conv = fpext float %0 to double, !dbg !223
  %idxprom6 = sext i32 %j.020 to i64, !dbg !227
  %idxprom7 = sext i32 %i.022 to i64, !dbg !227
  %arrayidx9 = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @D, i64 0, i64 %idxprom7, i64 %idxprom6, !dbg !227
  %1 = load float, float* %arrayidx9, align 4, !dbg !227
  %conv10 = fpext float %1 to double, !dbg !227
  %call = call float @percentDiff(double %conv, double %conv10), !dbg !228
  %conv11 = fpext float %call to double, !dbg !228
  %cmp12 = fcmp ogt double %conv11, 5.000000e-02, !dbg !229
  %inc = zext i1 %cmp12 to i32, !dbg !230
  %fail.2 = add nsw i32 %fail.119, %inc, !dbg !230
  %inc14 = add nsw i32 %j.020, 1, !dbg !231
  call void @llvm.dbg.value(metadata i32 %inc14, i64 0, metadata !232, metadata !44), !dbg !233
  %cmp2 = icmp slt i32 %inc14, 1024, !dbg !234
  br i1 %cmp2, label %for.body.3, label %for.inc.15, !dbg !219

for.inc.15:                                       ; preds = %for.body.3
  %fail.2.lcssa = phi i32 [ %fail.2, %for.body.3 ]
  %inc16 = add nsw i32 %i.022, 1, !dbg !235
  call void @llvm.dbg.value(metadata i32 %inc16, i64 0, metadata !215, metadata !44), !dbg !216
  %cmp = icmp slt i32 %inc16, 1024, !dbg !236
  br i1 %cmp, label %for.cond.1.preheader, label %for.end.17, !dbg !217

for.end.17:                                       ; preds = %for.inc.15
  %fail.2.lcssa.lcssa = phi i32 [ %fail.2.lcssa, %for.inc.15 ]
  %call18 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.1, i64 0, i64 0), double 5.000000e-02, i32 %fail.2.lcssa.lcssa) #4, !dbg !237
  ret void, !dbg !238
}

; Function Attrs: nounwind uwtable
define void @syrkGPU() #0 {
entry:
  br label %entry.entry.split.split_edge, !dbg !239

entry.entry.split.split_edge:                     ; preds = %entry
  br i1 and (i1 or (i1 icmp ule (%struct._IO_FILE** inttoptr (i64 add (i64 ptrtoint ([1024 x [1024 x float]]* @A to i64), i64 4194304) to %struct._IO_FILE**), %struct._IO_FILE** @stdout), i1 icmp ule ([1024 x [1024 x float]]* inttoptr (i64 add (i64 ptrtoint (%struct._IO_FILE** @stdout to i64), i64 216) to [1024 x [1024 x float]]*), [1024 x [1024 x float]]* @A)), i1 and (i1 or (i1 icmp ule (%struct._IO_FILE** inttoptr (i64 add (i64 ptrtoint ([1024 x [1024 x float]]* @D to i64), i64 4194304) to %struct._IO_FILE**), %struct._IO_FILE** @stdout), i1 icmp ule ([1024 x [1024 x float]]* inttoptr (i64 add (i64 ptrtoint (%struct._IO_FILE** @stdout to i64), i64 216) to [1024 x [1024 x float]]*), [1024 x [1024 x float]]* @D)), i1 or (i1 icmp ule ([1024 x [1024 x float]]* inttoptr (i64 add (i64 ptrtoint ([1024 x [1024 x float]]* @D to i64), i64 4194304) to [1024 x [1024 x float]]*), [1024 x [1024 x float]]* @A), i1 icmp ule ([1024 x [1024 x float]]* inttoptr (i64 add (i64 ptrtoint ([1024 x [1024 x float]]* @A to i64), i64 4194304) to [1024 x [1024 x float]]*), [1024 x [1024 x float]]* @D)))), label %entry.split, label %entry.split.clone, !dbg !240

entry.split.clone:                                ; preds = %entry.entry.split.split_edge
  %call.clone = call double @rtclock(), !dbg !242
  call void @llvm.dbg.value(metadata double %call, i64 0, metadata !244, metadata !44), !dbg !245
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !246, metadata !44), !dbg !247
  br label %for.cond.1.preheader.clone, !dbg !248

for.cond.1.preheader.clone:                       ; preds = %for.inc.26.clone, %entry.split.clone
  %i.033.clone = phi i32 [ 0, %entry.split.clone ], [ %inc27.clone, %for.inc.26.clone ]
  br label %for.body.3.clone, !dbg !250

for.body.3.clone:                                 ; preds = %for.inc.23.clone, %for.cond.1.preheader.clone
  %j.032.clone = phi i32 [ 0, %for.cond.1.preheader.clone ], [ %inc24.clone, %for.inc.23.clone ]
  %idxprom.clone = sext i32 %j.032.clone to i64, !dbg !254
  %idxprom4.clone = sext i32 %i.033.clone to i64, !dbg !254
  %arrayidx5.clone = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @D, i64 0, i64 %idxprom4.clone, i64 %idxprom.clone, !dbg !254
  %0 = load float, float* %arrayidx5.clone, align 4, !dbg !257
  %mul.clone = fmul float %0, 4.546000e+03, !dbg !257
  store float %mul.clone, float* %arrayidx5.clone, align 4, !dbg !257
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !258, metadata !44), !dbg !259
  br label %for.body.8.clone, !dbg !260

for.body.8.clone:                                 ; preds = %for.body.8.clone, %for.body.3.clone
  %k.031.clone = phi i32 [ 0, %for.body.3.clone ], [ %inc.clone, %for.body.8.clone ]
  %idxprom9.clone = sext i32 %k.031.clone to i64, !dbg !262
  %idxprom10.clone = sext i32 %i.033.clone to i64, !dbg !262
  %arrayidx12.clone = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @A, i64 0, i64 %idxprom10.clone, i64 %idxprom9.clone, !dbg !262
  %1 = load float, float* %arrayidx12.clone, align 4, !dbg !262
  %mul13.clone = fmul float %1, 1.243500e+04, !dbg !265
  %idxprom14.clone = sext i32 %k.031.clone to i64, !dbg !266
  %idxprom15.clone = sext i32 %j.032.clone to i64, !dbg !266
  %arrayidx17.clone = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @A, i64 0, i64 %idxprom15.clone, i64 %idxprom14.clone, !dbg !266
  %2 = load float, float* %arrayidx17.clone, align 4, !dbg !266
  %mul18.clone = fmul float %mul13.clone, %2, !dbg !267
  %idxprom19.clone = sext i32 %j.032.clone to i64, !dbg !268
  %idxprom20.clone = sext i32 %i.033.clone to i64, !dbg !268
  %arrayidx22.clone = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @D, i64 0, i64 %idxprom20.clone, i64 %idxprom19.clone, !dbg !268
  %3 = load float, float* %arrayidx22.clone, align 4, !dbg !269
  %add.clone = fadd float %3, %mul18.clone, !dbg !269
  store float %add.clone, float* %arrayidx22.clone, align 4, !dbg !269
  %inc.clone = add nsw i32 %k.031.clone, 1, !dbg !270
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !258, metadata !44), !dbg !259
  %cmp7.clone = icmp slt i32 %inc.clone, 1024, !dbg !271
  br i1 %cmp7.clone, label %for.body.8.clone, label %for.inc.23.clone, !dbg !260

for.inc.23.clone:                                 ; preds = %for.body.8.clone
  %inc24.clone = add nsw i32 %j.032.clone, 1, !dbg !272
  call void @llvm.dbg.value(metadata i32 %inc24, i64 0, metadata !273, metadata !44), !dbg !274
  %cmp2.clone = icmp slt i32 %inc24.clone, 1024, !dbg !275
  br i1 %cmp2.clone, label %for.body.3.clone, label %for.inc.26.clone, !dbg !250

for.inc.26.clone:                                 ; preds = %for.inc.23.clone
  %inc27.clone = add nsw i32 %i.033.clone, 1, !dbg !276
  call void @llvm.dbg.value(metadata i32 %inc27, i64 0, metadata !246, metadata !44), !dbg !247
  %cmp.clone = icmp slt i32 %inc27.clone, 1024, !dbg !277
  br i1 %cmp.clone, label %for.cond.1.preheader.clone, label %for.end.28.clone, !dbg !248

for.end.28.clone:                                 ; preds = %for.inc.26.clone
  %call29.clone = call double @rtclock(), !dbg !278
  call void @llvm.dbg.value(metadata double %call29, i64 0, metadata !279, metadata !44), !dbg !280
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !281
  %sub.clone = fsub double %call29.clone, %call.clone, !dbg !282
  %call30.clone = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), double %sub.clone) #4, !dbg !283
  br label %for.end.28.split, !dbg !284

entry.split:                                      ; preds = %entry.entry.split.split_edge
  %call = call double @rtclock(), !dbg !285
  call void @llvm.dbg.value(metadata double %call, i64 0, metadata !244, metadata !44), !dbg !245
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !246, metadata !44), !dbg !247
  br label %for.cond.1.preheader, !dbg !248

for.cond.1.preheader:                             ; preds = %entry.split, %for.inc.26
  %i.033 = phi i32 [ 0, %entry.split ], [ %inc27, %for.inc.26 ]
  br label %for.body.3, !dbg !250

for.body.3:                                       ; preds = %for.cond.1.preheader, %for.inc.23
  %j.032 = phi i32 [ 0, %for.cond.1.preheader ], [ %inc24, %for.inc.23 ]
  %idxprom = sext i32 %j.032 to i64, !dbg !254
  %idxprom4 = sext i32 %i.033 to i64, !dbg !254
  %arrayidx5 = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @D, i64 0, i64 %idxprom4, i64 %idxprom, !dbg !254
  %5 = load float, float* %arrayidx5, align 4, !dbg !257, !alias.scope !287, !noalias !289
  %mul = fmul float %5, 4.546000e+03, !dbg !257
  store float %mul, float* %arrayidx5, align 4, !dbg !257, !alias.scope !287, !noalias !289
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !258, metadata !44), !dbg !259
  br label %for.body.8, !dbg !260

for.body.8:                                       ; preds = %for.body.3, %for.body.8
  %k.031 = phi i32 [ 0, %for.body.3 ], [ %inc, %for.body.8 ]
  %idxprom9 = sext i32 %k.031 to i64, !dbg !262
  %idxprom10 = sext i32 %i.033 to i64, !dbg !262
  %arrayidx12 = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @A, i64 0, i64 %idxprom10, i64 %idxprom9, !dbg !262
  %6 = load float, float* %arrayidx12, align 4, !dbg !262, !alias.scope !292, !noalias !293
  %mul13 = fmul float %6, 1.243500e+04, !dbg !265
  %idxprom14 = sext i32 %k.031 to i64, !dbg !266
  %idxprom15 = sext i32 %j.032 to i64, !dbg !266
  %arrayidx17 = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @A, i64 0, i64 %idxprom15, i64 %idxprom14, !dbg !266
  %7 = load float, float* %arrayidx17, align 4, !dbg !266, !alias.scope !292, !noalias !293
  %mul18 = fmul float %mul13, %7, !dbg !267
  %idxprom19 = sext i32 %j.032 to i64, !dbg !268
  %idxprom20 = sext i32 %i.033 to i64, !dbg !268
  %arrayidx22 = getelementptr inbounds [1024 x [1024 x float]], [1024 x [1024 x float]]* @D, i64 0, i64 %idxprom20, i64 %idxprom19, !dbg !268
  %8 = load float, float* %arrayidx22, align 4, !dbg !269, !alias.scope !287, !noalias !289
  %add = fadd float %8, %mul18, !dbg !269
  store float %add, float* %arrayidx22, align 4, !dbg !269, !alias.scope !287, !noalias !289
  %inc = add nsw i32 %k.031, 1, !dbg !270
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !258, metadata !44), !dbg !259
  %cmp7 = icmp slt i32 %inc, 1024, !dbg !271
  br i1 %cmp7, label %for.body.8, label %for.inc.23, !dbg !260

for.inc.23:                                       ; preds = %for.body.8
  %inc24 = add nsw i32 %j.032, 1, !dbg !272
  call void @llvm.dbg.value(metadata i32 %inc24, i64 0, metadata !273, metadata !44), !dbg !274
  %cmp2 = icmp slt i32 %inc24, 1024, !dbg !275
  br i1 %cmp2, label %for.body.3, label %for.inc.26, !dbg !250

for.inc.26:                                       ; preds = %for.inc.23
  %inc27 = add nsw i32 %i.033, 1, !dbg !276
  call void @llvm.dbg.value(metadata i32 %inc27, i64 0, metadata !246, metadata !44), !dbg !247
  %cmp = icmp slt i32 %inc27, 1024, !dbg !277
  br i1 %cmp, label %for.cond.1.preheader, label %for.end.28, !dbg !248

for.end.28:                                       ; preds = %for.inc.26
  %call29 = call double @rtclock(), !dbg !278
  call void @llvm.dbg.value(metadata double %call29, i64 0, metadata !279, metadata !44), !dbg !280
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !281, !alias.scope !294, !noalias !295
  %sub = fsub double %call29, %call, !dbg !282
  %call30 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0), double %sub) #4, !dbg !283
  br label %for.end.28.split, !dbg !284

for.end.28.split:                                 ; preds = %for.end.28.clone, %for.end.28
  ret void, !dbg !296
}

declare i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

; Function Attrs: nounwind uwtable
define i32 @main() #0 {
entry:
  call void @init_arrays(), !dbg !298
  call void @syrkGPU(), !dbg !299
  %call = call double @rtclock(), !dbg !300
  call void @llvm.dbg.value(metadata double %call, i64 0, metadata !301, metadata !44), !dbg !302
  call void @syrk(), !dbg !303
  %call1 = call double @rtclock(), !dbg !304
  call void @llvm.dbg.value(metadata double %call1, i64 0, metadata !305, metadata !44), !dbg !306
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8, !dbg !307
  %sub = fsub double %call1, %call, !dbg !308
  %call2 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0), double %sub) #4, !dbg !309
  call void @compareResults(), !dbg !310
  ret i32 0, !dbg !311
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!35, !36}
!llvm.ident = !{!37}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/final)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, retainedTypes: !3, subprograms: !6, globals: !28)
!1 = !DIFile(filename: "syrk_m.c", directory: "/home/gleison/lge/dawn-3.7/src/ArrayInference/tests")
!2 = !{}
!3 = !{!4}
!4 = !DIDerivedType(tag: DW_TAG_typedef, name: "DATA_TYPE", file: !1, line: 35, baseType: !5)
!5 = !DIBasicType(name: "float", size: 32, align: 32, encoding: DW_ATE_float)
!6 = !{!7, !12, !15, !18, !21, !22, !23, !24}
!7 = !DISubprogram(name: "rtclock", scope: !8, file: !8, line: 11, type: !9, isLocal: false, isDefinition: true, scopeLine: 12, isOptimized: false, function: double ()* @rtclock, variables: !2)
!8 = !DIFile(filename: "./common/polybenchUtilFuncts.h", directory: "/home/kezia/2016/dawn/benchmarks")
!9 = !DISubroutineType(types: !10)
!10 = !{!11}
!11 = !DIBasicType(name: "double", size: 64, align: 64, encoding: DW_ATE_float)
!12 = !DISubprogram(name: "absVal", scope: !8, file: !8, line: 22, type: !13, isLocal: false, isDefinition: true, scopeLine: 23, flags: DIFlagPrototyped, isOptimized: false, function: float (float)* @absVal, variables: !2)
!13 = !DISubroutineType(types: !14)
!14 = !{!5, !5}
!15 = !DISubprogram(name: "percentDiff", scope: !8, file: !8, line: 36, type: !16, isLocal: false, isDefinition: true, scopeLine: 37, flags: DIFlagPrototyped, isOptimized: false, function: float (double, double)* @percentDiff, variables: !2)
!16 = !DISubroutineType(types: !17)
!17 = !{!5, !11, !11}
!18 = !DISubprogram(name: "init_arrays", scope: !1, file: !1, line: 41, type: !19, isLocal: false, isDefinition: true, scopeLine: 41, isOptimized: false, function: void ()* @init_arrays, variables: !2)
!19 = !DISubroutineType(types: !20)
!20 = !{null}
!21 = !DISubprogram(name: "syrk", scope: !1, file: !1, line: 55, type: !19, isLocal: false, isDefinition: true, scopeLine: 55, isOptimized: false, function: void ()* @syrk, variables: !2)
!22 = !DISubprogram(name: "compareResults", scope: !1, file: !1, line: 73, type: !19, isLocal: false, isDefinition: true, scopeLine: 73, isOptimized: false, function: void ()* @compareResults, variables: !2)
!23 = !DISubprogram(name: "syrkGPU", scope: !1, file: !1, line: 90, type: !19, isLocal: false, isDefinition: true, scopeLine: 90, isOptimized: false, function: void ()* @syrkGPU, variables: !2)
!24 = !DISubprogram(name: "main", scope: !1, file: !1, line: 113, type: !25, isLocal: false, isDefinition: true, scopeLine: 113, isOptimized: false, function: i32 ()* @main, variables: !2)
!25 = !DISubroutineType(types: !26)
!26 = !{!27}
!27 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!28 = !{!29, !33, !34}
!29 = !DIGlobalVariable(name: "A", scope: !0, file: !1, line: 37, type: !30, isLocal: false, isDefinition: true, variable: [1024 x [1024 x float]]* @A)
!30 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4, size: 33554432, align: 32, elements: !31)
!31 = !{!32, !32}
!32 = !DISubrange(count: 1024)
!33 = !DIGlobalVariable(name: "C", scope: !0, file: !1, line: 38, type: !30, isLocal: false, isDefinition: true, variable: [1024 x [1024 x float]]* @C)
!34 = !DIGlobalVariable(name: "D", scope: !0, file: !1, line: 39, type: !30, isLocal: false, isDefinition: true, variable: [1024 x [1024 x float]]* @D)
!35 = !{i32 2, !"Dwarf Version", i32 4}
!36 = !{i32 2, !"Debug Info Version", i32 3}
!37 = !{!"clang version 3.7.0 (tags/RELEASE_370/final)"}
!38 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Tzp", scope: !7, file: !8, line: 13, type: !39)
!39 = !DICompositeType(tag: DW_TAG_structure_type, name: "timezone", file: !40, line: 57, size: 64, align: 32, elements: !41)
!40 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/sys/time.h", directory: "/home/kezia/2016/dawn/benchmarks")
!41 = !{!42, !43}
!42 = !DIDerivedType(tag: DW_TAG_member, name: "tz_minuteswest", scope: !39, file: !40, line: 59, baseType: !27, size: 32, align: 32)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "tz_dsttime", scope: !39, file: !40, line: 60, baseType: !27, size: 32, align: 32, offset: 32)
!44 = !DIExpression()
!45 = !DILocation(line: 13, column: 21, scope: !7)
!46 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "Tp", scope: !7, file: !8, line: 14, type: !47)
!47 = !DICompositeType(tag: DW_TAG_structure_type, name: "timeval", file: !48, line: 31, size: 128, align: 64, elements: !49)
!48 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/time.h", directory: "/home/kezia/2016/dawn/benchmarks")
!49 = !{!50, !54}
!50 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !47, file: !48, line: 33, baseType: !51, size: 64, align: 64)
!51 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !52, line: 149, baseType: !53)
!52 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "/home/kezia/2016/dawn/benchmarks")
!53 = !DIBasicType(name: "long int", size: 64, align: 64, encoding: DW_ATE_signed)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !47, file: !48, line: 34, baseType: !55, size: 64, align: 64, offset: 64)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "__suseconds_t", file: !52, line: 151, baseType: !53)
!56 = !DILocation(line: 14, column: 20, scope: !7)
!57 = !DILocation(line: 16, column: 12, scope: !7)
!58 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "stat", scope: !7, file: !8, line: 15, type: !27)
!59 = !DILocation(line: 15, column: 9, scope: !7)
!60 = !DILocation(line: 17, column: 14, scope: !61)
!61 = distinct !DILexicalBlock(scope: !7, file: !8, line: 17, column: 9)
!62 = !DILocation(line: 17, column: 9, scope: !7)
!63 = !DILocation(line: 17, column: 20, scope: !64)
!64 = !DILexicalBlockFile(scope: !61, file: !8, discriminator: 1)
!65 = !DILocation(line: 18, column: 15, scope: !7)
!66 = !DILocation(line: 18, column: 12, scope: !7)
!67 = !DILocation(line: 18, column: 27, scope: !7)
!68 = !DILocation(line: 18, column: 24, scope: !7)
!69 = !DILocation(line: 18, column: 34, scope: !7)
!70 = !DILocation(line: 18, column: 22, scope: !7)
!71 = !DILocation(line: 18, column: 5, scope: !7)
!72 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "a", arg: 1, scope: !12, file: !8, line: 22, type: !5)
!73 = !DILocation(line: 22, column: 20, scope: !12)
!74 = !DILocation(line: 24, column: 7, scope: !75)
!75 = distinct !DILexicalBlock(scope: !12, file: !8, line: 24, column: 5)
!76 = !DILocation(line: 26, column: 13, scope: !77)
!77 = distinct !DILexicalBlock(scope: !75, file: !8, line: 25, column: 2)
!78 = !DILocation(line: 24, column: 5, scope: !12)
!79 = !DILocation(line: 32, column: 1, scope: !12)
!80 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val1", arg: 1, scope: !15, file: !8, line: 36, type: !11)
!81 = !DILocation(line: 36, column: 26, scope: !15)
!82 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "val2", arg: 2, scope: !15, file: !8, line: 36, type: !11)
!83 = !DILocation(line: 36, column: 39, scope: !15)
!84 = !DILocation(line: 38, column: 14, scope: !85)
!85 = distinct !DILexicalBlock(scope: !15, file: !8, line: 38, column: 6)
!86 = !DILocation(line: 38, column: 7, scope: !85)
!87 = !DILocation(line: 38, column: 20, scope: !85)
!88 = !DILocation(line: 38, column: 28, scope: !85)
!89 = !DILocation(line: 38, column: 39, scope: !90)
!90 = !DILexicalBlockFile(scope: !85, file: !8, discriminator: 1)
!91 = !DILocation(line: 38, column: 32, scope: !85)
!92 = !DILocation(line: 38, column: 45, scope: !85)
!93 = !DILocation(line: 38, column: 6, scope: !15)
!94 = !DILocation(line: 45, column: 43, scope: !95)
!95 = distinct !DILexicalBlock(scope: !85, file: !8, line: 44, column: 2)
!96 = !DILocation(line: 45, column: 38, scope: !95)
!97 = !DILocation(line: 45, column: 31, scope: !95)
!98 = !DILocation(line: 45, column: 65, scope: !95)
!99 = !DILocation(line: 45, column: 60, scope: !95)
!100 = !DILocation(line: 45, column: 53, scope: !95)
!101 = !DILocation(line: 45, column: 51, scope: !95)
!102 = !DILocation(line: 45, column: 24, scope: !95)
!103 = !DILocation(line: 45, column: 21, scope: !95)
!104 = !DILocation(line: 45, column: 7, scope: !95)
!105 = !DILocation(line: 47, column: 1, scope: !15)
!106 = !DILocation(line: 42, column: 7, scope: !18)
!107 = !DILocation(line: 42, column: 7, scope: !108)
!108 = !DILexicalBlockFile(scope: !18, file: !1, discriminator: 1)
!109 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !18, file: !1, line: 42, type: !27)
!110 = !DILocation(line: 44, column: 3, scope: !111)
!111 = distinct !DILexicalBlock(scope: !18, file: !1, line: 44, column: 3)
!112 = !DILocation(line: 45, column: 5, scope: !113)
!113 = distinct !DILexicalBlock(scope: !114, file: !1, line: 45, column: 5)
!114 = distinct !DILexicalBlock(scope: !115, file: !1, line: 44, column: 27)
!115 = distinct !DILexicalBlock(scope: !111, file: !1, line: 44, column: 3)
!116 = !DILocation(line: 46, column: 18, scope: !117)
!117 = distinct !DILexicalBlock(scope: !118, file: !1, line: 45, column: 29)
!118 = distinct !DILexicalBlock(scope: !113, file: !1, line: 45, column: 5)
!119 = !DILocation(line: 46, column: 32, scope: !117)
!120 = !DILocation(line: 46, column: 31, scope: !117)
!121 = !DILocation(line: 46, column: 35, scope: !117)
!122 = !DILocation(line: 46, column: 7, scope: !117)
!123 = !DILocation(line: 46, column: 15, scope: !117)
!124 = !DILocation(line: 45, column: 25, scope: !118)
!125 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !18, file: !1, line: 42, type: !27)
!126 = !DILocation(line: 42, column: 10, scope: !18)
!127 = !DILocation(line: 45, column: 19, scope: !118)
!128 = !{!"Parallel Loop Metadata"}
!129 = !DILocation(line: 48, column: 5, scope: !130)
!130 = distinct !DILexicalBlock(scope: !114, file: !1, line: 48, column: 5)
!131 = !DILocation(line: 49, column: 18, scope: !132)
!132 = distinct !DILexicalBlock(scope: !133, file: !1, line: 48, column: 29)
!133 = distinct !DILexicalBlock(scope: !130, file: !1, line: 48, column: 5)
!134 = !DILocation(line: 49, column: 32, scope: !132)
!135 = !DILocation(line: 49, column: 31, scope: !132)
!136 = !DILocation(line: 49, column: 34, scope: !132)
!137 = !DILocation(line: 49, column: 39, scope: !132)
!138 = !DILocation(line: 49, column: 7, scope: !132)
!139 = !DILocation(line: 49, column: 15, scope: !132)
!140 = !DILocation(line: 50, column: 17, scope: !132)
!141 = !DILocation(line: 50, column: 7, scope: !132)
!142 = !DILocation(line: 50, column: 15, scope: !132)
!143 = !DILocation(line: 48, column: 25, scope: !133)
!144 = !DILocation(line: 48, column: 19, scope: !133)
!145 = !DILocation(line: 44, column: 23, scope: !115)
!146 = !DILocation(line: 44, column: 17, scope: !115)
!147 = !DILocation(line: 53, column: 1, scope: !18)
!148 = !{!149}
!149 = distinct !{!149, !150, !"init_arrays: %A"}
!150 = distinct !{!150, !"init_arrays"}
!151 = !{!152, !153}
!152 = distinct !{!152, !150, !"init_arrays: %D"}
!153 = distinct !{!153, !150, !"init_arrays: %C"}
!154 = !{!153}
!155 = !{!152, !149}
!156 = !{!152}
!157 = !{!153, !149}
!158 = !DILocation(line: 53, column: 1, scope: !159)
!159 = !DILexicalBlockFile(scope: !108, file: !1, discriminator: 2)
!160 = !DILocation(line: 56, column: 7, scope: !21)
!161 = !DILocation(line: 56, column: 7, scope: !162)
!162 = !DILexicalBlockFile(scope: !21, file: !1, discriminator: 1)
!163 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !21, file: !1, line: 56, type: !27)
!164 = !DILocation(line: 58, column: 3, scope: !165)
!165 = distinct !DILexicalBlock(scope: !21, file: !1, line: 58, column: 3)
!166 = !DILocation(line: 59, column: 5, scope: !167)
!167 = distinct !DILexicalBlock(scope: !168, file: !1, line: 59, column: 5)
!168 = distinct !DILexicalBlock(scope: !169, file: !1, line: 58, column: 27)
!169 = distinct !DILexicalBlock(scope: !165, file: !1, line: 58, column: 3)
!170 = !DILocation(line: 60, column: 7, scope: !171)
!171 = distinct !DILexicalBlock(scope: !172, file: !1, line: 59, column: 29)
!172 = distinct !DILexicalBlock(scope: !167, file: !1, line: 59, column: 5)
!173 = !DILocation(line: 60, column: 15, scope: !171)
!174 = !DILocation(line: 59, column: 25, scope: !172)
!175 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !21, file: !1, line: 56, type: !27)
!176 = !DILocation(line: 56, column: 10, scope: !21)
!177 = !DILocation(line: 59, column: 19, scope: !172)
!178 = !DILocation(line: 58, column: 23, scope: !169)
!179 = !DILocation(line: 58, column: 17, scope: !169)
!180 = !DILocation(line: 64, column: 3, scope: !181)
!181 = distinct !DILexicalBlock(scope: !21, file: !1, line: 64, column: 3)
!182 = !DILocation(line: 65, column: 5, scope: !183)
!183 = distinct !DILexicalBlock(scope: !184, file: !1, line: 65, column: 5)
!184 = distinct !DILexicalBlock(scope: !185, file: !1, line: 64, column: 27)
!185 = distinct !DILexicalBlock(scope: !181, file: !1, line: 64, column: 3)
!186 = !DILocation(line: 66, column: 7, scope: !187)
!187 = distinct !DILexicalBlock(scope: !188, file: !1, line: 66, column: 7)
!188 = distinct !DILexicalBlock(scope: !189, file: !1, line: 65, column: 29)
!189 = distinct !DILexicalBlock(scope: !183, file: !1, line: 65, column: 5)
!190 = !DILocation(line: 67, column: 21, scope: !191)
!191 = distinct !DILexicalBlock(scope: !192, file: !1, line: 66, column: 31)
!192 = distinct !DILexicalBlock(scope: !187, file: !1, line: 66, column: 7)
!193 = !DILocation(line: 67, column: 19, scope: !191)
!194 = !DILocation(line: 67, column: 31, scope: !191)
!195 = !DILocation(line: 67, column: 29, scope: !191)
!196 = !DILocation(line: 67, column: 2, scope: !191)
!197 = !DILocation(line: 67, column: 10, scope: !191)
!198 = !DILocation(line: 66, column: 27, scope: !192)
!199 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !21, file: !1, line: 56, type: !27)
!200 = !DILocation(line: 56, column: 13, scope: !21)
!201 = !DILocation(line: 66, column: 21, scope: !192)
!202 = !DILocation(line: 65, column: 25, scope: !189)
!203 = !DILocation(line: 65, column: 19, scope: !189)
!204 = !DILocation(line: 64, column: 23, scope: !185)
!205 = !DILocation(line: 64, column: 17, scope: !185)
!206 = !DILocation(line: 71, column: 1, scope: !21)
!207 = !{!208}
!208 = distinct !{!208, !150, !"syrk: %C"}
!209 = !{!210}
!210 = distinct !{!210, !150, !"syrk: %A"}
!211 = !DILocation(line: 71, column: 1, scope: !212)
!212 = !DILexicalBlockFile(scope: !162, file: !1, discriminator: 2)
!213 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "fail", scope: !22, file: !1, line: 74, type: !27)
!214 = !DILocation(line: 74, column: 11, scope: !22)
!215 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !22, file: !1, line: 74, type: !27)
!216 = !DILocation(line: 74, column: 7, scope: !22)
!217 = !DILocation(line: 78, column: 3, scope: !218)
!218 = distinct !DILexicalBlock(scope: !22, file: !1, line: 78, column: 3)
!219 = !DILocation(line: 79, column: 5, scope: !220)
!220 = distinct !DILexicalBlock(scope: !221, file: !1, line: 79, column: 5)
!221 = distinct !DILexicalBlock(scope: !222, file: !1, line: 78, column: 23)
!222 = distinct !DILexicalBlock(scope: !218, file: !1, line: 78, column: 3)
!223 = !DILocation(line: 80, column: 23, scope: !224)
!224 = distinct !DILexicalBlock(scope: !225, file: !1, line: 80, column: 11)
!225 = distinct !DILexicalBlock(scope: !226, file: !1, line: 79, column: 25)
!226 = distinct !DILexicalBlock(scope: !220, file: !1, line: 79, column: 5)
!227 = !DILocation(line: 80, column: 32, scope: !224)
!228 = !DILocation(line: 80, column: 11, scope: !224)
!229 = !DILocation(line: 80, column: 41, scope: !224)
!230 = !DILocation(line: 80, column: 11, scope: !225)
!231 = !DILocation(line: 79, column: 21, scope: !226)
!232 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !22, file: !1, line: 74, type: !27)
!233 = !DILocation(line: 74, column: 9, scope: !22)
!234 = !DILocation(line: 79, column: 16, scope: !226)
!235 = !DILocation(line: 78, column: 19, scope: !222)
!236 = !DILocation(line: 78, column: 14, scope: !222)
!237 = !DILocation(line: 87, column: 3, scope: !22)
!238 = !DILocation(line: 88, column: 1, scope: !22)
!239 = !DILocation(line: 94, column: 13, scope: !23)
!240 = !DILocation(line: 94, column: 13, scope: !241)
!241 = !DILexicalBlockFile(scope: !23, file: !1, discriminator: 1)
!242 = !DILocation(line: 94, column: 13, scope: !243)
!243 = !DILexicalBlockFile(scope: !23, file: !1, discriminator: 3)
!244 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_start", scope: !23, file: !1, line: 92, type: !11)
!245 = !DILocation(line: 92, column: 10, scope: !23)
!246 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !23, file: !1, line: 91, type: !27)
!247 = !DILocation(line: 91, column: 7, scope: !23)
!248 = !DILocation(line: 98, column: 3, scope: !249)
!249 = distinct !DILexicalBlock(scope: !23, file: !1, line: 98, column: 3)
!250 = !DILocation(line: 99, column: 5, scope: !251)
!251 = distinct !DILexicalBlock(scope: !252, file: !1, line: 99, column: 5)
!252 = distinct !DILexicalBlock(scope: !253, file: !1, line: 98, column: 27)
!253 = distinct !DILexicalBlock(scope: !249, file: !1, line: 98, column: 3)
!254 = !DILocation(line: 100, column: 7, scope: !255)
!255 = distinct !DILexicalBlock(scope: !256, file: !1, line: 99, column: 29)
!256 = distinct !DILexicalBlock(scope: !251, file: !1, line: 99, column: 5)
!257 = !DILocation(line: 100, column: 15, scope: !255)
!258 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "k", scope: !255, file: !1, line: 101, type: !27)
!259 = !DILocation(line: 101, column: 11, scope: !255)
!260 = !DILocation(line: 102, column: 7, scope: !261)
!261 = distinct !DILexicalBlock(scope: !255, file: !1, line: 102, column: 7)
!262 = !DILocation(line: 103, column: 21, scope: !263)
!263 = distinct !DILexicalBlock(scope: !264, file: !1, line: 102, column: 27)
!264 = distinct !DILexicalBlock(scope: !261, file: !1, line: 102, column: 7)
!265 = !DILocation(line: 103, column: 19, scope: !263)
!266 = !DILocation(line: 103, column: 31, scope: !263)
!267 = !DILocation(line: 103, column: 29, scope: !263)
!268 = !DILocation(line: 103, column: 2, scope: !263)
!269 = !DILocation(line: 103, column: 10, scope: !263)
!270 = !DILocation(line: 102, column: 23, scope: !264)
!271 = !DILocation(line: 102, column: 17, scope: !264)
!272 = !DILocation(line: 99, column: 25, scope: !256)
!273 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !23, file: !1, line: 91, type: !27)
!274 = !DILocation(line: 91, column: 10, scope: !23)
!275 = !DILocation(line: 99, column: 19, scope: !256)
!276 = !DILocation(line: 98, column: 23, scope: !253)
!277 = !DILocation(line: 98, column: 17, scope: !253)
!278 = !DILocation(line: 108, column: 11, scope: !23)
!279 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_end", scope: !23, file: !1, line: 92, type: !11)
!280 = !DILocation(line: 92, column: 19, scope: !23)
!281 = !DILocation(line: 109, column: 11, scope: !23)
!282 = !DILocation(line: 109, column: 51, scope: !23)
!283 = !DILocation(line: 109, column: 3, scope: !23)
!284 = !DILocation(line: 111, column: 1, scope: !23)
!285 = !DILocation(line: 94, column: 13, scope: !286)
!286 = !DILexicalBlockFile(scope: !23, file: !1, discriminator: 2)
!287 = !{!288}
!288 = distinct !{!288, !150, !"syrkGPU: %D"}
!289 = !{!290, !291}
!290 = distinct !{!290, !150, !"syrkGPU: %A"}
!291 = distinct !{!291, !150, !"syrkGPU: %stdout"}
!292 = !{!290}
!293 = !{!288, !291}
!294 = !{!291}
!295 = !{!288, !290}
!296 = !DILocation(line: 111, column: 1, scope: !297)
!297 = !DILexicalBlockFile(scope: !241, file: !1, discriminator: 2)
!298 = !DILocation(line: 116, column: 3, scope: !24)
!299 = !DILocation(line: 117, column: 3, scope: !24)
!300 = !DILocation(line: 118, column: 13, scope: !24)
!301 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_start", scope: !24, file: !1, line: 114, type: !11)
!302 = !DILocation(line: 114, column: 10, scope: !24)
!303 = !DILocation(line: 119, column: 3, scope: !24)
!304 = !DILocation(line: 120, column: 11, scope: !24)
!305 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "t_end", scope: !24, file: !1, line: 114, type: !11)
!306 = !DILocation(line: 114, column: 19, scope: !24)
!307 = !DILocation(line: 121, column: 11, scope: !24)
!308 = !DILocation(line: 121, column: 51, scope: !24)
!309 = !DILocation(line: 121, column: 3, scope: !24)
!310 = !DILocation(line: 122, column: 3, scope: !24)
!311 = !DILocation(line: 123, column: 3, scope: !24)
