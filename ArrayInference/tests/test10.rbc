; ModuleID = '/home/gleison/lge/dawn-3.7/src/ArrayInference/tests//test10.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nounwind uwtable
define i32 @foo(i32 %argc, i32* %y) #0 {
entry:
  %tmp = load i32, i32* %y, align 4, !dbg !13
  call void @llvm.dbg.value(metadata i32 %argc, i64 0, metadata !17, metadata !18), !dbg !19
  call void @llvm.dbg.value(metadata i32* %y, i64 0, metadata !20, metadata !18), !dbg !21
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !22, metadata !18), !dbg !23
  br label %for.cond, !dbg !24

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, %argc, !dbg !25
  br i1 %cmp, label %for.body, label %for.end, !dbg !26

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.value(metadata i32 %tmp, i64 0, metadata !27, metadata !18), !dbg !28
  %add = add nsw i32 %tmp, 1, !dbg !29
  store i32 %add, i32* %y, align 4, !dbg !30
  br label %for.inc, !dbg !31

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1, !dbg !32
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !22, metadata !18), !dbg !23
  br label %for.cond, !dbg !33

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !34
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!10, !11}
!llvm.ident = !{!12}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, subprograms: !3)
!1 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/src/ArrayInference/tests/test10.c", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!2 = !{}
!3 = !{!4}
!4 = !DISubprogram(name: "foo", scope: !5, file: !5, line: 1, type: !6, isLocal: false, isDefinition: true, scopeLine: 1, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32, i32*)* @foo, variables: !2)
!5 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/src/ArrayInference/tests//test10.c", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!6 = !DISubroutineType(types: !7)
!7 = !{!8, !8, !9}
!8 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64, align: 64)
!10 = !{i32 2, !"Dwarf Version", i32 4}
!11 = !{i32 2, !"Debug Info Version", i32 3}
!12 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!13 = !DILocation(line: 3, column: 13, scope: !14)
!14 = distinct !DILexicalBlock(scope: !15, file: !5, line: 2, column: 34)
!15 = distinct !DILexicalBlock(scope: !16, file: !5, line: 2, column: 3)
!16 = distinct !DILexicalBlock(scope: !4, file: !5, line: 2, column: 3)
!17 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "argc", arg: 1, scope: !4, file: !5, line: 1, type: !8)
!18 = !DIExpression()
!19 = !DILocation(line: 1, column: 13, scope: !4)
!20 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "y", arg: 2, scope: !4, file: !5, line: 1, type: !9)
!21 = !DILocation(line: 1, column: 24, scope: !4)
!22 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !16, file: !5, line: 2, type: !8)
!23 = !DILocation(line: 2, column: 12, scope: !16)
!24 = !DILocation(line: 2, column: 8, scope: !16)
!25 = !DILocation(line: 2, column: 21, scope: !15)
!26 = !DILocation(line: 2, column: 3, scope: !16)
!27 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "j", scope: !14, file: !5, line: 3, type: !8)
!28 = !DILocation(line: 3, column: 9, scope: !14)
!29 = !DILocation(line: 4, column: 12, scope: !14)
!30 = !DILocation(line: 4, column: 8, scope: !14)
!31 = !DILocation(line: 5, column: 3, scope: !14)
!32 = !DILocation(line: 2, column: 29, scope: !15)
!33 = !DILocation(line: 2, column: 3, scope: !15)
!34 = !DILocation(line: 6, column: 3, scope: !4)
