; ModuleID = '/home/gleison/lge/dawn-3.7/src/ArrayInference/tests//test13.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: nounwind uwtable
define i32 @foo(i32* %V) #0 {
entry:
  call void @llvm.dbg.value(metadata i32 %inc, i64 0, metadata !13, metadata !14), !dbg !15
  call void @llvm.dbg.value(metadata i32* %V, i64 0, metadata !16, metadata !14), !dbg !17
  call void @llvm.dbg.value(metadata i32 0, i64 0, metadata !13, metadata !14), !dbg !15
  %V2 = ptrtoint i32* %V to i64
  %0 = add i64 %V2, 396, !dbg !18
  %1 = add i64 %V2, 396, !dbg !18
  br label %for.body, !dbg !21

for.body:                                         ; preds = %entry, %for.inc
  %i.01 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %idxprom = sext i32 %i.01 to i64, !dbg !18
  %arrayidx = getelementptr inbounds i32, i32* %V, i64 %idxprom, !dbg !18
  store i32 %i.01, i32* %arrayidx, align 4, !dbg !22
  br label %for.inc, !dbg !18

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.01, 1, !dbg !23
  %cmp = icmp slt i32 %inc, 100, !dbg !24
  br i1 %cmp, label %for.body, label %for.end, !dbg !21

for.end:                                          ; preds = %for.inc
  ret i32 undef, !dbg !25
}

; Function Attrs: nounwind readnone
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nounwind readnone
declare void @llvm.dbg.value(metadata, i64, metadata, metadata) #1

attributes #0 = { nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!10, !11}
!llvm.ident = !{!12}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 3.7.0 (tags/RELEASE_370/rc3)", isOptimized: false, runtimeVersion: 0, emissionKind: 1, enums: !2, subprograms: !3)
!1 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/src/ArrayInference/tests/test13.c", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!2 = !{}
!3 = !{!4}
!4 = !DISubprogram(name: "foo", scope: !5, file: !5, line: 4, type: !6, isLocal: false, isDefinition: true, scopeLine: 4, flags: DIFlagPrototyped, isOptimized: false, function: i32 (i32*)* @foo, variables: !2)
!5 = !DIFile(filename: "/home/gleison/lge/dawn-3.7/src/ArrayInference/tests//test13.c", directory: "/home/gleison/lge/llvm-3.7-src/build-debug/bin")
!6 = !DISubroutineType(types: !7)
!7 = !{!8, !9}
!8 = !DIBasicType(name: "int", size: 32, align: 32, encoding: DW_ATE_signed)
!9 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64, align: 64)
!10 = !{i32 2, !"Dwarf Version", i32 4}
!11 = !{i32 2, !"Debug Info Version", i32 3}
!12 = !{!"clang version 3.7.0 (tags/RELEASE_370/rc3)"}
!13 = !DILocalVariable(tag: DW_TAG_auto_variable, name: "i", scope: !4, file: !5, line: 5, type: !8)
!14 = !DIExpression()
!15 = !DILocation(line: 5, column: 7, scope: !4)
!16 = !DILocalVariable(tag: DW_TAG_arg_variable, name: "V", arg: 1, scope: !4, file: !5, line: 4, type: !9)
!17 = !DILocation(line: 4, column: 15, scope: !4)
!18 = !DILocation(line: 7, column: 5, scope: !19)
!19 = distinct !DILexicalBlock(scope: !20, file: !5, line: 6, column: 3)
!20 = distinct !DILexicalBlock(scope: !4, file: !5, line: 6, column: 3)
!21 = !DILocation(line: 6, column: 3, scope: !20)
!22 = !DILocation(line: 7, column: 10, scope: !19)
!23 = !DILocation(line: 6, column: 25, scope: !19)
!24 = !DILocation(line: 6, column: 17, scope: !19)
!25 = !DILocation(line: 8, column: 1, scope: !4)
